{"version":3,"file":"static/js/4448.8940f81c.chunk.js","mappings":"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","sources":["pages/reportsManager/finance_report/finance_advance_summary-report/FinanceAdvanceSummaryReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { financeAdvanceSummaryReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\n\nimport { DatePicker, Space } from \"antd\";\nconst { RangePicker } = DatePicker;\n\nfunction FinanceAdvanceSummaryReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const { RangePicker } = DatePicker;\n  const onOk = (value) => {\n\n  };\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const { financeAdvanceSummaryReportList, financeAdvanceSummaryReportFunc_loading, financeAdvanceSummaryReportCount } =\n    useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList } = useSelector((state) => state.clientGroup);\n  const { clientList } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const time = useWatch({\n    control,\n    name: \"time\",\n    defaultValue: [],\n  });\n\n\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return{\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n        organizationId: PDOrganizationType,\n        organizationIds: [],\n        departmentId: department,\n        departmentIds: [],\n        industryId: PDindustrytype,\n        industryIds: [],\n        groupId: groupName,\n        groupIds: [],\n        startDate:time?.length > 0 ? time[0]:'',\n        endDate:time?.length > 0 ?time[1]:'',\n\n        text: \"\",\n        sort: true,\n\n        isPagination: pagination,\n      },\n    };\n  };\n\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(financeAdvanceSummaryReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n\n  const handleDepartmentModal = (element) => {\n    setDepartmentModalOpen(true);\n    setDepartmentModalData(element);\n  };\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"FinanceReceiptReport\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Entry Date\", key: \"entryDate\", width: 30 },\n      { header: \"Payment Date\", key: \"payment\", width: 30 },     \n      { header: \"Group Name\", key: \"groupName\", width: 25 },\n      { header: \"Description\", key: \"description\", width: 25 },\n      { header: \"Amount\", key: \"amount\", width: 30 },\n      { header: \"Mode of payment\", key: \"modeOFreceipt\", width: 20 },\n     \n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.financeAdvanceSummaryReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n\n    if (!financeAdvanceSummaryReportList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1,\n        entryDate: dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        payment: dayjs(data?.date).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        \n        groupName: data?.groupName || \"-\",\n      description:data?.naration,\n        amount: data?.amount || \"-\",\n\n        modeOFreceipt: data?.paymentMode =='bank' ? data?.bankData?.bankName : (data?.paymentMode =='cash' ) ? 'cash' :'' || \"-\",\n        //bankName: (data?.paymentmode =='bank' ? data?.bankData?.bankName : (data?.paymentmode =='cash' ) ? data?.employeName :'') || \"-\",\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"FinanceReceiptReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n    const headers = [\n      \"S.No.\",\n      \"Entry Date\",\n      \"Payment Date\",\n      \"Group Name\",\n    \"Description\",\n      \"Amount\",\n      \"Mode of Payment\",\n      \n    ];\n    const response = await reportsServices?.financeAdvanceSummaryReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!financeAdvanceSummaryReportList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n       \n         dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        dayjs(data?.date).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        \n         data?.groupName || \"-\",\n         data?.naration,\n        data?.amount || \"-\",\n\n        data?.paymentMode =='bank' ? data?.bankData?.bankName : (data?.paymentMode =='cash' ) ? 'cash' :'' || \"-\",\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`FinanceReceiptReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec]\">\n          <Controller\n            name=\"time\"\n            control={control}\n            render={({ field }) => (\n              <RangePicker\n                {...field}\n                value={field.value}\n                onChange={(value) => field.onChange(value)}\n                format=\"YYYY-MM-DD\"\n                onOk={onOk}\n                getPopupContainer={() => document.body}\n                popupClassName=\"vertical-range-calendar\"\n                className=\"custom-range-picker\"\n              />\n            )}\n          />\n\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"PDOrganizationType\", \"\");\n                setValue(\"PDindustrytype\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"groupName\", \"\");\n                setValue(\"time\", \"\");\n\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 flex justify-end items-center\">\n            {/* <div className=\"flex items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div> */}\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Entry Date\n                </th>\n                 <th className=\"border-none p-2 whitespace-nowrap \">\n                  Payment Date\n                </th>\n\n               \n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Group Name{\" \"}\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Description\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">Amount</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Mode of Payment\n                </th>\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Payment Recipient\n                </th> */}\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th> */}\n              </tr>\n            </thead>\n            {financeAdvanceSummaryReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {financeAdvanceSummaryReportList && financeAdvanceSummaryReportList?.length > 0 ? (\n                  financeAdvanceSummaryReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${\n                        index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                      } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\") ||\n                          \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.date).format(\"DD-MM-YYYY hh:mm a\") ||\n                          \"-\"}\n                      </td>\n\n                     \n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.groupName || \"-\"}\n                      </td>\n\n                        <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.naration || \"-\"}\n                      </td>\n                       <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.amount || \"-\"}\n                      </td>\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.clientName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.grandTotalAmount || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.paymentmode || \"-\"}\n                      </td> */}\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {(element?.paymentMode =='bank' ? element?.bankData?.bankName : (element?.paymentMode =='cash' ) ? 'Cash':'')|| \"-\"}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.createdBy}\n                      </td> */}\n                      {/* <td className=\"tableData \">\n                        {(\n                          <div className=\"flex justify-center items-center gap-1\">\n                            <span>{element?.departmentData?.length}</span>\n                            <span className=\"flex justify-center items-center cursor-pointer\">\n                              <FaEye\n                                onClick={() => handleDepartmentModal(element)}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              />\n                            </span>\n                          </div>\n                        ) || \"-\"}\n                      </td> */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n        \n        </div>\n        <CustomPagination\n          totalCount={financeAdvanceSummaryReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default FinanceAdvanceSummaryReport;\n"],"names":["RangePicker","DatePicker","control","formState","errors","setValue","watch","useForm","onOk","value","pageSize","setPageSize","useState","dispatch","useDispatch","financeAdvanceSummaryReportList","financeAdvanceSummaryReportFunc_loading","financeAdvanceSummaryReportCount","useSelector","state","reports","departmentListData","loading","depLoading","department","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","clientGroup","clientList","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","PDOrganizationType","PDindustrytype","groupName","time","useEffect","timer","setTimeout","clearTimeout","generateFinancialYears","financialYears","year","push","requestPayLoadReturn","pagination","arguments","length","undefined","reqPayload","text","sort","isPagination","companyId","userType","_id","directorId","branchId","status","organizationId","organizationIds","departmentId","departmentIds","industryId","industryIds","groupId","groupIds","startDate","endDate","fetchClientServiceTaskReport","financeAdvanceSummaryReportFunc","departmentModalOpen","setDepartmentModalOpen","branchSearch","dayjs","subtract","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","_objectSpread","onChange","format","getPopupContainer","document","body","popupClassName","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref2","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","data","docs","map","index","_data$bankData2","createdAt","date","naration","amount","paymentMode","bankData","bankName","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","type","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$bankData","sno","entryDate","payment","description","modeOFreceipt","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","element","_element$bankData","CustomPagination","totalCount","page"],"sourceRoot":""}