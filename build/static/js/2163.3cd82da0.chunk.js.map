{"version":3,"file":"static/js/2163.3cd82da0.chunk.js","mappings":"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","sources":["pages/visitorManagement/general_client_visitor/GeneralVisitorList.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\n\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\"\nimport { domainName, inputAntdSelectClassNameFilter } from \"../../../constents/global\"\nimport { FaPlus } from \"react-icons/fa\"\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { encrypt } from \"../../../config/Encryption\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport getUserIds from \"../../../constents/getUserIds\";\nimport { Select, Tooltip } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport moment from \"moment\";\nimport { deptSearch } from \"../../department/departmentFeatures/_department_reducers\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport { deleteGeneralVisitor, deleteVisitor, getGeneralVisitorList, getVisitorList, updateGeneralVisitor, updateVisitor, visitorSearch } from \"../visitor/visitorFeatures/_visitor_reducers\";\n\nfunction GeneralVisitorList() {\n\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n    const { setValue, control } = useForm();\n    const {\n        userCompanyId,\n        userBranchId,\n        userType\n    } = getUserIds();\n    const { visitorList, totalVisitorCount,visitorGeneralList, loading } = useSelector(state => state.visitor);\n    const { departmentListData } = useSelector((state) => state.department);\n    const { branchList } = useSelector((state) => state.branch);\n    const userInfoglobal = JSON.parse(\n        localStorage.getItem(`user_info_${domainName}`)\n    );\n    const { employeList } = useSelector((state) => state.employe);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [searchText, setSearchText] = useState(\"\");\n    const companyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: userCompanyId,\n    });\n    const branchId = useWatch({\n        control,\n        name: \"PDBranchId\",\n        defaultValue: userBranchId,\n    });\n    const departmentId = useWatch({\n        control,\n        name: \"PdDepartmentId\",\n        defaultValue: '',\n    });\n    const employee = useWatch({\n        control,\n        name: \"employee\",\n        defaultValue: '',\n    });\n\n    const category = useWatch({\n        control,\n        name: \"category\",\n        defaultValue: '',\n    });\n\n\n    \n    useEffect(() => {\n        if (userType === \"admin\") {\n            dispatch(companySearch({\n                text: \"\",\n                sort: true,\n                status: true,\n                isPagination: false,\n            }));\n        }\n    }, []);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const limit = 10;\n\n    useEffect(() => {\n        fetchVisitorCatList();\n    }, [currentPage, branchId, employee, departmentId, category, searchText])\n\n    const fetchVisitorCatList = () => {\n        const reqListData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                companyId: companyId,\n                branchId: branchId,\n                \"directorId\": \"\",\n                category:'general',\n                employeId: employee,\n                departmentId: '',\n                text: searchText,\n                sort: true,\n                status: \"\",\n                isPagination: true,\n               \n            }\n        }\n        dispatch(getGeneralVisitorList(reqListData));\n    }\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteGeneralVisitor(reqData)).then((data) => {\n                    !data.error && fetchVisitorCatList();\n                })\n            }\n        });\n    };\n\n    const handleCheckOut = (element) => {\n        let reqData = {\n            ...element,\n\n            _id: element?._id,\n            checkOutTime: moment(),\n\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to checkout!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(updateGeneralVisitor(reqData)).then((data) => {\n                    !data.error && fetchVisitorCatList();\n                })\n            }\n        });\n    };\n    const handleOnChange = async (event) => {\n        const searchValue = event.target.value;\n        setValue(\"category\", searchValue);\n        if (searchValue.trim().length > 0) {\n            const reqListData = {\n                companyId: companyId,\n                branchId: branchId,\n                \"directorId\": \"\",\n                text: \"\",\n                sort: true,\n                status: \"\",\n                isPagination: false,\n                category: searchValue\n            }\n            dispatch(visitorSearch(reqListData));\n        }\n    };\n    const fetchEmployeListData = () => {\n        const reqPayload = {\n            text: \"\",\n            status: true,\n            sort: true,\n            isTL: \"\",\n            isHR: \"\",\n\n            isPagination: false,\n            designationId: '',\n            departmentId: '',\n            companyId: companyId,\n            branchId: branchId,\n        };\n\n        dispatch(employeSearch(reqPayload));\n    };\n\n    const onChange = (e) => {\n        \n        setSearchText(e);\n    };\n\n    return (\n        <GlobalLayout onChange={onChange}>\n\n            <div className=''>\n                <div class=\"xl:flex justify-between items-center py-1 xl:space-y-0 space-y-2 overflow-y-auto\">\n                    <div className=\"grid sm:grid-cols-2 grid-cols-1 xl:grid-cols-4 lg:grid-cols-4 md:grid-cols-3 sm:gap-3 gap-1\">\n                        {/* <div className=\"\">\n                            <Controller\n                                control={control}\n                                name=\"category\"\n                                rules={{ required: \"category is required\" }}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        defaultValue={\"\"}\n                                        className={` ${inputAntdSelectClassNameFilter} `}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                    >\n                                        <Select.Option className=\"\" value=\"\">Select Category</Select.Option>\n                                        <Select.Option value=\"general\">General Visitor</Select.Option>\n                                        <Select.Option value=\"existing\">Existing Client</Select.Option>\n                                        <Select.Option value=\"new\">New Client</Select.Option>\n                                        <Select.Option value=\"employe\">Employe To Client</Select.Option>\n                                    </Select>\n                                )}\n                            />\n                        </div> */}\n                        {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && (\n                            <div className=\"\">\n                                <Controller\n                                    control={control}\n                                    name=\"PDBranchId\"\n                                    rules={{ required: \"Branch is required\" }}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            defaultValue={\"\"}\n                                            onFocus={() => {\n                                                dispatch(\n                                                    branchSearch({\n                                                        text: \"\",\n                                                        sort: true,\n                                                        status: true,\n                                                        isPagination: false,\n                                                        companyId:\n                                                            userInfoglobal?.userType === \"admin\"\n                                                                ? companyId\n                                                                : userInfoglobal?.userType === \"company\"\n                                                                    ? userInfoglobal?._id\n                                                                    : userInfoglobal?.companyId,\n                                                    }))\n                                            }}\n                                            className={`${inputAntdSelectClassNameFilter} `}\n                                            showSearch\n                                            filterOption={(input, option) =>\n                                                String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                            }\n                                        >\n                                            <Select.Option value=\"\">Select Branch</Select.Option>\n                                            {branchList?.map((type) => (\n                                                <Select.Option key={type?._id} value={type?._id}>\n                                                    {type?.fullName}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    )}\n                                />\n                            </div>\n                        )}\n\n                        <div className=\"\">\n                            <Controller\n                                control={control}\n                                name=\"PdDepartmentId\"\n                                rules={{ required: \"Department is required\" }}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        defaultValue={\"\"}\n                                        onFocus={() => {\n                                            dispatch(\n                                                deptSearch({\n                                                    text: \"\",\n                                                    sort: true,\n                                                    status: true,\n                                                    companyId:\n                                                        userInfoglobal?.userType === \"admin\"\n                                                            ? companyId\n                                                            : userInfoglobal?.userType === \"company\"\n                                                                ? userInfoglobal?._id\n                                                                : userInfoglobal?.companyId,\n                                                    branchId: branchId,\n                                                    isPagination: false\n                                                })\n                                            );\n                                        }}\n                                        className={`${inputAntdSelectClassNameFilter} `}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                    >\n                                        <Select.Option value=\"\">Select Department</Select.Option>\n                                        {departmentListData?.map((type) => (\n                                            <Select.Option key={type?._id} value={type?._id}>\n                                                {type?.name}\n                                            </Select.Option>\n                                        ))}\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                        <div className=\"\">\n                            <Controller\n                                name=\"employee\"\n                                control={control}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        className={` ${inputAntdSelectClassNameFilter} `}\n                                        popupClassName={'!z-[1580]'}\n                                        placeholder=\"Select Employee\"\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                        optionLabelProp=\"children\"\n                                        onFocus={() => fetchEmployeListData()}\n                                    >\n                                        <Select.Option value=\"\">Select Employee</Select.Option>\n                                        {employeList?.map((item) => (\n                                            <Select.Option key={item._id} value={item._id}>\n                                                {item.fullName}\n                                            </Select.Option>\n                                        ))}\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"flex justify-end items-center gap-2 \">\n                        <button\n                            onClick={() => {\n                                setValue(\"employee\", \"\");\n                                setValue(\"PDBranchId\", '');\n                                setValue(\"PdDepartmentId\", '');\n                                setValue(\"category\", \"\");\n                                setValue(\"PdCompanyId\", \"\");\n                            }}\n                            className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                        {canCreate &&\n                            <Tooltip placement=\"topLeft\"  title='Add Visitor'>\n                                <button onClick={() => { navigate(\"/admin/general-client-visitor/create\") }} className='bg-header p-2 rounded-md flex justify-center items-center space-x-2 text-white'>\n                                    <FaPlus />\n                                    <span className='text-[12px] text-nowrap tracking-wide'>Add Visitor</span>\n                                </button>\n                            </Tooltip>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n                {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                    <thead className=''>\n                        <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                            <th className='border-none p-2 whitespace-nowrap w-[8%]'>\n                                S.no.\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Visitor Name\n                            </th>\n                            {/* <th className='border-none p-2 whitespace-nowrap'>\n                                Client Name\n                            </th> */}\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Category type\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Mobile Number\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Contact Person\n                            </th>\n                            {/* <th className='border-none p-2 whitespace-nowrap'>\n                                Employe Name\n                            </th> */}\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Reason\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Start Time\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                End Time\n                            </th>\n                             <th className='border-none p-2 whitespace-nowrap'>\n                                Check In Time\n                            </th>\n                             <th className='border-none p-2 whitespace-nowrap'>\n                                Check Out Time\n                            </th>\n                            {/* <th className='border-none p-2 whitespace-nowrap w-[20%]'>\n                                Category\n                            </th> */}\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Created By\n                            </th>\n                            {/* <th className='border-none p-2 whitespace-nowrap'>\n                                Status\n                            </th> */}\n                            {(canDelete || canUpdate) && <th className='border-none p-2 whitespace-nowrap w-[8%]'>\n                                Action\n                            </th>}\n                        </tr>\n                    </thead>\n                    {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                            colSpan={10}\n                            className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                            <Loader2 />\n                        </td>\n                    </tr> :\n                        <tbody>\n                            {visitorGeneralList && visitorGeneralList?.length > 0 ?\n                                visitorGeneralList?.map((element, index) => (\n                                    <tr className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151] text-[14px]`}>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            {index + 1 + ((currentPage - 1) * limit)}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.name ?? \"-\"}</td>\n                                        {/* <td className='whitespace-nowrap border-none p-2 '>{element?.clientName ?? \"-\"}</td> */}\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.category ?? \"-\"}</td>\n                                        <td className=\"whitespace-nowrap border-none p-2\">\n                                            {element?.mobile?.code + \" \" + element?.mobile?.number || '-'}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            <div className={`  flex items-center justify-center`}>\n                                            {element?.employeData?.map((element,index)=>{\n                                                return (\n\n                                    <Tooltip placement=\"topLeft\"  title={element?.fullName}>\n\n                                        <img\n                                        key={index}\n                                          alt=\"\"\n                                          src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                                          className={`w-10 h-10 ${index > 0 ? ' -ml-2' : '0'} rounded-full bg-gray-500 flex items-center justify-center`}\n                                        />\n                                        </Tooltip>\n                                      ) \n                                               \n\n                                            },[])}\n                                            </div>\n                                            \n                                            </td>\n                                        {/* <td className='whitespace-nowrap border-none p-2 '>{element?.employeName ?? \"-\"}</td> */}\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.reason ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.timeDurationStart ? moment(element?.timeDurationStart).format('DD-MM-YYYY hh:mm a') : \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.timeDurationEnd ? moment(element?.timeDurationEnd).format('DD-MM-YYYY hh:mm a') : <Tooltip placement=\"topLeft\"  title='Checkout'>\n                                            <button onClick={() => { handleCheckOut(element) }} className=\"px-2 py-1.5 text-xs rounded-md bg-header text-white border border-muted\" type=\"button\">\n                                                {/*  <BiArrowFromLeft className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} /> */}\n                                                CheckOut\n                                        </button>\n                                        </Tooltip>}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.checkInTime ? moment(element?.checkInTime).format('DD-MM-YYYY hh:mm a') : \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.checkOutTime ? moment(element?.checkOutTime).format('DD-MM-YYYY hh:mm a') : <Tooltip placement=\"topLeft\"  title='Checkout'>\n                                            <button onClick={() => { handleCheckOut(element) }} className=\"px-2 py-1.5 text-xs rounded-md bg-header text-white border border-muted\" type=\"button\">\n                                                {/*  <BiArrowFromLeft className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} /> */}\n                                                CheckOut\n                                        </button>\n                                        </Tooltip>}</td>\n                                        {/* <td className='whitespace-nowrap border-none p-2 '>{element?.category ?? \"-\"}</td> */}\n                                        <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                                            {element?.createdBy || \"-\"}\n                                        </td>\n                                        {/* <td className='whitespace-nowrap border-none p-2 '>{element?.createdBy ?? \"-\"}</td> */}\n                                        {/* <td className='whitespace-nowrap border-none p-2 '>\n                                        <span className={`${element?.status ? 'bg-[#E0FFBE] border-green-500' : 'bg-red-200 '\n                                            } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}>\n                                            {element?.status ? 'Active' : 'Inactive' ?? \"-\"}\n                                        </span>\n                                    </td> */}\n                                        {(canDelete || canUpdate) && <td className='whitespace-nowrap border-none p-2'>\n                                            <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                {canUpdate &&\n                                                    <Tooltip placement=\"topLeft\"  title='Edit'>\n                                                        <button onClick={() => { navigate(`/admin/general-client-visitor/edit/${encrypt(element?._id)}`) }} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <FaPenToSquare className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                {canDelete && <Tooltip placement=\"topLeft\"  title='Delete'>\n                                                    <button onClick={() => handleDelete(element?._id)} className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                        <RiDeleteBin5Line className='text-red-600 hover:text-red-500' size={16} />\n                                                    </button>\n                                                </Tooltip>}\n                                            </span>\n                                        </td>}\n                                    </tr>\n                                ))\n                                : (<tr className=\"bg-white bg-opacity-5 \" >\n                                    <td colSpan={4} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">Record Not Found</td>\n                                </tr>)}\n                        </tbody>}\n                </table>}\n            </div>\n            {visitorList?.length > 0 &&\n                <CustomPagination\n                    totalCount={totalVisitorCount}\n                    pageSize={limit}\n                    currentPage={currentPage}\n                    onChange={onPaginationChange}\n                />}\n        </GlobalLayout>\n    )\n}\nexport default GeneralVisitorList"],"names":["canCreate","canRead","canUpdate","canDelete","usePermissions","setValue","control","useForm","userCompanyId","userBranchId","userType","getUserIds","visitorList","totalVisitorCount","visitorGeneralList","loading","useSelector","state","visitor","departmentListData","department","branchList","branch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","employeList","employe","navigate","useNavigate","dispatch","useDispatch","searchText","setSearchText","useState","companyId","useWatch","name","defaultValue","branchId","departmentId","employee","category","useEffect","companySearch","text","sort","status","isPagination","currentPage","setCurrentPage","fetchVisitorCatList","reqListData","page","limit","reqPayload","employeId","getGeneralVisitorList","handleCheckOut","element","reqData","_objectSpread","_id","checkOutTime","moment","Swal","title","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","updateGeneralVisitor","data","error","_jsxs","GlobalLayout","onChange","e","children","_jsx","className","class","Controller","rules","required","render","_ref","field","Select","onFocus","branchSearch","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","type","fullName","_ref2","deptSearch","_ref3","popupClassName","placeholder","optionLabelProp","fetchEmployeListData","isTL","isHR","designationId","employeSearch","item","onClick","Tooltip","placement","FaPlus","colSpan","Loader2","length","index","_element$name","_element$category","_element$mobile","_element$mobile2","_element$employeData","_element$reason","mobile","code","number","employeData","alt","src","process","profileImage","reason","timeDurationStart","format","timeDurationEnd","checkInTime","createdBy","encrypt","FaPenToSquare","size","id","deleteGeneralVisitor","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","pageSize"],"sourceRoot":""}