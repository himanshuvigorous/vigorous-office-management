{"version":3,"file":"static/js/5443.c922bff2.chunk.js","mappings":"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","sources":["pages/reportsManager/taskReports/pendingInvoiceReports/PendingInvoiceReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  inputAntdSelectClassName,\n  inputAntdSelectClassNameFilter,\n} from \"../../../../constents/global\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { pendingInvoiceReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport { Option } from \"antd/es/mentions\";\nimport { designationSearch } from \"../../../designation/designationFeatures/_designation_reducers\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport { clientSearch, getClientList } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { getTaskTypeList, taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch, getClientGroupList } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport * as ExcelJS from 'exceljs';\nimport jsPDF from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { FaEye, FaFileExcel, FaFilePdf } from \"react-icons/fa\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { encrypt } from \"../../../../config/Encryption\";\n\n\nfunction PendingInvoiceReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [searchParams] = useSearchParams();\n\n  // Get URL parameters\n  const monthParam = searchParams.get('month');\n  const yearParam = searchParams.get('year');\n  const fromDashboard = searchParams.get('fromDashboard');\n\n  // Function to calculate start and end dates based on month and year\n  const getDateRangeFromParams = () => {\n    if (monthParam && yearParam) {\n      const monthNames = [\n        'january', 'february', 'march', 'april', 'may', 'june',\n        'july', 'august', 'september', 'october', 'november', 'december'\n      ];\n\n      const monthIndex = monthNames.indexOf(monthParam.toLowerCase());\n      if (monthIndex !== -1) {\n        const year = parseInt(yearParam);\n        const startDate = dayjs().year(year).month(monthIndex).startOf('month');\n        const endDate = dayjs().year(year).month(monthIndex).endOf('month');\n        return { startDate, endDate };\n      }\n    }\n    return null;\n  };\n\n  const urlDateRange = getDateRangeFromParams();\n\n  const { pendingInvoiceReportList, totalpendingInvoiceCount, pendingInvoiceReportFunc_loading, totalFeePendingInvoiceCount } = useSelector(\n    (state) => state.reports\n  );\n  const [EmployeeViewModal, setEmployeeViewModal] = useState({\n    isOpen: false,\n    data: null\n  });\n\n  const [searchText, setSearchText] = useState(\"\");\n  const [isExportingExcel, setIsExportingExcel] = useState(false);\n  const [isExportingPDF, setIsExportingPDF] = useState(false);\n  const [pageSize, setPageSize] = useState(10);\n  const hasInitiallyLoaded = useRef(false);\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const { clientGroupList, totalClientGroupCount } = useSelector(\n    (state) => state.clientGroup\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n  const { designationList } = useSelector((state) => state.designation);\n  const { departmentListData } = useSelector((state) => state.department);\n  const { taskTypeList, totalTaskTypeCount } = useSelector(\n    (state) => state.taskType\n  );\n  const { clientList, totalCompanyCount, loading } = useSelector(\n    (state) => state.client\n  );\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const workType = useWatch({\n    control,\n    name: \"workType\",\n    defaultValue: \"\",\n  });\n  const shift = useWatch({\n    control,\n    name: \"shift\",\n    defaultValue: \"\",\n  });\n  const daterange = useWatch({\n    control,\n    name: \"daterange\",\n    defaultValue: \"\",\n  });\n  const employeeId = useWatch({\n    control,\n    name: \"employeeId\",\n    defaultValue: \"\",\n  });\n  const isTL = useWatch({\n    control,\n    name: \"isTL\",\n  });\n  const isHR = useWatch({\n    control,\n    name: \"isHR\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n  });\n\n  const designation = useWatch({\n    control,\n    name: \"designation\",\n  });\n  const ClientList = useWatch({\n    control,\n    name: \"clientList\",\n    defaultValue: \"\",\n  });\n\n  const taskType = useWatch({\n    control,\n    name: \"taskType\",\n    defaultValue: \"\",\n  });\n\n  const groupType = useWatch({\n    control,\n    name: \"groupType\",\n    defaultValue: \"\",\n  });\n\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n    defaultValue: urlDateRange?.startDate || dayjs().subtract(1, \"month\"),\n  });\n\n  const endDate = useWatch({\n    control,\n    name: \"endDate\",\n    defaultValue: urlDateRange?.endDate || dayjs(),\n  });\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n  useEffect(() => {\n    if (CompanyId) {\n      setValue(\"PDBranchId\", \"\");\n    }\n  }, [CompanyId]);\n\n  const handleDepartmentChange = (event) => {\n    setValue(\"PDDepartmentId\", event);\n    setValue(\"PDDesignationId\", \"\");\n    dispatch(\n      designationSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        departmentId: event,\n        companyId: CompanyId,\n      })\n    );\n  };\n\n  const handleFocusDepartment = () => {\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: CompanyId,\n        branchId: BranchId,\n      })\n    );\n  };\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(1);\n  };\n\n  // Set form values from URL parameters\n  useEffect(() => {\n    if (urlDateRange) {\n      setValue(\"startDate\", urlDateRange.startDate);\n      setValue(\"endDate\", urlDateRange.endDate);\n    }\n  }, [urlDateRange, setValue]);\n\n  // Call API on page change, page size change, search text change, and initial load\n  useEffect(() => {\n    if (!hasInitiallyLoaded.current) {\n      // Initial load\n      hasInitiallyLoaded.current = true;\n      fetchPendingInvoiceList(\"\");\n    } else {\n      // Subsequent calls for pagination, search, etc.\n      fetchPendingInvoiceList(debouncedFilterText);\n    }\n  }, [\n    currentPage,\n    pageSize,\n    debouncedFilterText,\n  ]);\n\n  const fetchPendingInvoiceList = (debouncedFilterText) => {\n    let reqData = {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: searchText,\n        status: Status,\n        sort: true,\n        isPagination: true,\n        clientId: ClientList,\n        directorId: \"\",\n        departmentId: department,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        groupId: groupType,\n        taskTypeId: taskType,\n        startDate: startDate ? dayjs(startDate).format(\"YYYY-MM-DD\") : \"\",\n        endDate: endDate ? dayjs(endDate).format(\"YYYY-MM-DD\") : \"\",\n      },\n    };\n    dispatch(pendingInvoiceReportFunc(reqData));\n  };\n\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId]);\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  useEffect(() => {\n    fetchClientListData();\n  }, []);\n\n  const fetchClientListData = () => {\n    let reqData = {\n\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n\n      directorId: \"\",\n      organizationId: \"\",\n      industryId: \"\",\n      // \"groupId\": \"67767fff396eb5feb6c7ceb6\",\n      text: \"\",\n      sort: true,\n      status: true,\n      isPagination: false,\n\n    };\n    dispatch(clientSearch(reqData));\n  };\n\n  useEffect(() => {\n    fetTaskTypeList();\n  }, [CompanyId, BranchId]);\n\n  const fetTaskTypeList = () => {\n    const reqListData = {\n\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n      directorId: \"\",\n      text: \"\",\n      sort: true,\n      status: \"\",\n      isPagination: false,\n\n    };\n    dispatch(taskTypeSearch(reqListData));\n  };\n\n  useEffect(() => {\n    fetchClientGroupList();\n  }, [currentPage, BranchId, CompanyId]);\n\n  const fetchClientGroupList = () => {\n    const reqData = {\n\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n      directorId: \"\",\n      text: \"\",\n      sort: true,\n      status: true,\n      isPagination: false,\n\n    };\n    dispatch(clientGrpSearch(reqData));\n  };\n\n  // Shared function to get report data\n  const getReportData = async () => {\n    const response = await reportsServices?.pendingInvoiceReportFunc({\n      currentPage: 1,\n      pageSize: 1,\n      reqPayload: {\n        text: searchText,\n        status: Status,\n        sort: true,\n        isPagination: false,\n        clientId: ClientList,\n        directorId: \"\",\n        departmentId: department,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        groupId: groupType,\n        taskTypeId: taskType,\n        startDate: startDate ? dayjs(startDate).format(\"YYYY-MM-DD\") : \"\",\n        endDate: endDate ? dayjs(endDate).format(\"YYYY-MM-DD\") : \"\",\n      }\n    });\n\n    if (!response || !response?.data) return null;\n    return response.data.docs;\n  };\n\n  const generateExcel = async () => {\n    setIsExportingExcel(true);\n    try {\n      const workbook = new ExcelJS.Workbook();\n      const worksheet = workbook.addWorksheet(\"Pending Invoice Report\");\n      worksheet.columns = [\n        { header: \"S.No.\", key: \"sno\", width: 10 },\n        { header: \"Completed Date\", key: \"completedDate\", width: 25 },\n        { header: \"Client Name\", key: \"clientName\", width: 30 },\n        { header: \"Department Name\", key: \"departmentName\", width: 25 },\n        { header: \"Task Name\", key: \"taskName\", width: 30 },\n        { header: \"Assign To\", key: \"assignTo\", width: 30 },\n        { header: \"Created Date\", key: \"createdDate\", width: 25 },\n        { header: \"Gross Amount\", key: \"grossAmount\", width: 20 },\n      ];\n      const headerRow = worksheet.getRow(1);\n      headerRow.eachCell((cell) => {\n        cell.fill = {\n          type: \"pattern\",\n          pattern: \"solid\",\n          fgColor: { argb: \"FFB6D7A8\" },\n        };\n        cell.font = { bold: true };\n        cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n      const reportData = await getReportData();\n      if (!reportData) return;\n\n      // Calculate total amount\n      const totalAmount = reportData.reduce((sum, data) => {\n        return sum + (parseFloat(data?.fee) || 0);\n      }, 0);\n\n      const apiData = reportData.map((data, index) => ({\n        sno: index + 1,\n        completedDate: data?.taskCompletedAt ? dayjs(data.taskCompletedAt).format('DD-MM-YYYY hh:mm a') : '-',\n        clientName: data?.clientData?.fullName || \"-\",\n        departmentName: data?.departmentData?.name || \"-\",\n        taskName: data?.taskName || \"-\",\n        assignTo: Array.isArray(data?.employeData) ? data.employeData.map(emp => emp?.fullName || \"-\").join(\", \") : data?.employeData || \"-\",\n        createdDate: data?.createdAt ? dayjs(data.createdAt).format('DD-MM-YYYY hh:mm a') : '-',\n        grossAmount: data?.fee ? `₹${parseFloat(data.fee).toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}` : \"-\"\n      }));\n\n      // Add total row at the top\n      const totalRow = worksheet.addRow({\n        sno: \"TOTAL\",\n        completedDate: \"\",\n        clientName: \"\",\n        departmentName: \"\",\n        taskName: \"\",\n        assignTo: \"\",\n        createdDate: \"\",\n        grossAmount: `₹${totalAmount.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`\n      });\n\n      // Style the total row\n      totalRow.eachCell((cell) => {\n        cell.fill = {\n          type: \"pattern\",\n          pattern: \"solid\",\n          fgColor: { argb: \"FFD4E5F7\" },\n        };\n        cell.font = { bold: true, size: 12 };\n        cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n        cell.border = {\n          top: { style: \"thick\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thick\" },\n          right: { style: \"thin\" },\n        };\n      });\n\n      // Add empty row for spacing\n      worksheet.addRow({});\n\n      apiData?.forEach((item) => {\n        const row = worksheet.addRow(item);\n        row.eachCell((cell) => {\n          cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n          cell.border = {\n            top: { style: \"thin\" },\n            left: { style: \"thin\" },\n            bottom: { style: \"thin\" },\n            right: { style: \"thin\" },\n          };\n        });\n      });\n\n      // Add auto-filter\n      worksheet.autoFilter = {\n        from: \"A1\",\n        to: \"H1\",\n      };\n\n      // Export\n      workbook.xlsx.writeBuffer().then((buffer) => {\n        const blob = new Blob([buffer], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n        const link = document.createElement(\"a\");\n        link.href = URL.createObjectURL(blob);\n        link.download = \"Pending_Invoice_Report.xlsx\";\n        link.click();\n        setIsExportingExcel(false);\n      });\n    } catch (error) {\n      console.error(\"Error generating Excel:\", error);\n      setIsExportingExcel(false);\n    }\n  };\n\n  const generatePDF = async () => {\n    setIsExportingPDF(true);\n    try {\n      const doc = new jsPDF({\n        orientation: \"landscape\",\n        unit: \"pt\",\n      });\n      doc.setFontSize(16);\n\n      const headers = [\n        \"S.No.\",\n        \"Completed Date\",\n        \"Client Name\",\n        \"Department Name\",\n        \"Task Name\",\n        \"Assign To\",\n        \"Created Date\",\n        \"Gross Amount\",\n      ];\n\n      const reportData = await getReportData();\n      if (!reportData) return;\n\n      // Calculate total amount\n      const totalAmount = reportData.reduce((sum, data) => {\n        return sum + (parseFloat(data?.fee) || 0);\n      }, 0);\n\n      const body = reportData.map((data, index) => [\n        index + 1,\n        data?.taskCompletedAt ? dayjs(data.taskCompletedAt).format('DD-MM-YYYY hh:mm') : '-',\n        data?.clientData?.fullName || \"-\",\n        data?.departmentData?.name || \"-\",\n        data?.taskName || \"-\",\n        Array.isArray(data?.employeData) ? data.employeData.map(emp => emp?.fullName || \"-\").join(\", \") : data?.employeData || \"-\",\n        data?.createdAt ? dayjs(data.createdAt).format('DD-MM-YYYY hh:mm') : '-',\n        data?.fee ? `₹${parseFloat(data.fee).toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}` : \"-\"\n      ]);\n\n      // Add total row at the beginning of body\n      const totalRow = [\n        \"TOTAL\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        \"\",\n        `₹${totalAmount.toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}`\n      ];\n\n      // Insert total row at the beginning\n      body.unshift(totalRow);\n\n      autoTable(doc, {\n        startY: 40,\n        head: [headers],\n        body: body,\n        margin: { horizontal: 10 },\n        columnStyles: {\n          0: { halign: 'center', cellWidth: 40 }, // S.No.\n          1: { halign: 'center', cellWidth: 80 }, // Completed Date\n          2: { halign: 'left', cellWidth: 100 },  // Client Name\n          3: { halign: 'left', cellWidth: 80 },   // Department Name\n          4: { halign: 'left', cellWidth: 120 },  // Task Name\n          5: { halign: 'left', cellWidth: 100 },  // Assign To\n          6: { halign: 'center', cellWidth: 80 }, // Created Date\n          7: { halign: 'right', cellWidth: 80 },  // Gross Amount\n        },\n        styles: {\n          cellPadding: 6,\n          fontSize: 9,\n          valign: \"middle\",\n          halign: \"left\",\n          lineWidth: 0.5,\n        },\n        headStyles: {\n          fillColor: [211, 211, 211],\n          textColor: [0, 0, 0],\n          fontStyle: \"bold\",\n          halign: \"center\",\n          lineWidth: 0.5,\n        },\n        alternateRowStyles: {\n          fillColor: [245, 245, 245],\n        },\n        didParseCell: function (data) {\n          // Style the total row (first row after header)\n          if (data.row.index === 1) { // 0 is header, 1 is first data row (total row)\n            data.cell.styles.fillColor = [212, 229, 247]; // Light blue background\n            data.cell.styles.fontStyle = 'bold';\n            data.cell.styles.halign = 'center';\n            data.cell.styles.textColor = [0, 0, 0];\n            data.cell.styles.lineWidth = 1; // Thicker borders for total row\n            // Override any alternating row styles\n            return;\n          }\n        },\n      });\n\n      doc.save(`Pending_Invoice_Report.pdf`);\n      setIsExportingPDF(false);\n    } catch (error) {\n      console.error(\"Error generating PDF:\", error);\n      setIsExportingPDF(false);\n    }\n  };\n\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1\">\n          <div className=\"grid 2xl:grid-cols-6 xl:grid-cols-5 lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-3 grid-cols-1 gap-2 flex-wrap text-[14px] rounded-md\">\n            {userInfoglobal?.userType === \"admin\" && (\n              <div className=\"\">\n                <Controller\n                  name=\"PDCompanyId\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select Company\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Select.Option value=\"\">Select Company</Select.Option>\n                      {companyList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.fullName}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.PDCompanyId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDCompanyId.message}\n                  </p>\n                )}\n              </div>\n            )}\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div className=\"\">\n              <Controller\n                name=\"PDDepartmentId\"\n                control={control}\n                rules={{ required: \"Department is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassNameFilter} ${errors.PDDepartmentId\n                      ? \"border-[1px] \"\n                      : \"border-gray-300\"\n                      }`}\n                    onChange={(value) => {\n                      field.onChange(value);\n                      handleDepartmentChange(value);\n                    }}\n                    onFocus={handleFocusDepartment}\n                    placeholder=\"Select Department\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                  >\n                    <Option value=\"\">Select Department</Option>\n                    {departmentListData?.map((element) => (\n                      <Option key={element?._id} value={element?._id}>\n                        {element?.name}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              {errors.employeeId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.employeeId.message}\n                </p>\n              )}\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"clientList\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Select client\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                  >\n                    <Select.Option value=\"\">Select Client </Select.Option>\n                    {clientList?.map((element) => (\n                      <Select.Option value={element?._id}>\n                        {\" \"}\n                        {element?.fullName}{\" \"}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"taskType\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Select Task Type\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                  >\n                    <Select.Option value=\"\">Select Task Type </Select.Option>\n                    {taskTypeList?.map((element) => (\n                      <Select.Option value={element?._id}>\n                        {\" \"}\n                        {element?.name}{\" \"}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"groupType\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={` ${inputAntdSelectClassNameFilter} ${errors.groupType ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Select Group Type\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                  >\n                    <Select.Option value=\"\">Select Group Type </Select.Option>\n                    {clientGroupList?.map((element) => (\n                      <Select.Option value={element?._id}>\n                        {\" \"}\n                        {element?.fullName}{\" \"}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"startDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={urlDateRange?.startDate || dayjs().subtract(1, \"month\")}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                    placeholder=\"Start Date\"\n                  />\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"endDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={urlDateRange?.endDate || dayjs()}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                    placeholder=\"End Date\"\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"PDDepartmentId\", \"\");\n                setValue(\"clientList\", \"\");\n                setValue(\"taskType\", \"\");\n                setValue(\"groupType\", \"\");\n                setValue(\"startDate\", null);\n                setValue(\"endDate\", null);\n                setCurrentPage(1); // Reset to first page\n                fetchPendingInvoiceList(\"\"); // Call API with empty search\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                setCurrentPage(1); // Reset to first page when applying filters\n                fetchPendingInvoiceList(debouncedFilterText);\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        {/* Total Fee Pending Invoice Count Display */}\n        <div className=\"bg-white rounded-lg p-4 mb-4 shadow-sm border border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"bg-blue-100 p-3 rounded-full\">\n                <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                </svg>\n              </div>\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900\">Total Pending Invoice Amount</h3>\n                <p className=\"text-sm text-gray-600\">Sum of all pending invoice fees</p>\n              </div>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-3xl font-bold text-blue-600\">\n                {totalFeePendingInvoiceCount ? `₹${parseFloat(totalFeePendingInvoiceCount).toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}` : \"₹0.00\"}\n              </div>\n              <div className=\"text-sm text-gray-500\">\n                {totalpendingInvoiceCount} {totalpendingInvoiceCount === 1 ? 'record' : 'records'}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"space-y-1\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1 justify-between items-center\">\n            <div className=\"flex py-1 items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                <Select.Option value={10}>10</Select.Option>\n                <Select.Option value={25}>25</Select.Option>\n                <Select.Option value={50}>50</Select.Option>\n                <Select.Option value={100}>100</Select.Option>\n              </Select>\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                disabled={isExportingExcel || isExportingPDF}\n                className={`py-2 my-0.5 rounded-md flex px-6 justify-center items-center text-white transition-colors duration-200 ${isExportingExcel || isExportingPDF\n                  ? \"bg-gray-400 cursor-not-allowed\"\n                  : \"bg-green-600 hover:bg-green-700\"\n                  }`}\n              >\n                {isExportingExcel ? (\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                ) : (\n                  <FaFileExcel className=\"mr-2 text-[14px]\" />\n                )}\n                <span className=\"text-[12px]\">\n                  {isExportingExcel ? \"Exporting Excel...\" : \"Excel\"}\n                </span>\n              </button>\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                disabled={isExportingExcel || isExportingPDF}\n                className={`py-2 my-0.5 rounded-md flex px-6 justify-center items-center text-white transition-colors duration-200 ${isExportingExcel || isExportingPDF\n                  ? \"bg-gray-400 cursor-not-allowed\"\n                  : \"bg-red-600 hover:bg-red-700\"\n                  }`}\n              >\n                {isExportingPDF ? (\n                  <div className=\"w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2\"></div>\n                ) : (\n                  <FaFilePdf className=\"mr-2 text-[14px]\" />\n                )}\n                <span className=\"text-[12px]\">\n                  {isExportingPDF ? \"Exporting PDF...\" : \"PDF\"}\n                </span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-left w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-left\">Completed Date</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-left\">Client name</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-left\">Department Name</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-left\">Task Name</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-left\">Assign To</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-left\">Created Date</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">Gross Amount</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">Actions</th>\n              </tr>\n\n            </thead>\n            {pendingInvoiceReportFunc_loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={12}\n                className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {pendingInvoiceReportList &&\n                  pendingInvoiceReportList?.length > 0 ? (\n                  pendingInvoiceReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n\n                      <td className=\"whitespace-nowrap text-left border-none px-2 py-3\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n                      <td className=\"whitespace-nowrap text-left border-none px-2 py-3\">\n                        {element?.taskCompletedAt ? dayjs(element?.taskCompletedAt).format('DD-MM-YYYY hh:mm a') : '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap text-left border-none px-2 py-3\">\n                        {element?.clientData.fullName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-left border-none px-2 py-3\">\n                        {element?.departmentData?.name || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-left border-none px-2 py-3\">\n                        {element?.taskName || \"-\"}\n                      </td>\n\n\n\n\n                      <td className=\"p-2 text-left min-w-[125px]\">\n                        <div className=\"flex gap-1 items-center\">\n                          <span>{element?.employeData?.[0]?.fullName}</span>\n                          {element?.employeData?.length > 1 && (\n                            <span className=\"text-header flex items-center gap-1\">\n                              +\n                              <span className=\"h-5 w-5 bg-header text-white text-[12px] rounded-full flex items-center justify-center\">\n                                {element?.employeData?.length - 1}\n                              </span>\n                            </span>\n                          )}\n                          <FaEye\n                            className=\"text-[#374151] text-[14px] cursor-pointer\"\n                            onClick={() =>\n                              setEmployeeViewModal({ isOpen: true, data: element })\n                            }\n                          />\n                        </div>\n                      </td>\n\n\n\n                      <td className=\"whitespace-nowrap text-left border-none px-2 py-3\">\n                        {dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') ?? '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap text-right border-none px-2 py-3 font-medium\">\n                        {element?.fee ? `₹${parseFloat(element.fee).toLocaleString('en-IN', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}` : \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-left border-none px-2 py-3\">\n\n                        <button\n                          onClick={() => {\n                            // Encrypt task data to pass in URL\n                            const taskData = {\n                              _id: element?._id,\n                              taskName: element?.taskName,\n                              clientId: element?.clientData?._id,\n                              clientName: element?.clientData?.fullName,\n                              fee: element?.fee,\n                              financialYear: element?.financialYear,\n                              type: element?.type,\n                              branchId: element?.branchId,\n                              companyId: element?.companyId,\n                              taskTypeId: element?.taskTypeId,\n                            }\n\n                            const encryptedTaskData = encrypt(JSON.stringify(taskData));\n                            navigate(`/admin/invoice/create?taskData=${encryptedTaskData}`);\n                          }}\n                          className=\"px-2 py-1.5 text-xs rounded-md bg-green-600 hover:bg-green-700 text-white border-green-600 border-[1.5px] transition-colors duration-200\"\n                          type=\"button\"\n                        >\n                          <FaPlus\n                            className=\"text-white\"\n                            size={16}\n                          />\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>\n        <CustomPagination\n          totalCount={totalpendingInvoiceCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n      <Modal\n        title=\"Employee List\"\n        visible={EmployeeViewModal?.isOpen}\n        onCancel={() => setEmployeeViewModal({\n          isOpen: false,\n          employee: null,\n        })}\n        className=\"antmodalclassName\"\n        footer={[\n          <button\n            key=\"close\"\n            onClick={() => setEmployeeViewModal({\n              isOpen: false,\n              employee: null,\n            })}\n            className=\" capitalize px-2 py-1 rounded-sm bg-header text-white\"\n          >\n            Close\n          </button>\n        ]}\n        width={800}\n        centered\n      >\n        <div className=\"flex items-center\">\n\n          <div className=\"flex gap-3 flex-wrap ] overflow-y-auto\">\n            {EmployeeViewModal?.data?.employeData?.map((element) => (\n              <div\n                key={element.id}\n\n                className=\"flex flex-col items-center p-3 rounded-lg bg-white hover:bg-gray-50 cursor-pointer transition-all shadow-sm hover:shadow-md border border-gray-100\"\n              >\n                {/* Avatar with subtle ring */}\n\n\n                {/* Name + Role (if available) */}\n                <div className=\"text-center\">\n                  <p className=\"font-medium text-gray-800 truncate max-w-[100px]\">\n                    {element.fullName}\n                  </p>\n                  <p className=\"text-sm text-gray-500\">{element.email}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n      </Modal>\n\n    </GlobalLayout>\n  );\n}\n\nexport default PendingInvoiceReport;\n"],"names":["_EmployeeViewModal$da","_EmployeeViewModal$da2","control","formState","errors","setValue","useForm","navigate","useNavigate","dispatch","useDispatch","searchParams","useSearchParams","monthParam","get","yearParam","urlDateRange","getDateRangeFromParams","monthIndex","indexOf","toLowerCase","year","parseInt","startDate","dayjs","month","startOf","endDate","endOf","pendingInvoiceReportList","totalpendingInvoiceCount","pendingInvoiceReportFunc_loading","totalFeePendingInvoiceCount","useSelector","state","reports","EmployeeViewModal","setEmployeeViewModal","useState","isOpen","data","searchText","setSearchText","isExportingExcel","setIsExportingExcel","isExportingPDF","setIsExportingPDF","pageSize","setPageSize","hasInitiallyLoaded","useRef","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","clientGroupList","totalClientGroupCount","clientGroup","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","companyList","company","branchList","branch","designationList","designation","departmentListData","department","taskTypeList","totalTaskTypeCount","taskType","clientList","totalCompanyCount","loading","client","CompanyId","useWatch","name","defaultValue","BranchId","Status","ClientList","groupType","subtract","useEffect","timer","setTimeout","clearTimeout","handleFocusDepartment","deptSearch","text","sort","status","isPagination","companyId","branchId","current","fetchPendingInvoiceList","reqData","reqPayload","clientId","directorId","departmentId","userType","_id","groupId","taskTypeId","format","pendingInvoiceReportFunc","branchSearch","companySearch","fetchClientListData","organizationId","industryId","clientSearch","fetTaskTypeList","reqListData","taskTypeSearch","fetchClientGroupList","clientGrpSearch","getReportData","async","response","reportsServices","docs","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","inputAntdSelectClassNameFilter","PDPlan","placeholder","showSearch","filterOption","input","option","String","includes","Option","value","map","element","fullName","PDCompanyId","message","_ref2","PDBranchId","rules","required","_ref3","PDDepartmentId","onChange","event","designationSearch","onFocus","employeeId","_ref4","_ref5","_ref6","_ref7","CustomDatePicker","report","size","_ref8","onClick","GlobalLayout","e","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","parseFloat","toLocaleString","minimumFractionDigits","maximumFractionDigits","Collapse","defaultActiveKey","expandIcon","_ref9","isActive","MdKeyboardArrowDown","style","color","transform","transition","htmlFor","id","Number","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","type","pattern","fgColor","argb","font","bold","alignment","vertical","horizontal","border","top","left","bottom","right","reportData","totalAmount","reduce","sum","fee","apiData","index","_data$clientData","_data$departmentData","sno","completedDate","taskCompletedAt","clientName","clientData","departmentName","departmentData","taskName","assignTo","Array","isArray","employeData","emp","join","createdDate","createdAt","grossAmount","addRow","forEach","item","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","error","console","generateExcel","disabled","FaFileExcel","doc","jsPDF","orientation","unit","setFontSize","headers","body","_data$clientData2","_data$departmentData2","totalRow","unshift","autoTable","startY","head","margin","columnStyles","halign","cellWidth","styles","cellPadding","fontSize","valign","lineWidth","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","didParseCell","row","save","generatePDF","FaFilePdf","colSpan","Loader2","length","_element$departmentDa","_element$employeData","_element$employeData$","_element$employeData2","_element$employeData3","_dayjs$format","FaEye","_element$clientData","_element$clientData2","taskData","financialYear","encryptedTaskData","encrypt","stringify","FaPlus","CustomPagination","totalCount","page","Modal","title","visible","onCancel","employee","footer","centered","email"],"sourceRoot":""}