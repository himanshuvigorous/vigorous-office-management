{"version":3,"file":"static/js/7693.2dc3e9c0.chunk.js","mappings":"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","sources":["pages/hr/employeeSalary/Deductions/UpdateDeductions.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { decrypt } from \"../../../../config/Encryption\";\nimport { deductionsDetails, deductionsUpdate } from \"./deductionsfeature/_deductionsList_reducers\";\nimport { Select } from \"antd\";\nimport Loader from \"../../../../global_layouts/Loader\";\n\n\n\n\nconst UpdateDeductions = () => {\n  const {  loading:deductionLoading } = useSelector(\n    (state) => state.deductions\n  );\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\nconst {deductionIdEnc} = useParams();\nconst deductionId = decrypt(deductionIdEnc);\nconst {deductionsDetailsData} = useSelector((state) => state.deductions);\n \n\n\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const isPercentage = useWatch({\n    control,\n    name: \"isPercentage\",\n    defaultValue: \"\",\n  });\n\nuseEffect(()=>{\nif(deductionId){\n  dispatch(deductionsDetails({\n    _id:deductionId\n  }));\n}\n},[deductionId])\n\n\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: deductionId,\n      companyId: deductionsDetailsData.companyId,\n      directorId:deductionsDetailsData?.directorId,\n      branchId: deductionsDetailsData.branchId,\n      \"name\": data?.allowanceName,\n      \"description\": '',\n      \"isPercentage\": false,\n      \"amount\": 0,\n      status:data.status==='true'?true :data.status==='false'?false:''\n    };\n    dispatch(deductionsUpdate(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  useEffect(()=>{\nif(deductionsDetailsData){\nsetValue(\"allowanceName\", deductionsDetailsData?.name);\n// setValue(\"description\", deductionsDetailsData?.description);\n// setValue(\"isPercentage\", deductionsDetailsData?.isPercentage === true ? 'Active' : 'InActive');\n// setValue(\"amount\", deductionsDetailsData?.amount);\nsetValue(\"status\",deductionsDetailsData?.status===true ? 'true':deductionsDetailsData?.status===false ? 'false' : '')\n}\n  },[deductionsDetailsData])\n\n\n  \n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n\n\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Name <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"allowanceName\", {\n                  required: \"Deduction  is required\",\n                })}\n                className={`${inputClassName} ${errors.allowanceName ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Deduction  Name\"\n              />\n              {errors.allowanceName && (\n                <p className=\"text-red-500 text-sm\">{errors.allowanceName.message}</p>\n              )}\n            </div>\n            \n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Status <span className=\"text-red-600\">*</span>\n              </label>\n              {/* <select\n                {...register(\"isPercentage\", {\n                  required: \"isPercentage is required\",\n                })}\n                className={`${inputClassName} ${errors.isPercentage ? \"border-[1px] \" : \"border-gray-300\"}`}\n              >\n                <option value=\"\">Select isPercentage</option>\n                <option value={true}>Active</option>\n                <option value={false}>Inactive</option>\n              </select> */}\n                  <Controller\n                      name=\"status\"\n                      control={control}\n                      rules={{\n                        required:'status is required'\n                      }}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          className={` w-32 ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n                \n                          placeholder=\"Select Status\"\n                          showSearch\n\n                        >\n                          <Select.Option value=\"\">Select Status</Select.Option>\n                       \n                       \n                            <Select.Option value=\"true\" > Active  </Select.Option>\n                             <Select.Option value=\"false\" > InActive  </Select.Option>\n                           \n                        </Select>\n                      )}\n                    />\n              {errors.status && (\n                <p className=\"text-red-500 text-sm\">{errors.status.message}</p>\n              )}\n              </div>\n            </div>\n\n          <div className=\"flex justify-end\">\n          <button\n              type=\"submit\"\n              disabled={deductionLoading}\n              className={`${deductionLoading ? 'bg-gray-400': 'bg-header' } text-white p-2 px-4 mt-3 rounded`}\n            >\n            {deductionLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default UpdateDeductions;\n"],"names":["UpdateDeductions","loading","deductionLoading","useSelector","state","deductions","register","handleSubmit","control","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","deductionIdEnc","useParams","deductionId","decrypt","deductionsDetailsData","JSON","parse","localStorage","getItem","concat","domainName","useWatch","name","defaultValue","useEffect","deductionsDetails","_id","status","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","directorId","branchId","allowanceName","deductionsUpdate","then","error","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","Controller","rules","render","_ref","field","Select","inputAntdSelectClassName","PDPlan","showSearch","Option","value","disabled","Loader"],"sourceRoot":""}