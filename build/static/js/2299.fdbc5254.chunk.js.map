{"version":3,"file":"static/js/2299.fdbc5254.chunk.js","mappings":"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","sources":["pages/global/other/policy/CreatePolicy.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport { domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport ReactQuill from \"react-quill\";\nimport { FaTimes, FaRegFile } from \"react-icons/fa\";\nimport { fileUploadFunc } from \"../fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { createPolicyFunc } from \"./policyFeatures/policy_reducers\";\nimport { Select } from \"antd\";\n\n\nconst CreatePolicy = () => {\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector(\n    (state) => state.branch\n  );\n  const [editorValue, setEditorValue] = useState(``);\n  const [tagInput, setTagInput] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [isPreview, setIsPreview] = useState(false);\n  const [formData, setFormData] = useState({\n    attachments: [],\n  });\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n\n  // useEffect(() => {\n  //   dispatch(employeSearch());\n  // }, [dispatch]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      companyId: userInfoglobal?.userType === \"admin\" ? data?.PDCompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      // directorId: '',\n      // branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ? data?.PDBranchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      title: data?.title,\n      content: editorValue,\n      attachments: formData?.attachments,\n    };\n    dispatch(createPolicyFunc(finalPayload)).then((data) => {\n      if (!data.error) navigate(\"/admin/policy\");\n    });\n  };\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination:false,\n          companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId])\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  const handleTagChange = (e) => {\n    setTagInput(e.target.value);\n  };\n\n  const handleAddTag = (e) => {\n    if (e.key === \"Enter\" && tagInput.trim() !== \"\") {\n      e.preventDefault();\n      setTags((prevTags) => [...prevTags, tagInput.trim()]);\n      setTagInput(\"\");\n    }\n  };\n\n  const handleRemoveTag = (tagToRemove) => {\n    setTags((prevTags) => prevTags.filter((tag) => tag !== tagToRemove));\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setFormData(prev => ({\n          ...prev,\n          attachments: [...prev.attachments, res.payload?.data]\n        }));\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setFormData(prev => {\n      const updatedAttachments = prev.attachments.filter((_, i) => i !== index);\n      return { ...prev, attachments: updatedAttachments };\n    });\n  };\n\n  const handleEditorChange = (value) => {\n    setEditorValue(value);\n  };\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2\">\n            {userInfoglobal?.userType === \"admin\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Company <span className=\"text-red-600\">*</span>\n              </label>\n              <select\n                {...register(\"PDCompanyId\", {\n                  required: \"company is required\",\n                })}\n                className={` ${inputClassName} ${errors.PDCompanyId\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n              >\n                <option className=\"\" value=\"\">\n                  Select Comapany\n                </option>\n                {companyList?.map((type) => (\n                  <option value={type?._id}>{type?.fullName}</option>\n                ))}\n              </select>\n              {errors.PDCompanyId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDCompanyId.message}\n                </p>\n              )}\n            </div>}\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Branch <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"PDBranchId\"\n                control={control}\n                rules={{ required: \"Branch is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Branch\"\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              {errors.PDBranchId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDBranchId.message}\n                </p>\n              )}\n            </div>\n            }\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Title <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"title\", {\n                  required: \"Title is required\",\n                })}\n                className={`${inputClassName} ${errors.title ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Title\"\n              />\n              {errors.title && (\n                <p className=\"text-red-500 text-sm\">{errors.title.message}</p>\n              )}\n            </div>\n\n          </div>\n\n          <div className=\"\">\n\n            <label className={`${inputLabelClassName}`}>\n              Content <span className=\"text-red-600\">*</span>\n            </label>\n            <div className=\"col-span-2\">\n              <ReactQuill\n                value={editorValue}\n                onChange={handleEditorChange}\n                placeholder=\"Write the email body here\"\n                modules={{\n                  toolbar: [\n                    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                    ['bold', 'italic', 'underline', 'strike'],\n                    [{ 'align': [] }],\n                    ['link', 'image', 'video'],\n                    ['blockquote', 'code-block'],\n                    ['clean']\n                  ],\n                }}\n                formats={['header', 'font', 'list', 'bold', 'italic', 'underline', 'link', 'align', 'clean']}\n              />\n            </div>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2\">\n\n            <div className=\"pt-0 mt-6\">\n              <div className=\"font-medium mb-2\">Attachments:</div>\n              {!isPreview ? (\n                <div className=\"space-y-4\">\n                  <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                  <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer\">\n                    <FaRegFile className=\"mr-2\" /> Add Attachments\n                  </label>\n\n                  <div className=\"space-y-2\">\n                    {formData.attachments.map((file, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                        <a\n                          href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                          className=\"flex items-center space-x-2\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <FaRegFile className=\"text-gray-500\" />\n                          <span className=\"text-sm text-gray-600\">{file}</span>\n                        </a>\n                        <button\n                          type=\"button\"\n                          onClick={() => handleRemoveFile(index)}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <FaTimes />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  {/* Attachments preview logic */}\n                </div>\n              )}\n            </div>\n\n          </div>\n\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              className=\"bg-header text-white p-2 px-4 rounded mt-4\">\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default CreatePolicy;\n"],"names":["CreatePolicy","register","handleSubmit","control","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","companyList","useSelector","state","company","branchList","branch","editorValue","setEditorValue","useState","tagInput","setTagInput","tags","setTags","isPreview","setIsPreview","formData","setFormData","attachments","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","CompanyId","useWatch","name","defaultValue","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","companySearch","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","PDCompanyId","title","content","createPolicyFunc","then","error","inputLabelClassName","_objectSpread","required","inputClassName","value","map","type","fullName","message","Controller","rules","render","_ref","field","Select","inputAntdSelectClassName","PDBranchId","placeholder","Option","ReactQuill","onChange","modules","toolbar","formats","e","reqData","filePath","target","files","isVideo","isMultiple","fileUploadFunc","res","_res$payload","payload","prev","_res$payload2","id","htmlFor","FaRegFile","file","index","href","process","rel","onClick","updatedAttachments","filter","_","i","handleRemoveFile","FaTimes"],"sourceRoot":""}