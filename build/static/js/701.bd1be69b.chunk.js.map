{"version":3,"file":"static/js/701.bd1be69b.chunk.js","mappings":"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","sources":["pages/Director/director/EditDirector.js","global_layouts/Loader/Loader.js"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  formButtonClassName,\n  inputClassName,\n  domainName,\n  inputLabelClassName,\n  inputerrorClassNameAutoComplete,\n  inputDisabledClassName,\n  getLocationDataByPincode,\n  inputAntdSelectClassName,\n} from \"../../../constents/global.js\";\nimport getUserIds from '../../../constents/getUserIds';\nimport { FaCamera, FaUserAlt } from \"react-icons/fa\";\nimport { AiFillDelete, AiFillInstagram } from \"react-icons/ai\";\nimport { IoLogoFacebook } from \"react-icons/io\";\nimport { TbEditOff, TbWorld } from \"react-icons/tb\";\nimport { FaSquareXTwitter } from \"react-icons/fa6\";\nimport { showNotification } from \"../../../global_layouts/CustomNotification/NotificationManager.js\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { decrypt } from \"../../../config/Encryption.js\";\nimport { countrySearch } from \"../../global/address/country/CountryFeatures/_country_reducers\";\nimport { stateSearch } from \"../../global/address/state/featureStates/_state_reducers\";\nimport { citySearch } from \"../../global/address/city/CityFeatures/_city_reducers\";\nimport { empDoctSearch, getEmployeeDocument } from \"../../global/other/employeeDocument/EmployeeDocumentFeatures/_emp_document_reducers\";\nimport Loader from \"../../../global_layouts/Loader/Loader.js\";\nimport {\n  getDirectorDetails,\n  updateDirector,\n} from \"./DirectorFeatures/_director_reducers.js\";\nimport {\n  updateDocument,\n  fileUploadFunc,\n  deleteDocument,\n} from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers.js\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers.js\";\nimport { AutoComplete, Input, Select, Spin } from \"antd\";\nimport CustomMobileCodePicker from \"../../../global_layouts/MobileCode/MobileCodePicker.js\";\nimport Swal from \"sweetalert2\";\nimport { ProfileImageUpdate } from \"../../../redux/_reducers/_auth_reducers.js\";\nimport CommonImageViewer from \"../../../global_layouts/ImageViewrModal/CommonImageViewer.js\";\nimport { LiaEditSolid } from \"react-icons/lia\";\nconst EditDirector = () => {\n  const { directorIdEnc } = useParams();\n  const directorId = decrypt(directorIdEnc);\n  const documentRef = useRef([])\n  const [editPageLoader,setEditPageLoader]=useState(true);\n\n  const navigate = useNavigate();\n  const [step, setStep] = useState(1);\n  const [newStep, setnewStep] = useState(null);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [isSameAsPermanent, setIsSameAsPermanent] = useState(false);\n\n  const [banks, setBanks] = useState([1]);\n  const [documents, setDocuments] = useState([\n     { id: 1, documentType: \"\", documentNo: \"\", file: [], isEditable: false },\n  ]);\n  const [financialInfo, setFinancialInfo] = useState([\n    {\n      id: 1,\n      name: \"\",\n      year: \"\",\n      file: [],\n    },\n  ]);\n  const [formErrors, setFormErrors] = useState([]);\n\n  const [profileImage, setProfileImage] = useState(null);\n  const [profileImagePayload, setProfileImagePayload] = useState();\n  const [isHovering, setIsHovering] = useState(false);\n  const [fileName, setFileName] = useState({});\n  const [fileUrl, setFileUrl] = useState({});\n  const [uploadedFilePath, setUploadedFilePath] = useState(\"\");\n  const [localCountryList, setLocalCountryList] = useState();\n\n  const { countryListData } = useSelector((state) => state.country);\n  const { stateListData } = useSelector((state) => state.states);\n  const { cityListData } = useSelector((state) => state.city);\n  const { employeeDocumentList } = useSelector(\n    (state) => state.employeeDocument\n  );\n  const { companyList } = useSelector((state) => state.company);\n  const { directorDetailsData } = useSelector((state) => state.director);\n  const {loading:directorLoading  } = useSelector((state) => state.director);\n  const { loadingUpdateFile } = useSelector((state) => state.fileUpload);\n\n  const handleDeleteDocImage = (index, file) => {\n    const updatedDocs = [...documents];\n    updatedDocs[index].file = [];\n    setDocuments(updatedDocs);\n};\n  const {\n    userCompanyId,\n    userDirectorId,\n    userBranchId,\n    userEmployeId,\n    userDepartmentId,\n    userDesignationId,\n    userType\n  } = getUserIds();\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    getValues,\n    unregister,\n    setError,\n    control,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const handleEditButton = (index) => {\n    setDocuments((prevDocuments) =>\n      prevDocuments.map((doc, i) =>\n      i === index ? { ...doc, isEditable: !doc.isEditable } : doc\n      )\n    );\n    \n  };\n\n  const PrintAddress = useWatch({\n    control,\n    name: \"PDAddress\",\n    defaultValue: \"\",\n  });\n  const PrintCity = useWatch({\n    control,\n    name: \"PDCity\",\n    defaultValue: \"\",\n  });\n  const PrintState = useWatch({\n    control,\n    name: \"PDState\",\n    defaultValue: \"\",\n  });\n  const PrintCountry = useWatch({\n    control,\n    name: \"PDCountry\",\n    defaultValue: \"\",\n  });\n  const PrintSecondaryState = useWatch({\n    control,\n    name: \"PDSecondaryState\",\n    defaultValue: \"\",\n  });\n  const PrintSecondaryCountry = useWatch({\n    control,\n    name: \"PDSecondaryCountry\",\n    defaultValue: \"\",\n  });\n  const PrintPincode = useWatch({\n    control,\n    name: \"PDPinCode\",\n    defaultValue: \"\",\n  });\n  const PrintMail = useWatch({\n    control,\n    name: \"PDEmail\",\n    defaultValue: \"\",\n  });\n  const PrintMobile = useWatch({\n    control,\n    name: \"PDMobileNo\",\n    defaultValue: \"\",\n  });\n  const PrintMobileCode = useWatch({\n    control,\n    name: \"PDMobileCode\",\n    defaultValue: \"\",\n  });\n  const PrintDirectorName = useWatch({\n    control,\n    name: \"PDDirectorName\",\n    defaultValue: \"\",\n  });\n  const PrintTagLine = useWatch({\n    control,\n    name: \"PDTagLine\",\n    defaultValue: \"\",\n  });\n  const PrintWebsite = useWatch({\n    control,\n    name: \"SMWebsite\",\n    defaultValue: \"\",\n  });\n  const PrintFacebook = useWatch({\n    control,\n    name: \"SMFacebook\",\n    defaultValue: \"\",\n  });\n  const PrintTwitter = useWatch({\n    control,\n    name: \"SMTwitter\",\n    defaultValue: \"\",\n  });\n  const PrintInstagram = useWatch({\n    control,\n    name: \"SMInstagram\",\n    defaultValue: \"\",\n  });\n  const PrintPassword = useWatch({\n    control,\n    name: \"PDPassword\",\n    defaultValue: \"\",\n  });\n\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: userCompanyId,\n  });\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: userBranchId,\n  });\n  const departmentId = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n    defaultValue: userDepartmentId,\n  });\n  const designationId = useWatch({\n    control,\n    name: \"PDDesignationId\",\n    defaultValue: userDesignationId,\n  });\n\n  useEffect(() => {\n    if (PrintPincode && PrintPincode.length >=4 &&\n      PrintPincode.length <= 6 ) {\n      getLocationDataByPincode(PrintPincode)\n        .then((data) => {\n          if (data) {\n            setValue(\"PDCity\", data.city);\n            setValue(\"PDState\", data.state);\n            setValue(\"PDCountry\", data.country);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching data:\", error);\n        });\n    }\n  }, [PrintPincode]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        await dispatch(\n          countrySearch({\n            text: \"\",\n            sort: true,\n            status: true,\n            isPagination: false,\n          })\n        );\n        const reqData = {\n          _id: directorId,\n        };\n        await dispatch(getDirectorDetails(reqData)).then((data) => {\n          setPageLoading(false);\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (directorDetailsData?.data) {\n      const documentData =directorDetailsData?.data?.documentData?.length ? directorDetailsData?.data?.documentData?.map(\n        (document) => {\n          return {\n            _id: document?._id,\n            documentType: document?.name,\n            documentNo: document?.number,\n            file: document?.filePath,\n            isEditable:false\n          };\n        }\n      ) : [\n            {\n              _id: '',\n              documentType: \"\",\n              documentNo: \"\",\n              file: [],\n              isEditable: true,\n            },\n          ];\n     \n        setDocuments([...documentData]);\n\n      const financialInfo = directorDetailsData?.data?.financialInfo?.map(\n        (element) => {\n          return {\n            _id: element?._id,\n            name: element?.name,\n            year: element?.year,\n            file: element?.filePath,\n          };\n        }\n      );\n      directorDetailsData?.data?.financialInfo.length > 0 &&\n        setFinancialInfo([...financialInfo]);\n      setProfileImage(\n        `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${directorDetailsData?.data?.profileImage}`\n      );\n      setProfileImagePayload(directorDetailsData?.data?.profileImage);\n      // Main company details\n      setValue(\"PDCompanyId\", directorDetailsData?.data?.companyId);\n      // setValue(\"PDDirectorName\", directorDetailsData?.data?.fullName);\n      setValue(\"PDDirectorName\", directorDetailsData?.data?.fullName);\n      setValue(\n        \"PDTagLine\",\n        directorDetailsData?.data?.directorProfile?.tagline\n      );\n      setValue(\"PDPassword\", \"******\");\n      setValue(\"PDConfirmPassword\", \"******\");\n      setValue(\"PDPlan\", directorDetailsData?.data?.planId);\n      setValue(\n        \"PDorganizationtype\",\n        directorDetailsData?.data?.directorProfile?.companyType\n      );\n      setValue(\n        \"PDindustrytype\",\n        directorDetailsData?.data?.directorProfile?.industryType\n      );\n\n      // Address details\n      setValue(\n        \"PDAddress\",\n        directorDetailsData?.data?.addresses?.primary?.street\n      );\n      setValue(\n        \"PDCountry\",\n        directorDetailsData?.data?.addresses?.primary?.country\n      );\n      setValue(\"PDState\", directorDetailsData?.data?.addresses?.primary?.state);\n      setValue(\"PDCity\",  directorDetailsData?.data?.addresses?.primary?.city);\n      setValue(\n        \"PDPinCode\",\n        directorDetailsData?.data?.addresses?.primary?.pinCode\n      );\n\n      // Secondary address\n      setValue(\n        \"PDSecondaryAddress\",\n        directorDetailsData?.data?.addresses?.secondary?.street\n      );\n      setValue(\n        \"PDSecondaryCountry\",\n        directorDetailsData?.data?.addresses?.secondary?.country\n      );\n      setValue(\n        \"PDSecondaryState\",\n        directorDetailsData?.data?.addresses?.secondary?.state\n      );\n      setValue(\n        \"PDSecondaryCity\",\n        directorDetailsData?.data?.addresses?.secondary?.city\n      );\n      setValue(\n        \"PDSecondaryPinCode\",\n        directorDetailsData?.data?.addresses?.secondary?.pinCode\n      );\n\n      // setValue(\"PDStatus\", directorDetailsData?.data?.status);\n      // Contact details\n      setValue(\"PDEmail\", directorDetailsData?.data?.email);\n      setValue(\"PDMobileCode\", directorDetailsData?.data?.mobile?.code);\n      setValue(\"PDMobileNo\", directorDetailsData?.data?.mobile?.number);\n\n      // Identification details\n      setValue(\"PDaadharNumber\", directorDetailsData?.data?.aadharNumber);\n      setValue(\"PDgstnumber\", directorDetailsData?.data?.gstNumber);\n      setValue(\"PDpannumber\", directorDetailsData?.data?.panNumber);\n      setValue(\"PDfrn\", directorDetailsData?.data?.frn);\n      setValue(\"PDtannumber\", directorDetailsData?.data?.tanNumber);\n\n      // Social media links (if available)\n      if (directorDetailsData?.data?.socialLinks?.length > 0) {\n        setValue(\n          \"SMInstagram\",\n          directorDetailsData?.data?.socialLinks[0]?.link\n        );\n        setValue(\"SMTwitter\", directorDetailsData?.data?.socialLinks[1]?.link);\n        setValue(\"SMFacebook\", directorDetailsData?.data?.socialLinks[2]?.link);\n        setValue(\"SMWebsite\", directorDetailsData?.data?.socialLinks[3]?.link);\n      }\n    }\n  }, [directorDetailsData]);\n\n  // useEffect(() => {\n  //      setValue(\"PDState\", '');\n  //     setValue(\"PDCity\", '');\n  // }, [PrintCountry]);\n  // useEffect(() => {\n  // setValue(\"PDCity\", '');\n  // }, [PrintState]);\n\n  const handleAddMore = () => {\n    setDocuments([...documents, { id: Date.now() ,isEditable:true}]);\n  };\n\n  const handleProfileFileChange = async (event) => {\n    const file = event.target.files[0];\n  \n    if (!file) return; // Early return if no file is selected\n  \n    try {\n      // Dispatch the file upload function and wait for the response\n      const res = await dispatch(\n        fileUploadFunc({\n          filePath: file,\n          isVideo: false,\n          isMultiple: false,\n        })\n      );\n  \n      // If the file upload was successful and there is no error\n      if (!res.error) {\n        // Dispatch ProfileImageUpdate with the uploaded image path\n        const data = await dispatch(\n          ProfileImageUpdate({\n            \"_id\": directorId,\n            \"imagePath\": res?.payload?.data,\n          })\n        );\n  \n        // If ProfileImageUpdate is successful and there's no error\n        if (!data?.error) {\n          setProfileImagePayload(res?.payload?.data); // Update the state with the new image path\n        }\n      }\n    } catch (error) {\n      console.error(\"Error during file upload or profile image update:\", error);\n    }\n  \n    // Read the file to update the UI with the preview\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setProfileImage(reader.result); // Update the preview image\n    };\n    reader.readAsDataURL(file); // Read the file as a Data URL\n  };\n  \n\n  const handleDocsFileChange = (name, e, path) => {\n    const file = e.target.files[0];\n    dispatch(\n      fileUploadFunc({\n        filePath: file,\n        isVideo: false,\n        isMultiple: false,\n      })\n    ).then((res) => {\n      setValue(path, res?.payload?.data);\n    });\n    clearErrors(path);\n    clearErrors(path);\n    if (file) {\n      setFileName((prevState) => ({\n        ...prevState,\n        [name]: file.name,\n      }));\n      const url = URL.createObjectURL(file);\n      setFileUrl((prevState) => ({\n        ...prevState,\n        [name]: url,\n      }));\n    }\n  };\n\n  const handleToggle = (e) => {\n    setIsSameAsPermanent((prev) => !prev);\n    if (!isSameAsPermanent) {\n      setValue(\"PDSecondaryAddress\", getValues(\"PDAddress\"));\n      setValue(\"PDSecondaryCity\", getValues(\"PDCity\"));\n      setValue(\"PDSecondaryState\", getValues(\"PDState\"));\n      setValue(\"PDSecondaryCountry\", getValues(\"PDCountry\"));\n      setValue(\"PDSecondaryPinCode\", getValues(\"PDPinCode\"));\n    } else {\n      setValue(\"PDSecondaryAddress\", \"\");\n      setValue(\"PDSecondaryCity\", \"\");\n      setValue(\"PDSecondaryState\", \"\");\n      setValue(\"PDSecondaryCountry\", \"\");\n      setValue(\"PDSecondaryPinCode\", \"\");\n    }\n  };\n\n  const onSubmit = (data) => {\n    if (step === 1) {\n      const finalPayload = {\n        _id: directorId,\n        companyId: companyId,\n        firstName: \"\",\n        lastName: \"\",\n        profileImage: profileImagePayload ?? \"\",\n        fullName: data?.PDDirectorName ?? \"\",\n        email: data?.PDEmail ?? \"\",\n        userType: \"companyDirector\",\n        // password: data?.PDPassword,\n        planId: data?.PDPlan ?? null,\n        status: directorDetailsData?.data?.status ?? true,\n        mobile: {\n          number: data?.PDMobileNo ?? \"\",\n          code: data?.PDMobileCode ?? \"\",\n        },\n        directorProfile: {\n          tagline: data?.PDTagline ?? \"\",\n          companyType: data?.PDOrganizationType ?? \"\",\n          industryType: data?.PDIndustryType ?? \"\",\n          secondaryEmail: data?.PDEmail ?? \"\",\n          secondaryMobile: {\n            number: data?.PDMobileNo ?? \"\",\n            code: data?.PDMobileCode ?? \"\",\n          },\n        },\n        addresses: {\n          primary: {\n            street: data?.PDAddress ?? \"\",\n            city: data?.PDCity ?? \"\",\n            state: data?.PDState ?? \"\",\n            country: data?.PDCountry ?? \"\",\n            pinCode: data?.PDPinCode ?? \"\",\n          },\n          secondary: {\n            street: data?.PDSecondaryAddress ?? \"\",\n            city: data?.PDSecondaryCity ?? \"\",\n            state: data?.PDSecondaryState ?? \"\",\n            country: data?.PDSecondaryCountry ?? \"\",\n            pinCode: data?.PDSecondaryPinCode ?? \"\"\n          },\n        },\n      };\n      dispatch(updateDirector(finalPayload)).then((data) => {\n        if (!data.error) {\n          dispatch(\n            getDirectorDetails({\n              _id: directorId,\n            })\n          );\n        \n        }\n      });\n    }\n\n    if (step === 2) {\n      if (validateForm()) {\n        const documentPayload = documents.map((doc, index) => {\n          if (doc?._id) {\n            return {\n              userId: directorId,\n              _id: doc?._id,\n              name: doc?.documentType,\n              number: doc?.documentNo,\n              filePath: doc?.file,\n            };\n          } else {\n            return {\n              userId: directorId,\n              name: doc?.documentType,\n              number: doc?.documentNo,\n              filePath: doc?.file,\n            };\n          }\n        });\n\n        const finalPayload = {\n          documents: documentPayload,\n          type: \"documents\",\n        };\n        dispatch(updateDocument(finalPayload)).then((data) => {\n          if (!data.error) {\n            dispatch(\n              getDirectorDetails({\n                _id: directorId,\n              })\n            );\n           \n          }\n        });\n      }\n    }\n\n    if (step === 3) {\n      if (validateFDForm()) {\n        const financialInfoPayload = financialInfo.map((element, index) => {\n          if (element?._id) {\n            return {\n              userId: directorId,\n              _id: element?._id,\n              name: element?.name,\n              year: element?.year,\n              filePath: element?.file,\n            };\n          } else {\n            return {\n              userId: directorId,\n              name: element?.name,\n              year: element?.year,\n              filePath: element?.file,\n            };\n          }\n        });\n\n        const finalPayload = {\n          financialInfo: financialInfoPayload,\n          type: \"financial\",\n        };\n        dispatch(updateDocument(finalPayload)).then((data) => {\n          if (!data.error) {\n            dispatch(\n              getDirectorDetails({\n                _id: directorId,\n              })\n            );\n            newStep && setStep(newStep);\n            setnewStep(null)\n          }\n        });\n      }\n    }\n\n    if (step === 4) {\n      const finalPayload = {\n        _id: directorId,\n        firstName: \"\",\n        lastName: \"\",\n        profileImage: profileImagePayload ?? \"\",\n        fullName: data?.PDDirectorName ?? \"\",\n        email: data?.PDEmail ?? \"\",\n        userType: \"companyDirector\",\n        // password: data?.PDPassword,\n        planId: data?.PDPlan ?? null,\n        status: directorDetailsData?.data?.status,\n        mobile: {\n          number: data?.PDMobileNo ?? \"\",\n          code: data?.PDMobileCode ?? \"\",\n        },\n        directorProfile: {\n          tagline: data?.PDTagline ?? \"\",\n          companyType: data?.PDOrganizationType ?? \"\",\n          industryType: data?.PDIndustryType ?? \"\",\n          secondaryEmail: data?.PDEmail ?? \"\",\n          secondaryMobile: {\n            number: data?.PDMobileNo ?? \"\",\n            code: data?.PDMobileCode ?? \"\",\n          },\n        },\n        addresses: {\n          primary: {\n            street: data?.PDAddress ?? \"\",\n            city: data?.PDCity ?? \"\",\n            state: data?.PDState ?? \"\",\n            country: data?.PDCountry ?? \"\",\n            pinCode: data?.PDPinCode ?? \"\",\n          },\n          secondary: {\n            street: data?.PDSecondaryAddress ?? \"\",\n            city: data?.PDSecondaryCity ?? \"\",\n            state: data?.PDSecondaryState ?? \"\",\n            country: data?.PDSecondaryCountry ?? \"\",\n            pinCode: data?.PDSecondaryPinCode ?? \"\"\n          },\n        },\n        socialLinks: [\n          {\n            name: \"Instagram\",\n            link: data?.SMInstagram ?? \"\",\n          },\n          {\n            name: \"Twitter\",\n            link: data?.SMTwitter ?? \"\",\n          },\n          {\n            name: \"Facebook\",\n            link: data?.SMFacebook ?? \"\",\n          },\n          {\n            name: \"Website\",\n            link: data?.SMWebsite ?? \"\",\n          },\n        ],\n      };\n      dispatch(updateDirector(finalPayload)).then((data) => {\n        // if (!data.error) {\n        //   newStep && setStep(newStep);\n        //   setnewStep(null)\n        // }\n      });\n    }\n  };\n\n  const navTabClick = async (clickedStep) => {\n    setStep(step => clickedStep);\n\n  };\n\n  useEffect(() => {\n    if ( (step === 2 || step === 3)) {\n              dispatch(empDoctSearch({ isPagination:false, companyId:getUserIds()?.userCompanyId,}));\n    }\n  }, [dispatch,  step]);\n\n  const handleInputChange = (index, field, value) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index][field] = value;\n    setDocuments(updatedDocuments);\n    const newFormErrors = [...formErrors];\n    if (newFormErrors[index]?.[field]) {\n      delete newFormErrors[index][field];\n    }\n    setFormErrors(newFormErrors);\n  };\n\n  const handleFileChange = (index, file) => {\n    if (!file) return;\n\n    // Variable to track the newly selected file\n    let selectedFile = file;\n\n    // Create a preview of the file\n    const fileReader = new FileReader();\n    let filePreviewUrl = '';\n\n    fileReader.onload = (e) => {\n      filePreviewUrl = e.target.result;\n\n      // Show SweetAlert to confirm upload\n      Swal.fire({\n        title: 'Preview your file',\n        html: `\n          <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n            <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n            <img id=\"filePreview\" src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">\n            <br>\n            <button id=\"changeImageBtn\" style=\"  margin-top: 15px;\n  padding: 10px 18px;\n  cursor: pointer;\n  background-color:#074173;\n  color: white;\n  font-size: 16px;\n  font-weight: 600;\n  border: none;\n  border-radius: 8px;\n  transition: background-color 0.3s, transform 0.2s;\n  box-shadow: 0 4px 8px rgba(0, 123, 255, 0.2);\">Change Image</button>\n            <input type=\"file\" id=\"fileInput\" style=\"display: none;\" accept=\"image/*\">\n          </div>\n        `,\n        showCancelButton: true,\n        confirmButtonText: 'Confirm!',\n        cancelButtonText: 'Cancel',\n        didOpen: () => {\n          // Attach the change image functionality to the button\n          const changeImageBtn = document.getElementById('changeImageBtn');\n          const fileInput = document.getElementById('fileInput');\n          const filePreview = document.getElementById('filePreview');\n\n          changeImageBtn.addEventListener('click', () => {\n            fileInput.click(); // Trigger file input click\n          });\n\n          // When a new file is selected\n          fileInput.addEventListener('change', (event) => {\n            const newFile = event.target.files[0];\n            if (newFile) {\n              selectedFile = newFile; // Update the selected file\n              const newFileReader = new FileReader();\n              newFileReader.onload = (e) => {\n                filePreview.src = e.target.result; // Update preview\n              };\n              newFileReader.readAsDataURL(newFile);\n            }\n          });\n        }\n      }).then((result) => {\n        if (result.isConfirmed) {\n          // Use the updated selectedFile (which could be the original or changed file)\n          dispatch(\n            fileUploadFunc({\n              filePath: selectedFile,\n              isVideo: false,\n              isMultiple: false,\n            })\n          ).then((data) => {\n            if (!data.error) {\n              const updatedDocuments = [...documents];\n              updatedDocuments[index].file = [data?.payload?.data];\n              setDocuments(updatedDocuments);\n              const newFormErrors = [...formErrors];\n              if (newFormErrors[index]?.file) {\n                delete newFormErrors[index].file;\n              }\n              setFormErrors(newFormErrors);\n            }\n          }).then(()=>{\n            if(documentRef.current[index]) documentRef.current[index].value =''\n           \n          })\n        } else {\n          // Handle the cancel case\n \n        }\n      });\n    };\n\n    // Read the file to generate the preview\n    fileReader.readAsDataURL(file);\n\n\n\n\n\n\n\n  };\n\n  const handleDelete = (document, index) => {\n    if (document?._id) {\n      dispatch(deleteDocument({ _id: document?._id })).then((data) => {\n        if (!data.error) {\n          setDocuments((prevDocuments) =>\n            prevDocuments.filter((_, index2) => index2 !== index)\n          );\n        }\n      });\n    } else {\n      setDocuments((prevDocuments) =>\n        prevDocuments.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n  const handleFdDelete = (document, index) => {\n    if (document?._id) {\n      dispatch(deleteDocument({ _id: document?._id })).then((data) => {\n        if (!data.error) {\n          setFinancialInfo((prevDocuments) =>\n            prevDocuments.filter((_, index2) => index2 !== index)\n          );\n          dispatch(\n            getDirectorDetails({\n              _id: directorId,\n            })\n          );\n        }\n      });\n    } else {\n      setFinancialInfo((prevDocuments) =>\n        prevDocuments.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n\n  const validateForm = () => {\n    let errors = [];\n    documents.forEach((document, index) => {\n      let error = {};\n      if (!document.documentType) {\n        error.documentType = \"Document Type is required.\";\n      }\n      if (!document.documentNo) {\n        error.documentNo = \"Document No is required.\";\n      }\n      if (!document.file || document.file.length === 0) {\n        error.file = \"Document file is required.\";\n      }\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n    setFormErrors(errors);\n    return errors.every((error) => Object.keys(error).length === 0); // returns true if no errors\n  };\n\n  const handleInputFDChange = (index, field, value) => {\n    const updatedFinancialInfo = [...financialInfo];\n    updatedFinancialInfo[index][field] = value;\n    setFinancialInfo(updatedFinancialInfo);\n    const newFormErrors = [...formErrors];\n    if (newFormErrors[index]?.[field]) {\n      delete newFormErrors[index][field];\n    }\n    setFormErrors(newFormErrors);\n  };\n\n  const handleFileFDChange = (index, file) => {\n    dispatch(\n      fileUploadFunc({\n        filePath: file,\n        isVideo: false,\n        isMultiple: false,\n      })\n    ).then((data) => {\n      if (!data.error) {\n        const updatedFinancialInfo = [...financialInfo];\n        updatedFinancialInfo[index].file = [data?.payload?.data];\n        setFinancialInfo(updatedFinancialInfo);\n        const newFormErrors = [...formErrors];\n        if (newFormErrors[index]?.file) {\n          delete newFormErrors[index].file;\n        }\n        setFormErrors(newFormErrors);\n      }\n    });\n  };\n\n  const validateFDForm = () => {\n    let errors = [];\n    financialInfo.forEach((element, index) => {\n      let error = {};\n      if (!element.name) {\n        error.name = \"Name is required.\";\n      }\n      if (!element.year) {\n        error.year = \"Year is required.\";\n      }\n      if (!element.file || element.file.length === 0) {\n        error.file = \"Document file is required.\";\n      }\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n\n\n    setFormErrors(errors);\n    return errors.every((error) => Object.keys(error).length === 0); // returns true if no errors\n  };\n\n  const handleFDAddMore = () => {\n    setFinancialInfo([...financialInfo, { id: Date.now() }]);\n  };\n\n\n\n\n\n\n  return (\n    <GlobalLayout>\n      {!pageLoading ? (\n        <div className=\"grid grid-cols-12 gap-2\">\n          <div className=\" md:col-span-3 col-span-12 w-full h-auto rounded-lg  \">\n            <div className=\"shadow bg-white rounded-xl py-2\">\n              <div\n                            className=\"relative w-[50px] h-[50px] mx-auto rounded-full border-2 border-slate-600 mt-3 flex items-center justify-center\"\n                          >\n                            <div\n                              className=\"w-full h-full rounded-full overflow-hidden bg-gray-200 flex items-center justify-center\"\n                              style={{\n                                backgroundImage: `url(${profileImage || \"\"})`,\n                                backgroundSize: \"cover\",\n                                backgroundPosition: \"center\",\n                              }}\n                            >\n                              {!profileImage && (\n                                <FaUserAlt className=\"text-slate-500 w-[30px] h-[25px] cursor-pointer\" />\n                              )}\n                            </div>\n              \n                            <div className=\"absolute bottom-0 right-0 bg-white p-[2px] rounded-full\">\n                              <FaCamera className=\"text-header w-[16px] h-[16px] \" />\n                            </div>\n              \n                            <input\n                              type=\"file\"\n                              accept=\"image/*\"\n                              onChange={handleProfileFileChange}\n                              className=\"absolute inset-0 opacity-0 cursor-pointer\"\n                            />\n                          </div>\n              <div className=\"text-base font-medium overflow-auto mx-2 text-center mt-2 text-header capitalize\">\n                {PrintDirectorName ? PrintDirectorName : \"Director Name\"}\n              </div>\n              <div className=\"border mx-2 px-2 my-2 py-3 rounded-lg \">\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>Address</label>\n                  <div\n                    className={`mt-1 block w-full overflow-auto px-2 py-[9px] shadow-sm rounded-lg text-xs  bg-[#f4f6f9] focus:outline-none cursor-default min-h-8`}\n                  >\n                    {PrintAddress && (\n                      <>\n                        {PrintAddress}, {\" \"}\n                      </>\n                    )}\n                    {PrintCity && (\n                      <>\n                        {PrintCity} ,{\" \"}\n                      </>\n                    )}\n                    {PrintState && (\n                      <>\n                        {PrintState} ,{\" \"}\n                      </>\n                    )}\n                    {PrintCountry && (\n                      <>\n                        {PrintCountry} ,{\" \"}\n                      </>\n                    )}\n                    {PrintPincode && (\n                      <>\n                        {PrintPincode}\n                      </>\n                    )}\n                  </div>\n                </div>\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>Mail</label>\n                  <div\n                    className={`mt-1 block w-full overflow-auto px-2 py-[9px] shadow-sm rounded-lg text-xs  bg-[#f4f6f9] focus:outline-none cursor-default min-h-8`}\n                  >\n                    {PrintMail}\n                  </div>\n                </div>\n\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>\n                    Phone number\n                  </label>\n                  <div className=\"flex gap-2\">\n                    <div\n                      className={`mt-1 block overflow-auto   py-[9px] shadow-sm rounded-lg text-xs  bg-[#f4f6f9] focus:outline-none cursor-default min-h-8 min-w-6`}\n                    >\n                      {PrintMobileCode}\n                    </div>\n                    <div\n                      className={`mt-1 block overflow-auto w-full px-2 py-[9px] shadow-sm rounded-lg text-xs  bg-[#f4f6f9] focus:outline-none cursor-default min-h-8`}\n                    >\n                      {PrintMobile}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {/* <div className=\"flex justify-center items-center text-[25px] text-header py-2 gap-1\">\n                <TbWorld\n                  onClick={() => {\n                    if (PrintWebsite) {\n                      window.open(PrintWebsite, \"_blank\");\n                    }\n                  }}\n                />\n                <AiFillInstagram\n                  onClick={() => {\n                    if (PrintInstagram) {\n                      window.open(PrintInstagram, \"_blank\");\n                    }\n                  }}\n                />\n                <IoLogoFacebook\n                  onClick={() => {\n                    if (PrintFacebook) {\n                      window.open(PrintFacebook, \"_blank\");\n                    }\n                  }}\n                />\n                <FaSquareXTwitter\n                  onClick={() => {\n                    if (PrintTwitter) {\n                      window.open(PrintTwitter, \"_blank\");\n                    }\n                  }}\n                />\n              </div> */}\n            </div>\n          </div>\n          <form\n            onSubmit={handleSubmit(onSubmit)}\n            className=\"space-y-2 md:col-span-9 col-span-12\"\n          >\n            <div className=\"flex bg-header justify-start items-center rounded-lg gap-5 px-3 pt-2 overflow-x-auto overflow-y-hidden text-nowrap\">\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(1)}\n                className={`flex relative flex-col items-center  pb-2 ${step === 1 ? \"text-white ]\" : \"text-gray-400\"\n                  } cursor-pointer`}\n              >\n                {step === 1 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold text-nowrap\">\n                  Primary Details\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(2)}\n                className={`flex flex-col items-center relative pb-2 ${step === 2 ? \"text-white ]\" : \"text-gray-400\"\n                  } cursor-pointer`}\n              >\n                {step === 2 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">Documents</span>\n              </button>\n              {/* <button\n                type=\"button\"\n                onClick={() => navTabClick(3)}\n                className={`flex flex-col items-center relative pb-2 ${step === 3 ? \"text-white ]\" : \"text-gray-400\"\n                  } cursor-pointer`}\n              >\n                {step === 3 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">Financial Details</span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(4)}\n                className={`flex flex-col items-center relative pb-2 ${step === 4 ? \"text-white ]\" : \"text-gray-400\"\n                  } cursor-pointer`}\n              >\n                {step === 4 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">Social Media</span>\n              </button> */}\n            </div>\n\n            {step === 1 && (\n              <div>\n                <div className=\" \">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3\">\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Owner Name <span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        {...register(\"PDDirectorName\", {\n                          required: \"Owner Name is required\",\n                        })}\n                        className={`placeholder: ${inputClassName} ${errors.PDDirectorName\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Enter Owner Name\"\n                      />\n                      {errors.PDDirectorName && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDDirectorName.message}\n                        </p>\n                      )}\n                    </div>\n\n\n                    {/* {userType === \"admin\" && <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Company<span className=\"text-red-600\">*</span>\n                      </label>\n                      <select\n                        disabled\n                        {...register(\"PDCompanyId\", {\n                          required: \"Company is required\",\n                        })}\n                        className={`${inputDisabledClassName}  ${errors.PDCompanyId\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          } `}\n                      // onFocus={handleFocusCompany}\n                      >\n                        {!companyList?.length ? (\n                          <option value={directorDetailsData?.data?.companyData?._id}>\n                            {directorDetailsData?.data?.companyData?.fullName || \"Loading...\"}\n                          </option>\n                        ) : (\n                          <>\n                            <option value=\"\">Select Company</option>\n                            {companyList.map((type) => (\n                              <option key={type?._id} value={type?._id}>\n                                {type?.fullName}\n                              </option>\n                            ))}\n                          </>\n                        )}\n                      </select>\n                      {errors.PDCompanyId && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDCompanyId.message}\n                        </p>\n                      )}\n                    </div>} */}\n\n\n                    {/* <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Status<span className=\"text-red-600\">*</span>\n                      </label>\n                      <select\n                        {...register(\"PDStatus\")}\n                        className={` ${inputClassName} ${errors.PDStatus ? \"border-[1px] \" : \"border-gray-300\"\n                          }`}\n                      >\n                        <option value=\"\">Select Status</option>\n                        <option value={true}>Active</option>\n                        <option value={false}>Inactive</option>\n                      </select>\n                      {errors.PDStatus && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDStatus.message}\n                        </p>\n                      )}\n                    </div> */}\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3 md:mt-4\">\n                    <div className=\"col-span-2\">\n                      <label className={`${inputLabelClassName}`}>\n                        Primary Address<span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        {...register(\"PDAddress\", {\n                          required: \"Address  is required\",\n                        })}\n                        className={`${inputClassName} ${errors.PDAddress\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Enter Address \"\n                      />\n                      {errors.PDAddress && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDAddress.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 md:gap-8 gap-3 md:my-1 px-3\">\n                    <div>\n                      <div className={`${inputLabelClassName}`}>\n                        Country <span className=\"text-red-600\">*</span>\n                      </div>\n                      <Controller\n                        control={control}\n                        name=\"PDCountry\"\n                        rules={{ required: \"Country is required\" }}\n                        render={({ field }) => (\n                          <AutoComplete\n                            className=\"w-full\"\n                            {...field}\n                            onChange={(value) => {\n                              // Directly handle country change by using setValue from React Hook Form\n                              field.onChange(value); // Update the value in the form control\n                            }}\n                            options={countryListData?.docs?.map((type) => ({\n                              value: type?.name,\n                            }))}\n                          >\n                            <input\n                              placeholder=\"Enter Country\"\n\n                              onFocus={() => {\n                                dispatch(\n                                  countrySearch({\n                                    isPagination: false,\n                                    text: \"\",\n                                    sort: true,\n                                    status: true,\n                                  })\n                                );\n                              }}\n                              className={`${inputClassName} ${errors.PDCountry\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                            />\n                          </AutoComplete>\n                        )}\n                      />\n                      {errors.PDCountry && (\n                        <p className={`${inputerrorClassNameAutoComplete}`}>\n                          {errors.PDCountry.message}\n                        </p>\n                      )}\n                    </div>\n                    <div>\n                      <div className={`${inputLabelClassName}`}>\n                        State <span className=\"text-red-600\">*</span>\n                      </div>\n                      <Controller\n                        control={control}\n                        name=\"PDState\"\n                        rules={{ required: \"State is required\" }}\n                        render={({ field }) => (\n                          <AutoComplete\n                            className=\"w-full\"\n                            {...field}\n                            onChange={(value) => field.onChange(value)} // Directly handle state change using React Hook Form's field.onChange\n                            options={stateListData?.docs?.map((type) => ({\n                              value: type?.name,\n                            }))}\n                          >\n                            <input\n                              placeholder=\"Enter State\"\n                              onFocus={() => {\n                                dispatch(\n                                  stateSearch({\n                                    isPagination: false,\n                                    text: \"\",\n                                    countryName: PrintCountry,\n                                    sort: true,\n                                    status: true,\n                                  })\n                                );\n                              }}\n                              className={`${inputClassName} ${errors.PDState\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                            />\n                          </AutoComplete>\n                        )}\n                      />\n                      {errors.PDState && (\n                        <p className={`${inputerrorClassNameAutoComplete}`}>\n                          {errors.PDState.message}\n                        </p>\n                      )}\n                    </div>\n\n                    {/* City Field */}\n                    <div>\n                      <div className={`${inputLabelClassName}`}>\n                        City <span className=\"text-red-600\">*</span>\n                      </div>\n                      <Controller\n                        control={control}\n                        name=\"PDCity\"\n                        rules={{ required: \"City is required\" }}\n                        render={({ field }) => (\n                          <AutoComplete\n                            className=\"w-full\"\n                            {...field}\n                            onChange={(value) => field.onChange(value)} // Directly handle city change using React Hook Form's field.onChange\n                            options={cityListData?.docs?.map((type) => ({\n                              value: type?.name,\n                            }))}\n                          >\n                            <input\n                              onFocus={() => {\n                                dispatch(\n                                  citySearch({\n                                    isPagination: false,\n                                    text: \"\",\n                                    sort: true,\n                                    status: true,\n                                    \"stateName\": PrintState\n\n                                  })\n                                );\n                              }}\n                              placeholder=\"Enter City\"\n                              className={`${inputClassName} ${errors.PDCity\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                            />\n                          </AutoComplete>\n                        )}\n                      />\n                      {errors.PDCity && (\n                        <p className={`${inputerrorClassNameAutoComplete}`}>\n                          {errors.PDCity.message}\n                        </p>\n                      )}\n                    </div>\n\n                    {/* Pin Code Field */}\n                    <div>\n                      <label className={`${inputLabelClassName}`}>\n                        Pin Code <span className=\"text-red-600\">*</span>\n                      </label>\n                      <Controller\n                        control={control}\n                        name=\"PDPinCode\"\n                        rules={{ required: \"Pin Code is required\" }}\n                        render={({ field }) => (\n                          <input\n                            {...field}\n                            type=\"number\"\n                            placeholder=\"Enter Pin Code\"\n                            maxLength={6}\n                            onInput={(e) => {\n                              if (e.target.value.length > 6) {\n                                e.target.value = e.target.value.slice(0, 6);\n                              }\n                            }}\n                            className={`${inputClassName} ${errors.PDPinCode\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                              }`}\n                          />\n                        )}\n                      />\n                      {errors.PDPinCode && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDPinCode.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3 md:mt-4\">\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Email<span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        {...register(\"PDEmail\", {\n                          required: \"Email is required\",\n                          pattern: {\n                            value:\n                              /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                            message: \"Please enter a valid email address\",\n                          },\n                        })}\n                        className={` ${inputClassName} ${errors.PDEmail ? \"border-[1px] \" : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Enter Email\"\n                      />\n                      {errors.PDEmail && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDEmail.message}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"flex gap-3\">\n                      <div className=\"w-[150px]\">\n                        <label className={`${inputLabelClassName}`}>\n                          code<span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                          control={control}\n                          name=\"PDMobileCode\"\n                          rules={{ required: \"code is required\" }}\n                          render={({ field }) => (\n                            <CustomMobileCodePicker\n                            field={field}\n                              errors={errors} \n                            />\n                          )}\n                        />\n\n                        {/* <select\n                            {...register(\"PDMobileCode\", {\n                              required: \"MobileCode is required\",\n                            })}\n                            onFocus={() => {\n                              dispatch(\n                                countrySearch({\n                                  isPagination: false,\n                                  text: \"\",\n                                  sort: true,\n                                  status: true,\n                                })\n                              );\n                            }}\n                            className={` ${inputClassName} ${\n                              errors.PDMobileCode\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                            }`}\n                          >\n                            <option className=\"\" value=\"\">\n                              Select Mobile Code\n                            </option>\n                            {countryListData?.docs?.map((type) => (\n                              <option value={type?.countryMobileNumberCode}>\n                                {type?.countryMobileNumberCode}\n                              </option>\n                            ))}\n                          </select> */}\n                        {errors[`PDMobileCode`] && (\n                          <p className={`${inputerrorClassNameAutoComplete}`}>\n                            {errors[`PDMobileCode`].message}\n                          </p>\n                        )}\n                      </div>\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Mobile No<span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"number\"\n                          {...register(`PDMobileNo`, {\n                            required: \"Mobile No is required\",\n                            minLength: {\n                              value: 10,\n                              message: \"Must be exactly 10 digits\",\n                            },\n                            maxLength: {\n                              value: 10,\n                              message: \"Must be exactly 10 digits\",\n                            },\n                          })}\n                          className={` ${inputClassName} ${errors[`PDMobileNo`]\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                          placeholder=\"Enter Mobile No\"\n                          maxLength={10}\n                          onInput={(e) => {\n                            if (e.target.value.length > 10) {\n                              e.target.value = e.target.value.slice(0, 10);\n                            }\n                          }}\n                        />\n                        {errors[`PDMobileNo`] && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors[`PDMobileNo`].message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button type=\"Submit\" className={`${formButtonClassName}`}>\n                    Submit Details\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {step === 2 && (\n              <div>\n                <div className=\"rounded-md\">\n                  {documents.map((document, index) => (\n                     <div className=\"border border-gray-300 rounded-md my-2\" key={index}>\n                     <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n                       <div className=\"px-3 py-2 text-white font-semibold\">  Document {index + 1}</div>\n                       <div className=\"flex  justify-end items-end\">\n                                               \n                                              <button\n                                                type=\"button\"\n                                                onClick={() => handleDelete(document, index)}\n                                                className=\"text-red-600 hover:text-red-800\"\n                                              >\n                                                <AiFillDelete size={20} className=\"m-2\" />\n                                              </button>\n                       \n                                             <button\n                                                                       type=\"button\"\n                                                                       onClick={() => handleEditButton(index)}\n                                                                       \n                                                                       className='text-white'\n                                                                     >\n                                                                       {document?.isEditable ? <TbEditOff  size={20} className=\"m-2\"/> : <LiaEditSolid  size={20} className=\"m-2\" /> }\n                                                                     </button>\n                                              </div>\n                     </div>\n                    <div\n                      key={index}\n                      className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\"\n                    >\n                      <div>\n                          <label className={`${inputLabelClassName}`}>\n                            Document Type <span className=\"text-red-600\">*</span>\n                          </label>\n\n                          <Select\n                            value={document.documentType}\n                            disabled={!document?.isEditable}  \n                            className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n                            onChange={(e) =>\n                              handleInputChange(\n                                index,\n                                \"documentType\",\n                                e\n                              )\n                            }\n                            placeholder=\"Select Document Type\"\n                            showSearch\n\n                          >\n                            <Select.Option value=\"\">Select Document</Select.Option>\n                            {employeeDocumentList\n                              ?.filter((data) => data?.type === \"General\")\n                              \n                              .map((type) => (\n                                <Select.Option key={type.name} value={type.name}>\n                                  {type.name}\n                                </Select.Option>\n                              ))}\n\n                          </Select>\n\n                          {formErrors[index]?.documentType && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrors[index].documentType}\n                            </p>\n                          )}\n                        </div>\n                      <div>\n                        <label className={`${inputLabelClassName}`}>\n                          Document No <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          disabled={!document?.isEditable}  \n                          value={document.documentNo}\n                          onChange={(e) =>\n                            handleInputChange(\n                              index,\n                              \"documentNo\",\n                              e.target.value\n                            )\n                          }\n                          className={`${document?.isEditable ? inputClassName :inputDisabledClassName} ${formErrors[index]?.documentNo\n                            ? \"border-[1px] \"\n                            : \"\"\n                            }`}\n                          placeholder=\"Enter Document No\"\n                        />\n                        {formErrors[index]?.documentNo && (\n                          <p className=\"text-red-600 text-sm\">\n                            {formErrors[index].documentNo}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"flex items-center gap-2\">\n                        <div>\n                          <label className={`${inputLabelClassName}`}>\n                            Upload Document<span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"file\"\n                            disabled={!document?.isEditable}  \n                            ref={(e)=>(documentRef.current[index]=e)}\n                            id={`documentUpload${index}`}\n                            className=\"hidden\"\n                            onChange={(e) =>\n                              handleFileChange(index, e.target.files[0])\n                            }\n                          />\n                          <br />\n                          <label\n                            htmlFor={`documentUpload${index}`}\n                            className={`${document?.isEditable ? 'bg-header' :'bg-gray-400'} text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer`}\n                          >\n                            Upload\n                          </label>\n                        </div>\n                        {document?.file?.length > 0\n                    ? document.file.map((file, fileIndex) => (\n                      <div key={fileIndex} className=\"relative\">\n                        <CommonImageViewer\n                          // key={index}\n                          src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                          alt={`Uploaded ${fileIndex + 1}`}\n\n                        />\n                        <button\n                        disabled={!document?.isEditable}  \n                          className={`absolute -top-1 -right-2 ${document?.isEditable ?'bg-red-600' :'bg-gray-400'} text-white rounded-full w-5 h-5 flex items-center justify-center text-xs`}\n                          onClick={() => handleDeleteDocImage(index, file)}\n                        >\n                          ✕\n                        </button>\n                      </div>\n\n                    ))\n                    : null}\n                        {formErrors[index]?.file && (\n                          <p className=\"text-red-600 text-sm\">\n                            {formErrors[index].file}\n                          </p>\n                        )}\n                      </div>\n\n                      {/* <div className=\"px-3 gap-4 items-end mb-3\">\n                        <button\n                          type=\"button\"\n                          onClick={() => handleDelete(document, index)}\n                          className=\"text-gray-600 hover:text-gray-800 flex items-center justify-center border-2 border-gray-500 p-1 rounded-lg\"\n                        >\n                          <i className=\"fas fa-trash-alt flex items-center justify-center w-[25px] h-[25px]\"></i>\n                        </button>\n                      </div> */}\n                    </div>\n                    </div>\n                  ))}\n                  <div className=\"flex justify-between px-3 pb-2\">\n                    <button\n                      type=\"button\"\n                      onClick={handleAddMore}\n                      className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n                    >\n                      Add More\n                    </button>\n                  </div>\n                </div>\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button\n                    disabled={(loadingUpdateFile || directorLoading)}\n                    type=\"Submit\"\n                    className={`${formButtonClassName}`}\n                  >\n                    {(loadingUpdateFile || directorLoading) ?<div className='text-center flex justify-center items-center'>\n     <Spin />\n    </div> : \"Submit Details\"}\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {/* {step === 3 && (\n              <div>\n                <div className=\"rounded-md\">\n                  {financialInfo.map((element, index) => (\n                    <div\n                      key={index}\n                      className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\"\n                    >\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Financial Type <span className=\"text-red-600\">*</span>\n                        </label>\n                        <select\n                          value={element.name}\n                          onChange={(e) =>\n                            handleInputFDChange(index, \"name\", e.target.value)\n                          }\n                          className={`${inputClassName} ${formErrors[index]?.name ? \"border-[1px] \" : \"\"\n                            }`}\n                        >\n                          <option value=\"\">Select Financial Name</option>\n                          {employeeDocumentList\n                            ?.filter((data) => data?.type === \"Financial\")\n                            ?.map((type) => (\n                              <option key={type.name} value={type.name}>\n                                {type.name}\n                              </option>\n                            ))}\n                        </select>\n                        {formErrors[index]?.name && (\n                          <p className=\"text-red-600 text-sm\">\n                            {formErrors[index].name}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Year <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"number\"\n                          value={element.year}\n                          onChange={(e) =>\n                            handleInputFDChange(index, \"year\", e.target.value)\n                          }\n                          className={`${inputClassName} ${formErrors[index]?.year ? \"border-[1px] \" : \"\"\n                            }`}\n                          placeholder=\"Enter year\"\n                        />\n                        {formErrors[index]?.year && (\n                          <p className=\"text-red-600 text-sm\">\n                            {formErrors[index].year}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"flex items-center gap-2\">\n                        <div>\n                          <label className={`${inputLabelClassName}`}>\n                            Upload <span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"file\"\n                            id={`documentUpload${index}`}\n                            className=\"hidden\"\n                            onChange={(e) =>\n                              handleFileFDChange(index, e.target.files[0])\n                            }\n                          />\n                          <br />\n                          <label\n                            htmlFor={`documentUpload${index}`}\n                            className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                          >\n                            Upload\n                          </label>\n                        </div>\n                        {element?.file?.length > 0\n                          ? element.file.map((file, index) => (\n                            <img\n                              key={index}\n                              src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                              alt={`Uploaded ${index + 1}`}\n                              className=\"w-20 h-20 shadow rounded-sm\"\n                            />\n                          ))\n                          : null}\n                        {formErrors[index]?.file && (\n                          <p className=\"text-red-600 text-sm\">\n                            {formErrors[index].file}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"px-3 gap-4 items-end mb-3\">\n                        <button\n                          type=\"button\"\n                          onClick={() => handleFdDelete(element, index)}\n                          className=\"text-gray-600 hover:text-gray-800 flex items-center justify-center border-2 border-gray-500 p-1 rounded-lg\"\n                        >\n                          <i className=\"fas fa-trash-alt flex items-center justify-center w-[25px] h-[25px]\"></i>\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                  <div className=\"flex justify-between px-3 pb-2\">\n                    <button\n                      type=\"button\"\n                      onClick={handleFDAddMore}\n                      className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n                    >\n                      Add More\n                    </button>\n                  </div>\n                </div>\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button\n                    disabled={loadingUpdateFile}\n                    type=\"Submit\"\n                    className={`${formButtonClassName}`}\n                  >\n                    {loadingUpdateFile ? \"Submitting ...\" : \"Submit Details\"}\n                  </button>\n                </div>\n              </div>\n            )} */}\n\n            {/* {step === 4 && (\n              <div className=\"w-full\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3\">\n                \n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>Instagram Link</label>\n                    <input\n                      type=\"url\"\n                      {...register(\"SMInstagram\")}\n                      className={` ${inputClassName} ${errors.SMInstagram\n                        ? \"border-[1px] \"\n                        : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Enter Instagram Link\"\n                    />\n                    {errors.SMInstagram && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.SMInstagram.message}\n                      </p>\n                    )}\n                  </div>\n\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>Twitter Link</label>\n                    <input\n                      type=\"url\"\n                      {...register(\"SMTwitter\")}\n                      className={` ${inputClassName} ${errors.SMTwitter ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Enter Twitter Link\"\n                    />\n                    {errors.SMTwitter && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.SMTwitter.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3\">\n             \n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>Facebook Link</label>\n                    <input\n                      type=\"url\"\n                      {...register(\"SMFacebook\")}\n                      className={` ${inputClassName} ${errors.SMFacebook ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Enter Facebook Link\"\n                    />\n                    {errors.SMFacebook && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.SMFacebook.message}\n                      </p>\n                    )}\n                  </div>\n\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>Website Link</label>\n                    <input\n                      type=\"url\"\n                      {...register(\"SMWebsite\")}\n                      className={` ${inputClassName} ${errors.SMWebsite ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Enter Website Link\"\n                    />\n                    {errors.SMWebsite && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.SMWebsite.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button type=\"submit\" className={`${formButtonClassName}`}>\n                    Submit\n                  </button>\n                </div>\n              </div>\n            )} */}\n          </form>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </GlobalLayout>\n  );\n};\n\nexport default EditDirector;\n","import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n"],"names":["EditDirector","directorIdEnc","useParams","directorId","decrypt","documentRef","useRef","editPageLoader","setEditPageLoader","useState","step","setStep","useNavigate","newStep","setnewStep","pageLoading","setPageLoading","isSameAsPermanent","setIsSameAsPermanent","banks","setBanks","documents","setDocuments","id","documentType","documentNo","file","isEditable","financialInfo","setFinancialInfo","name","year","formErrors","setFormErrors","profileImage","setProfileImage","profileImagePayload","setProfileImagePayload","isHovering","setIsHovering","fileName","setFileName","fileUrl","setFileUrl","uploadedFilePath","setUploadedFilePath","localCountryList","setLocalCountryList","countryListData","useSelector","state","country","stateListData","states","cityListData","city","employeeDocumentList","employeeDocument","companyList","company","directorDetailsData","director","loading","directorLoading","loadingUpdateFile","fileUpload","userCompanyId","userDirectorId","userBranchId","userEmployeId","userDepartmentId","userDesignationId","userType","getUserIds","register","handleSubmit","setValue","getValues","unregister","setError","control","clearErrors","formState","errors","useForm","dispatch","useDispatch","PrintAddress","useWatch","defaultValue","PrintCity","PrintState","PrintCountry","PrintPincode","PrintMail","PrintMobile","PrintMobileCode","PrintDirectorName","companyId","useEffect","length","getLocationDataByPincode","then","data","catch","error","console","async","countrySearch","text","sort","status","isPagination","reqData","_id","getDirectorDetails","fetchData","_directorDetailsData$","_directorDetailsData$2","_directorDetailsData$3","_directorDetailsData$4","_directorDetailsData$5","_directorDetailsData$6","_directorDetailsData$7","_directorDetailsData$8","_directorDetailsData$9","_directorDetailsData$0","_directorDetailsData$1","_directorDetailsData$10","_directorDetailsData$11","_directorDetailsData$12","_directorDetailsData$13","_directorDetailsData$14","_directorDetailsData$15","_directorDetailsData$16","_directorDetailsData$17","_directorDetailsData$18","_directorDetailsData$19","_directorDetailsData$20","_directorDetailsData$21","_directorDetailsData$22","_directorDetailsData$23","_directorDetailsData$24","_directorDetailsData$25","_directorDetailsData$26","_directorDetailsData$27","_directorDetailsData$28","_directorDetailsData$29","_directorDetailsData$30","_directorDetailsData$31","_directorDetailsData$32","_directorDetailsData$33","_directorDetailsData$34","_directorDetailsData$35","_directorDetailsData$36","_directorDetailsData$37","_directorDetailsData$38","_directorDetailsData$39","_directorDetailsData$40","_directorDetailsData$41","_directorDetailsData$42","_directorDetailsData$43","_directorDetailsData$44","_directorDetailsData$45","_directorDetailsData$46","_directorDetailsData$47","_directorDetailsData$48","_directorDetailsData$49","_directorDetailsData$50","_directorDetailsData$51","_directorDetailsData$52","_directorDetailsData$53","_directorDetailsData$54","_directorDetailsData$55","_directorDetailsData$56","_directorDetailsData$57","_directorDetailsData$58","documentData","map","document","number","filePath","element","_directorDetailsData$59","_directorDetailsData$60","_directorDetailsData$61","_directorDetailsData$62","_directorDetailsData$63","_directorDetailsData$64","_directorDetailsData$65","_directorDetailsData$66","concat","process","fullName","directorProfile","tagline","planId","companyType","industryType","addresses","primary","street","pinCode","secondary","email","mobile","code","aadharNumber","gstNumber","panNumber","frn","tanNumber","socialLinks","link","navTabClick","clickedStep","_getUserIds","empDoctSearch","handleInputChange","index","field","value","_newFormErrors$index","updatedDocuments","newFormErrors","handleFileChange","selectedFile","fileReader","FileReader","filePreviewUrl","onload","e","target","result","Swal","title","html","showCancelButton","confirmButtonText","cancelButtonText","didOpen","changeImageBtn","getElementById","fileInput","filePreview","addEventListener","click","event","newFile","files","newFileReader","src","readAsDataURL","isConfirmed","fileUploadFunc","isVideo","isMultiple","_data$payload","_newFormErrors$index2","payload","current","validateForm","forEach","Object","keys","every","validateFDForm","_jsx","GlobalLayout","children","Loader","_jsxs","className","style","backgroundImage","backgroundSize","backgroundPosition","FaUserAlt","FaCamera","type","accept","onChange","res","_res$payload","ProfileImageUpdate","_res$payload2","reader","onloadend","inputLabelClassName","_Fragment","onSubmit","_data$PDDirectorName","_data$PDEmail","_data$PDPlan","_directorDetailsData$67","_directorDetailsData$68","_data$PDMobileNo","_data$PDMobileCode","_data$PDTagline","_data$PDOrganizationT","_data$PDIndustryType","_data$PDEmail2","_data$PDMobileNo2","_data$PDMobileCode2","_data$PDAddress","_data$PDCity","_data$PDState","_data$PDCountry","_data$PDPinCode","_data$PDSecondaryAddr","_data$PDSecondaryCity","_data$PDSecondaryStat","_data$PDSecondaryCoun","_data$PDSecondaryPinC","finalPayload","firstName","lastName","PDDirectorName","PDEmail","PDPlan","PDMobileNo","PDMobileCode","PDTagline","PDOrganizationType","PDIndustryType","secondaryEmail","secondaryMobile","PDAddress","PDCity","PDState","PDCountry","PDPinCode","PDSecondaryAddress","PDSecondaryCity","PDSecondaryState","PDSecondaryCountry","PDSecondaryPinCode","updateDirector","doc","userId","updateDocument","_data$PDDirectorName2","_data$PDEmail3","_data$PDPlan2","_directorDetailsData$69","_data$PDMobileNo3","_data$PDMobileCode3","_data$PDTagline2","_data$PDOrganizationT2","_data$PDIndustryType2","_data$PDEmail4","_data$PDMobileNo4","_data$PDMobileCode4","_data$PDAddress2","_data$PDCity2","_data$PDState2","_data$PDCountry2","_data$PDPinCode2","_data$PDSecondaryAddr2","_data$PDSecondaryCity2","_data$PDSecondaryStat2","_data$PDSecondaryCoun2","_data$PDSecondaryPinC2","_data$SMInstagram","_data$SMTwitter","_data$SMFacebook","_data$SMWebsite","SMInstagram","SMTwitter","SMFacebook","SMWebsite","onClick","_objectSpread","required","inputClassName","placeholder","message","Controller","rules","render","_ref","_countryListData$docs","AutoComplete","options","docs","onFocus","inputerrorClassNameAutoComplete","_ref2","_stateListData$docs","stateSearch","countryName","_ref3","_cityListData$docs","citySearch","_ref4","maxLength","onInput","slice","pattern","_ref5","CustomMobileCodePicker","minLength","formButtonClassName","_formErrors$index","_formErrors$index2","_formErrors$index3","_document$file","_formErrors$index4","handleDelete","deleteDocument","prevDocuments","filter","_","index2","AiFillDelete","size","i","handleEditButton","TbEditOff","LiaEditSolid","Select","disabled","inputAntdSelectClassName","showSearch","Option","inputDisabledClassName","ref","htmlFor","fileIndex","CommonImageViewer","alt","handleDeleteDocImage","updatedDocs","handleAddMore","Date","now","Spin"],"sourceRoot":""}