{"version":3,"file":"static/js/4623.801edf35.chunk.js","mappings":"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","sources":["pages/client/digitalSignature/CreateDigitalSign.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useForm, Controller, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport getUserIds from '../../../constents/getUserIds';\nimport { domainName, inputClassName, inputLabelClassName } from \"../../../constents/global\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { directorSearch } from \"../../Director/director/DirectorFeatures/_director_reducers\";\nimport { createDigitalSign } from \"../digitalSignature/digitalSignatureFeatures/_digital_sign_reducers\";\n\nfunction CreateDigitalSign() {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  const {\n    userCompanyId,\n    userDirectorId,\n    userBranchId,\n    userType\n  } = getUserIds();\n\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n\n\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: userCompanyId,\n  });\n\n  const directorId = useWatch({\n    control,\n    name: \"directorId\",\n    defaultValue: userDirectorId,\n  });\n\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: userBranchId,\n  });\n\n  // useEffect(() => {\n  //   setValue(\"PDMobileCode\", \"+91\");\n  // }, [countryListData]);\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    if (\n      companyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination:false,\n          companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [companyId])\n\n  useEffect(() => {\n    if (companyId && userType === \"company\" || userType === \"admin\") {\n      dispatch(\n        directorSearch({\n          text: \"\", sort: true, status: true, isPagination: false, companyId: companyId,\n        })\n      );\n    }\n  }, [companyId]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId :\n        userInfoglobal?.userType === \"company\" ? userInfoglobal?._id :\n          userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId :\n        userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id :\n          userInfoglobal?.branchId,\n      \"directorId\": \"\",\n      clientId: \"\",\n      name: data?.name,\n      startDate: data?.startDate,\n      expiryDate: data?.expiryDate,\n    };\n    dispatch(createDigitalSign(finalPayload)).then((data) => {\n      if (!data.error) {\n        navigate(\"/admin/digital-sign\");\n      }\n    });\n  }\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-5\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            {userInfoglobal?.userType === \"admin\" && (\n              <div className=\"\">\n                <label className={`${inputLabelClassName}`}>\n                  Company <span className=\"text-red-600\">*</span>\n                </label>\n                <select\n                  {...register(\"PDCompanyId\", {\n                    required: \"company is required\",\n                  })}\n                  className={` ${inputClassName} ${errors.PDCompanyId\n                    ? \"border-[1px] \"\n                    : \"border-gray-300\"\n                    }`}\n                >\n                  <option className=\"\" value=\"\">\n                    Select Comapany\n                  </option>\n                  {companyList?.map((type) => (\n                    <option value={type?._id}>{type?.fullName}</option>\n                  ))}\n                </select>\n                {errors.PDCompanyId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDCompanyId.message}\n                  </p>\n                )}\n              </div>)}\n\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && (\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Branch <span className=\"text-red-600\">*</span>\n                </label>\n                <select\n                  {...register(\"PDBranchId\", { required: \"Branch is required\" })}\n                  className={`${inputClassName} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                >\n                  <option value=\"\">Select Branch</option>\n                  {branchList?.map((type) => (\n                    <option key={type?._id} value={type?._id}>\n                      {type?.fullName}\n                    </option>\n                  ))}\n                </select>\n                {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n              </div>\n            )}\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-2 md:my-2\">\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Name <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"name\", {\n                  required: \"Title is required\",\n                })}\n                className={`placeholder: ${inputClassName} ${errors.name\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Name\"\n              />\n              {errors.name && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.name.message}\n                </p>\n              )}\n            </div>\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Start Date <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                {...register(\"startDate\")}\n                type=\"date\"\n                className={`${inputClassName} ${errors.recurrence?.startDate ? \"border-[1px] \" : \"border-gray-300\"}`}\n              />\n              {errors.recurrence?.startDate && (\n                <p className=\"text-red-500 text-sm\">{errors.startDate.message}</p>\n              )}\n            </div>\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Expiry Date <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                {...register(\"expiryDate\")}\n                type=\"date\"\n                className={`${inputClassName} ${errors.recurrence?.expiryDate ? \"border-[1px] \" : \"border-gray-300\"}`}\n              />\n              {errors.recurrence?.expiryDate && (\n                <p className=\"text-red-500 text-sm\">{errors.expiryDate.message}</p>\n              )}\n            </div>\n          </div>\n          <div className=\"flex justify-end \">\n            <button\n              type=\"submit\"\n              className=\"bg-header text-white p-2 px-4 rounded mt-4\"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  )\n}\n\nexport default CreateDigitalSign;"],"names":["_errors$recurrence","_errors$recurrence2","_errors$recurrence3","_errors$recurrence4","register","handleSubmit","setValue","control","formState","errors","useForm","userCompanyId","userDirectorId","userBranchId","userType","getUserIds","dispatch","useDispatch","navigate","useNavigate","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","companyList","useSelector","state","company","branchList","branch","companyId","useWatch","name","defaultValue","branchId","useEffect","companySearch","text","sort","status","isPagination","branchSearch","_id","directorSearch","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","clientId","startDate","expiryDate","createDigitalSign","then","error","inputLabelClassName","_objectSpread","required","inputClassName","PDCompanyId","value","map","type","fullName","message","PDBranchId","placeholder","recurrence"],"sourceRoot":""}