{"version":3,"file":"static/js/8390.2434d1d8.chunk.js","mappings":"2aAyZA,QAnYA,WACI,MAAM,SAAEA,EAAQ,SAAEC,EAAQ,QAAEC,EAASC,WAAW,OAAEC,KAAaC,EAAAA,EAAAA,MAEzDC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAC7DC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACvC,YAAEC,IAAgBC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,UAC/C,WAAEC,EAAU,kBAAEC,IAAsBJ,EAAAA,EAAAA,IAAaC,GAAUA,EAAMI,SACjE,eAAEC,EAAc,eAAEC,EAAc,QAAEC,IAAYR,EAAAA,EAAAA,IAAYC,GAASA,EAAMQ,YAEzEC,GAAYC,EAAAA,EAAAA,IAAS,CACvB9B,UACA+B,KAAM,cACNC,aAAc,KAEZC,GAAWH,EAAAA,EAAAA,IAAS,CACtB9B,UACA+B,KAAM,aACNC,aAAc,KAGZE,GAASJ,EAAAA,EAAAA,IAAS,CACpB9B,UACA+B,KAAM,SACNC,aAAc,MAGXG,EAAaC,IAAkBnB,EAAAA,EAAAA,UAAS,GASzCoB,EAAU,CAACJ,EAASlB,EAAWmB,EAAOL,GAAWS,KAAK,MAEtDC,EAAeC,IAAoBvB,EAAAA,EAAAA,WAAS,IAEjDwB,EAAAA,EAAAA,WAAU,KACHF,EAIgB,IAAhBJ,EACFO,IAEAN,EAAe,GANhBI,EAAiBpB,IAAO,IAQxB,CAACiB,KAENI,EAAAA,EAAAA,WAAU,KACNC,KACD,CAACP,IAEJ,MAAMO,EAAsBA,KACxB,MAAMC,EAAU,CACZC,KAAMT,EACNU,MA9BM,GA+BNC,WAAY,CACRC,UACiC,WAAf,OAAdvC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,UACVnB,EAE2B,aAAf,OAAdrB,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,UACI,OAAdxC,QAAc,IAAdA,OAAc,EAAdA,EAAgByC,IACF,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgBuC,UAC9BG,SACiC,aAAf,OAAd1C,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,WAAuD,WAAf,OAAdxC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,WAAqD,qBAAf,OAAdxC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,UAAiCf,EAAwC,mBAAf,OAAdzB,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,UAC1I,OAAdxC,QAAc,IAAdA,OAAc,EAAdA,EAAgByC,IACF,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgB0C,SAC1B,WAAc,GACd,KAAQnC,EACR,MAAQ,EACR,OAAqB,SAAXmB,GAAsC,UAAXA,GAA6B,GAClE,cAAgB,IAGxB5B,GAAS6C,EAAAA,EAAAA,IAAkBR,MA4B/BF,EAAAA,EAAAA,WAAU,MAEFZ,GAC6B,aAAf,OAAdrB,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,WACa,qBAAf,OAAdxC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,YAEhB1C,GACI8C,EAAAA,EAAAA,IAAa,CACTC,KAAM,GACNC,MAAM,EACNpB,QAAQ,EACRqB,cAAc,EACdR,UAAwC,WAAf,OAAdvC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,UAAuBnB,EAAyC,aAAf,OAAdrB,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,UAAuC,OAAdxC,QAAc,IAAdA,OAAc,EAAdA,EAAgByC,IAAoB,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgBuC,cAI1J,CAAClB,KAEJY,EAAAA,EAAAA,WAAU,KAC2B,WAAf,OAAdjC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,WAChB1C,GACIkD,EAAAA,EAAAA,IAAc,CACVH,KAAM,GACNC,MAAM,EACNpB,QAAQ,EACRqB,cAAc,MAI3B,IAGH,MAAM,UAAEE,EAAS,QAAEC,EAAO,UAAEC,EAAS,UAAEC,IAAcC,EAAAA,EAAAA,KAOrD,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACC,SANAC,IAEdjD,EAAciD,IAImBC,UAE7BC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,EACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mEAAkEF,SAAA,EAC7EC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qEAAoEF,SAAA,CACjD,WAAf,OAAd1D,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,YACbmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEF,SAAA,EACbJ,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACPrE,QAASA,EACT+B,KAAK,cACLuC,MAAO,CAAEC,SAAU,uBACnBC,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OACdN,EAAAA,EAAAA,MAACQ,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCF,GAAK,IACT1C,aAAc,GACd6C,SAAUlD,EACVyC,UAAS,GAAAvD,OAAKiE,EAAAA,GAA8B,KAC5CC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IAClBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQhB,UAAUkB,cAAcC,SAASJ,EAAMG,eACzDlB,SAAA,EAEDJ,EAAAA,EAAAA,KAACa,EAAAA,EAAOW,OAAM,CAACC,MAAM,GAAErB,SAAC,mBACZ,OAAXhD,QAAW,IAAXA,OAAW,EAAXA,EAAasE,IAAKC,IACf3B,EAAAA,EAAAA,KAACa,EAAAA,EAAOW,OAAM,CAAiBC,MAAW,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,IAAIiB,SACvC,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMC,UADa,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,aAOzC/C,EAAOyF,cACJ7B,EAAAA,EAAAA,KAAA,KAAGM,UAAU,uBAAsBF,SAC9BhE,EAAOyF,YAAYC,cAIL,WAAf,OAAdpF,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,WAAqD,aAAf,OAAdxC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,WAAuD,qBAAf,OAAdxC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwC,aAChGmB,EAAAA,EAAAA,MAAA,OAAKC,UAAU,GAAEF,SAAA,EACbJ,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACPrE,QAASA,EACT+B,KAAK,aACLuC,MAAO,CAAEC,SAAU,sBACnBC,OAAQqB,IAAA,IAAC,MAAEnB,GAAOmB,EAAA,OACd1B,EAAAA,EAAAA,MAACQ,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCF,GAAK,IACT1C,aAAc,GACd6C,SAAUlD,EACVyC,UAAS,GAAAvD,OAAKiE,EAAAA,GAA8B,KAC5CC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IAClBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQhB,UAAUkB,cAAcC,SAASJ,EAAMG,eACzDlB,SAAA,EAEDJ,EAAAA,EAAAA,KAACa,EAAAA,EAAOW,OAAM,CAACC,MAAM,GAAErB,SAAC,kBACvB3C,GAAqBuC,EAAAA,EAAAA,KAACa,EAAAA,EAAOW,OAAM,CAACT,UAAQ,EAAAX,UACzCJ,EAAAA,EAAAA,KAACgC,EAAAA,EAAU,MACgB,OAAVxE,QAAU,IAAVA,OAAU,EAAVA,EAAYkE,IAAKC,IAClC3B,EAAAA,EAAAA,KAACa,EAAAA,EAAOW,OAAM,CAAiBC,MAAW,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,IAAIiB,SACvC,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMC,UADa,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,aAOzC/C,EAAO6F,aACJjC,EAAAA,EAAAA,KAAA,KAAGM,UAAU,uBAAsBF,SAC9BhE,EAAO6F,WAAWH,cAInC9B,EAAAA,EAAAA,KAAA,OAAAI,UACIJ,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACPrE,QAASA,EACT+B,KAAK,SACLuC,MAAO,CAAEC,SAAU,sBACnBC,OAAQwB,IAAA,IAAC,MAAEtB,GAAOsB,EAAA,OACd7B,EAAAA,EAAAA,MAACQ,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCF,GAAK,IACT1C,aAAc,GACd6C,SAAUlD,EACVyC,UAAS,GAAAvD,OAAKiE,EAAAA,GAA8B,KAC5CC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IAClBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQhB,UAAUkB,cAAcC,SAASJ,EAAMG,eACzDlB,SAAA,EAEDJ,EAAAA,EAAAA,KAACa,EAAAA,EAAOW,OAAM,CAACC,MAAM,GAAErB,SAAC,mBACxBJ,EAAAA,EAAAA,KAACa,EAAAA,EAAOW,OAAM,CAACC,MAAM,OAAMrB,SAAC,YAC5BJ,EAAAA,EAAAA,KAACa,EAAAA,EAAOW,OAAM,CAACC,MAAM,QAAOrB,SAAC,0BAMjDC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mCAAkCF,SAAA,EAC7CJ,EAAAA,EAAAA,KAAA,UACImC,QAASA,KACLlG,EAAS,aAAc,IACvBA,EAAS,cAAe,IACxBA,EAAS,SAAU,KAEvBqE,UAAU,sFAAqFF,UAC/FJ,EAAAA,EAAAA,KAAA,QAAMM,UAAU,cAAaF,SAAC,YAEjCT,IACGK,EAAAA,EAAAA,KAACoC,EAAAA,EAAO,CAACC,UAAU,UAAWC,MAAM,WAAUlC,UAC1CC,EAAAA,EAAAA,MAAA,UACI8B,QAASA,KACL7F,EAAS,8BAEbgE,UAAU,yFAAwFF,SAAA,EAElGJ,EAAAA,EAAAA,KAACuC,EAAAA,IAAM,KACPvC,EAAAA,EAAAA,KAAA,QAAMM,UAAU,cAAaF,SAAC,yBAKlDJ,EAAAA,EAAAA,KAAA,OAAKM,UAAU,sDAAqDF,SAC9DR,IAAYS,EAAAA,EAAAA,MAAA,SAAOC,UAAU,gDAA+CF,SAAA,EAC1EJ,EAAAA,EAAAA,KAAA,SAAOM,UAAU,GAAEF,UACfC,EAAAA,EAAAA,MAAA,MAAIC,UAAU,sFAAqFF,SAAA,EAC/FJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,oBAAmBF,SAAC,WAGlCJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,YAAWF,SAAC,WAG1BJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,YAAWF,SAAC,gBAG1BJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,YAAWF,SAAC,gBAI1BJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,YAAWF,SAAC,YAIxBN,GAAaD,KAAcG,EAAAA,EAAAA,KAAA,MAAIM,UAAU,oBAAmBF,SAAC,gBAKtEvC,GAAUmC,EAAAA,EAAAA,KAAA,MAAIM,UAAU,yBAAwBF,UAC7CJ,EAAAA,EAAAA,KAAA,MACIwC,QAAS,GACTlC,UAAU,+DAA8DF,UAExEJ,EAAAA,EAAAA,KAACyC,EAAAA,EAAO,SAGZzC,EAAAA,EAAAA,KAAA,SAAAI,SACKzC,IAAgC,OAAdA,QAAc,IAAdA,OAAc,EAAdA,EAAgB+E,QAAS,EAC1B,OAAd/E,QAAc,IAAdA,OAAc,EAAdA,EAAgB+D,IAAI,CAACiB,EAASC,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAC/B3C,EAAAA,EAAAA,MAAA,MAAIC,UAAS,mCAAAvD,OAAqC6F,EAAQ,IAAM,EAAI,kBAAoB,WAAU,mBAAkBxC,SAAA,EAChHJ,EAAAA,EAAAA,KAAA,MAAIM,UAAU,aAAYF,SACrBwC,EAAQ,EApRvC,IAoR6CvE,EAAc,MAEjC2B,EAAAA,EAAAA,KAAA,MAAIM,UAAU,aAAYF,SAAgB,QAAhByC,EAAS,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASL,aAAK,IAAAO,EAAAA,EAAI,OAC9C7C,EAAAA,EAAAA,KAAA,MAAIM,UAAU,aAAYF,SAAwD,QAAxD0C,EAAEG,IAAa,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASO,WAAWC,OAAO,6BAAqB,IAAAL,EAAAA,EAAI,OACtF9C,EAAAA,EAAAA,KAAA,MAAIM,UAAU,aAAYF,SAAoB,QAApB2C,EAAS,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASS,iBAAS,IAAAL,EAAAA,EAAI,OAClD/C,EAAAA,EAAAA,KAAA,MAAIM,UAAU,aAAYF,UACtBJ,EAAAA,EAAAA,KAAA,QACIM,UAAS,GAAAvD,OAAY,OAAP4F,QAAO,IAAPA,GAAAA,EAASvE,OACjB,gCACA,4BAA2B,+DACiCgC,SAE1D,OAAPuC,QAAO,IAAPA,GAAAA,EAASvE,OAAS,SAAqB,QAAb4E,EAAG,YAAUA,EAAI,SAGlDlD,GAAaD,KAAcG,EAAAA,EAAAA,KAAA,MAAIM,UAAU,YAAWF,UAClDJ,EAAAA,EAAAA,KAACqD,EAAAA,EAAQ,CACLC,KAAM,CACFC,MAAO,CACH1D,GAAa,CACT2D,IAAK,OACLC,OACIpD,EAAAA,EAAAA,MAAA,QACI8B,QAASA,IAAM7F,EAAS,2BAADS,QAA4B2G,EAAAA,EAAAA,GAAe,OAAPf,QAAO,IAAPA,OAAO,EAAPA,EAASxD,OACpEmB,UAAU,wDAAuDF,SAAA,EAEjEJ,EAAAA,EAAAA,KAAC2D,EAAAA,IAAa,CAACrD,UAAU,OAAOsD,KAAM,KAAM,WAKxD9D,GAAa,CACT0D,IAAK,SACLC,OACIpD,EAAAA,EAAAA,MAAA,QACI8B,QAASA,IAlQvD0B,KAClB,IAAIhF,EAAU,CACVM,IAAK0E,GAETC,IAAAA,KAAU,CACNxB,MAAO,UACP/C,KAAM,mCACNwE,KAAM,UACNC,kBAAkB,EAClBC,iBAAkB,OACnBC,KAAMC,IACDA,EAAOC,aACP5H,GAAS6H,EAAAA,EAAAA,IAAiBxF,IAAUqF,KAAMI,IAElCjG,EAAc,GAA+B,IAAZ,OAAdV,QAAc,IAAdA,OAAc,EAAdA,EAAgB+E,QACnCpE,EAAeiG,OAAOlG,EAAc,IAGpCO,SAgP+D4F,CAAoB,OAAP7B,QAAO,IAAPA,OAAO,EAAPA,EAASxD,KACrCmB,UAAU,oDAAmDF,SAAA,EAE7DJ,EAAAA,EAAAA,KAACyE,EAAAA,IAAgB,CAACnE,UAAU,OAAOsD,KAAM,KAAM,cAK7Dc,OAAOC,UAEbC,QAAS,CAAC,SAASxE,UAEnBJ,EAAAA,EAAAA,KAACoC,EAAAA,EAAO,CAACC,UAAU,UAAWC,MAAM,eAAclC,UAC9CJ,EAAAA,EAAAA,KAAA,UACIM,UAAU,oEACVqB,KAAK,SAAQvB,UAEbJ,EAAAA,EAAAA,KAAC6E,EAAAA,IAA8B,CAC3BvE,UAAU,sCACVsD,KAAM,mBAS/B5D,EAAAA,EAAAA,KAAA,MAAIM,UAAU,yBAAwBF,UACrCJ,EAAAA,EAAAA,KAAA,MAAIwC,QAAS,EAAGlC,UAAU,+DAA8DF,SAAC,+BAKlG,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgB+E,QAAS,IACtB1C,EAAAA,EAAAA,KAAC8E,EAAAA,EAAgB,CACbC,WAAYnH,EACZoH,SA5VN,GA6VM3G,YAAaA,EACb6B,SA5VQpB,IACxBR,EAAeQ,UAiWvB,C,6DC7YA,QATA,WACI,OACGkB,EAAAA,EAAAA,KAAA,OAAKM,UAAU,4CAA2CF,UAExDJ,EAAAA,EAAAA,KAACiF,EAAAA,EAAI,CAACrB,KAAK,WAGpB,C","sources":["pages/client/clientNews/ClientNewsList.js","global_layouts/Loader/Loader.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { encrypt } from \"../../../config/Encryption\"\nimport { FaPlus, FaPenToSquare } from \"react-icons/fa6\"\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { domainName, inputAntdSelectClassNameFilter, inputClassNameSearch } from \"../../../constents/global\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\"\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport Loader from \"../../../global_layouts/Loader/Loader\"\nimport { getClientNewsList, clientNewsSearch, deleteClientNews } from \"../clientNews/clientNewsFeatures/_client_news_reducers\"\nimport { Select, Tooltip, Dropdown } from \"antd\"\nimport usePermissions from \"../../../config/usePermissions\"\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\"\nimport dayjs from \"dayjs\"\nimport { PiDotsThreeOutlineVerticalBold } from 'react-icons/pi';\nimport ListLoader from \"../../../global_layouts/ListLoader\"\n\nfunction ClientNewsList() {\n    const { register, setValue, control, formState: { errors } } = useForm();\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n    const [searchText, setSearchText] = useState(\"\");\n    const { companyList } = useSelector((state) => state.company);\n    const { branchList, branchListloading } = useSelector((state) => state.branch);\n    const { clientNewsList, totalNewzCount, loading } = useSelector(state => state.clientNews);\n\n    const CompanyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: \"\",\n    });\n    const BranchId = useWatch({\n        control,\n        name: \"PDBranchId\",\n        defaultValue: \"\",\n    });\n\n    const status = useWatch({\n        control,\n        name: \"status\",\n        defaultValue: \"\",\n    });\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const limit = 10;\n\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n\n    const filters = [BranchId,searchText,status,CompanyId].join(\"-\");\n\n   const [isFirstRender ,setisFirstRender] = useState(false)\n   \n     useEffect(() => {\n       if (!isFirstRender) {\n         setisFirstRender(state=>true);\n         return;\n       }\n        if (currentPage === 1) {\n          fetchClientNewsList()\n        } else {\n          setCurrentPage(1);\n        }\n      }, [filters])\n\n    useEffect(() => {\n        fetchClientNewsList()\n    }, [currentPage])\n\n    const fetchClientNewsList = () => {\n        const reqData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                companyId:\n                    userInfoglobal?.userType === \"admin\"\n                        ? CompanyId\n                        :\n                        userInfoglobal?.userType === \"company\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.companyId,\n                branchId:\n                    userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\"\n                        ? userInfoglobal?._id\n                        : userInfoglobal?.branchId,\n                \"directorId\": \"\",\n                \"text\": searchText,\n                \"sort\": true,\n                \"status\": status === 'true' ? true : status === 'false' ? false : '',\n                \"isPagination\": true,\n            }\n        }\n        dispatch(getClientNewsList(reqData))\n    }\n\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id,\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteClientNews(reqData)).then((data) => {\n                    // fetchClientNewsList()\n                    if (currentPage > 1 && clientNewsList?.length == 1) {\n                        setCurrentPage(Number(currentPage - 1));\n\n                    } else {\n                        fetchClientNewsList();\n                    }\n                })\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (\n            CompanyId ||\n            userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n        ) {\n            dispatch(\n                branchSearch({\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                    companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n                })\n            );\n        }\n    }, [CompanyId])\n\n    useEffect(() => {\n        if (userInfoglobal?.userType === \"admin\") {\n            dispatch(\n                companySearch({\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                })\n            );\n        }\n    }, []);\n\n\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n    const onChange = (e) => {\n\n        setSearchText(e);\n    };\n\n    return (\n        <GlobalLayout onChange={onChange}>\n\n            <section>\n                <div className=\"lg:flex justify-between items-center xl:space-y-0 space-y-2 py-1\">\n                    <div className=\"grid md:flex sm:grid-cols-3 grid-cols-1 flex-wrap md:gap-3 gap-1.5\">\n                        {userInfoglobal?.userType === \"admin\" &&\n                            <div className=\"\">\n                                <Controller\n                                    control={control}\n                                    name=\"PDCompanyId\"\n                                    rules={{ required: \"Company is required\" }}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            defaultValue={\"\"}\n                                            disabled={loading}\n                                            className={`${inputAntdSelectClassNameFilter} `}\n                                            showSearch\n                                            filterOption={(input, option) =>\n                                                String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                            }\n                                        >\n                                            <Select.Option value=\"\">Select Company</Select.Option>\n                                            {companyList?.map((type) => (\n                                                <Select.Option key={type?._id} value={type?._id}>\n                                                    {type?.fullName}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    )}\n                                />\n                                {errors.PDCompanyId && (\n                                    <p className=\"text-red-500 text-sm\">\n                                        {errors.PDCompanyId.message}\n                                    </p>\n                                )}\n                            </div>}\n                        {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") &&\n                            <div className=\"\">\n                                <Controller\n                                    control={control}\n                                    name=\"PDBranchId\"\n                                    rules={{ required: \"Branch is required\" }}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            defaultValue={\"\"}\n                                            disabled={loading}\n                                            className={`${inputAntdSelectClassNameFilter} `}\n                                            showSearch\n                                            filterOption={(input, option) =>\n                                                String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                            }\n                                        >\n                                            <Select.Option value=\"\">Select Branch</Select.Option>\n                                            {branchListloading ? (<Select.Option disabled>\n                                                <ListLoader />\n                                            </Select.Option>) : (branchList?.map((type) => (\n                                                <Select.Option key={type?._id} value={type?._id}>\n                                                    {type?.fullName}\n                                                </Select.Option>\n                                            )))}\n                                        </Select>\n                                    )}\n                                />\n                                {errors.PDBranchId && (\n                                    <p className=\"text-red-500 text-sm\">\n                                        {errors.PDBranchId.message}\n                                    </p>\n                                )}\n                            </div>}\n                        <div>\n                            <Controller\n                                control={control}\n                                name=\"status\"\n                                rules={{ required: \"Status is required\" }}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        defaultValue={\"\"}\n                                        disabled={loading}\n                                        className={`${inputAntdSelectClassNameFilter} `}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                    >\n                                        <Select.Option value=\"\">Select status</Select.Option>\n                                        <Select.Option value=\"true\">Active</Select.Option>\n                                        <Select.Option value=\"false\">Inactive</Select.Option>\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"flex justify-end items-end gap-2\">\n                        <button\n                            onClick={() => {\n                                setValue(\"PDBranchId\", '')\n                                setValue(\"PDCompanyId\", \"\")\n                                setValue(\"status\", \"\")\n                            }}\n                            className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                        {canCreate &&\n                            <Tooltip placement=\"topLeft\"  title='Add News'>\n                                <button\n                                    onClick={() => {\n                                        navigate(\"/admin/client-news/create\");\n                                    }}\n                                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n                                >\n                                    <FaPlus />\n                                    <span className=\"text-[12px]\">Add News</span>\n                                </button>\n                            </Tooltip>}\n                    </div>\n                </div>\n                <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n                    {(canRead) && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                        <thead className=''>\n                            <tr className='border-b-[1px] border-[#DDDDDD] capitalize bg-header text-white font-[500] h-[40px]'>\n                                <th className='tableHead w-[10%]'>\n                                    S.No.\n                                </th>\n                                <th className='tableHead'>\n                                    Title\n                                </th>\n                                <th className='tableHead'>\n                                    Created At\n                                </th>\n                                <th className='tableHead'>\n                                    Created By\n                                </th>\n\n                                <th className='tableHead'>\n                                    Status\n                                </th>\n\n                                {(canDelete || canUpdate) && <th className='tableHead w-[15%]'>\n                                    Action\n                                </th>}\n                            </tr>\n                        </thead>\n                        {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                            <td\n                                colSpan={10}\n                                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                            >\n                                <Loader2 />\n                            </td>\n                        </tr> :\n                            <tbody>\n                                {clientNewsList && clientNewsList?.length > 0 ?\n                                    clientNewsList?.map((element, index) => (\n                                        <tr className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151]`}>\n                                            <td className='tableData '>\n                                                {index + 1 + ((currentPage - 1) * limit)}\n                                            </td>\n                                            <td className='tableData '>{element?.title ?? \"-\"}</td>\n                                            <td className='tableData '>{dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') ?? \"-\"}</td>\n                                            <td className='tableData '>{element?.createdBy ?? \"-\"}</td>\n                                            <td className='tableData '>\n                                                <span\n                                                    className={`${element?.status\n                                                        ? \"bg-[#E0FFBE] border-green-500\"\n                                                        : \"bg-red-200 border-red-500\"\n                                                        } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                                                >\n                                                    {element?.status ? \"Active\" : \"Inactive\" ?? \"-\"}\n                                                </span>\n                                            </td>\n                                            {(canDelete || canUpdate) && <td className='tableData'>\n                                                <Dropdown\n                                                    menu={{\n                                                        items: [\n                                                            canUpdate && {\n                                                                key: 'edit',\n                                                                label: (\n                                                                    <span\n                                                                        onClick={() => navigate(`/admin/client-news/edit/${encrypt(element?._id)}`)}\n                                                                        className=\"flex items-center text-[#3c8dbc] hover:text-[#337ab7]\"\n                                                                    >\n                                                                        <FaPenToSquare className=\"mr-2\" size={16} />\n                                                                        Edit\n                                                                    </span>\n                                                                ),\n                                                            },\n                                                            canDelete && {\n                                                                key: 'delete',\n                                                                label: (\n                                                                    <span\n                                                                        onClick={() => handleDelete(element?._id)}\n                                                                        className=\"flex items-center text-red-600 hover:text-red-500\"\n                                                                    >\n                                                                        <RiDeleteBin5Line className=\"mr-2\" size={16} />\n                                                                        Delete\n                                                                    </span>\n                                                                ),\n                                                            },\n                                                        ].filter(Boolean), // Removes null if permission is false\n                                                    }}\n                                                    trigger={['click']}\n                                                >\n                                                    <Tooltip placement=\"topLeft\"  title=\"More Actions\">\n                                                        <button\n                                                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                                            type=\"button\"\n                                                        >\n                                                            <PiDotsThreeOutlineVerticalBold\n                                                                className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                                                size={16}\n                                                            />\n                                                        </button>\n                                                    </Tooltip>\n                                                </Dropdown>\n\n                                            </td>}\n                                        </tr>\n                                    ))\n                                    : (<tr className=\"bg-white bg-opacity-5 \" >\n                                        <td colSpan={5} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">Record Not Found</td>\n                                    </tr>)}\n                            </tbody>}\n                    </table>}\n                </div>\n                {clientNewsList?.length > 0 && (\n                    <CustomPagination\n                        totalCount={totalNewzCount}\n                        pageSize={limit}\n                        currentPage={currentPage}\n                        onChange={onPaginationChange}\n                    />)}\n            </section>\n\n        </GlobalLayout >\n    )\n}\nexport default ClientNewsList","import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n"],"names":["register","setValue","control","formState","errors","useForm","navigate","useNavigate","dispatch","useDispatch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","searchText","setSearchText","useState","companyList","useSelector","state","company","branchList","branchListloading","branch","clientNewsList","totalNewzCount","loading","clientNews","CompanyId","useWatch","name","defaultValue","BranchId","status","currentPage","setCurrentPage","filters","join","isFirstRender","setisFirstRender","useEffect","fetchClientNewsList","reqData","page","limit","reqPayload","companyId","userType","_id","branchId","getClientNewsList","branchSearch","text","sort","isPagination","companySearch","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsx","GlobalLayout","onChange","e","children","_jsxs","className","Controller","rules","required","render","_ref","field","Select","_objectSpread","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","type","fullName","PDCompanyId","message","_ref2","ListLoader","PDBranchId","_ref3","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","element","index","_element$title","_dayjs$format","_element$createdBy","_Inactive","dayjs","createdAt","format","createdBy","Dropdown","menu","items","key","label","encrypt","FaPenToSquare","size","id","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteClientNews","data","Number","handleDelete","RiDeleteBin5Line","filter","Boolean","trigger","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","pageSize","Spin"],"sourceRoot":""}