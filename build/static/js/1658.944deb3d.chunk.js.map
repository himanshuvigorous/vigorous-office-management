{"version":3,"file":"static/js/1658.944deb3d.chunk.js","mappings":"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","sources":["pages/reportsManager/finance_report/invoice_status_wise_summary/InvoiceStatusWiseSummary.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertIntoAmount,\n  domainName,\n  inputAntdSelectClassNameFilter,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState, useCallback, useRef } from \"react\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Descriptions, Select, Tooltip } from \"antd\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { financeSummaryWiseFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { officeAddressSearch } from \"../../../global/other/officeAddressManagement/officeAddressFeature/_office_address_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport moment from \"moment\";\nimport usePermissions from \"../../../../config/usePermissions\";\nimport { encrypt } from \"../../../../config/Encryption\";\nimport { FaEye } from \"react-icons/fa\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\n\nfunction InvoiceStatusWiseSummary() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    handleSubmit: rhfHandleSubmit,\n    getValues,\n  } = useForm();\n\n  const [pageSize, setPageSize] = useState(10);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const [filtersApplied, setFiltersApplied] = useState(false);\n  const [initialLoadComplete, setInitialLoadComplete] = useState(false);\n  const [filterTrigger, setFilterTrigger] = useState(0);\n\n  const { canRead } = usePermissions();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const {\n    financeInvoiceSummaryReportList,\n    financeInvoiceSummaryReportSummary,\n    financeSummaryWiseFunc_loading,\n    financeInvoiceSummaryReportCount,\n  } = useSelector((state) => state.reports);\n  const { branchList } = useSelector((state) => state.branch);\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n  const { officeAddressListData, loading: officeAddressLoading } = useSelector(\n    (state) => state.officeAddress\n  );\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n  // Get initial values from URL params or defaults\n  const initialStatus = searchParams.get(\"status\") || \"\";\n  const initialLayoutId = searchParams.get(\"layoutId\") || \"\";\n  const initialStartDate = searchParams.get(\"startDate\") || dayjs().startOf('month').format(\"YYYY-MM-DD\");\n  const initialEndDate = searchParams.get(\"endDate\") || dayjs().format(\"YYYY-MM-DD\");\n  const initialPage = parseInt(searchParams.get(\"page\")) || 1;\n  const initialBranchId = searchParams.get(\"PDBranchId\") || \"\";\n  const initialDepartmentId = searchParams.get(\"department\") || \"\";\n\n  // Initialize form with URL params\n  useEffect(() => {\n    setValue(\"status\", initialStatus);\n    setValue(\"layoutId\", initialLayoutId);\n    setValue(\"startDate\", initialStartDate ? dayjs(initialStartDate) : dayjs().startOf('month'));\n    setValue(\"endDate\", initialEndDate ? dayjs(initialEndDate) : dayjs());\n    setValue(\"PDBranchId\", initialBranchId);\n    setValue(\"department\", initialDepartmentId);\n    setCurrentPage(initialPage);\n\n    // Check if we have any initial filters\n    const hasInitialFilters = !!(initialStatus || initialLayoutId ||\n      initialStartDate !== dayjs().startOf('month').format(\"YYYY-MM-DD\") ||\n      initialEndDate !== dayjs().format(\"YYYY-MM-DD\"));\n    setFiltersApplied(hasInitialFilters);\n\n    // Mark initial load as complete after a short delay to allow form values to be set\n    const timer = setTimeout(() => {\n      setInitialLoadComplete(true);\n    }, 100);\n\n    return () => clearTimeout(timer);\n  }, [setValue, initialStatus, initialLayoutId, initialStartDate, initialEndDate, initialPage, initialBranchId, initialDepartmentId]);\n\n  // Debounce search text\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [searchText]);\n\n  // Update URL params when filters change\n  const updateUrlParams = useCallback((newParams) => {\n    const params = new URLSearchParams();\n\n    // Always include current filters\n    if (newParams.status !== undefined) {\n      newParams.status ? params.set(\"status\", newParams.status) : params.delete(\"status\");\n    } else if (searchParams.get(\"status\")) {\n      params.set(\"status\", searchParams.get(\"status\"));\n    }\n\n    if (newParams.layoutId !== undefined) {\n      newParams.layoutId ? params.set(\"layoutId\", newParams.layoutId) : params.delete(\"layoutId\");\n    } else if (searchParams.get(\"layoutId\")) {\n      params.set(\"layoutId\", searchParams.get(\"layoutId\"));\n    }\n\n    if (newParams.startDate !== undefined) {\n      newParams.startDate ? params.set(\"startDate\", newParams.startDate) : params.delete(\"startDate\");\n    } else if (searchParams.get(\"startDate\")) {\n      params.set(\"startDate\", searchParams.get(\"startDate\"));\n    }\n\n    if (newParams.endDate !== undefined) {\n      newParams.endDate ? params.set(\"endDate\", newParams.endDate) : params.delete(\"endDate\");\n    } else if (searchParams.get(\"endDate\")) {\n      params.set(\"endDate\", searchParams.get(\"endDate\"));\n    }\n\n    if (newParams.page !== undefined) {\n      newParams.page > 1 ? params.set(\"page\", newParams.page) : params.delete(\"page\");\n    } else if (searchParams.get(\"page\")) {\n      params.set(\"page\", searchParams.get(\"page\"));\n    }\n\n    if (newParams.PDBranchId !== undefined) {\n      newParams.PDBranchId ? params.set(\"PDBranchId\", newParams.PDBranchId) : params.delete(\"PDBranchId\");\n    } else if (searchParams.get(\"PDBranchId\")) {\n      params.set(\"PDBranchId\", searchParams.get(\"PDBranchId\"));\n    }\n\n    if (newParams.department !== undefined) {\n      newParams.department ? params.set(\"department\", newParams.department) : params.delete(\"department\");\n    } else if (searchParams.get(\"department\")) {\n      params.set(\"department\", searchParams.get(\"department\"));\n    }\n\n    setSearchParams(params);\n  }, [searchParams, setSearchParams]);\n\n  const requestPayLoadReturn = (pagination = true) => {\n    const status = getValues(\"status\") || \"\";\n    const layoutId = getValues(\"layoutId\") || \"\";\n    const startDate = getValues(\"startDate\");\n    const endDate = getValues(\"endDate\");\n    const department = getValues(\"department\") || \"\";\n    const branchId = getValues(\"PDBranchId\") || \"\";\n\n    const formattedStartDate = startDate ? dayjs(startDate).format(\"YYYY-MM-DD\") : dayjs().startOf('month').format(\"YYYY-MM-DD\");\n    const formattedEndDate = endDate ? dayjs(endDate).format(\"YYYY-MM-DD\") : dayjs().format(\"YYYY-MM-DD\");\n\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? \"\" // Will be set from form if needed\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? \"\" // Will be set from form if needed\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        invoiceLayoutId: layoutId,\n        startDate: formattedStartDate,\n        endDate: formattedEndDate,\n        status: status,\n        branchId: branchId,\n        departmentId: department\n      },\n    };\n  };\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        })\n      );\n      dispatch(\n        deptSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n          branchId: [\n            \"admin\",\n            \"company\",\n            \"companyDirector\",\n          ].includes(userInfoglobal?.userType)\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        })\n      );\n    }\n    // setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    // setValue(\"endDate\", dayjs());\n  }, []);\n  const officeAddresFunction = () => {\n    dispatch(\n      officeAddressSearch({\n        companyId:\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        type: \"invoice\",\n        isPagination: false,\n        bankAccountId: \"\",\n        isGSTEnabled: \"\",\n      })\n    );\n  };\n\n  const getInvoiceReport = () => {\n    dispatch(financeSummaryWiseFunc(requestPayLoadReturn(true)));\n  };\n\n  // Fetch data on initial load if we have URL params or when filters are applied\n  useEffect(() => {\n    if (initialLoadComplete && (filtersApplied || searchParams.toString())) {\n      getInvoiceReport();\n    }\n  }, [currentPage, debouncedFilterText, pageSize, filtersApplied, initialLoadComplete, filterTrigger]);\n\n  useEffect(() => {\n    officeAddresFunction();\n  }, []);\n\n  const handleFormSubmit = (data) => {\n    // Update URL with new filter values\n    updateUrlParams({\n      status: data.status || \"\",\n      layoutId: data.layoutId || \"\",\n      startDate: data.startDate ? dayjs(data.startDate).format(\"YYYY-MM-DD\") : dayjs().startOf('month').format(\"YYYY-MM-DD\"),\n      endDate: data.endDate ? dayjs(data.endDate).format(\"YYYY-MM-DD\") : dayjs().format(\"YYYY-MM-DD\"),\n      page: 1, // Reset to first page when filters change\n      PDBranchId: data.PDBranchId || \"\",\n      department: data.department || \"\",\n    });\n\n    // Also update current page state and set filters as applied\n    setCurrentPage(1);\n    setFiltersApplied(true);\n    // Trigger API call by updating filterTrigger\n    setFilterTrigger(prev => prev + 1);\n  };\n\n  const handleResetFilters = () => {\n    // Clear all filters and update URL\n    updateUrlParams({\n      status: \"\",\n      layoutId: \"\",\n      startDate: dayjs().startOf('month').format(\"YYYY-MM-DD\"),\n      endDate: dayjs().format(\"YYYY-MM-DD\"),\n      page: 1,\n      PDBranchId: \"\",\n      department: \"\",\n    });\n\n    // Reset form values\n    setValue(\"status\", \"\");\n    setValue(\"layoutId\", \"\");\n    setValue(\"startDate\", dayjs().startOf('month'));\n    setValue(\"endDate\", dayjs());\n    setValue(\"PDBranchId\", \"\");\n    setValue(\"department\", \"\");\n\n    setCurrentPage(1);\n    setSearchText(\"\");\n    setFiltersApplied(false);\n    // Trigger API call by updating filterTrigger\n    setFilterTrigger(prev => prev + 1);\n  };\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n    updateUrlParams({ page });\n  };\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(1);\n    updateUrlParams({ page: 1 });\n  };\n\n  const onChangeSearch = (e) => {\n    setSearchText(e);\n  };\n\n  // Date validation function\n  const validateDates = (startDate, endDate) => {\n    if (startDate && endDate && dayjs(startDate).isAfter(dayjs(endDate))) {\n      return \"Start date cannot be after end date\";\n    }\n    return true;\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Invoice Summary Report\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Date\", key: \"date\", width: 20 },\n      { header: \"Invoice Number\", key: \"invoiceNumber\", width: 20 },\n      { header: \"Client Name\", key: \"fullName\", width: 25 },\n      { header: \"Gross Amount\", key: \"invoiceBilled\", width: 30 },\n      { header: \"GST Charged\", key: \"gstCharged\", width: 20 },\n      { header: \"Grand Total\", key: \"grandTotal\", width: 15 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.financeSummaryWiseFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!response || !response?.data) return;\n\n    let totalGross = 0;\n    let totalGST = 0;\n    let totalGrand = 0;\n\n    const body = response?.data?.docs?.map((data, index) => {\n      const gross = Number(data?.invoiceBilled || 0);\n      const gst = Number(data?.gstCharged || 0);\n      const grand = Number(data?.grandTotal || 0);\n\n      // Accumulate totals\n      totalGross += gross;\n      totalGST += gst;\n      totalGrand += grand;\n\n      return {\n        sno: index + 1,\n        date: data?.createdAt ? dayjs(data?.createdAt).format(\"DD-MM-YYYY\") : \"-\",\n        invoiceBilled: convertIntoAmount(gross),\n        invoiceNumber: data?.invoiceNumber,\n        fullName: data?.clientData?.fullName,\n        gstCharged: convertIntoAmount(gst),\n        grandTotal: convertIntoAmount(grand),\n      };\n    });\n\n    body?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add Total Row\n    const totalRow = worksheet.addRow({\n      sno: \"\",\n      date: \"\",\n      invoiceNumber: \"\",\n      fullName: \"Total\",\n      invoiceBilled: convertIntoAmount(totalGross),\n      gstCharged: convertIntoAmount(totalGST),\n      grandTotal: convertIntoAmount(totalGrand),\n    });\n\n    // Style the total row\n    totalRow.eachCell((cell, colNumber) => {\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: colNumber >= 5 ? \"right\" : \"left\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n      if (colNumber >= 5) {\n        cell.fill = {\n          type: \"pattern\",\n          pattern: \"solid\",\n          fgColor: { argb: \"FFE6E6E6\" }, // Light grey\n        };\n      }\n    });\n\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"G1\",\n    };\n\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"invoiceSummaryReport.xlsx\";\n      link.click();\n    });\n  };\n\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n\n    doc.setFontSize(16);\n\n    const headers = [\n      \"S.no\",\n      \"Date\",\n      \"Invoice Number\",\n      \"Client Name\",\n      \"Gross Amount\",\n      \"Gst Charged\",\n      \"Grand Total\",\n    ];\n\n    const response = await reportsServices?.financeSummaryWiseFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!response || !response?.data?.docs) return;\n\n    let totalGross = 0;\n    let totalGST = 0;\n    let totalGrand = 0;\n\n    const body = response?.data?.docs?.map((data, index) => {\n      const gross = Number(data?.invoiceBilled || 0);\n      const gst = Number(data?.gstCharged || 0);\n      const grand = Number(data?.grandTotal || 0);\n\n      totalGross += gross;\n      totalGST += gst;\n      totalGrand += grand;\n\n      return [\n        index + 1,\n        data?.createdAt ? dayjs(data?.createdAt).format(\"DD-MM-YYYY\") : \"-\",\n        data?.invoiceNumber,\n        data?.clientData?.fullName,\n        convertIntoAmount(gross),\n        convertIntoAmount(gst),\n        convertIntoAmount(grand),\n      ];\n    });\n\n    // Add total row\n    const totalRow = [\n      \"\", \"\", \"\", \"Total\",\n      convertIntoAmount(totalGross),\n      convertIntoAmount(totalGST),\n      convertIntoAmount(totalGrand),\n    ];\n\n    body.push(totalRow); // Append at the end\n\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n      didDrawCell: (data) => {\n        const { row, column, cell } = data;\n        const isTotalRow = row.index === body.length - 1;\n        if (isTotalRow) {\n          doc.setFont(undefined, \"bold\");\n        }\n      },\n    });\n\n    doc.save(`InvoiceSummaryReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1 sm:flex justify-between items-center\">\n\n          <div className=\"flex gap-2 flex-wrap items-center\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div>\n              <Controller\n                name=\"department\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <Controller\n              name=\"layoutId\"\n              control={control}\n              defaultValue={initialLayoutId}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className={`${inputAntdSelectClassNameFilter}`}\n                  placeholder=\"Select Layout\"\n                >\n                  <Select.Option value=\"\">Select Layout</Select.Option>\n                  {officeAddressLoading ? (\n                    <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>\n                  ) : (\n                    sortByPropertyAlphabetically(officeAddressListData, \"firmName\")?.map(\n                      (element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.firmName}\n                        </Select.Option>\n                      )\n                    )\n                  )}\n                </Select>\n              )}\n            />\n\n            <Controller\n              name=\"status\"\n              control={control}\n              defaultValue={initialStatus}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className={`${inputAntdSelectClassNameFilter}`}\n                  placeholder=\"Select Status\"\n                >\n                  <Select.Option value=\"\">Select status</Select.Option>\n                  <Select.Option value=\"PendingPayment\">\n                    Pending Payment\n                  </Select.Option>\n                  <Select.Option value=\"Paid\">Paid</Select.Option>\n                </Select>\n              )}\n            />\n\n            <Controller\n              name=\"startDate\"\n              control={control}\n              defaultValue={initialStartDate ? dayjs(initialStartDate) : dayjs().startOf('month')}\n              render={({ field }) => (\n                <CustomDatePicker\n                  field={field}\n                  report={true}\n                  errors={errors}\n                  picker=\"date\"\n                  format=\"DD/MM/YYYY\"\n                  placeholder=\"Start Date\"\n                  disabledDate={(current) => {\n                    const endDate = getValues(\"endDate\");\n                    if (endDate && current) {\n                      return current.isAfter(dayjs(endDate), 'day');\n                    }\n                    return current && current.isAfter(moment().endOf(\"day\"), \"day\");\n                  }}\n                />\n              )}\n            />\n\n            <Controller\n              name=\"endDate\"\n              control={control}\n              defaultValue={initialEndDate ? dayjs(initialEndDate) : dayjs()}\n              render={({ field }) => (\n                <CustomDatePicker\n                  field={field}\n                  report={true}\n                  errors={errors}\n                  picker=\"date\"\n                  format=\"DD/MM/YYYY\"\n                  placeholder=\"End Date\"\n                  disabledDate={(current) => {\n                    const startDate = getValues(\"startDate\");\n                    if (startDate && current) {\n                      return current.isBefore(dayjs(startDate), 'day') || current.isAfter(moment().endOf(\"day\"), \"day\");\n                    }\n                    return current && current.isAfter(moment().endOf(\"day\"), \"day\");\n                  }}\n                />\n              )}\n            />\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={handleResetFilters}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={rhfHandleSubmit(handleFormSubmit)}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Apply Filters</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChangeSearch}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[\"1\"]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          />\n          <Descriptions\n            bordered\n            column={1}\n            size=\"small\"\n            className=\"mt-1 bg-white rounded-xl\"\n          >\n            <Descriptions.Item label=\"Gross Amount\">\n\n              {convertIntoAmount(financeInvoiceSummaryReportSummary?.invoiceBilled || 0)}\n\n            </Descriptions.Item>\n\n            <Descriptions.Item label=\"GST Charged\">\n\n              {convertIntoAmount(financeInvoiceSummaryReportSummary?.gstCharged || 0)}\n\n            </Descriptions.Item>\n\n            <Descriptions.Item label=\"Grand Total\">\n\n              {convertIntoAmount(financeInvoiceSummaryReportSummary?.totalBilled || 0)}\n\n            </Descriptions.Item>\n          </Descriptions>\n\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1 py-1 justify-between flex-col sm:flex-row items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-light text-gray-500\">\n                Rows per page:\n              </span>\n              <Select\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={generatePDF}\n                className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={generateExcel}\n                className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Invoice Number\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Client Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">\n                  Gross Amount\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">\n                  GST Charged\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">\n                  Grand Total\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">View</th>\n              </tr>\n            </thead>\n\n            {financeSummaryWiseFunc_loading ? (\n              <tbody>\n                <tr className=\"bg-white bg-opacity-5\">\n                  <td\n                    colSpan={8}\n                    className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr>\n              </tbody>\n            ) : (\n              <tbody>\n                {financeInvoiceSummaryReportList &&\n                  financeInvoiceSummaryReportList.length > 0 ? (\n                  financeInvoiceSummaryReportList.map((element, index) => (\n                    <tr\n                      key={element._id}\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        {element?.createdAt ? dayjs(element?.createdAt).format(\"DD-MM-YYYY\") : \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        {element?.invoiceNumber || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        {element?.clientData?.fullName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-right border-none p-2\">\n                        {convertIntoAmount(element?.invoiceBilled) || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-right border-none p-2\">\n                        {convertIntoAmount(element?.gstCharged)}\n                      </td>\n                      <td className=\"whitespace-nowrap text-right border-none p-2\">\n                        {convertIntoAmount(element?.grandTotal)}\n                      </td>\n                      <td className=\"tableData\">\n                        <span className=\"py-1.5 flex justify-start items-center space-x-2.5\">\n                          <Tooltip placement=\"topLeft\" title=\"View Invoice\">\n                            {canRead && (\n                              <button\n                                onClick={() =>\n                                  navigate(\n                                    `/admin/viewInvoice?invoiceId=${encrypt(\n                                      element?._id\n                                    )}&type=invoice&downloadPdfPath=${element?.invoicePDFPath\n                                      ? encrypt(element?.invoicePDFPath)\n                                      : \"\"\n                                    }`\n                                  )\n                                }\n                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                type=\"button\"\n                              >\n                                <FaEye\n                                  className=\"hover:text-header text-header\"\n                                  size={15}\n                                />\n                              </button>\n                            )}\n                          </Tooltip>\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={8}\n                      className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                    >\n                      {filtersApplied || searchParams.toString()\n                        ? \"No records found with current filters\"\n                        : \"Apply filters to see results\"}\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n        </div>\n\n        {financeInvoiceSummaryReportCount > 0 && (\n          <CustomPagination\n            totalCount={financeInvoiceSummaryReportCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onChange={onPaginationChange}\n          />\n        )}\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default InvoiceStatusWiseSummary;"],"names":["control","formState","errors","setValue","handleSubmit","rhfHandleSubmit","getValues","useForm","pageSize","setPageSize","useState","currentPage","setCurrentPage","searchText","setSearchText","debouncedFilterText","setDebouncedFilterText","filtersApplied","setFiltersApplied","initialLoadComplete","setInitialLoadComplete","filterTrigger","setFilterTrigger","canRead","usePermissions","dispatch","useDispatch","navigate","useNavigate","searchParams","setSearchParams","useSearchParams","financeInvoiceSummaryReportList","financeInvoiceSummaryReportSummary","financeSummaryWiseFunc_loading","financeInvoiceSummaryReportCount","useSelector","state","reports","branchList","branch","departmentListData","loading","depLoading","department","officeAddressListData","officeAddressLoading","officeAddress","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","BranchId","useWatch","name","defaultValue","initialStatus","get","initialLayoutId","initialStartDate","dayjs","startOf","format","initialEndDate","initialPage","parseInt","initialBranchId","initialDepartmentId","useEffect","hasInitialFilters","timer","setTimeout","clearTimeout","updateUrlParams","useCallback","newParams","params","URLSearchParams","undefined","status","set","delete","layoutId","startDate","endDate","page","PDBranchId","requestPayLoadReturn","pagination","arguments","length","branchId","formattedStartDate","formattedEndDate","reqPayload","text","sort","isPagination","companyId","userType","_id","directorId","invoiceLayoutId","departmentId","branchSearch","deptSearch","includes","toString","financeSummaryWiseFunc","officeAddressSearch","type","bankAccountId","isGSTEnabled","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","Option","value","map","element","fullName","message","_ref2","_sortByPropertyAlphab","onChange","disabled","ListLoader","sortByPropertyAlphabetically","_ref3","_sortByPropertyAlphab2","inputAntdSelectClassNameFilter","firmName","_ref4","_ref5","CustomDatePicker","report","picker","disabledDate","current","isAfter","moment","endOf","_ref6","isBefore","onClick","handleResetFilters","prev","data","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref7","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","Descriptions","bordered","column","Item","convertIntoAmount","invoiceBilled","gstCharged","totalBilled","Number","pazeSizeReport","async","_response$data2","_response$data3","_response$data3$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","docs","totalGross","totalGST","totalGrand","body","index","_data$clientData2","gross","gst","grand","grandTotal","createdAt","invoiceNumber","clientData","totalRow","push","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","didDrawCell","row","cell","setFont","save","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","_data$clientData","sno","date","forEach","item","addRow","colNumber","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","colSpan","Loader2","_element$clientData","Tooltip","placement","title","encrypt","invoicePDFPath","FaEye","CustomPagination","totalCount"],"sourceRoot":""}