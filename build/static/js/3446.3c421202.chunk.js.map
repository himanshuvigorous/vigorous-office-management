{"version":3,"file":"static/js/3446.3c421202.chunk.js","mappings":"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","sources":["pages/financeManagement/advance/EditAdvance.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { domainName, inputClassName, inputLabelClassName, inputLabelClassNameReactSelect } from \"../../../constents/global\";\nimport { branchSearch, getBranchDetails } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport ReactSelect from \"react-select\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport { expenseTypeSearch } from \"../../global/other/ExpenseHead/expenseTypeFeature/_expenseType_reducers\";\nimport { fileUploadFunc } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { getadvanceDetails, updateadvance } from \"./advanceFeature/_advance_reducers\";\nimport { decrypt } from \"../../../config/Encryption\";\nimport moment from \"moment\";\nimport { clientGrpSearch } from \"../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\n\nconst EditAdvance = () => {\n  const {\n    register,\n    handleSubmit,\n    control,\n    watch,\n    reset,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { branchDetailsData } = useSelector((state) => state.branch);\n  const { employeList } = useSelector(\n    (state) => state.employe\n  );\n  const { advanceDetails } = useSelector(\n    (state) => state.advance\n  );\n  const { clientGroupList } = useSelector(state => state.clientGroup);\n  const { advanceIdEnc } = useParams();\n  const advanceId = decrypt(advanceIdEnc);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: advanceId,\n      companyId: advanceDetails?.companyId,\n      directorId: advanceDetails?.directorId,\n      branchId: advanceDetails?.branchId,\n      \"clientGroupId\": data?.groupName,\n      \"employeId\": data?.type === \"cash\" ? data?.employeeId?.value : null,\n      \"bankAccId\": data?.type !== \"cash\" ? data?.bankId : null,\n      \"type\": data?.type,\n      \"chequeNo\": data?.type === \"cheque\" ? data?.chequeNo : null,\n      \"transactionNo\": data?.type === \"bank\" ? data?.transactionNo : null,\n      \"amount\": + data?.amount,\n      \"naration\": data?.naration,\n      \"date\": data?.date,\n    };\n    dispatch(updateadvance(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n\n  useEffect(() => {\n    dispatch(getadvanceDetails({\n      _id: advanceId\n    }))\n  }, [])\n  useEffect(() => {\n    if (advanceDetails) {\n      setValue(\"type\", advanceDetails?.type);\n      setValue(\"amount\", advanceDetails?.amount);\n      setValue(\"date\", moment(advanceDetails?.date).format(\"YYYY-MM-DD\"));\n      setValue(\"naration\", advanceDetails?.naration);\n      // setValue(\"groupName\", advanceDetails?.naration);\n      dispatch(\n        clientGrpSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n          groupId: \"\",\n          companyId: advanceDetails?.companyId,\n          branchId: advanceDetails?.branchId,\n        })\n      ).then((data) => {\n        if (!data?.error) {\n          setValue(\"groupName\", advanceDetails?.clientGroupId)\n        }\n      })\n      if (advanceDetails?.type === \"bank\" || advanceDetails?.type === \"cheque\") {\n        dispatch(getBranchDetails({ _id: advanceDetails?.branchId })).then((data) => {\n          if (!data?.error) {\n            setValue(\"bankId\", advanceDetails?.bankAccId);\n            setValue(\"transactionNo\", advanceDetails?.transactionNo);\n            setValue(\"chequeNo\", advanceDetails?.chequeNo);\n          }\n        });\n      } else if (advanceDetails?.type === \"cash\") {\n\n\n        const reqPayload = {\n          text: \"\",\n          status: true,\n          sort: true,\n          isTL: \"\",\n          isHR: \"\",\n          isPagination: false,\n          departmentId: '',\n          designationId: '',\n          companyId: advanceDetails?.companyId,\n          branchId: advanceDetails?.branchId,\n        };\n\n        dispatch(employeSearch(reqPayload)).then((data) => {\n          if (!data?.error) {\n            const filteredData = data?.payload?.data?.docs?.find((emp) => emp?._id === advanceDetails?.employeId);\n            setValue(\"employeeId\", { value: filteredData?._id, label: filteredData?.fullName });\n          }\n        });\n      }\n    }\n  }, [advanceDetails]);\n\n\n  const handleFocusClientGrp = () => {\n\n    dispatch(\n      clientGrpSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n        companyId: advanceDetails?.companyId,\n        branchId: advanceDetails?.branchId,\n      })\n    );\n\n  };\n\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-1 md:gap-8 md:my-1 px-3 md:mt-4\">\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Group Type <span className=\"text-red-600\">*</span>\n              </label>\n              <select\n                {...register(\"groupName\", {\n                  required: \"Organization type is required\",\n                })}\n                className={` ${inputClassName} ${errors.groupName\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n                showSearch\n                filterOption={(input, option) =>\n                  String(option?.children).toLowerCase().includes(input.toLowerCase())\n                }\n                onFocus={handleFocusClientGrp}\n              >\n                <option className=\"text-xs\" value=\"\">\n                  Select Group Type\n                </option>\n                {clientGroupList?.map((elment, index) => (\n                  <option value={elment?._id}>{elment?.fullName}({elment?.groupName})</option>\n                ))}\n              </select>\n              {errors.groupName && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.groupName.message}\n                </p>\n              )}\n            </div>\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Type <span className=\"text-red-600\">*</span>\n              </label>\n              <select\n                {...register(\"type\", {\n                  required: \"Type is required\"\n                })}\n                className={`${inputClassName}  ${errors.type\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  } `}\n                showSearch\n                filterOption={(input, option) =>\n                  String(option?.children).toLowerCase().includes(input.toLowerCase())\n                }\n              >\n                <option value='cash'>\n                  Cash Deposit\n                </option>\n                <option value='cheque'>\n                  Cheque Deposit\n                </option>\n                <option value='bank'>\n                  Bank Transfer\n                </option>\n              </select>\n              {errors.type && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.type.message}\n                </p>\n              )}\n            </div>\n            {watch(\"type\") !== \"cash\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Sender Bank<span className=\"text-red-600\">*</span>\n              </label>\n              <select\n\n                {...register(\"bankId\",)}\n                className={`${inputClassName}  ${errors.bankId\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  } `}\n              // onFocus={handleFocusCompany}\n              >\n                <option value=''>\n                  select bank\n                </option>\n                {\n                  branchDetailsData?.data?.bankData && branchDetailsData?.data?.bankData.length > 0 &&\n                  branchDetailsData.data.bankData.map((type) => (\n                    <option key={type._id} value={type._id}>\n                      {`${type.bankName} (${type.branchName})`}\n                    </option>\n                  ))\n                }\n              </select>\n              {errors.bankId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.bankId.message}\n                </p>\n              )}\n            </div>}\n            {watch(\"type\") === \"cash\" && <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Employee</label>\n              <Controller\n                name=\"employeeId\"\n                control={control}\n                rules={{ required: \"Employee is required\" }}\n                render={({ field }) => (\n                  <ReactSelect\n                    {...field}\n                    options={employeList?.map((employee) => ({\n                      value: employee?._id,\n                      label: employee?.fullName,\n                    }))}\n                    classNamePrefix=\"react-select\"\n                    className={`${inputLabelClassNameReactSelect} ${errors.employeeId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Employee\"\n                  />\n                )}\n              />\n              {errors.employeeId && <p className=\"text-red-500 text-sm\">{errors.employeeId.message}</p>}\n            </div>}\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Amount<span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"number\"\n                 step=\"0.01\"\n                {...register(\"amount\", {\n                  required: \"Amount is required\",\n\n                })}\n                className={` ${inputClassName} ${errors.amount ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Amount\"\n              />\n              {errors.amount && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.amount.message}\n                </p>\n              )}\n            </div>\n            {watch(\"type\") === \"cheque\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Cheque No\n                <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"chequeNo\", {\n                  required: \"chequeNo is required\",\n\n                })}\n                className={` ${inputClassName} ${errors.chequeNo ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Cheque no\"\n              />\n              {errors.chequeNo && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.chequeNo.message}\n                </p>\n              )}\n            </div>}\n            {watch(\"type\") === \"bank\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Transaction No\n                <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"transactionNo\", {\n                  required: \"transaction No is required\",\n\n                })}\n                className={` ${inputClassName} ${errors.transactionNo ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Cheque no\"\n              />\n              {errors.transactionNo && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.transactionNo.message}\n                </p>\n              )}\n            </div>}\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Naration<span className=\"text-red-600\">*</span>\n              </label>\n              <textarea\n\n                {...register(\"naration\", {\n                  required: \"Naration is required\",\n\n                })}\n                className={` ${inputClassName} ${errors.naration ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Naration\"\n              ></textarea>\n              {errors.naration && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.naration.message}\n                </p>\n              )}\n            </div>\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Date<span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"date\"\n                {...register(\"date\", {\n                  required: \"Date is required\",\n                })}\n                className={` ${inputClassName} ${errors.date ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Date\"\n              />\n              {errors.date && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.date.message}\n                </p>\n              )}\n            </div>\n\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              className=\"bg-header text-white p-2 px-4 rounded mt-3\"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default EditAdvance;\n"],"names":["EditAdvance","_branchDetailsData$da","_branchDetailsData$da2","register","handleSubmit","control","watch","reset","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","branchDetailsData","useSelector","state","branch","employeList","employe","advanceDetails","advance","clientGroupList","clientGroup","advanceIdEnc","useParams","advanceId","decrypt","useEffect","getadvanceDetails","_id","type","amount","moment","date","format","naration","clientGrpSearch","isPagination","text","sort","status","groupId","companyId","branchId","then","data","error","clientGroupId","getBranchDetails","bankAccId","transactionNo","chequeNo","reqPayload","isTL","isHR","departmentId","designationId","employeSearch","_data$payload","_data$payload$data","_data$payload$data$do","filteredData","payload","docs","find","emp","employeId","value","label","fullName","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","_data$employeeId","finalPayload","directorId","groupName","employeeId","bankId","updateadvance","concat","inputLabelClassName","_objectSpread","required","inputClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","onFocus","handleFocusClientGrp","map","elment","index","message","bankData","length","bankName","branchName","Controller","name","rules","render","_ref","field","ReactSelect","options","employee","classNamePrefix","inputLabelClassNameReactSelect","placeholder","step"],"sourceRoot":""}