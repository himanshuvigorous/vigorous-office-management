{"version":3,"file":"static/js/9983.5fe0674e.chunk.js","mappings":"0OAoFA,QA1EA,WACE,MAASA,QAAQC,IAAoBC,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,WAC1D,SACJC,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MACEC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAajB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACXF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UACpBE,EAAAA,EAAAA,MAAA,QAAMC,aAAa,MAAMF,UAAU,eAAeG,SAAUd,EAdhDe,IAChB,MAAMC,EAAe,CACnB,KAAW,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAME,aACb,OAAa,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMG,QAGjBd,GAASe,EAAAA,EAAAA,IAAmBH,IAAeI,KAAML,KAC/CA,EAAKM,OAAUf,GAAU,OAO4DI,SAAA,EACjFE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gDAA+CD,SAAA,EAC5DE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EACfE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAAW,OAAKC,EAAAA,IAAsBb,SAAA,CAAC,SACrCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAEtCF,EAAAA,EAAAA,KAAA,SAAAgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,KAAK,QACD1B,EAAS,eAAgB,CAC3B2B,SAAU,+BACV,IACFf,UAAS,GAAAW,OAAKK,EAAAA,IAAcL,OAAGpB,EAAOe,aAAe,gBAAkB,mBAEvEW,YAAY,yBAEb1B,EAAOe,eACNT,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCR,EAAOe,aAAaY,cAI3BrB,EAAAA,EAAAA,KAAA,cAeFA,EAAAA,EAAAA,KAAA,OAAKG,UAAU,oBAAmBD,UAClCF,EAAAA,EAAAA,KAAA,UACIiB,KAAK,SACLK,SAAUnC,EACVgB,UAAS,GAAAW,OAAK3B,EAAkB,cAAe,YAAW,gCAAgCe,SAE3Ff,GAAkBa,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,IAAM,mBAO5C,C","sources":["pages/global/other/Industry/CreateIndustry.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createIndustryFunc } from \"./IndustryFeature/_industry_reducers\";\nimport { inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport Loader from \"../../../../global_layouts/Loader\";\n\n\n\nfunction CreateIndustry() {\n  const {  loading:industryLoading } = useSelector(state => state.industry)\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      \"name\":data?.industryName,\n      \"status\":data?.status\n  \n    }\n    dispatch(createIndustryFunc(finalPayload)).then((data) => {\n     !data.error &&  navigate(-1)\n    });\n  }\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-5 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Name <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"industryName\", {\n                  required: \"Industry Name is required\",\n                })}\n                className={`${inputClassName}${errors.industryName ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Industry Name\"\n              />\n              {errors.industryName && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.industryName.message}\n                </p>\n              )}\n            </div>\n            <div>\n        {/* <label className={`${inputLabelClassName}`}>Status <span className=\"text-red-600\">*</span></label>\n        <select\n          {...register(\"status\", { required: \"Status is required\" })}\n          className={`bg-white ${errors.status ? \"border-[1px] \" : \"border-gray-300\"} ${inputClassName}`}\n        >\n          <option value=\"\">Select Status</option>\n          <option value={true}>Active</option>\n          <option value={false}>Inactive</option>\n        </select>\n        {errors.status && (\n          <p className=\"text-red-500 text-sm\">{errors.status.message}</p>\n        )} */}\n      </div>\n          </div>\n          <div className=\"flex justify-end \">\n          <button\n              type=\"submit\"\n              disabled={industryLoading}\n              className={`${industryLoading ? 'bg-gray-400': 'bg-header' } text-white p-2 px-4 rounded`}\n            >\n            {industryLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  )\n}\nexport default CreateIndustry"],"names":["loading","industryLoading","useSelector","state","industry","register","handleSubmit","formState","errors","useForm","dispatch","useDispatch","navigate","useNavigate","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","industryName","status","createIndustryFunc","then","error","concat","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","disabled","Loader"],"sourceRoot":""}