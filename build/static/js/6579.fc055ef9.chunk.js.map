{"version":3,"file":"static/js/6579.fc055ef9.chunk.js","mappings":"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","sources":["pages/global/other/policy/EditPolicy.js"],"sourcesContent":["import { useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { decrypt } from \"../../../../config/Encryption\";\nimport { useEffect, useState } from \"react\";\nimport {\n  domainName,\n  inputClassName,\n  inputLabelClassName,\n} from \"../../../../constents/global\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport ReactQuill from \"react-quill\";\nimport { getPolicyDetails, updatecommonEmail } from \"./policyFeatures/policy_reducers\";\nimport { fileUploadFunc } from \"../fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { FaRegFile, FaTimes } from \"react-icons/fa\";\n\n\nconst EditPolicy = () => {\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { policyIdEnc } = useParams();\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n  const policyId = decrypt(policyIdEnc);\n  const { policyDetails } = useSelector((state) => state.policy);\n\n  const [editorValue, setEditorValue] = useState(``);\n  const [tagInput, setTagInput] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  const [isPreview, setIsPreview] = useState(false);\n  const [formData, setFormData] = useState({\n    attachments: [],\n  }); useEffect(() => {\n    dispatch(employeSearch());\n  }, []);\n  useEffect(() => {\n    let reqData = {\n      _id: policyId,\n    };\n    dispatch(getPolicyDetails(reqData));\n  }, []);\n\n  useEffect(() => {\n    if (policyDetails) {\n    \n      setValue(\"title\", policyDetails?.title);\n      setEditorValue(policyDetails?.content);\n    }\n  }, [policyDetails]);\n\n  const onSubmit = (data) => {\n\n    const finalPayload = {\n      _id: policyId,\n      companyId: userInfoglobal?.userType === \"admin\" ? data?.PDCompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      directorId: userInfoglobal?.userType === \"companyDirector\" ? userInfoglobal?._id : userInfoglobal?.directorId,\n      branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ? data?.PDBranchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      title: data?.title,\n      content: editorValue\n    };\n\n    dispatch(updatecommonEmail(finalPayload)).then((data) => {\n      if (!data.error) navigate(\"/admin/policy\");\n    });\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setFormData(prev => ({\n          ...prev,\n          attachments: [...prev.attachments, res.payload?.data]\n        }));\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setFormData(prev => {\n      const updatedAttachments = prev.attachments.filter((_, i) => i !== index);\n      return { ...prev, attachments: updatedAttachments };\n    });\n  };\n\n  const handleEditorChange = (value) => {\n    setEditorValue(value);\n  };\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2\">\n            {userInfoglobal?.userType === \"admin\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Company <span className=\"text-red-600\">*</span>\n              </label>\n              <select\n                {...register(\"PDCompanyId\", {\n                  required: \"company is required\",\n                })}\n                className={` ${inputClassName} ${errors.PDCompanyId\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n              >\n                <option className=\"\" value=\"\">\n                  Select Comapany\n                </option>\n                {companyList?.map((type) => (\n                  <option value={type?._id}>{type?.fullName}</option>\n                ))}\n              </select>\n              {errors.PDCompanyId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDCompanyId.message}\n                </p>\n              )}\n            </div>}\n            {/* {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n                        <label className={`${inputLabelClassName}`}>\n                          Branch <span className=\"text-red-600\">*</span>\n                        </label>\n                        <select\n                          {...register(\"PDBranchId\", {\n                            required: \"Branch is required\",\n                          })}\n                          className={` ${inputClassName} ${errors.PDBranchId\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        >\n                          <option className=\"\" value=\"\">\n                            Select Branch\n                          </option>\n                          {branchList?.map((type) => (\n                            <option value={type?._id}>{type?.fullName}</option>\n                          ))}\n                        </select>\n                        {errors.PDBranchId && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.PDBranchId.message}\n                          </p>\n                        )}\n                      </div>\n                      } */}\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Title</label>\n              <input\n                type=\"text\"\n                {...register(\"title\", {\n                  required: \"Title is required\",\n                })}\n                className={`${inputClassName} ${errors.title ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Title\"\n              />\n              {errors.title && (\n                <p className=\"text-red-500 text-sm\">{errors.title.message}</p>\n              )}\n            </div>\n            <div className=\"mt-4 col-span-2\">\n              <ReactQuill\n                value={editorValue}\n                onChange={handleEditorChange}\n                placeholder=\"Write the email body here\"\n                modules={{\n                  toolbar: [\n                    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                    ['bold', 'italic', 'underline', 'strike'],\n                    [{ 'align': [] }],\n                    ['link', 'image', 'video'],\n                    ['blockquote', 'code-block'],\n                    ['clean']\n                  ],\n                }}\n                formats={['header', 'font', 'list', 'bold', 'italic', 'underline', 'link', 'align', 'clean']}\n              />\n            </div>\n\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2\">\n\n            <div className=\"pt-0 mt-6\">\n              <div className=\"font-medium mb-2\">Attachments:</div>\n              {!isPreview ? (\n                <div className=\"space-y-4\">\n                  <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                  <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer\">\n                    <FaRegFile className=\"mr-2\" /> Add Attachments\n                  </label>\n\n                  <div className=\"space-y-2\">\n                    {formData.attachments.map((file, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                        <a\n                          href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                          className=\"flex items-center space-x-2\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <FaRegFile className=\"text-gray-500\" />\n                          <span className=\"text-sm text-gray-600\">{file}</span>\n                        </a>\n                        <button\n                          type=\"button\"\n                          onClick={() => handleRemoveFile(index)}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <FaTimes />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  {/* Attachments preview logic */}\n                </div>\n              )}\n            </div>\n\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              className=\"bg-header text-white p-2 px-4 rounded mt-4\"\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default EditPolicy;"],"names":["EditPolicy","register","handleSubmit","control","setValue","formState","errors","useForm","dispatch","useDispatch","navigate","useNavigate","policyIdEnc","useParams","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","companyList","useSelector","state","company","branchList","branch","policyId","decrypt","policyDetails","policy","editorValue","setEditorValue","useState","tagInput","setTagInput","tags","setTags","isPreview","setIsPreview","formData","setFormData","attachments","useEffect","employeSearch","reqData","_id","getPolicyDetails","title","content","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","userType","PDCompanyId","directorId","branchId","PDBranchId","updatecommonEmail","then","error","inputLabelClassName","_objectSpread","required","inputClassName","value","map","type","fullName","message","placeholder","ReactQuill","onChange","modules","toolbar","formats","e","filePath","target","files","isVideo","isMultiple","fileUploadFunc","res","_res$payload","payload","prev","_res$payload2","id","htmlFor","FaRegFile","file","index","href","process","rel","onClick","updatedAttachments","filter","_","i","handleRemoveFile","FaTimes"],"sourceRoot":""}