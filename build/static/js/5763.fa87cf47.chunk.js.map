{"version":3,"file":"static/js/5763.fa87cf47.chunk.js","mappings":"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","sources":["pages/timeSlot/TimeSlotsList.js"],"sourcesContent":["import { FaAngleDown, FaAngleUp, FaPenToSquare, FaPlus } from \"react-icons/fa6\"\nimport GlobalLayout from \"../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useNavigate } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport { encrypt } from \"../../config/Encryption\"\nimport { RiDeleteBin5Line } from \"react-icons/ri\"\nimport Swal from \"sweetalert2\"\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { HiOutlineFilter } from \"react-icons/hi\";\nimport { domainName, inputAntdSelectClassNameFilter, inputClassNameSearch, sortByPropertyAlphabetically } from \"../../constents/global\";\nimport getUserIds from '../../constents/getUserIds';\nimport CustomPagination from \"../../component/CustomPagination/CustomPagination\"\nimport { deleteTimeSlotsFunc, getTimeSlotList } from \"./timeSlotsFeatures/_timeSlots_reducers\"\nimport { branchSearch } from \"../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../company/companyManagement/companyFeatures/_company_reducers\";\nimport { Select, Tooltip } from \"antd\"\nimport usePermissions from \"../../config/usePermissions\"\nimport Loader2 from \"../../global_layouts/Loader/Loader2\"\nimport dayjs from \"dayjs\"\nimport ListLoader from \"../../global_layouts/ListLoader\"\n\nfunction TimeSlotsList() {\n    const {\n        register,\n        handleSubmit,\n        control,\n        formState: { errors },\n        setValue,\n    } = useForm();\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const { timeSlotsListData, totalTimeSlotsCount, loading } = useSelector(state => state.timeSlots)\n    // const { companyList } = useSelector((state) => state.company);\n    const userInfoglobal = JSON.parse(\n        localStorage.getItem(`user_info_${domainName}`)\n    );\n    const { companyList } = useSelector((state) => state.company);\n    const { branchList, loading: branchSearchLoading } = useSelector(\n        (state) => state.branch\n    );\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const [searchText, setSearchText] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n\n    const CompanyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: \"\",\n    });\n    const BranchId = useWatch({\n        control,\n        name: \"PDBranchId\",\n        defaultValue: \"\",\n    });\n\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const limit = 10;\n\n\n    const filters = [BranchId, CompanyId, status, searchText].join(\"-\");\n    const [isFirstRender ,setisFirstRender] = useState(false)\n    \n    useEffect(() => {\n      if (!isFirstRender) {\n        setisFirstRender(state=>true);\n        return;\n      }\n      if (currentPage === 1) {\n        fetchTimeSlotsList();\n      } else {\n        setCurrentPage(1);\n      }\n    }, [filters]);\n\n    useEffect(() => {\n        fetchTimeSlotsList();\n    }, [currentPage])\n\n\n    const fetchTimeSlotsList = () => {\n        const reqListData = {\n            limit: limit,\n            page: currentPage,\n            reqPayload: {\n                \"text\": searchText,\n                \"sort\": true,\n                \"status\": status,\n                isPagination: true,\n                companyId: userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n                \"directorId\": \"\",\n                branchId:\n                    userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\"\n                        ? userInfoglobal?._id\n                        : userInfoglobal?.branchId,\n            }\n        }\n        dispatch(getTimeSlotList(reqListData));\n    }\n\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id,\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteTimeSlotsFunc(reqData)).then((data) => {\n                    fetchTimeSlotsList();\n                })\n            }\n        });\n    };\n\n\n\n    useEffect(() => {\n        if (\n            CompanyId ||\n            userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n        ) {\n            dispatch(\n                branchSearch({\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                    companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n                })\n            );\n        }\n    }, [CompanyId])\n\n    useEffect(() => {\n        if (userInfoglobal?.userType === \"admin\") {\n            dispatch(\n                companySearch({\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                })\n            );\n        }\n    }, []);\n\n    const onChange = (e) => {\n\n        setSearchText(e);\n    };\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n    return (\n        <GlobalLayout onChange={onChange}>\n            <>\n                {/* <h2 className=\"text-2xl font-bold\">\n                    Time Slot List\n                </h2> */}\n                <div className=''>\n                    <div className='sm:flex justify-between items-center md:space-y-0 space-y-2 py-1'>\n                        <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-2 sm:gap-3 gap-1\">\n                            {userInfoglobal?.userType === \"admin\" &&\n                                <div className=\"\">\n                                    <Controller\n                                        name=\"PDCompanyId\"\n                                        control={control}\n                                        rules={{ required: \"Company is required\" }}\n                                        render={({ field }) => (\n                                            <Select\n                                                {...field}\n                                                className={`w-full ${inputClassNameSearch} ${errors.PDCompanyId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                                                placeholder=\"Select Company\"\n                                                showSearch\n                                                filterOption={(input, option) =>\n                                                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                                }\n                                            >\n                                                <Select.Option value=\"\">Select Company</Select.Option>\n                                                {companyList?.map((type) => (\n                                                    <Select.Option key={type?._id} value={type?._id}>\n                                                        {type?.fullName}\n                                                    </Select.Option>\n                                                ))}\n                                            </Select>\n                                        )}\n                                    />\n                                    {errors.PDCompanyId && (\n                                        <p className=\"text-red-500 text-sm\">{errors.PDCompanyId.message}</p>\n                                    )}\n                                </div>\n                            }\n                            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") &&\n                                <div className=\"\">\n                                    <Controller\n                                        name=\"PDBranchId\"\n                                        control={control}\n                                        rules={{ required: \"Branch is required\" }}\n                                        render={({ field }) => (\n                                            <Select\n                                                {...field}\n                                                className={`w-full ${inputAntdSelectClassNameFilter} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                                                placeholder=\"Select Branch\"\n                                                getPopupContainer={(trigger) => trigger.parentNode}\n                                                showSearch\n                                                filterOption={(input, option) =>\n                                                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                                }\n                                            >\n                                                <Select.Option value=\"\">Select Branch</Select.Option>\n                                                {branchSearchLoading ? (\n                                                    <Select.Option disabled>\n                                                        <ListLoader />\n                                                    </Select.Option>\n                                                ) : (\n                                                    sortByPropertyAlphabetically(branchList)?.map((type) => (\n                                                        <Select.Option key={type?._id} value={type?._id}>\n                                                            {type?.fullName}\n                                                        </Select.Option>\n                                                    ))\n                                                )}\n                                            </Select>\n                                        )}\n                                    />\n                                    {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n                                </div>}\n                        </div>\n                        <div className=\"flex justify-end items-center gap-2 \">\n                            <button\n                                onClick={() => {\n                                    setValue(\"status\", \"\");\n                                    setValue(\"PDBranchId\", '');\n                                    setValue(\"PdDepartmentId\", \"\");\n                                    setValue(\"PdCompanyId\", \"\");\n                                }}\n                                className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                                <span className=\"text-[12px]\">Reset</span>\n                            </button>\n\n                            <Tooltip placement=\"topLeft\"  title='New TimeSlot'>\n                                <button\n                                    onClick={() => navigate(\"/admin/timeSlots/create\")}\n                                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\">\n                                    <FaPlus />\n                                    <span className=\"text-[12px]\">Add New TimeSlot</span>\n                                </button>\n                            </Tooltip>\n                        </div>\n                    </div>\n\n                </div>\n                <div className=\"bg-[#ffffff] w-full overflow-x-auto rounded-xl mt-1\">\n                    {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                        <thead className=''>\n                            <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                                <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                    S.No.\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>Shift Name</span>\n                                        \n                                    </div>\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>Working Days</span>\n                                        \n                                    </div>\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>Sunday Offs</span>\n                                        \n                                    </div>\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>Saturday Offs</span>\n                                        \n                                    </div>\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>Opening Time</span>\n                                        \n                                    </div>\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>Closing Time</span>\n                                        \n                                    </div>\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>Late Min</span>\n                                       \n                                    </div>\n                                </th>\n\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>Lunch Min</span>\n                                       \n                                    </div>\n                                </th>\n\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>Skip Min</span>\n                                       \n                                    </div>\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>created At</span>\n                                       \n                                    </div>\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    <div className='flex justify-start items-center space-x-1'>\n                                        <span>created By</span>\n                                       \n                                    </div>\n                                </th>\n                               \n                                {canUpdate && <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                    Action\n                                </th>}\n                            </tr>\n                        </thead>\n                        {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                            <td\n                                colSpan={10}\n                                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                            >\n                                <Loader2 />\n                            </td>\n                        </tr> :\n                            <tbody>\n                                {timeSlotsListData && timeSlotsListData?.length > 0 ?\n                                    timeSlotsListData?.map((element, index) => (\n                                        <tr className={` ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} border-b-[1px] border-[#DDDDDD] text-[#374151] text-[14px]`}>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                {index + 1 + (currentPage - 1) * limit}\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.shiftName ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>  {element?.workingDays?.join(\", \") ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                <span\n                                                    className={`${element?.weekOffRules?.sundaysOff ? 'bg-[#E0FFBE] border-green-500' : 'bg-red-200 border-red-500'\n                                                        } border-[1px] px-2 py-1 rounded-lg text-black text-[12px]`}>\n                                                    {element?.weekOffRules?.sundaysOff ? 'Yes' : 'No' ?? \"-\"}\n                                                </span>\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.weekOffRules?.saturdaysOff?.join(\", \") ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.openingTime ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.closingTime ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.lateMIN ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.lunchMin ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.skipHRS ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.createdBy ?? \"-\"}</td>\n                                            \n                                            {canUpdate && <td className='whitespace-nowrap border-none p-2'>\n                                                {(element?.companyId === \"null\" || element?.companyId === null) ? (\n                                                    <span className=\"py-1.5 text-black \"> - </span>\n                                                ) : (\n                                                    <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                        <Tooltip placement=\"topLeft\"  title='Edit'>\n                                                            <button onClick={() => { navigate(`/admin/timeSlots/edit/${encrypt(element?._id)}`) }} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                                <FaPenToSquare className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} />\n                                                            </button>\n                                                        </Tooltip>\n                                                      \n                                                    </span>\n                                                )}\n                                            </td>}\n                                        </tr>\n                                    ))\n                                    : (<tr className=\"bg-white bg-opacity-5 \" >\n                                        <td colSpan={5} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">Record Not Found</td>\n                                    </tr>)}\n                            </tbody>}\n                    </table>}\n                </div>\n                {timeSlotsListData?.length > 0 &&\n                    <CustomPagination\n                        totalCount={totalTimeSlotsCount}\n                        pageSize={limit}\n                        currentPage={currentPage}\n                        onChange={onPaginationChange}\n                    />}\n            </>\n        </GlobalLayout >\n    )\n}\nexport default TimeSlotsList;"],"names":["register","handleSubmit","control","formState","errors","setValue","useForm","navigate","useNavigate","dispatch","useDispatch","timeSlotsListData","totalTimeSlotsCount","loading","useSelector","state","timeSlots","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","companyList","company","branchList","branchSearchLoading","branch","currentPage","setCurrentPage","useState","searchText","setSearchText","status","setStatus","CompanyId","useWatch","name","defaultValue","BranchId","filters","join","isFirstRender","setisFirstRender","useEffect","fetchTimeSlotsList","reqListData","limit","page","reqPayload","isPagination","companyId","userType","_id","branchId","getTimeSlotList","branchSearch","text","sort","companySearch","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsx","GlobalLayout","onChange","e","children","_jsxs","_Fragment","className","Controller","rules","required","render","_ref","field","Select","_objectSpread","inputClassNameSearch","PDCompanyId","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","type","fullName","message","_ref2","_sortByPropertyAlphab","inputAntdSelectClassNameFilter","PDBranchId","getPopupContainer","trigger","parentNode","disabled","ListLoader","sortByPropertyAlphabetically","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","element","index","_element$shiftName","_element$workingDays$","_element$workingDays","_element$weekOffRules","_element$weekOffRules2","_element$weekOffRules3","_element$weekOffRules4","_element$weekOffRules5","_element$openingTime","_element$closingTime","_element$lateMIN","_element$lunchMin","_element$skipHRS","_dayjs$format","_element$createdBy","shiftName","workingDays","weekOffRules","sundaysOff","saturdaysOff","openingTime","closingTime","lateMIN","lunchMin","skipHRS","dayjs","createdAt","format","createdBy","encrypt","FaPenToSquare","size","CustomPagination","totalCount","pageSize"],"sourceRoot":""}