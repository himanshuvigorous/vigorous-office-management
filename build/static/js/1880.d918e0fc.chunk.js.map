{"version":3,"file":"static/js/1880.d918e0fc.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/all_client_report/AllClientReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { AllClientReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\n\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\n\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\nimport { useSearchParams } from \"react-router-dom\";\n\nfunction AllClientReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const {\n    allClientReportList,\n    AllClientReportFunc_loading,\n    totalAllClientCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const [searchParams,setSearchParams]=useSearchParams();\n  const urlStatus = searchParams.get('status')\n\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList, groupSearchLoading } = useSelector((state) => state.clientGroup);\n  const { clientList } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: urlStatus ? 'true' :'',\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n        organizationId: PDOrganizationType,\n        organizationIds: [],\n        departmentId: department,\n        departmentIds: [],\n        industryId: PDindustrytype,\n        industryIds: [],\n        groupId: groupName,\n        groupIds: [],\n\n\n      },\n    };\n  };\n  useEffect(() => {\n    if(urlStatus){\n      setValue('status','true')\n     \n    }\n\n    else{fetchClientServiceTaskReport(debouncedFilterText);}\n  }, [currentPage, debouncedFilterText, pageSize]);\n\n  useEffect(() => {\n    if(urlStatus){\n   \n       fetchClientServiceTaskReport(debouncedFilterText);\n    }else{}\n  }, [currentPage, debouncedFilterText, pageSize]);\n\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(AllClientReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n\n  const handleDepartmentModal = (element) => {\n    setDepartmentModalOpen(true);\n    setDepartmentModalData(element);\n  };\n\n\n\n\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"AllClientTask\");\n    // Title\n\n    worksheet.columns = [\n      { header: \"S.No\", key: \"sno\", width: 10 },\n      { header: \" Group Name\", key: \"clientGroupName\", width: 25 },\n      { header: \"Client Name\", key: \"clientName\", width: 25 },\n      { header: \"Organization Name\", key: \"organizationName\", width: 25 },\n      { header: \"Industry Name\", key: \"industryName\", width: 20 },\n      { header: \"Email\", key: \"email\", width: 30 },\n      { header: \"Mobile\", key: \"mobile\", width: 20 },\n      { header: \"Date of Joining\", key: \"dateOfJoining\", width: 25 },\n      { header: \"Status\", key: \"status\", width: 15 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.AllClientReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!response && !response?.data?.docs) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1 + (currentPage - 1) * pageSize,\n        clientGroupName: data?.clientGroupData?.fullName || \"-\",\n        clientName: data?.fullName || \"-\",\n        organizationName: data?.organizationName || \"-\",\n        industryName: data?.industryName || \"-\",\n        email: data?.email || \"-\",\n        mobile: `${data?.mobile?.code || \"-\"} ${data?.mobile?.number || \"-\"}`,\n        dateOfJoining: data?.clientProfile?.dateOfJoining\n          ? dayjs(data.clientProfile.dateOfJoining).format(\"DD-MM-YYYY hh:mm a\")\n          : \"-\",\n        status: data?.status ? \"Active\" : \"InActive\",\n\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"allClientReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n\n\n\n    doc.setFontSize(16);\n    \n    const headers = [\n      \"S.No\",\n      \"Client Group Name\",\n      \"Client Name\",\n      \"Organization Name\",\n      \"Industry\",\n      \"Email\",\n      \"Mobile\",\n      \"Date of Joining\",\n      \"Status\"\n\n    ];\n    const response = await reportsServices?.AllClientReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!response && !response?.data?.docs) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1 + (currentPage - 1) * pageSize,\n        data?.clientGroupData?.fullName || \"-\",\n        data?.fullName || \"-\",\n        data?.organizationName || \"-\",\n        data?.industryName || \"-\",\n        data?.email || \"-\",\n        `${data?.mobile?.code || \"-\"} ${data?.mobile?.number || \"-\"}`,\n        data?.clientProfile?.dateOfJoining\n          ? dayjs(data.clientProfile.dateOfJoining).format(\"DD-MM-YYYY hh:mm a\")\n          : \"-\",\n        data?.status ? \"Active\" : \"InActive\"\n\n      ];\n    });\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`AllClientTask.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1 2xl:flex justify-between items-center\">\n          <div className=\"sm:flex  grid grid-cols-1 gap-1.5 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div>\n              <Controller\n                control={control}\n                name=\"PDOrganizationType\"\n                rules={{ required: \"Organization is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    showSearch\n                    onFocus={() => handleFocusOrgType()}\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">\n                      Select Organization Type\n                    </Select.Option>\n                    {orgSearchloading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      orgTypeList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                control={control}\n                name=\"PDindustrytype\"\n                rules={{ required: \"Industry type is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    onFocus={() => {\n                      handleFocusIndustry();\n                    }}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    className={`inputAntdSelectClassNameFilterReport `}\n                  >\n                    <Select.Option value=\"\"> Select Industry Type</Select.Option>\n                    {indusSearchloading ? (\n                      <Select.Option disabled>\n                        <Loader />\n                      </Select.Option>\n                    ) : (\n                      industryListData?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            \n            <div>\n              <Controller\n                name=\"department\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        deptSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\n                            \"admin\",\n                            \"company\",\n                            \"companyDirector\",\n                          ].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"groupName\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Group\"\n                    onFocus={() => {\n                      dispatch(\n                        clientGrpSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                          groupId: \"\",\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Group</Select.Option>\n                    {groupSearchLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(clientGroupList)?.map((element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName} ({element?.groupName})\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    placeholder=\"Select Status\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    {[\n                      { label: \"Active\", value: \"true\" },\n                      { label: \"InActive\", value: \"false\" },\n                    ]?.map((array) => {\n                      return (\n                        <Select.Option value={array?.value}>\n                          {array?.label}\n                        </Select.Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"PDOrganizationType\", \"\");\n                setValue(\"PDindustrytype\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"groupName\", \"\");\n\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          >\n\n          </Collapse>\n          <div className=\"space-y-1.5 flex justify-between items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Group Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Client Name\n                </th>\n\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  organization Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Industry Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Date of Joining\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th>\n                \n              </tr>\n            </thead>\n            {AllClientReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {allClientReportList &&\n                  allClientReportList?.length > 0 ? (\n                  allClientReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                     \n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.clientGroupData?.fullName}\n                      </td>\n\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.fullName}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.organizationName || '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.industryName || '-'}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.email || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.mobile?.code || \"-\"}{\" \"}\n                        {element?.mobile?.number || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.clientProfile?.dateOfJoining ? dayjs(element?.clientProfile?.dateOfJoining).format(\"DD-MM-YYYY hh:mm a\") :'-'}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.status ? 'Active' : 'InActive'}\n                      </td>\n                  \n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n          <Modal\n            className=\"antmodalclassName !w-[60%] !h-[50%]\"\n            title={`Client / ${departmentModalData?.fullName} `}\n            open={departmentModalOpen}\n            onCancel={() => setDepartmentModalOpen(false)}\n            footer={null}\n          >\n            <div className=\"flex justify-between items-center mb-4\">\n              <div>\n                {departmentModalData?.email ?? \"-\"} / {departmentModalData?.mobile?.code + departmentModalData?.mobile?.number}\n              </div>\n\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                    S.No.\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Department Name\n                  </th>\n\n                 \n                </tr>\n              </thead>\n              {AllClientReportFunc_loading ? (\n                <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={15}\n                    className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr>\n              ) : (\n                <tbody>\n                  {departmentModalData?.departmentData &&\n                    departmentModalData?.departmentData.length > 0 ? (\n                    departmentModalData?.departmentData?.map(\n                      (element, index) => (\n                        <tr\n                          className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                            } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                        >\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {index + 1 + (currentPage - 1) * pageSize}\n                          </td>\n\n                        \n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.name}\n                          </td>\n                         \n                        </tr>\n                      )\n                    )\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={15}\n                        className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              )}\n            </table>\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={totalAllClientCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default AllClientReport;\n"],"names":["_departmentModalData$","_departmentModalData$2","_departmentModalData$3","_departmentModalData$4","control","formState","errors","setValue","watch","useForm","pageSize","setPageSize","useState","dispatch","useDispatch","allClientReportList","AllClientReportFunc_loading","totalAllClientCount","useSelector","state","reports","departmentListData","loading","depLoading","department","searchParams","setSearchParams","useSearchParams","urlStatus","get","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","groupSearchLoading","clientGroup","clientList","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","PDOrganizationType","PDindustrytype","groupName","useEffect","timer","setTimeout","clearTimeout","generateFinancialYears","financialYears","year","push","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","status","organizationId","organizationIds","departmentId","departmentIds","industryId","industryIds","groupId","groupIds","fetchClientServiceTaskReport","AllClientReportFunc","departmentModalOpen","setDepartmentModalOpen","branchSearch","dayjs","subtract","handleSubmit","async","generateExcel","_response$data","_response$data2","_response$data2$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","key","width","getRow","eachCell","cell","fill","type","pattern","fgColor","argb","font","bold","alignment","vertical","horizontal","border","top","style","left","bottom","right","response","reportsServices","data","docs","apiData","map","index","_data$clientGroupData","_data$mobile","_data$mobile2","_data$clientProfile","sno","clientGroupName","clientGroupData","fullName","clientName","organizationName","industryName","email","mobile","code","number","dateOfJoining","clientProfile","format","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generatePDF","_response$data3","_response$data4","_response$data4$docs","doc","jsPDF","orientation","unit","setFontSize","body","_data$clientGroupData2","_data$mobile3","_data$mobile4","_data$clientProfile2","autoTable","startY","head","margin","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","items","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","element","PDBranchId","message","rules","required","_ref2","onFocus","orgTypeSearch","disabled","ListLoader","_ref3","indusSearch","Loader","_ref4","_sortByPropertyAlphab","deptSearch","onChange","sortByPropertyAlphabetically","_ref5","_sortByPropertyAlphab2","clientGrpSearch","_ref6","_ref7","array","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref8","isActive","MdKeyboardArrowDown","size","color","transform","transition","htmlFor","id","Number","pazeSizeReport","colSpan","Loader2","_element$clientGroupD","_element$mobile","_element$mobile2","_element$clientProfil","_element$clientProfil2","Modal","title","open","onCancel","footer","departmentData","CustomPagination","totalCount","page"],"sourceRoot":""}