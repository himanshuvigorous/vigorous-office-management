{"version":3,"file":"static/js/247.9d5ed892.chunk.js","mappings":"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","sources":["pages/Project management/projectpurchse/CreateProjectpurchaseandexpence.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { customDayjs, domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName, inputLabelClassNameReactSelect, optionLabelForBankSlect } from \"../../../constents/global\";\nimport { Select } from \"antd\";\nimport ReactSelect from \"react-select\";\nimport { FaRegFile, FaTimes } from \"react-icons/fa\";\nimport moment from \"moment\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { createprojetpurchaseExpence } from \"./projectpurchseFeature/_projectpurchseFeature_reducers\";\nimport { fileUploadFunc } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { vendorSearch } from \"../../financeManagement/vendor/vendorFeatures/_vendor_reducers\";\nimport { expenseTypeSearch } from \"../../global/other/ExpenseHead/expenseTypeFeature/_expenseType_reducers\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport { accountantSearch } from \"../accountantmanagement/accountManagentFeatures/_accountManagement_reducers\";\nimport Swal from \"sweetalert2\";\n\n\n\nconst CreateProjectpurchaseandexpence = () => {\n  const { loading: purchaseLoading } = useSelector((state) => state.projectpurchaseExpence);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm({\n    defaultValues: {\n      typeSelection: \"Vendor\",\n    }\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { expenseTypeList } = useSelector((state) => state.expenceHead);\n  const CompanyId = useWatch({ control, name: \"PDCompanyId\", defaultValue: \"\" });\n  const BranchId = useWatch({ control, name: \"PDBranchId\", defaultValue: \"\" });\n  const vendorId = useWatch({ control, name: \"vendorId\", defaultValue: \"\" });\n  const { vendorDataList, loading: vendorListLoading } = useSelector(state => state.vendor)\n  const { accountantList: accountants, loading: loadingAccountants } = useSelector((state) => state.accountManagement);\n  const [isPreview, setIsPreview] = useState(false);\n  const [formData, setFormData] = useState({\n    attachment: []\n  });\n  const paymentMethod = useWatch({\n    control,\n    name: \"paymentMethod\",\n    defaultValue: \"\",\n  });\n  const accountant = useWatch({\n    control,\n    name: \"accountant\",\n    defaultValue: \"\",\n  });\n\n\n\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      companyId: userInfoglobal?.userType === \"admin\"\n        ? data?.PDCompanyId\n        : userInfoglobal?.userType === \"company\"\n        ? userInfoglobal?._id\n        : userInfoglobal?.companyId,\n  \n      directorId: userInfoglobal?.userType === \"companyDirector\"\n        ? userInfoglobal?._id\n        : userInfoglobal?.directorId,\n  \n      branchId:\n        userInfoglobal?.userType === \"admin\" ||\n        userInfoglobal?.userType === \"companyDirector\" ||\n        userInfoglobal?.userType === \"company\"\n          ? data?.PDBranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.branchId,\n  \n      vendorId: data?.vendorId,\n      expenseHeadId: data?.expencehead?.value,\n      accountentId: data?.accountant,\n      userId: accountants?.find((acc) => acc._id === accountant)?.accountentData?._id,\n      bankAccountId: data?.bankAccountId,\n      paymentMethod: data?.paymentMethod,\n      paymentReference: data?.paymentReference,\n      vendorName: data?.Name,\n      totalAmount: +data?.totalAmount,\n      totalGSTAmount: 0,\n      grandTotal: +data?.totalAmount,\n      date: customDayjs(data?.paymentDate),\n      remark: data?.remark,\n      attachment: formData?.attachments,\n    };\n\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Once submitted, this entry cannot be edited. Do you want to proceed?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, submit it!',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(createprojetpurchaseExpence(finalPayload)).then((data) => {\n          if (!data.error) navigate(-1);\n        });\n      }\n    });\n  };\n  \n\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId])\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setFormData(prev => ({\n          ...prev,\n          attachments: [...prev?.attachments || [], res?.payload?.data]\n        }));\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setFormData(prev => {\n      const updatedAttachments = prev?.attachments.filter((_, i) => i !== index);\n      return { ...prev, attachments: updatedAttachments };\n    });\n  };\n\n  const handleFocusVendor = () => {\n    dispatch(\n      vendorSearch({\n        companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n  useEffect(() => {\n    if (vendorId) {\n      const vendorData = vendorDataList?.find((item) => item?._id === vendorId)\n      setValue('Name', vendorData ? vendorData?.fullName : '')\n    } else {\n      setValue('Name', '')\n    }\n  }, [vendorId])\n\n\n\n  useEffect(() => {\n\n    setValue(\"paymentMethod\", \"Cash\")\n    dispatch(accountantSearch({\n      directorId: \"\",\n      companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      text: \"\",\n      sort: true,\n      status: true,\n      isPagination: false,\n    }))\n\n  }, []);\n  const Option = Select.Option;\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3 md:mt-4\">\n\n\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Branch <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                control={control}\n                name=\"PDBranchId\"\n                rules={{ required: \"Branch is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    className={`${inputAntdSelectClassName} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchListloading ? <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option> : (branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n\n              {errors.PDBranchId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDBranchId.message}\n                </p>\n              )}\n            </div>}\n\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Vendor\n              </label>\n\n              <Controller\n                control={control}\n                name=\"vendorId\"\n\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    className={`${inputAntdSelectClassName} `}\n                    onFocus={handleFocusVendor}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Vendor</Select.Option>\n                    {vendorListLoading ? <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option> : (vendorDataList?.map((elment, index) => (\n                      <option value={elment?._id}>{elment?.fullName}</option>\n                    )))}\n                  </Select>\n                )}\n              />\n\n              {errors.vendorId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.vendorId.message}\n                </p>\n              )}\n            </div>\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Name<span className=\"text-red-600\">*</span>\n              </label>\n              <input\n\n                {...register(\"Name\", {\n                  required: \"Name is required\",\n\n                })}\n                className={` ${inputClassName} ${errors.Name ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Name\"\n              />\n              {errors.Name && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.Name.message}\n                </p>\n              )}\n            </div>\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Expense Head</label>\n              <Controller\n                name=\"expencehead\"\n                control={control}\n                rules={{ required: \"Expence Head is required\" }}\n                render={({ field }) => (\n                  <ReactSelect\n                    onFocus={() => {\n                      const reqPayload = {\n                        directorId: \"\",\n                        companyId: userInfoglobal?.userType === \"admin\"\n                          ? CompanyId\n                          : userInfoglobal?.userType === \"company\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.companyId,\n                        branchId: userInfoglobal?.userType === \"company\" ||\n                          userInfoglobal?.userType === \"admin\" ||\n                          userInfoglobal?.userType === \"companyDirector\"\n                          ? BranchId\n                          : userInfoglobal?.userType === \"companyBranch\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.branchId,\n                        text: \"\",\n                        sort: true,\n                        status: \"\",\n                        isPagination: false,\n                      }\n                      dispatch(expenseTypeSearch(reqPayload));\n                    }}\n                    {...field}\n                    options={expenseTypeList?.map((expence) => ({\n                      value: expence?._id,\n                      label: expence?.name,\n                    }))}\n                    classNamePrefix=\"react-select\"\n                    className={`${inputLabelClassNameReactSelect} ${errors.expencehead ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Expence Head\"\n                  />\n                )}\n              />\n              {errors.expencehead && <p className=\"text-red-500 text-sm\">{errors.expencehead.message}</p>}\n            </div>\n\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Total Amount\n              </label>\n              <input\n                type=\"number\"\n                step=\"0.01\"\n\n                {...register(\"totalAmount\")}\n                className={` ${inputClassName} ${errors.totalAmount ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Total Amount\"\n              />\n              {errors.totalAmount && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.totalAmount.message}\n                </p>\n              )}\n            </div>\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>\n                Accountant <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"accountant\"\n                control={control}\n                rules={{ required: \"Accountant is required\" }}\n                render={({ field }) => (\n                  <Select\n                    placeholder=\"Select accountant\"\n                    loading={loadingAccountants}\n                    {...field}\n                    showSearch\n                    getPopupContainer={(trigger) => trigger.parentNode}\n                    optionFilterProp=\"children\"\n                    className={`${inputAntdSelectClassName} `}\n                    filterOption={(input, option) =>\n                      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                  >\n                    {accountants?.map(acc => (\n                      <Option key={acc?._id} value={acc?._id}>\n                        {acc?.accountentData?.fullName}\n                      </Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              {errors.accountant && (\n                <p className=\"text-red-500 text-sm\">{errors.accountant.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Payment Method <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                control={control}\n                name=\"paymentMethod\"\n                rules={{ required: \"Payment method is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} `}\n                    getPopupContainer={(trigger) => trigger.parentNode}\n                  >\n                    {['Cash', 'Cheque', 'Card', 'Bank', 'Online', 'Other']?.map((bank) => (\n                      <Select.Option key={bank} value={bank}>\n                        {bank}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              {errors.paymentMethod && (\n                <p className=\"text-red-500 text-sm\">{errors.paymentMethod.message}</p>\n              )}\n            </div>\n\n            {paymentMethod !== \"Cash\" && (\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Bank Account\n                </label>\n                <Controller\n                  control={control}\n                  name=\"bankAccountId\"\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassName} `}\n                      getPopupContainer={(trigger) => trigger.parentNode}\n                    >\n                      <Select.Option value=\"\">Select Bank Account</Select.Option>\n                      {accountants?.find((acc) => acc._id === accountant)?.bankAccountData?.map((bank) => (\n                        <Select.Option key={bank._id} value={bank._id}>\n                          {optionLabelForBankSlect(bank)}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.bankAccountId && (\n                  <p className=\"text-red-500 text-sm\">{errors.bankAccountId.message}</p>\n                )}\n              </div>\n            )}\n\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Payment Date <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"paymentDate\"\n                control={control}\n                rules={{ required: \"Payment date is required\" }}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    field={field}\n                    errors={errors}\n                    disabledDate={(current) => {\n                      return current && current.isAfter(moment(), 'day');\n                    }}\n                  />\n                )}\n              />\n              {errors.paymentDate && (\n                <p className=\"text-red-500 text-sm\">Payment date is required</p>\n              )}\n            </div>\n\n\n\n            <div className=\"col-span-2\">\n              <label className={`${inputLabelClassName}`}>\n                Payment Reference\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"paymentReference\")}\n                className={inputClassName}\n                placeholder=\"e.g. TRANS123456789\"\n              />\n              {errors.paymentReference && (\n                <p className=\"text-red-500 text-sm\">{errors.paymentReference.message}</p>\n              )}\n            </div>\n\n            <div className=\"col-span-2\">\n              <label className={`${inputLabelClassName}`}>\n                Remarks\n              </label>\n              <textarea\n                {...register(\"remark\")}\n                rows={3}\n                className={inputClassName}\n                placeholder=\"Additional notes (optional)\"\n              />\n            </div>\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Documents\n              </label>\n              {!isPreview ? (\n                <div className=\"space-y-4\">\n                  <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                  <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-600 bg-white cursor-pointer\">\n                    <FaRegFile className=\"mr-2\" /> Add Documents\n                  </label>\n\n                  <div className=\"space-y-2\">\n                    {formData?.attachments?.map((file, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                        <a\n                          href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                          className=\"flex items-center space-x-2\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <FaRegFile className=\"text-gray-500\" />\n                          <span className=\"text-sm text-gray-600\">{file}</span>\n                        </a>\n                        <button\n                          type=\"button\"\n                          onClick={() => handleRemoveFile(index)}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <FaTimes />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  {/* Attachments preview logic */}\n                </div>\n              )}\n            </div>\n\n\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={purchaseLoading}\n              className={`${purchaseLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded`}\n            >\n              {purchaseLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default CreateProjectpurchaseandexpence;\n"],"names":["CreateProjectpurchaseandexpence","_formData$attachments","loading","purchaseLoading","useSelector","state","projectpurchaseExpence","register","handleSubmit","control","formState","errors","setValue","useForm","defaultValues","typeSelection","dispatch","useDispatch","navigate","useNavigate","branchList","branchListloading","branch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","expenseTypeList","expenceHead","CompanyId","useWatch","name","defaultValue","BranchId","vendorId","vendorDataList","vendorListLoading","vendor","accountantList","accountants","loadingAccountants","accountManagement","isPreview","setIsPreview","useState","formData","setFormData","attachment","paymentMethod","accountant","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","handleFocusVendor","vendorSearch","branchId","groupId","vendorData","find","item","fullName","accountantSearch","directorId","Option","Select","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","_data$expencehead","_accountants$find","_accountants$find$acc","finalPayload","PDCompanyId","PDBranchId","expenseHeadId","expencehead","value","accountentId","userId","acc","accountentData","bankAccountId","paymentReference","vendorName","Name","totalAmount","totalGSTAmount","grandTotal","date","customDayjs","paymentDate","remark","attachments","Swal","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","createprojetpurchaseExpence","error","inputLabelClassName","Controller","rules","required","render","_ref","field","_objectSpread","inputAntdSelectClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","disabled","ListLoader","map","type","message","_ref2","onFocus","elment","index","inputClassName","placeholder","_ref3","ReactSelect","reqPayload","expenseTypeSearch","options","expence","label","classNamePrefix","inputLabelClassNameReactSelect","step","_ref4","getPopupContainer","trigger","parentNode","optionFilterProp","indexOf","_acc$accountentData","_ref5","_ref6","bank","_ref7","_accountants$find2","_accountants$find2$ba","bankAccountData","optionLabelForBankSlect","_ref8","CustomDatePicker","disabledDate","current","isAfter","moment","rows","onChange","e","reqData","filePath","target","files","isVideo","isMultiple","fileUploadFunc","res","_res$payload","payload","prev","_res$payload2","id","htmlFor","FaRegFile","file","href","process","rel","onClick","updatedAttachments","filter","_","i","handleRemoveFile","FaTimes","Loader"],"sourceRoot":""}