{"version":3,"file":"static/js/9539.87bf0de1.chunk.js","mappings":"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","sources":["pages/dashboard/AttendnaceSystem.js","pages/dashboard/UserDetails.js"],"sourcesContent":["// AttendanceModal.jsx\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { Modal, Button, Typography, Space, Spin } from \"antd\";\nimport { FaMapMarkerAlt, FaCheckCircle, FaMap } from \"react-icons/fa\";\nimport { showNotification } from \"../../global_layouts/CustomNotification/NotificationManager\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { attendancegCreate, updateattendanceg } from \"../hr/attendance/AttendanceFeatures/_attendance_reducers\";\n\nconst { Title, Text } = Typography;\n\nconst AttendanceModal = ({ \n  visible, \n  onClose, \n  actionType, \n  todayAttendanceData, \n  userInfoglobal,\n  onSuccess \n}) => {\n  const dispatch = useDispatch();\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const [currentAddress, setCurrentAddress] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [step, setStep] = useState(1); // 1: Getting location, 2: Show location, 3: Success\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n  const mapRef = useRef(null);\n  const [mapLoading, setMapLoading] = useState(true);\n\n  useEffect(() => {\n    if (visible) {\n      setStep(1);\n      getLocation();\n    } else {\n      // Reset state when modal closes\n      setCurrentLocation(null);\n      setCurrentAddress(\"\");\n      setMap(null);\n      setMarker(null);\n    }\n  }, [visible, actionType]);\n\n  // Load Google Maps script\n  useEffect(() => {\n    if (step === 2 && currentLocation && !window.google) {\n      loadGoogleMapsScript();\n    } else if (step === 2 && currentLocation && window.google) {\n      initializeMap();\n    }\n  }, [step, currentLocation]);\n\n  const loadGoogleMapsScript = () => {\n    if (window.google) return;\n\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}&libraries=places`;\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      initializeMap();\n    };\n    script.onerror = () => {\n      console.error(\"Failed to load Google Maps script\");\n      setMapLoading(false);\n    };\n    document.head.appendChild(script);\n  };\n\n  const initializeMap = () => {\n    if (!currentLocation || !mapRef.current || !window.google) return;\n    \n    setMapLoading(true);\n    \n    try {\n      const google = window.google;\n      const mapOptions = {\n        center: { lat: currentLocation.lat, lng: currentLocation.lng },\n        zoom: 16,\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        streetViewControl: false,\n        mapTypeControl: false,\n        fullscreenControl: false,\n        styles: [\n          {\n            featureType: \"poi\",\n            elementType: \"labels\",\n            stylers: [{ visibility: \"off\" }]\n          }\n        ]\n      };\n      \n      const newMap = new google.maps.Map(mapRef.current, mapOptions);\n      setMap(newMap);\n      \n      // Add marker for current location\n      const newMarker = new google.maps.Marker({\n        position: { lat: currentLocation.lat, lng: currentLocation.lng },\n        map: newMap,\n        title: 'Your current location',\n        icon: {\n          url: 'data:image/svg+xml;base64,' + btoa(`\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 24 24\">\n              <path fill=\"${actionType === 'checkIn' ? '#1890ff' : '#ff4d4f'}\" d=\"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5a2.5 2.5 0 0 1 0-5a2.5 2.5 0 0 1 0 5z\"/>\n            </svg>\n          `),\n          scaledSize: new google.maps.Size(32, 32),\n          anchor: new google.maps.Point(16, 32)\n        }\n      });\n      \n      setMarker(newMarker);\n      \n      // Add circle to show accuracy\n      if (currentLocation.accuracy) {\n        new google.maps.Circle({\n          strokeColor: actionType === 'checkIn' ? '#1890ff' : '#ff4d4f',\n          strokeOpacity: 0.4,\n          strokeWeight: 1,\n          fillColor: actionType === 'checkIn' ? '#1890ff' : '#ff4d4f',\n          fillOpacity: 0.2,\n          map: newMap,\n          center: { lat: currentLocation.lat, lng: currentLocation.lng },\n          radius: currentLocation.accuracy\n        });\n      }\n      \n      setMapLoading(false);\n    } catch (error) {\n      console.error(\"Error initializing map:\", error);\n      setMapLoading(false);\n    }\n  };\n\n  const getLocation = async () => {\n    try {\n      if (!navigator.geolocation) {\n        showNotification({\n          message: \"Geolocation is not supported by your browser\",\n          type: \"error\",\n        });\n        onClose();\n        return;\n      }\n\n      const position = await new Promise((resolve, reject) => {\n        navigator.geolocation.getCurrentPosition(resolve, reject, {\n          enableHighAccuracy: true,\n          timeout: 15000,\n          maximumAge: 0\n        });\n      });\n\n      const { latitude, longitude, accuracy } = position.coords;\n      \n      if (accuracy > 200) {\n        showNotification({\n          message: `Low GPS accuracy (${Math.round(accuracy)} meters). For better results, enable GPS.`,\n          type: \"warning\",\n        });\n      }\n\n      const location = { lat: latitude, lng: longitude, accuracy };\n      setCurrentLocation(location);\n      \n      // Get address from coordinates\n      const address = await getFullAddress(latitude, longitude);\n      setCurrentAddress(address);\n      setStep(2);\n      \n    } catch (error) {\n      console.error(\"Error getting location:\", error);\n      showNotification({\n        message: \"Failed to get your location. Please try again.\",\n        type: \"error\",\n      });\n      onClose();\n    }\n  };\n\n  const getFullAddress = async (lat, lng) => {\n    try {\n      const response = await fetch(\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${lat},${lng}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n      );\n      const data = await response.json();\n      \n      if (data.results && data.results.length > 0) {\n        return data.results[0].formatted_address;\n      }\n      return \"Address not available\";\n    } catch (error) {\n      console.error(\"Error getting address:\", error);\n      return \"Could not retrieve address\";\n    }\n  };\n\n  const handleConfirm = async () => {\n    setIsLoading(true);\n    \n    try {\n      const currentTime = new Date().toISOString();\n      \n      if (actionType === \"checkIn\") {\n        const reqData = {\n          _id: todayAttendanceData?._id,\n          employeId: userInfoglobal?._id,\n          companyId: userInfoglobal?.companyId || null,\n          branchId: userInfoglobal?.branchId || null,\n          directorId: userInfoglobal?.directorId || null,\n          attendanceDate: moment().format(\"YYYY-MM-DD\"),\n          checkInTime: currentTime,\n          checkOutTime: null,\n          method: \"google_api\",\n          checkInLocation: {\n            latitude: currentLocation.lat,\n            longitude: currentLocation.lng,\n            address: currentAddress,\n          },\n        };\n        \n        await dispatch(attendancegCreate(reqData));\n        showNotification({\n          message: \"Checked in successfully!\",\n          type: \"success\",\n        });\n        \n      } else if (actionType === \"checkOut\") {\n        const reqData = {\n          _id: todayAttendanceData._id,\n          employeId: todayAttendanceData.employeId || null,\n          companyId: todayAttendanceData.companyId,\n          branchId: todayAttendanceData.branchId,\n          directorId: todayAttendanceData.directorId,\n          attendanceDate: todayAttendanceData.attendanceDate,\n          checkInTime: todayAttendanceData.checkInTime,\n          checkOutTime: currentTime,\n          method: \"google_api\",\n          checkOutLocation: {\n            latitude: currentLocation.lat,\n            longitude: currentLocation.lng,\n            address: currentAddress,\n          },\n        };\n        \n        await dispatch(updateattendanceg(reqData));\n        showNotification({\n          message: \"Checked out successfully!\",\n          type: \"success\",\n        });\n      }\n      \n      setStep(3);\n      setTimeout(() => {\n        onSuccess();\n        onClose();\n      }, 1500);\n      \n    } catch (error) {\n      console.error(\"Error processing attendance:\", error);\n      showNotification({\n        message: error?.data?.message || `Failed to ${actionType === \"checkIn\" ? \"check in\" : \"check out\"}. Please try again.`,\n        type: \"error\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const renderStepContent = () => {\n    switch (step) {\n      case 1:\n        return (\n          <div className=\"text-center py-8\">\n            <div className=\"animate-pulse\">\n              <FaMapMarkerAlt className=\"text-4xl text-blue-500 mx-auto mb-4\" />\n            </div>\n            <Title level={4} className=\"text-gray-700\">\n              Getting your location...\n            </Title>\n            <Text className=\"text-gray-500\">\n              Please allow location access to continue\n            </Text>\n          </div>\n        );\n      \n      case 2:\n        return (\n          <div className=\"py-4\">\n            <div className=\"text-center mb-6\">\n              <FaMapMarkerAlt className=\"text-3xl text-blue-500 mx-auto mb-2\" />\n              <Title level={4} className=\"text-gray-700\">\n                Confirm Your Location\n              </Title>\n              <Text className=\"text-gray-500\">\n                Please verify this is your correct location before {actionType === \"checkIn\" ? \"checking in\" : \"checking out\"}\n              </Text>\n            </div>\n            \n            {/* Map Container */}\n            <div className=\"mb-6 rounded-lg overflow-hidden border border-gray-200\" style={{ height: '250px' }}>\n              {mapLoading && (\n                <div className=\"h-full flex items-center justify-center bg-gray-100\">\n                  <Spin tip=\"Loading map...\" />\n                </div>\n              )}\n              <div \n                ref={mapRef} \n                className=\"w-full h-full\"\n                style={{ display: mapLoading ? 'none' : 'block' }}\n              />\n            </div>\n            \n            <div className=\"bg-gray-100 p-4 rounded-lg mb-6\">\n              <Text strong className=\"block mb-2\">Your current location:</Text>\n              <Text className=\"text-gray-700\">{currentAddress}</Text>\n              \n              {currentLocation && (\n                <div className=\"mt-3 text-sm text-gray-500\">\n                  <div>Latitude: {currentLocation.lat.toFixed(6)}</div>\n                  <div>Longitude: {currentLocation.lng.toFixed(6)}</div>\n                  <div>Accuracy: {Math.round(currentLocation.accuracy)} meters</div>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"bg-blue-50 p-4 rounded-lg mb-6\">\n              <Text className=\"text-blue-700\">\n                <strong>Note:</strong> Your location will be recorded for attendance purposes.\n              </Text>\n            </div>\n            \n            <div className=\"flex justify-end space-x-3\">\n              <Button onClick={onClose} disabled={isLoading}>\n                Cancel\n              </Button>\n              <Button \n                type=\"primary\" \n                onClick={handleConfirm}\n                loading={isLoading}\n                icon={<FaMapMarkerAlt />}\n              >\n                Confirm {actionType === \"checkIn\" ? \"Check-In\" : \"Check-Out\"}\n              </Button>\n            </div>\n          </div>\n        );\n      \n      case 3:\n        return (\n          <div className=\"text-center py-8\">\n            <FaCheckCircle className=\"text-5xl text-green-500 mx-auto mb-4\" />\n            <Title level={4} className=\"text-gray-700\">\n              {actionType === \"checkIn\" ? \"Checked In\" : \"Checked Out\"} Successfully!\n            </Title>\n            <Text className=\"text-gray-500\">\n              Your attendance has been recorded\n            </Text>\n          </div>\n        );\n      \n      default:\n        return null;\n    }\n  };\n\n  return (\n    <Modal\n      title={\n        <div className=\"flex items-center\">\n          <FaMap className=\"mr-2 text-blue-500\" />\n          {actionType === \"checkIn\" ? \"Check-In\" : \"Check-Out\"} Verification\n        </div>\n      }\n      open={visible}\n      onCancel={onClose}\n      footer={null}\n      width={550}\n      closable={step !== 1}\n      destroyOnClose\n    >\n      {renderStepContent()}\n    </Modal>\n  );\n};\n\nexport default AttendanceModal;","// UserDetails.jsx\nimport { Empty, Tooltip, Button, Space, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { domainName } from \"../../constents/global\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodayCheckinData } from \"../hr/attendance/AttendanceFeatures/_attendance_reducers\";\nimport moment from \"moment\";\nimport { CiLogin, CiLogout } from \"react-icons/ci\";\nimport { MdWorkHistory } from \"react-icons/md\";\nimport { FaMapMarkerAlt } from \"react-icons/fa\";\nimport AttendanceModal from \"./AttendnaceSystem\";\n\nconst { Text } = Typography;\n\nconst UserDetails = ({ leaveList, birthdaydata, inActiveUserToday, todayWfhRequstData }) => {\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { todayAttendanceData, loading: attendanceLoading } = useSelector((state) => state.attendance);\n  const dispatch = useDispatch();\n  const [currentTime, setCurrentTime] = useState(moment());\n  const [checkInTime, setCheckInTime] = useState(null);\n  const [checkOutTime, setCheckOutTime] = useState(null);\n  const [workingTime, setWorkingTime] = useState(\"00:00:00\");\n  const [attendanceModalVisible, setAttendanceModalVisible] = useState(false);\n  const [attendanceAction, setAttendanceAction] = useState(\"\");\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentTime(moment());\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (todayAttendanceData) {\n      setCheckInTime(\n        todayAttendanceData?.checkInTime\n          ? moment(todayAttendanceData.checkInTime)\n          : null\n      );\n      setCheckOutTime(\n        todayAttendanceData?.checkOutTime\n          ? moment(todayAttendanceData.checkOutTime)\n          : null\n      );\n    }\n  }, [todayAttendanceData]);\n\n  useEffect(() => {\n    if (checkInTime && !checkOutTime) {\n      const interval = setInterval(() => {\n        const duration = moment.duration(moment().diff(checkInTime));\n        const hours = String(duration.hours()).padStart(2, \"0\");\n        const minutes = String(duration.minutes()).padStart(2, \"0\");\n        const seconds = String(duration.seconds()).padStart(2, \"0\");\n        setWorkingTime(`${hours}:${minutes}:${seconds}`);\n      }, 1000);\n      return () => clearInterval(interval);\n    } else if (checkInTime && checkOutTime) {\n      const duration = moment.duration(checkOutTime.diff(checkInTime));\n      const hours = String(duration.hours()).padStart(2, \"0\");\n      const minutes = String(duration.minutes()).padStart(2, \"0\");\n      const seconds = String(duration.seconds()).padStart(2, \"0\");\n      setWorkingTime(`${hours}:${minutes}:${seconds}`);\n    }\n  }, [checkInTime, checkOutTime]);\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"employee\") {\n      getTodayCheckinDataFunc();\n    }\n  }, []);\n\n  const getTodayCheckinDataFunc = () => {\n    dispatch(\n      getTodayCheckinData({\n        employeId:\n          userInfoglobal?.userType === \"employee\" ? userInfoglobal?._id : null,\n      })\n    );\n  };\n\n  const handleAttendanceAction = (action) => {\n    setAttendanceAction(action);\n    setAttendanceModalVisible(true);\n  };\n\n  const handleAttendanceSuccess = () => {\n    getTodayCheckinDataFunc();\n  };\n\n  const renderAttendanceButton = () => {\n    if (!checkInTime && !attendanceLoading) {\n      return (\n        <Button\n          className=\"w-full\"\n          color=\"cyan\"\n          type=\"button\"\n          variant=\"solid\"\n          onClick={() => handleAttendanceAction(\"checkIn\")}\n          icon={<FaMapMarkerAlt />}\n        >\n          Check In\n        </Button>\n      );\n    } else if (checkInTime && !checkOutTime && !attendanceLoading) {\n      return (\n        <Button\n          className=\"w-full\"\n          type=\"button\"\n          color=\"danger\"\n          variant=\"solid\"\n          onClick={() => handleAttendanceAction(\"checkOut\")}\n          icon={<FaMapMarkerAlt />}\n        >\n          Check Out\n        </Button>\n      );\n    } else {\n      return (!attendanceLoading && <Text type=\"secondary\">You've checked out for today</Text>)\n    }\n  };\n  console.log(todayWfhRequstData, leaveList)\n  return (\n    <div className=\"w-full bg-[#ffff] rounded-md py-[10px] px-3 space-y-3 my-2\">\n      <div className=\"3xl:text-[20px] xl:text-[12px] lg:text-[14px] md:text-[18px] font-[500] text-header text-ellipsis\">\n        Hello, {userInfoglobal?.fullName}\n      </div>\n\n      <div className=\"flex justify-between items-start xl:pr4\">\n        <div className=\"3xl:text-[20px] xl:text-[12px] lg:text-[14px] md:text-[18px] font-[500] text-header\">\n          <div>{currentTime.format(\"DD MMM YYYY\")}</div>\n          <div className=\"\"> {currentTime.format(\"hh:mm:ss A\")}</div>\n        </div>\n        <div className=\"bg-gray-100 px-2 py-1 rounded-md text-[14px] font-[500] text-header space-y-1\">\n          <div className=\"text-nowrap\">On Leave: {leaveList?.length ?? 0}</div>\n        </div>\n      </div>\n\n      {userInfoglobal?.userType == \"employee\" && (\n        <div className=\"p-2 bg-gray-200 shadow-sm shadow-black rounded-md\">\n          <div className=\"gap-2 items-center p-2\">\n            <div className=\"flex justify-between items-center\">\n              {checkInTime && (\n                <div className=\"text-[14px] flex items-center gap-2 font-medium text-header\">\n                  <CiLogin /> {checkInTime.format(\"hh:mm:ss A\")}\n                </div>\n              )}\n              {checkOutTime && (\n                <div className=\"text-[14px] flex items-center gap-2 font-medium text-header\">\n                  <CiLogout /> {checkOutTime.format(\"hh:mm:ss A\")}\n                </div>\n              )}\n            </div>\n\n            <div className=\"text-[18px] font-medium text-header text-center my-1 md:text-left flex justify-center items-center gap-2\">\n              <MdWorkHistory />\n              <span className=\"font-semibold\">{workingTime}</span>\n            </div>\n\n            {renderAttendanceButton()}\n          </div>\n        </div>\n      )}\n\n      {/* Leave List Section */}\n      {leaveList?.length > 0 ? (\n        <div>\n          <div className=\"3xl:text-[19px] xl:text-[16px] font-[500] text-header\">\n            On Leave Today\n          </div>\n          <div className=\"w-full overflow-x-auto py-2 scrollable-x\">\n            <div className=\"w-full flex justify-start items-center space-x-3\">\n              {leaveList?.map((element, index) => (\n                <Tooltip placement=\"topLeft\" key={index} title={element?.tooltip}>\n                  <div className=\"flex flex-col cursor-pointer\">\n                    <div className=\"w-[50px] h-[50px] text-center m-auto\">\n                      <img\n                        src={element?.imgUrl}\n                        alt=\"\"\n                        className=\"w-full h-full rounded-full\"\n                      />\n                    </div>\n                    <span className=\"text-[14px] text-nowrap py-1\">\n                      {element?.name}\n                    </span>\n                  </div>\n                </Tooltip>\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div className=\"3xl:text-[19px] xl:text-[16px] font-[500] text-header\">\n            On Leave Today\n          </div>\n          <div className=\"w-full overflow-x-auto py-2 scrollable-x\">\n            <Empty\n              image=\"/images/empty.svg\"\n              styles={{\n                image: {\n                  height: 40,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                },\n              }}\n              description=\"No One Is On Leave Today\"\n            />\n          </div>\n        </div>\n      )}\n\n      {todayWfhRequstData?.length > 0 ? (\n        <div>\n          <div className=\"3xl:text-[19px] xl:text-[16px] font-[500] text-header\">\n            On WFH Today\n          </div>\n          <div className=\"w-full overflow-x-auto py-2 scrollable-x\">\n            <div className=\"w-full flex justify-start items-center space-x-3\">\n              {todayWfhRequstData?.map((element, index) => (\n\n                <div key={index} className=\"flex flex-col cursor-pointer relative\">\n\n                  {/* Attendance Badge with Tooltip */}\n                  <Tooltip\n                    title={\n                      element?.hasAttendanceMarked\n                        ? \"✅ Attendance Marked\"\n                        : \"❌ Attendance Not Marked\"\n                    }\n                  >\n                    <div\n                      className=\"absolute top-0 right-0 w-3 h-3 rounded-full border-2 border-white\"\n                      style={{\n                        backgroundColor: element?.hasAttendanceMarked ? '#4CAF50' : '#F44336',\n                      }}\n                    />\n                  </Tooltip>\n\n                  {/* Profile Image */}\n                  <Tooltip placement=\"topLeft\" title={element?.tooltip}>\n                    <div className=\"w-[50px] h-[50px] text-center m-auto\">\n                      <img\n                        src={element?.imgUrl}\n                        alt=\"\"\n                        className=\"w-full h-full rounded-full\"\n                      />\n                    </div>\n                  </Tooltip>\n                  {/* Name */}\n                  <span className=\"text-[14px] text-nowrap py-1\">\n                    {element?.name}\n                  </span>\n                </div>\n\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div className=\"3xl:text-[19px] xl:text-[16px] font-[500] text-header\">\n            On WFH Today\n          </div>\n          <div className=\"w-full overflow-x-auto py-2 scrollable-x\">\n            <Empty\n              image=\"/images/empty.svg\"\n              styles={{\n                image: {\n                  height: 40,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                },\n              }}\n              description=\"No One Is On WFH Today\"\n            />\n          </div>\n        </div>\n      )}\n\n\n      {/* Birthday Section */}\n      {birthdaydata?.length > 0 ? (\n        <div>\n          <div className=\"3xl:text-[19px] xl:text-[16px] font-[500] text-header\">\n            Birthdays Today\n          </div>\n          <div className=\"w-full overflow-x-auto py-2 scrollable-x\">\n            <div className=\"w-full flex justify-start items-center space-x-3\">\n              {birthdaydata?.map((element, index) => (\n                <Tooltip placement=\"topLeft\" key={index} title={element?.tooltip}>\n                  <div className=\"flex flex-col\">\n                    <div className=\"w-[50px] h-[50px]\">\n                      <img\n                        src={element?.imgUrl}\n                        alt=\"\"\n                        className=\"w-full h-full rounded-full\"\n                      />\n                    </div>\n                    <span className=\"text-[14px] py-1\">{element?.name}</span>\n                  </div>\n                </Tooltip>\n              ))}\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div>\n          <div className=\"3xl:text-[19px] xl:text-[16px] font-[500] text-header\">\n            Birthdays Today\n          </div>\n          <div className=\"w-full overflow-x-auto py-2\">\n            <Empty\n              image=\"/images/empty.svg\"\n              styles={{\n                image: {\n                  height: 40,\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                },\n              }}\n              description=\"No Birthdays Today\"\n            />\n          </div>\n        </div>\n      )}\n\n      {/* In-Active User Today Section */}\n      {(userInfoglobal?.userType !== \"employee\" ||\n        ((userInfoglobal?.userType === \"employee\" && userInfoglobal?.roleKey == \"hr\") ||\n          (userInfoglobal?.userType === \"employee\" && userInfoglobal?.roleKey == \"manager\"))) &&\n        (inActiveUserToday?.length > 0 ? (\n          <div>\n            <div className=\"3xl:text-[19px] xl:text-[16px] font-[500] text-header\">\n              In-Active User Today\n            </div>\n            <div className=\"w-full overflow-x-auto py-2 scrollable-x\">\n              <div className=\"w-full flex justify-start items-center space-x-3\">\n                {inActiveUserToday?.map((element, index) => (\n                  <Tooltip placement=\"topLeft\" key={index} title={element?.tooltip}>\n                    <div key={index} className=\"flex flex-col\">\n                      <div className=\"w-[50px] h-[50px]\">\n                        <img\n                          src={element?.imgUrl}\n                          alt=\"\"\n                          className=\"w-full h-full rounded-full\"\n                        />\n                      </div>\n                      <span className=\"text-[14px] py-1\">{element?.name}</span>\n                    </div>\n                  </Tooltip>\n                ))}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className=\"3xl:text-[19px] xl:text-[16px] font-[500] text-header\">\n              In-Active User Today\n            </div>\n            <div className=\"w-full overflow-x-auto py-2 scrollable-x\">\n              <Empty\n                image=\"/images/empty.svg\"\n                styles={{\n                  image: {\n                    height: 40,\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  },\n                }}\n                description=\"No Inactive Users Today\"\n              />\n            </div>\n          </div>\n        ))\n      }\n\n      {/* Attendance Modal */}\n      <AttendanceModal\n        visible={attendanceModalVisible}\n        onClose={() => setAttendanceModalVisible(false)}\n        actionType={attendanceAction}\n        todayAttendanceData={todayAttendanceData}\n        userInfoglobal={userInfoglobal}\n        onSuccess={handleAttendanceSuccess}\n      />\n    </div>\n  );\n};\n\nexport default UserDetails;"],"names":["Title","Text","Typography","_ref","visible","onClose","actionType","todayAttendanceData","userInfoglobal","onSuccess","dispatch","useDispatch","currentLocation","setCurrentLocation","useState","currentAddress","setCurrentAddress","isLoading","setIsLoading","step","setStep","map","setMap","marker","setMarker","mapRef","useRef","mapLoading","setMapLoading","useEffect","getLocation","window","google","loadGoogleMapsScript","initializeMap","script","document","createElement","src","concat","process","async","defer","onload","onerror","console","error","head","appendChild","current","mapOptions","center","lat","lng","zoom","mapTypeId","maps","MapTypeId","ROADMAP","streetViewControl","mapTypeControl","fullscreenControl","styles","featureType","elementType","stylers","visibility","newMap","Map","newMarker","Marker","position","title","icon","url","btoa","scaledSize","Size","anchor","Point","accuracy","Circle","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","radius","navigator","geolocation","showNotification","message","type","Promise","resolve","reject","getCurrentPosition","enableHighAccuracy","timeout","maximumAge","latitude","longitude","coords","Math","round","address","getFullAddress","response","fetch","data","json","results","length","formatted_address","handleConfirm","currentTime","Date","toISOString","reqData","_id","employeId","companyId","branchId","directorId","attendanceDate","moment","format","checkInTime","checkOutTime","method","checkInLocation","attendancegCreate","checkOutLocation","updateattendanceg","setTimeout","_error$data","_jsx","Modal","_jsxs","className","children","FaMap","open","onCancel","footer","width","closable","destroyOnClose","renderStepContent","FaMapMarkerAlt","level","style","height","Spin","tip","ref","display","strong","toFixed","Button","onClick","disabled","loading","FaCheckCircle","_leaveList$length","leaveList","birthdaydata","inActiveUserToday","todayWfhRequstData","JSON","parse","localStorage","getItem","domainName","attendanceLoading","useSelector","state","attendance","setCurrentTime","setCheckInTime","setCheckOutTime","workingTime","setWorkingTime","attendanceModalVisible","setAttendanceModalVisible","attendanceAction","setAttendanceAction","interval","setInterval","clearInterval","duration","diff","hours","String","padStart","minutes","seconds","userType","getTodayCheckinDataFunc","getTodayCheckinData","handleAttendanceAction","action","log","fullName","CiLogin","CiLogout","MdWorkHistory","color","variant","element","index","Tooltip","placement","tooltip","imgUrl","alt","name","Empty","image","justifyContent","alignItems","description","hasAttendanceMarked","backgroundColor","roleKey","AttendanceModal","handleAttendanceSuccess"],"sourceRoot":""}