{"version":3,"file":"static/js/2968.2fa05ded.chunk.js","mappings":"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","sources":["pages/Project management/ProjectInvoiceList/PaymentEntryModal.js","pages/Project management/ProjectInvoiceList/ProjectInvoicingList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Modal, Form, Input, Select, DatePicker, message } from 'antd';\nimport { Controller, useForm, useWatch } from 'react-hook-form';\nimport CustomDatePicker from '../../../global_layouts/DatePicker/CustomDatePicker';\nimport moment from 'moment';\nimport Loader from '../../../global_layouts/Loader';\nimport { customDayjs, inputAntdSelectClassName, inputLabelClassName, optionLabelForBankSlect } from '../../../constents/global';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { accountantSearch } from '../accountantmanagement/accountManagentFeatures/_accountManagement_reducers';\nimport { createprojectInvoiceFunc } from './ProjectInvoiceFeatures/_ProjectInvoice_reducers';\nimport Swal from 'sweetalert2';\n\nconst { Option } = Select;\n\nconst PaymentEntryModal = ({ visible, onCancel, parentdata,fetchprojectInvoice }) => {\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n\n    },\n  });\n  const dispatch = useDispatch()\n  const loading = false\n  const paymentMethod = useWatch({\n    control,\n    name: \"paymentMethod\",\n    defaultValue: \"\",\n  });\n  const accountant = useWatch({\n    control,\n    name: \"accountant\",\n    defaultValue: \"\",\n  });\n  const { accountantList: accountants, loading: loadingAccountants } = useSelector((state) => state.accountManagement);\n\n\n\n  // Fetch accountants list\n  useEffect(() => {\n    if (visible) {\n      setValue(\"paymentMethod\", \"Cash\")\n      dispatch(accountantSearch({\n        directorId: \"\",\n        companyId: parentdata?.companyId,\n        branchId: parentdata?.branchId,\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n      }))\n\n    }\n  }, [visible]);\n\n\n\n\n\n\n  const onFormSubmit = (data) => {\n    const reqpayload = {\n      companyId: parentdata?.companyId,\n      directorId: parentdata?.directorId,\n      branchId: parentdata?.branchId,\n      managerId: \"\",\n      projectId: parentdata?._id,\n      invoiceType: 'credit',\n      \"accountentId\": data?.accountant,\n      \"userId\":  accountants?.find((acc) => acc._id === accountant)?.accountentData?._id,\n      \"bankAccountId\": data?.bankAccountId,\n      \"paymentMethod\": data?.paymentMethod,\n      \"paymentReference\": data?.paymentReference,\n      \"remark\": data?.remark,\n      \"amountPaid\": +data?.amountPaid,\n      \"paymentDate\": customDayjs(data?.paymentDate),\n\n    }\n    Swal.fire({\n      title: 'Are you sure?',\n      text: 'Once submitted, this entry cannot be edited. Do you want to proceed?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, submit it!',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(createprojectInvoiceFunc(reqpayload)).then((data) => {\n          if (!data?.error) {\n            fetchprojectInvoice()\n            onCancel()\n            reset()\n          }\n        });\n      }\n    });\n  };\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={() => {\n        onCancel();\n        reset();\n      }}\n      footer={null}\n      title=\"Record Payment\"\n      width={700}\n      className=\"antmodalclassName\"\n    >\n      <form autoComplete=\"off\" onSubmit={handleSubmit(onFormSubmit)}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n\n\n          <div className=\"w-full\">\n            <label className={`${inputLabelClassName}`}>\n              Accountant <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              name=\"accountant\"\n              control={control}\n              rules={{ required: \"Accountant is required\" }}\n              render={({ field }) => (\n                <Select\n                  placeholder=\"Select accountant\"\n                  loading={loadingAccountants}\n                  {...field}\n                  showSearch\n                  getPopupContainer={(trigger) => trigger.parentNode}\n                  optionFilterProp=\"children\"\n                  className={`${inputAntdSelectClassName} `}\n                  filterOption={(input, option) =>\n                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                  }\n                >\n                  {accountants?.map(acc => (\n                    <Option key={acc?._id} value={acc?._id}>\n                      {acc?.accountentData?.fullName}\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            />\n            {errors.accountant && (\n              <p className=\"text-red-500 text-sm\">{errors.accountant.message}</p>\n            )}\n          </div>\n\n          <div>\n            <label className={`${inputLabelClassName}`}>\n              Payment Method <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              control={control}\n              name=\"paymentMethod\"\n              rules={{ required: \"Payment method is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className={`${inputAntdSelectClassName} `}\n                  getPopupContainer={(trigger) => trigger.parentNode}\n                >\n                  {['Cash', 'Cheque', 'Card', 'Bank', 'Online', 'Other']?.map((bank) => (\n                      <Select.Option key={bank} value={bank}>\n                        {bank}\n                      </Select.Option>\n                    ))}\n                 \n                </Select>\n              )}\n            />\n            {errors.paymentMethod && (\n              <p className=\"text-red-500 text-sm\">{errors.paymentMethod.message}</p>\n            )}\n          </div>\n\n          {paymentMethod !== \"Cash\" && (\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Bank Account\n              </label>\n              <Controller\n                control={control}\n                name=\"bankAccountId\"\n\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} `}\n\n                    getPopupContainer={(trigger) => trigger.parentNode}\n                  >\n                    <Select.Option value=\"\">Select Bank Account</Select.Option>\n                    {accountants?.find((acc) => acc._id === accountant)?.bankAccountData?.map((bank) => (\n                      <Select.Option key={bank._id} value={bank._id}>\n                        {optionLabelForBankSlect(bank)}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              {errors.bankAccountId && (\n                <p className=\"text-red-500 text-sm\">{errors.bankAccountId.message}</p>\n              )}\n            </div>\n          )}\n\n          <div>\n            <label className={`${inputLabelClassName}`}>\n              Payment Date <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              name=\"paymentDate\"\n              control={control}\n              rules={{ required: \"Payment date is required\" }}\n              render={({ field }) => (\n                <CustomDatePicker\n                  field={field}\n                  errors={errors}\n                  disabledDate={(current) => {\n                    return current && current.isAfter(moment(), 'day');\n                  }}\n                />\n              )}\n            />\n            {errors.paymentDate && (\n              <p className=\"text-red-500 text-sm\">Payment date is required</p>\n            )}\n          </div>\n\n          <div>\n            <label className={`${inputLabelClassName}`}>\n              Amount Paid <span className=\"text-red-600\">*</span>\n            </label>\n            <input\n              type=\"number\"\n              step=\"0.01\"\n              {...register(\"amountPaid\", {\n                required: \"Amount is required\",\n                min: { value: 0.01, message: \"Amount must be greater than 0\" }\n              })}\n              className={`w-full px-3 py-2 border ${errors.amountPaid ? \"border-red-500\" : \"border-gray-300\"} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\n              placeholder=\"Enter amount\"\n            />\n            {errors.amountPaid && (\n              <p className=\"text-red-500 text-sm\">{errors.amountPaid.message}</p>\n            )}\n          </div>\n\n          <div className=\"col-span-2\">\n            <label className={`${inputLabelClassName}`}>\n              Payment Reference\n            </label>\n            <input\n              type=\"text\"\n              {...register(\"paymentReference\", {\n\n              })}\n              className={`w-full px-3 py-2 border ${errors.paymentReference ? \"border-red-500\" : \"border-gray-300\"} rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500`}\n              placeholder=\"e.g. TRANS123456789\"\n            />\n            {errors.paymentReference && (\n              <p className=\"text-red-500 text-sm\">{errors.paymentReference.message}</p>\n            )}\n          </div>\n\n\n\n          <div className=\"col-span-2\">\n            <label className={`${inputLabelClassName}`}>\n              Remarks\n            </label>\n            <textarea\n              {...register(\"remark\")}\n              rows={3}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-indigo-500 focus:border-indigo-500\"\n              placeholder=\"Additional notes (optional)\"\n            />\n          </div>\n        </div>\n\n        <div className=\"flex justify-end mt-4\">\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className={`${loading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded`}\n          >\n            {loading ? <Loader /> : 'Submit Payment'}\n          </button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default PaymentEntryModal;","import { useNavigate, useParams, useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState, useRef } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { decrypt, encrypt } from \"../../../config/Encryption\";\nimport { inputAntdSelectClassNameFilter } from \"../../../constents/global\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport { Select, Tag, Modal, Button } from \"antd\";\nimport dayjs from \"dayjs\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport { deleteprojectInvoiceFunc, getprojectInvoiceListFunc, getprojectInvoiceReportList } from \"./ProjectInvoiceFeatures/_ProjectInvoice_reducers\";\nimport { FaEye, FaFileInvoiceDollar, FaMoneyBillWave, FaInfoCircle, FaFilePdf, FaCashRegister, FaSortAmountUp } from \"react-icons/fa\";\nimport PaymentEntryModal from \"./PaymentEntryModal\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { BiMoney, BiTrash } from \"react-icons/bi\";\n\nfunction ProjectInvoicingList() {\n  const { register, setValue, control, formState: { errors } } = useForm();\n  const { element } = useParams();\n  const parentdata = element ? JSON.parse(decrypt(element)) : {};\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { projectInvoiceReportList, loading } = useSelector((state) => state.projectInvoice);\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [paymentModalVisible, setPaymentModalVisible] = useState({\n    isOpen: false,\n    data: null,\n    refrensedata : null\n  \n  });\n  const [previousTransactionsModalVisible, setPreviousTransactionsModalVisible] = useState(false);\n  const startDate = useWatch({ control, name: \"startDate\", defaultValue: dayjs().subtract(1, \"month\") });\n  const endDate = useWatch({ control, name: \"endDate\", defaultValue: dayjs() });\n  const tableRef = useRef(null);\n\n  const status = useWatch({\n    control,\n    name: 'status',\n    defaultValue: ''\n  });\n  const limit = 10;\n\n  const filters = [status, searchText, startDate, endDate].join(\"-\");\n  const [isFirstRender, setisFirstRender] = useState(false);\n\n  useEffect(() => {\n    setValue('startDate', dayjs().subtract(1, \"month\"));\n    setValue('endDate', dayjs());\n  }, []);\n\n  useEffect(() => {\n    if (!isFirstRender) {\n      setisFirstRender(state => true);\n      return;\n    }\n    if (currentPage === 1) {\n      fetchprojectInvoice();\n    } else {\n      setCurrentPage(1);\n    }\n  }, [filters]);\n\n  useEffect(() => {\n    fetchprojectInvoice();\n  }, [currentPage]);\n\n  const fetchprojectInvoice = async () => {\n    const reqData = {\n      page: currentPage,\n      limit: limit,\n      reqPayload: {\n        directorId: \"\",\n        companyId: parentdata?.companyId,\n        branchId: parentdata?.branchId,\n        projectId: parentdata?._id,\n        startDate: startDate.format(\"YYYY-MM-DD\"),\n        endDate: endDate.format(\"YYYY-MM-DD\"),\n        text: searchText,\n        sort: true,\n        status: status === \"true\" ? true : status === \"false\" ? false : \"\",\n        isPagination: false,\n      },\n    };\n\n    await dispatch(getprojectInvoiceReportList(reqData));\n  };\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleDelete = (id)=>{\n    const reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteprojectInvoiceFunc(reqData)).then((data) => {\n          if (!data.error) {\n            fetchprojectInvoice();\n          }\n        });\n      }\n    });\n  }\n\n  // Get previous transactions summary\n  const getPreviousSummary = () => {\n    return projectInvoiceReportList?.previousTransactions?.summary || {\n      totalDebit: 0,\n      totalCredit: 0,\n      closingBalance: 0,\n      openingBalance: 0\n    };\n  };\n\n  // Get current transactions summary\n  const getCurrentSummary = () => {\n    return projectInvoiceReportList?.currentTransactions?.summary || {\n      totalDebit: 0,\n      totalCredit: 0,\n      closingBalance: 0,\n      openingBalance: 0\n    };\n  };\n\n  // Get current transactions only for the main list\n  const getCurrentTransactions = () => {\n    return projectInvoiceReportList?.currentTransactions?.allTransactions || [];\n  };\n\n  // Calculate running balance for current transactions\n  const calculateRunningBalance = () => {\n    const transactions = getCurrentTransactions();\n    const openingBalance = getCurrentSummary().openingBalance;\n    let balance = openingBalance;\n\n    const transactionsWithBalance = transactions.map(item => {\n      if (item.invoiceType === \"credit\") {\n        balance += Number(item.amountPaid || 0);\n      } else {\n        balance -= Number(item.finalWithGSTAmount || 0);\n      }\n      return { ...item, balance };\n    });\n\n    return {\n      openingBalance,\n      transactions: transactionsWithBalance,\n      closingBalance: balance\n    };\n  };\n\n  const { openingBalance, transactions, closingBalance } = calculateRunningBalance();\n  const previousSummary = getPreviousSummary();\n  const currentSummary = getCurrentSummary();\n\n\n\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"mb-4\">\n        <div className=\"flex justify-between items-center mb-6\">\n          <div></div>\n\n          <div className=\"flex gap-3\">\n            <button\n              onClick={() => navigate(`/admin/project-invoice/create?element=${encrypt(JSON.stringify(parentdata))}`)}\n              className=\"bg-rose-700 hover:bg-rose-800 transition-colors py-2 px-4 rounded-md flex items-center text-sm font-medium text-white\"\n            >\n              Create Invoice\n            </button>\n            <button\n              onClick={() => setPaymentModalVisible({\n                isOpen: true,\n                data: parentdata,\n                refrensedata : null\n              })}\n              className=\"bg-green-600 hover:bg-green-700 transition-colors py-2 px-4 rounded-md flex items-center text-sm font-medium text-white\"\n            >\n              <FaMoneyBillWave className=\"mr-2\" />\n              Receive Payment\n            </button>\n          </div>\n        </div>\n        <div className=\"py-3 bg-white rounded-lg shadow px-3 mb-2\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            {/* Previous Period Summary */}\n            <div className=\"border rounded-lg p-4 relative\">\n              <div className=\"flex justify-between items-center mb-2\">\n                <h3 className=\"text-md font-medium\">Previous Period Summary</h3>\n                <button\n                  onClick={() => setPreviousTransactionsModalVisible(true)}\n                  className=\"text-blue-600 hover:text-blue-800\"\n                  title=\"View Previous Transactions\"\n                >\n                  <FaInfoCircle size={18} />\n                </button>\n              </div>\n              <div className=\"grid grid-cols-2 gap-2\">\n                {/* <div className=\"bg-gray-50 p-3 rounded\">\n                  <p className=\"text-sm text-gray-600\">Opening Balance</p>\n                  <p className=\"text-lg font-semibold\">{previousSummary.openingBalance.toLocaleString('en-IN')}</p>\n                </div> */}\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <p className=\"text-sm text-gray-600\">Total Invoices</p>\n                  <p className=\"text-lg font-semibold text-red-600\">{previousSummary.totalDebit.toLocaleString('en-IN')}</p>\n                </div>\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <p className=\"text-sm text-gray-600\">Total Received</p>\n                  <p className=\"text-lg font-semibold text-green-600\">{previousSummary.totalCredit.toLocaleString('en-IN')}</p>\n                </div>\n                <div className=\"bg-gray-50 p-3 rounded\">\n                  <p className=\"text-sm text-gray-600\">Closing Balance</p>\n                  <p className={`text-lg font-semibold ${previousSummary.closingBalance <= 0 ? 'text-red-600' : 'text-green-600'}`}>\n                    {previousSummary.closingBalance.toLocaleString('en-IN')}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            {/* Current Period Summary */}\n            <div className=\"border rounded-lg p-4\">\n              <h3 className=\"text-md font-medium mb-2\">Current Period Summary</h3>\n              <div className=\"grid grid-cols-2 gap-2\">\n                <div className=\"bg-blue-50 p-3 rounded\">\n                  <p className=\"text-sm text-blue-600\">Opening Balance</p>\n                  <p className={`text-lg font-semibold ${currentSummary.openingBalance <= 0 ? 'text-red-600' : 'text-green-600'}`}>{currentSummary.openingBalance.toLocaleString('en-IN')}</p>\n                </div>\n                <div className=\"bg-blue-50 p-3 rounded\">\n                  <p className=\"text-sm text-blue-600\">Total Invoices</p>\n                  <p className=\"text-lg font-semibold text-red-600\">{currentSummary.totalDebit.toLocaleString('en-IN')}</p>\n                </div>\n                <div className=\"bg-blue-50 p-3 rounded\">\n                  <p className=\"text-sm text-blue-600\">Total Received</p>\n                  <p className=\"text-lg font-semibold text-green-600\">{currentSummary.totalCredit.toLocaleString('en-IN')}</p>\n                </div>\n                <div className=\"bg-blue-50 p-3 rounded\">\n                  <p className=\"text-sm text-blue-600\">Closing Balance</p>\n                  <p className={`text-lg font-semibold ${currentSummary.closingBalance <= 0 ? 'text-red-600' : 'text-green-600'}`}>\n                    {Math.abs(currentSummary.closingBalance).toLocaleString('en-IN')}\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        {/* Date Filters */}\n        <div className=\"sm:flex justify-between items-center py-3 bg-gray-100 rounded-lg shadow px-4 mb-4\">\n          <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-2 sm:gap-3 gap-1.5\">\n            <div>\n              <Controller\n                name=\"startDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs().subtract(1, \"month\")}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                    allowClear={false}\n                    placeholder=\"Select Start Date\"\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"endDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs()}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                    allowClear={false}\n                    placeholder=\"Select End Date\"\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2 mt-2 sm:mt-0\">\n            <button\n              onClick={() => {\n                setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n                setValue(\"endDate\", dayjs());\n                setSearchText(\"\");\n              }}\n              className=\"bg-gray-600 hover:bg-gray-700 py-2 px-4 rounded-md flex items-center text-sm text-white\"\n            >\n              Reset Filters\n            </button>\n          </div>\n        </div>\n\n        {/* Current Transactions Table */}\n        <div className=\"bg-white rounded-xl shadow overflow-hidden\" ref={tableRef}>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-gray-800 text-white\">\n                <tr className=\"text-left text-sm font-medium\">\n                  <th className=\"p-3 w-[5%]\">#</th>\n                  <th className=\"p-3 w-[15%]\">Date</th>\n                  <th className=\"p-3 w-[20%]\">Reference</th>\n                  <th className=\"p-3 w-[15%]\">Description</th>\n                  {/* <th className=\"p-3 w-[15%] text-center\">Status</th> */}\n                  <th className=\"p-3 w-[15%] text-right\">Amount</th>\n                  <th className=\"p-3 w-[15%] text-right\">Balance</th>\n                  <th className=\"p-3 w-[15%] text-center\">Actions</th>\n                </tr>\n              </thead>\n              {loading ? (\n                <tbody>\n                  <tr>\n                    <td colSpan={7} className=\"p-6 text-center\">\n                      <Loader2 />\n                    </td>\n                  </tr>\n                </tbody>\n              ) : (\n                <tbody className=\"divide-y divide-gray-200\">\n                  {/* Opening Balance Row */}\n                  <tr className=\"bg-blue-50\">\n                    <td className=\"p-3 text-sm font-medium text-gray-700\">-</td>\n                    <td className=\"p-3 text-sm font-medium text-gray-700\">\n                      -\n                    </td>\n                    <td className=\"p-3\">\n                      <Tag color=\"blue\">OPENING BALANCE</Tag>\n                    </td>\n                    <td className=\"p-3 text-sm font-medium text-gray-700\">\n                      Balance brought forward\n                    </td>\n                    {/* <td className=\"p-3 text-sm text-center font-medium\">-</td> */}\n                    <td className=\"p-3 text-sm text-right font-medium\">-</td>\n                    <td className=\"p-3 text-sm text-right font-medium\">\n                      <span className={openingBalance <= 0 ? \"text-red-600\" : \"text-green-600\"}>\n                        {Math.abs(openingBalance).toLocaleString('en-IN')}\n                        <span className=\"text-xs ml-1\">{openingBalance <= 0 ? '(Due)' : '(Adv)'}</span>\n                      </span>\n                    </td>\n                    <td className=\"p-3 text-center\">-</td>\n                  </tr>\n\n                  {/* Transactions */}\n                  {transactions.length > 0 ? (\n                    transactions.map((element, index) => (\n                      <tr\n                        key={element._id}\n                        className={`hover:bg-gray-50 ${index % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"}`}\n                      >\n                        <td className=\"p-3 text-sm text-gray-700\">{index + 1}</td>\n                        <td className=\"p-3 text-sm text-gray-700\">\n                          {element?.invoiceType === \"credit\" ? dayjs(element.paymentDate).format('DD-MM-YYYY') : element?.invoiceDate ? dayjs(element.invoiceDate).format('DD-MM-YYYY') : \"-\"}\n                        </td>\n                        <td className=\"p-3\">\n                          <div className=\"flex items-center\">\n                            {element?.invoiceType === \"credit\" ? (\n                              <Tag color=\"green\" className=\"mr-2\">CREDIT</Tag>\n                            ) : (\n                              <Tag color=\"red\" className=\"mr-2\">INVOICE</Tag>\n                            )}\n                            <span className=\"text-sm font-medium text-gray-700\">\n                              {element?.invoiceNumber ?? \"-\"}\n                            </span>\n                          </div>\n                        </td>\n                        <td className=\"p-3 text-sm text-gray-700\">\n                          {element?.invoiceType === \"credit\"\n                            ? element?.remark || \"Payment Received\"\n                            : \"Project Invoice\"}\n                        </td>\n                        {/* <td className=\"p-3 text-sm text-gray-700 text-center\">\n                          {element?.status || \"-\"}\n                        </td> */}\n                        <td className=\"p-3 text-sm text-right font-medium\">\n                          <span className={element?.invoiceType === \"credit\" ? \"text-green-600\" : \"text-red-600\"}>\n                            {element?.invoiceType === \"credit\"\n                              ? `+ ${Number(element?.amountPaid || 0).toLocaleString('en-IN')}`\n                              : `- ${Number(element?.finalWithGSTAmount || 0).toLocaleString('en-IN')}`}\n                          </span>\n                        </td>\n\n                        <td className=\"p-3 text-sm text-right font-medium\">\n                          <span className={element.balance <= 0 ? \"text-red-600\" : \"text-green-600\"}>\n                            {Math.abs(element.balance).toLocaleString('en-IN')}\n                            <span className=\"text-xs ml-1\">{element.balance <= 0 ? '(Due)' : '(Adv)'}</span>\n                          </span>\n                        </td>\n                        <td className=\"p-3 text-center\">\n                         <div className=\"flex justify-center items-center gap-2\">\n                         <button\n                            onClick={() => navigate(`/admin/project-invoice/view/${encrypt(JSON.stringify(element))}`)}\n                            className=\"p-2 text-gray-600 hover:text-blue-600 transition-colors rounded-md bg-gray-100 hover:bg-gray-200\"\n                            title=\"View Details\"\n                          >\n                            <FaEye size={16} />\n                          </button>\n                        {/* { element?.invoiceType === \"debit\" && <button\n                            onClick={() => setPaymentModalVisible({\n                              isOpen: true,\n                              data: parentdata,\n                              refrensedata : element\n                            })}\n                            disabled={element?.invoiceType === \"credit\" || element?.status === \"Paid\"}\n                            className=\"p-2 text-cyan-600 hover:text-cyan-800 transition-colors rounded-md bg-gray-100 hover:bg-gray-200 disabled:bg-gray-300 disabled:text-gray-500\"\n                            title=\"Delete\"\n                          >\n                            <BiMoney size={16} />\n                          </button>} */}\n                         </div>\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr>\n                      <td colSpan={7} className=\"p-6 text-center text-sm text-gray-500\">\n                        No transactions found for the current period\n                      </td>\n                    </tr>\n                  )}\n\n                  {/* Closing Balance Row */}\n                  {transactions.length > 0 && (\n                    <tr className=\"bg-blue-50\">\n                      <td className=\"p-3 text-sm font-medium text-gray-700\">-</td>\n                      <td className=\"p-3 text-sm font-medium text-gray-700\">\n                        {endDate.format('DD-MM-YYYY')}\n                      </td>\n                      <td className=\"p-3\">\n                        <Tag color=\"blue\">CLOSING BALANCE</Tag>\n                      </td>\n                      <td className=\"p-3 text-sm font-medium text-gray-700\">\n                        Balance carried forward\n                      </td>\n                      {/* <td className=\"p-3 text-sm text-center font-medium\">-</td> */}\n                      <td className=\"p-3 text-sm text-right font-medium\">-</td>\n                      <td className=\"p-3 text-sm text-right font-medium\">\n                        <span className={closingBalance <= 0 ? \"text-red-600\" : \"text-green-600\"}>\n                          {Math.abs(closingBalance).toLocaleString('en-IN')}\n                          <span className=\"text-xs ml-1\">{closingBalance <= 0 ? '(Due)' : '(Adv)'}</span>\n                        </span>\n                      </td>\n                      <td className=\"p-3 text-center\">-</td>\n                    </tr>\n                  )}\n                </tbody>\n              )}\n            </table>\n          </div>\n        </div>\n      </div>\n\n      {/* Payment Entry Modal */}\n      {paymentModalVisible.isOpen && (\n        <PaymentEntryModal\n          visible={paymentModalVisible.isOpen}\n          onCancel={() => setPaymentModalVisible({ isOpen: false, data: null , refrensedata : null })}\n          parentdata={parentdata}\n          refrensedata={paymentModalVisible.refrensedata}\n          fetchprojectInvoice={fetchprojectInvoice}\n        />\n      )}\n\n      {/* Previous Transactions Modal */}\n      <Modal\n        title=\"Previous Period Transactions\"\n        width={1000}\n        visible={previousTransactionsModalVisible}\n        onCancel={() => setPreviousTransactionsModalVisible(false)}\n        footer={[\n          <Button key=\"close\" onClick={() => setPreviousTransactionsModalVisible(false)}>\n            Close\n          </Button>\n        ]}\n      >\n        <div className=\"mb-6\">\n          <h3 className=\"text-md font-semibold mb-2\">Summary</h3>\n          <div className=\"grid grid-cols-3 gap-2\">\n            <div className=\"bg-gray-50 p-3 rounded border\">\n              <p className=\"text-sm text-gray-600\">Total Invoices</p>\n              <p className=\"text-lg font-semibold text-red-600\">{previousSummary.totalDebit.toLocaleString('en-IN')}</p>\n            </div>\n            <div className=\"bg-gray-50 p-3 rounded border\">\n              <p className=\"text-sm text-gray-600\">Total Received</p>\n              <p className=\"text-lg font-semibold text-green-600\">{previousSummary.totalCredit.toLocaleString('en-IN')}</p>\n            </div>\n            <div className=\"bg-gray-50 p-3 rounded border\">\n              <p className=\"text-sm text-gray-600\">Closing Balance</p>\n              <p className={`text-lg font-semibold ${previousSummary.closingBalance <= 0 ? 'text-red-600' : 'text-green-600'}`}>\n                {Math.abs(previousSummary.closingBalance).toLocaleString('en-IN')}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"overflow-x-auto\">\n          <table className=\"w-full\">\n            <thead className=\"bg-gray-100\">\n              <tr className=\"text-left text-sm font-medium\">\n                <th className=\"p-3\">Date</th>\n                <th className=\"p-3\">Type</th>\n                <th className=\"p-3\">Reference</th>\n                <th className=\"p-3 text-right\">Amount</th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-200\">\n              {projectInvoiceReportList?.previousTransactions?.allTransactions?.length > 0 ? (\n                projectInvoiceReportList.previousTransactions.allTransactions.map((transaction) => (\n                  <tr key={transaction._id} className=\"hover:bg-gray-50\">\n                    <td className=\"p-3 text-sm\">\n                      {transaction.filterDate\n                        ? dayjs(transaction.filterDate).format('DD-MM-YYYY')\n                        : '-'}\n                    </td>\n                    <td className=\"p-3\">\n                      {transaction.invoiceType === 'credit' ? (\n                        <Tag color=\"green\">CREDIT</Tag>\n                      ) : (\n                        <Tag color=\"red\">INVOICE</Tag>\n                      )}\n                    </td>\n                    <td className=\"p-3 text-sm\">{transaction.invoiceNumber || '-'}</td>\n                    <td className=\"p-3 text-sm text-right\">\n                      <span className={transaction.invoiceType === 'credit' ? 'text-green-600' : 'text-red-600'}>\n                        {transaction.invoiceType === 'credit'\n                          ? `+ ${Number(transaction.amountPaid || 0).toLocaleString('en-IN')}`\n                          : `- ${Number(transaction.finalWithGSTAmount || 0).toLocaleString('en-IN')}`}\n                      </span>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr>\n                  <td colSpan={4} className=\"p-4 text-center text-sm text-gray-500\">\n                    No transactions found in the previous period\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        </div>\n      </Modal>\n    </GlobalLayout>\n  );\n}\n\nexport default ProjectInvoicingList;"],"names":["Option","Select","_ref","visible","onCancel","parentdata","fetchprojectInvoice","register","handleSubmit","control","setValue","reset","formState","errors","useForm","defaultValues","dispatch","useDispatch","loading","paymentMethod","useWatch","name","defaultValue","accountant","accountantList","accountants","loadingAccountants","useSelector","state","accountManagement","useEffect","accountantSearch","directorId","companyId","branchId","text","sort","status","isPagination","_jsx","Modal","footer","title","width","className","children","_jsxs","autoComplete","onSubmit","data","_accountants$find","_accountants$find$acc","reqpayload","managerId","projectId","_id","invoiceType","find","acc","accountentData","bankAccountId","paymentReference","remark","amountPaid","customDayjs","paymentDate","Swal","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","createprojectInvoiceFunc","error","concat","inputLabelClassName","Controller","rules","required","render","_ref2","field","_objectSpread","placeholder","showSearch","getPopupContainer","trigger","parentNode","optionFilterProp","inputAntdSelectClassName","filterOption","input","option","toLowerCase","indexOf","map","_acc$accountentData","value","fullName","message","_ref3","_ref4","bank","_ref5","_accountants$find2","_accountants$find2$ba","bankAccountData","optionLabelForBankSlect","_ref6","CustomDatePicker","disabledDate","current","isAfter","moment","type","step","min","rows","disabled","_projectInvoiceReport4","_projectInvoiceReport5","element","useParams","JSON","parse","decrypt","navigate","useNavigate","projectInvoiceReportList","projectInvoice","searchText","setSearchText","useState","currentPage","setCurrentPage","paymentModalVisible","setPaymentModalVisible","isOpen","refrensedata","previousTransactionsModalVisible","setPreviousTransactionsModalVisible","startDate","dayjs","subtract","endDate","tableRef","useRef","filters","join","isFirstRender","setisFirstRender","async","reqData","page","limit","reqPayload","format","getprojectInvoiceReportList","getCurrentSummary","_projectInvoiceReport2","currentTransactions","summary","totalDebit","totalCredit","closingBalance","openingBalance","transactions","calculateRunningBalance","getCurrentTransactions","_projectInvoiceReport3","allTransactions","balance","item","Number","finalWithGSTAmount","previousSummary","getPreviousSummary","_projectInvoiceReport","previousTransactions","currentSummary","GlobalLayout","onChange","e","onClick","encrypt","stringify","FaMoneyBillWave","FaInfoCircle","size","toLocaleString","Math","abs","report","allowClear","ref","colSpan","Loader2","Tag","color","length","index","_element$invoiceNumbe","invoiceDate","invoiceNumber","FaEye","PaymentEntryModal","Button","transaction","filterDate"],"sourceRoot":""}