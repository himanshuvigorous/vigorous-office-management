{"version":3,"file":"static/js/9293.3ab5f6c4.chunk.js","mappings":"6PAYA,MAoFA,EApF+BA,KAC3B,MAAQC,QAAQC,IAA2BC,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,UAEhE,SAAEC,EAAQ,aAAEC,EAAcC,WAAW,OAAEC,KAAaC,EAAAA,EAAAA,MACxDC,EAAiBC,KAAKC,MACxBC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,MAE5BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAkBjB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACTF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UAIlBE,EAAAA,EAAAA,MAAA,QAAMC,aAAa,MAAMF,UAAU,eAAeG,SAAUrB,EAtBtDsB,IACd,MAAMC,EAAe,CAClBC,UAC4B,WAAf,OAAdpB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqB,UACZ,GAC6B,aAAf,OAAdrB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqB,UACA,OAAdrB,QAAc,IAAdA,OAAc,EAAdA,EAAgBsB,IACF,OAAdtB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoB,UACpB,KAAY,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMK,qBACd,OAAc,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMM,QAEpBjB,GAASkB,EAAAA,EAAAA,IAAcN,IAAeO,KAAMR,IACnCA,EAAKS,OAAOlB,GAAU,OAU4DI,SAAA,EAC/EF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gDAA+CD,UAC1DE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EACbE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAAT,OAAKuB,EAAAA,IAAsBf,SAAA,CAAC,SAAKF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAChFF,EAAAA,EAAAA,KAAA,SAAAkB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACIC,KAAK,QACDnC,EAAS,uBAAwB,CACjCoC,SAAU,mCACZ,IACFjB,UAAS,IAAAT,OAAM2B,EAAAA,GAAc,KAAA3B,OAAIP,EAAOyB,qBAAuB,gBAAkB,kBAAiB,KAElGU,YAAY,6BAEfnC,EAAOyB,uBACJZ,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAC9Bf,EAAOyB,qBAAqBW,gBAmB7CvB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,oBAAmBD,UAClCF,EAAAA,EAAAA,KAAA,UACNmB,KAAK,SACLK,SAAU5C,EACVuB,UAAS,GAAAT,OAAKd,EAA0B,cAAe,YAAW,gCAAgCsB,SAEnGtB,GAA0BoB,EAAAA,EAAAA,KAACyB,EAAAA,EAAM,IAAM,oB","sources":["pages/organizationType/CreateOrganizationType.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport Label from \"../../component/Label/Label.js\";\nimport InputBox from \"../../component/InputBox/InputBox.js\";\nimport GlobalLayout from \"../../global_layouts/GlobalLayout/GlobalLayout.js\";\nimport { useForm } from \"react-hook-form\";\nimport { createOrgType } from \"./organizationTypeFeatures/_org_type_reducers.js\";\nimport { domainName, inputClassName, inputLabelClassName } from \"../../constents/global.js\";\nimport Loader from \"../../global_layouts/Loader.js\";\n\n\nconst CreateOrganizationType = () => {\n    const { loading:oragnisationTypeLoading} = useSelector(state => state.orgType)\n\n    const { register, handleSubmit, formState: { errors } } = useForm();\nconst userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    const onSubmit = (data) => {\n        const finalPayload = {\n           companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? ''\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n            \"name\": data?.organizationTypeName,\n            \"status\": data?.status,\n        };\n        dispatch(createOrgType(finalPayload)).then((data) => {\n            if (!data.error) navigate(-1);\n        });\n    }\n\n    return (\n        <GlobalLayout>\n            <div className=\"gap-4\">\n                {/* <h2 className=\"text-2xl font-bold mb-4 col-span-2\">\n                    Add Organization Types\n                </h2> */}\n                <form autoComplete=\"off\" className=\"mt-5 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n                        <div className=\"\">\n                            <label className={`${inputLabelClassName}`}>Name <span className=\"text-red-600\">*</span></label>\n                            <input\n                                type=\"text\"\n                                {...register(\"organizationTypeName\", {\n                                    required: \"Organization Type is required\",\n                                })}\n                                className={` ${inputClassName} ${errors.organizationTypeName ? \"border-[1px] \" : \"border-gray-300\"\n                                    } `}\n                                placeholder=\"Enter Organization Type\"\n                            />\n                            {errors.organizationTypeName && (\n                                <p className=\"text-red-500 text-sm\">\n                                    {errors.organizationTypeName.message}\n                                </p>\n                            )}\n                        </div>\n                        {/* <div>\n                            <label className={`${inputLabelClassName}`}>Status <span className=\"text-red-600\">*</span></label>\n                            <select\n                                {...register(\"status\", { required: \"Status is required\" })}\n                                className={`bg-white ${errors.status ? \"border-[1px] \" : \"border-gray-300\"} ${inputClassName}`}\n                            >\n                                <option value=\"\">Select Status</option>\n                                <option value={true}>Active</option>\n                                <option value={false}>Inactive</option>\n                            </select>\n                            {errors.status && (\n                                <p className=\"text-red-500 text-sm\">{errors.status.message}</p>\n                            )}\n                        </div> */}\n                    </div>\n                    <div className=\"flex justify-end \">\n                    <button\n              type=\"submit\"\n              disabled={oragnisationTypeLoading}\n              className={`${oragnisationTypeLoading ? 'bg-gray-400': 'bg-header' } text-white p-2 px-4 rounded`}\n            >\n            {oragnisationTypeLoading ? <Loader /> : 'Submit'}\n            </button>\n                    </div>\n\n                </form>\n\n\n            </div>\n        </GlobalLayout>\n    )\n}\n\nexport default CreateOrganizationType"],"names":["CreateOrganizationType","loading","oragnisationTypeLoading","useSelector","state","orgType","register","handleSubmit","formState","errors","useForm","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","dispatch","useDispatch","navigate","useNavigate","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","userType","_id","organizationTypeName","status","createOrgType","then","error","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","disabled","Loader"],"sourceRoot":""}