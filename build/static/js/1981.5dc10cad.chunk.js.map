{"version":3,"file":"static/js/1981.5dc10cad.chunk.js","mappings":"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","sources":["global_layouts/Loader/Loader.js","pages/taskManagement/addTask/ManagerTaskList.js","pages/taskManagement/employeeAddTask/ChatBox.js"],"sourcesContent":["import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaEye, FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { decrypt, encrypt } from \"../../../config/Encryption\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport { FaAngleUp, FaAngleDown, FaSearch, FaUser } from \"react-icons/fa\";\nimport { HiChatAlt, HiOutlineFilter, HiViewGrid } from \"react-icons/hi\";\nimport { IoMdNotificationsOutline } from \"react-icons/io\";\nimport { AiOutlineMessage } from \"react-icons/ai\";\nimport {\n  domainName,\n  inputAntdSelectClassNameFilter,\n  inputClassNameSearch,\n  pazeSizeReport,\n  showSwal,\n  statusMapping,\n} from \"../../../constents/global\";\nimport {\n  getClientList,\n  deleteClientFunc,\n} from \"../../client/clientManagement/clientFeatures/_client_reducers\";\nimport Loader from \"../../../global_layouts/Loader/Loader\";\nimport {\n  deletetaskFunc,\n  getTaskList,\n  statusupdatetaskFunc,\n} from \"./addTaskFeatures/_addTask_reducers\";\nimport moment from \"moment\";\nimport ChatBox from \"../employeeAddTask/ChatBox\";\nimport { BsEye } from \"react-icons/bs\";\nimport { Modal, Select, Spin, Tooltip, Dropdown } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport { deptSearch } from \"../../department/departmentFeatures/_department_reducers\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { employeSearch, getEmployeDetails } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport { MdDelete, MdOutlineTask, MdRemove } from \"react-icons/md\";\nimport { CLIENT_TASK_STATUS_ARR } from \"../../../constents/ActionConstent\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport dayjs from \"dayjs\";\nimport { GrValidate } from \"react-icons/gr\";\nimport { MdOutlineAssignment } from \"react-icons/md\";\nimport { TbPencilMinus } from \"react-icons/tb\";\n\n\nfunction ManagerTaskList() {\n\n\n  \n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isChatModalOpen, setIsChatModalOpen] = useState(false);\n  const [comments, setComments] = useState(null);\n  const userInfoglobal = JSON.parse( localStorage.getItem(`user_info_${domainName}`));\n  const { employeList } = useSelector((state) => state.employe);\n  const { taskList, totalTaskCount, loading } = useSelector((state) => state.addTask);\n  const { employeDetailsData } = useSelector((state) => state.employe);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [EmployeeViewModal, setEmployeeViewModal] = useState({\n    isOpen: false,\n    data: null\n  });\n  const [searchParams, setSearchParams] = useSearchParams();\n const initialPage = parseInt(searchParams.get('page')) || 1;\n  const initialLimit = parseInt(searchParams.get('limit')) || 10;\n  const initialEmployeeId = searchParams.get('employeeId') || '';\n  const initialStatus = searchParams.get('status') || '';\n  const initialOverdue = searchParams.get('overdue') || '';\n\n\n\n\n const [currentPage, setCurrentPage] = useState(initialPage);\n  const [limit, setLimit] = useState(initialLimit);\n  const [employeeId, setEmployeeId] = useState(initialEmployeeId);\n  const [status, setStatus] = useState(initialStatus);\n  const [isOverDue, setIsOverDue] = useState(initialOverdue);\n  const [searchText, setSearchText] = useState('');\n\n useEffect(() => {\n    const params = new URLSearchParams();\n    if (currentPage > 1) params.set('page', currentPage);\n    if (limit !== 10) params.set('limit', limit);\n    if (employeeId) params.set('employeeId', employeeId);\n    if (status) params.set('status', status);\n    if (isOverDue) params.set('overdue', isOverDue);\n    setSearchParams(params);\n  }, [currentPage, limit, employeeId, status, isOverDue, searchText]);\n  useEffect(() => {\n    if(userInfoglobal?.roleKey == \"manager\" && userInfoglobal?.userType == \"employee\"){\n      fetchClientListData();\n    }\n    \n  }, [currentPage, limit,  employeeId, status, isOverDue, searchText]);\n  \n\n  const handleResetFilters = () => {\n    setCurrentPage(1);\n    setLimit(10);\n    setEmployeeId('');\n    setStatus('');\n    setIsOverDue('');\n    setSearchText('');\n  };\n  const onChange = (e) => {\n    setSearchText(e);\n  \n  };\n\n\n\n\n\n  const handlePageSizeChange = (e) => {\n    setLimit(Number(e));\n    setCurrentPage(Number(1))\n  };\n  const onPaginationChange = (page) => setCurrentPage(page)\n\n  const handleEmployeeChange = (value) => {\n    setEmployeeId(value);\n    setCurrentPage(1);\n  };\n\n  const handleStatusChange = (value) => {\n    setStatus(value);\n    setCurrentPage(1);\n  };\n\n  const handleOverdueChange = (value) => {\n    setIsOverDue(value);\n    setCurrentPage(1);\n  };\n  const fetchClientListData = () => {\n    let reqData = {\n      page: currentPage,\n      limit: limit,\n      reqPayload: {\n        companyId:       userInfoglobal?.companyId,\n        branchId:  userInfoglobal?.branchId,\n        departmentId: userInfoglobal?.departmentId ?? '',\n        directorId: \"\",\n        clientId: \"\",\n        employeId: employeeId,\n        taskTypeId: \"\",\n        groupId: \"\",\n        text: searchText,\n        sort: true,\n        status: status ? status : CLIENT_TASK_STATUS_ARR.filter(\n          status => status !== 'Completed' && status !== 'Task_Stop'\n        ),\n        isOverDue: isOverDue === 'true' ? true : isOverDue === 'false' ? false : '',\n        isPagination: true,\n      },\n    };\n    dispatch(getTaskList(reqData));\n  };\n\n\n  useEffect(() => {\n    if (selectedEmployee) {\n      const reqData = { _id: selectedEmployee?._id };\n      dispatch(getEmployeDetails(reqData));\n    }\n  }, [selectedEmployee]);\n    useEffect(() => {\n\n    dispatch(\n      branchSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n      })\n    )\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n      })\n    )\n\n  }, []);\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId: userInfoglobal?.companyId,\n        branchId:userInfoglobal?.branchId,\n        departmentId: userInfoglobal?.departmentId  ? userInfoglobal?.departmentId  : '',\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: false,\n        isDirector: false,\n      })\n    )\n  };\n\n  const handleImageClick = (employee) => {\n    setSelectedEmployee(employee);\n    setModalOpen(true);\n  }\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedEmployee(null);\n  };\n\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deletetaskFunc(reqData)).then((data) => {\n          // fetchClientListData();\n          if (currentPage > 1 && taskList?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n\n          } else {\n            fetchClientListData();\n          }\n        });\n      }\n    });\n  };\n\n\n  const handleOpenChat = (data) => {\n    setIsChatModalOpen(true);\n    setComments(data?.commentData);\n  };\n\n  const handleCloseChat = () => {\n    setIsChatModalOpen(false);\n    setComments(null);\n  };\n\n\n  if(!(userInfoglobal?.roleKey === \"manager\" && userInfoglobal?.userType === \"employee\")) {\n    return (\n      <GlobalLayout>\n        <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n          <p className=\"text-center font-semibold\">\n            You are not a Manager. This page is viewable for Manager only.\n          </p>\n        </div>\n      </GlobalLayout>\n    );\n  }\n\n  return (\n    <GlobalLayout onChange={onChange}>\n\n      <section>\n        <div>\n          <div className=\"space-y-1\">\n            <div className=\"2xl:flex justify-between items-center space-y-1.5 overflow-y-auto py-1\">\n              {/* <div class=\"xl:flex justify-between items-center py-1 lg:space-y-0 space-y-2 overflow-y-auto\"> */}\n              <div className=\"grid sm:grid-cols-3 grid-cols-1 md:grid-cols-4 lg:grid-cols-4 xl:flex xl:gap-3 gap-1.5\">\n               \n                \n                \n                <div className=\"\">\n                  <Select\n                    value={employeeId}\n                    onChange={handleEmployeeChange}\n                    disabled={loading}\n                    showSearch\n                    filterOption={(input, option) =>\n                      option?.label?.toLowerCase().includes(input.toLowerCase())\n                    }\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    placeholder=\"Select Employee\"\n                    onFocus={handleEmployeeFocus}\n                    options={[\n                      { label: \"Select Employee\", value: '' },\n                      ...(employeList || []).map((element) => ({\n                        label: element.fullName,\n                        value: element._id,\n                      })),\n                    ]}\n                  />\n                </div>\n                \n                <div className=\"\">\n                  <Select\n                    value={status}\n                    onChange={handleStatusChange}\n                    disabled={loading}\n                    defaultValue=\"\"\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    {CLIENT_TASK_STATUS_ARR.filter(\n                      status => status !== 'Completed' && status !== 'Task_Stop'\n                    )?.map(dataStatus => (\n                      <Select.Option value={dataStatus}>\n                        {dataStatus?.replace(/_/g, ' ')\n                          .toLowerCase()\n                          .replace(/\\b\\w/g, char => char.toUpperCase())}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </div>\n                \n                <div>\n                  <Select\n                    value={isOverDue}\n                    onChange={handleOverdueChange}\n                    defaultValue=\"\"\n                    disabled={loading}\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">All Task</Select.Option>\n                    <Select.Option value=\"true\">Overdue Task</Select.Option>\n                    <Select.Option value=\"false\">Other Task</Select.Option>\n                  </Select>\n                </div>\n              \n             \n            </div>\n            \n            \n              {/* </div> */}\n              <div className=\"flex justify-end items-center gap-2 \">\n                <button\n                  onClick={() => {\n                  handleResetFilters();\n\n                  }}\n                  className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                  <span className=\"text-[12px]\">Reset</span>\n                </button>\n                {canCreate && (\n                  <Tooltip placement=\"topLeft\"  title='Add Task'>\n                    <button\n                      onClick={() => {\n                        navigate(\"/admin/task/create\");\n                      }}\n                      className=\"bg-header px-2 py-1.5 rounded-md flex justify-center whitespace-nowrap items-center space-x-2 text-white\"\n                    >\n                      <FaPlus />\n                      <span className=\"text-[12px]\">Add Task</span>\n                    </button>\n                  </Tooltip>)}\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-light text-gray-500\">\n                Rows per page:\n              </span>\n              <Select\n                value={limit}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n          </div>\n          <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n            {canRead && (\n              <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                <thead className=\"bg-header text-white text-[12px] font-[500]\">\n                  <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                    <th className=\"p-2 whitespace-nowrap text-left w-[50px]\">S.No.</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[135px]\">Client Name</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[115px]\">Department</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[135px]\">Task Name</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[125px]\">Assign To</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[85px]\">Financial Year</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[85px]\">Period</th>\n                    <th className=\"p-2 whitespace-nowrap text-left hidden 2xl:table-cell min-w-[95px]\">Assigned Date</th>\n                    <th className=\"p-2 whitespace-nowrap text-left hidden 2xl:table-cell min-w-[95px]\">Due Date</th>\n                    <th className=\"p-2 whitespace-nowrap text-left hidden 2xl:table-cell min-w-[125px]\">Last Updated On</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[75px]\">Status</th>\n                    {(canUpdate || canDelete || canRead) && (\n                      <th className=\"p-2 whitespace-nowrap text-left w-[75px]\">Action</th>\n                    )}\n                  </tr>\n                </thead>\n\n                {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={12}\n                    className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr> :\n                  <tbody>\n                    {taskList && taskList.length > 0 ? (\n                      taskList.map((element, index) => (\n                        <tr\n                          className={` !text-xs \n                          ${element?.isOverDue ? \"bg-rose-300 text-gray-800\" :\n                              element?.priority == \"high\" ? \"bg-[#FFE5B4] text-gray-800\" :\n                                element?.priority == \"medium\" ? \"bg-green-300 text-gray-800\" : \"bg-white text-[#374151]\"\n                            }\n                          border-b-[1px] border-[#DDDDDD]  text-[14px]`}>\n                          <td className=\"p-2 text-left w-[50px]\">\n                            {index + 1 + (currentPage - 1) * limit}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[135px]\">\n                            {element?.clientData?.fullName}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[115px]\">\n                            {element?.departmentData?.name}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[135px]\">\n                            {element?.taskName}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[125px]\">\n                            <div className=\"flex gap-1 items-center\">\n                              <span>{element?.assignedEmployeData?.[0]?.fullName}</span>\n                              {element?.assignedEmployeData?.length > 1 && (\n                                <span className=\"text-header flex items-center gap-1\">\n                                  +\n                                  <span className=\"h-5 w-5 bg-header text-white text-[12px] rounded-full flex items-center justify-center\">\n                                    {element?.assignedEmployeData?.length - 1}\n                                  </span>\n                                </span>\n                              )}\n                              <FaEye\n                                className=\"text-[#374151] text-[14px] cursor-pointer\"\n                                onClick={() =>\n                                  setEmployeeViewModal({ isOpen: true, data: element })\n                                }\n                              />\n                            </div>\n                          </td>\n                          <td className=\"p-2 text-left min-w-[85px]\">\n                            {element?.financialYear || \"-\"}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[85px]\">\n                            {element?.type === \"Monthly\" && element?.monthName}\n                            {element?.type === \"Quaterly\" && element?.monthQuaters}\n                            {element?.type === \"Yearly\" && \"Yearly\"}\n                          </td>\n                          <td className=\"p-2 text-left hidden 2xl:table-cell min-w-[95px]\">\n                            {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n                          <td className=\"p-2 text-left hidden 2xl:table-cell min-w-[95px]\">\n                            {moment(element?.dueDate).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n                          <td className=\"p-2 text-left hidden 2xl:table-cell min-w-[125px]\">\n                            {moment(element?.updatedAt).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[75px]\">\n                            <span\n                              className={`\n                              ${element?.status === \"Assigned\"\n                                  ? \"bg-blue-500 text-white\"\n                                  : element?.status === \"Accepted\"\n                                    ? \"bg-green-500 text-white\"\n                                    : element?.status === \"Pending_at_client\"\n                                      ? \"bg-yellow-300 text-black\"\n                                      : element?.status === \"Pending_at_department\"\n                                        ? \"bg-purple-300 text-black\"\n                                        : element?.status === \"Pending_at_colleague\"\n                                          ? \"bg-teal-300 text-black\"\n                                          : element?.status === \"Pending_at_manager\"\n                                            ? \"bg-orange-300 text-black\"\n                                            : element?.status === \"Work_in_progress\"\n                                              ? \"bg-indigo-500 text-white\"\n                                              : element?.status === \"Pending_for_approval\"\n                                                ? \"bg-pink-300 text-black\"\n                                                : element?.status === \"Pending_for_fees\"\n                                                  ? \"bg-gray-400 text-black\"\n                                                  : element?.status === \"Completed\"\n                                                    ? \"bg-green-600 text-white\"\n                                                    : element?.status === \"Task_Stop\"\n                                                      ? \"bg-red-600 text-white\"\n                                                      : element?.status === \"Rejected\"\n                                                        ? \"bg-rose-800 text-white\"\n                                                        : element?.status === \"reAssign_to_other\"\n                                                          ? \"bg-cyan-700 text-white\"\n                                                          : \"bg-white text-black\"\n                                } border-header border-[1px] px-2 py-1.5 rounded-lg whitespace-nowrap text-[12px]`}\n\n                            >\n                              {element?.status\n                                ?.replace(/_/g, ' ')\n                                .toLowerCase()\n                                .replace(/\\b\\w/g, char => char.toUpperCase())}\n\n                            </span>\n                          </td>\n                          {(canUpdate || canDelete || canRead) && (\n                            <td className=\"p-2 text-left w-[75px]\">\n                              <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                {canRead && (\n                                  <Tooltip placement=\"topLeft\"  title=\"View Task\">\n                                    <button\n                                      onClick={() => {\n                                        navigate(\n                                          `/admin/task/view/${encrypt(\n                                            element?._id\n                                          )}/${encrypt(`manager`)}`\n                                        );\n                                      }}\n                                      className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border-gray-800 border-[1.5px]\"\n                                      type=\"button\"\n                                    >\n                                      <BsEye\n                                        className=\" hover:text-gray-800 text-gray-800\"\n                                        size={16}\n                                      />\n                                    </button>\n                                  </Tooltip>\n                                )}\n\n                                <Dropdown\n                                  menu={{\n                                    items: [\n                                      {\n                                        key: 'responsive-date-info',\n                                        label: (\n                                          <div className=\"2xl:hidden block\">\n                                            <div className=\"flex flex-col space-y-1.5\">\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-slate-800 hover:text-slate-700\"\n                                              >\n                                                <MdOutlineAssignment className=\"mr-2\" size={16} />\n                                                Assigned Date\n                                              </span>\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(dayjs(element?.dueDate).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-purple-800 hover:text-purple-700\"\n                                              >\n                                                <MdOutlineTask className=\"mr-2\" size={16} />\n                                                Due Date\n                                              </span>\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(dayjs(element?.updatedAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-teal-700 hover:text-teal-600\"\n                                              >\n                                                <GrValidate className=\"mr-2\" size={15} />\n                                                Last Updated On\n                                              </span>\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(element?.createdBy || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-sky-800 hover:text-sky-700\"\n                                              >\n                                                <TbPencilMinus className=\"mr-2\" size={16} />\n                                                Created By\n                                              </span>\n                                            </div>\n                                          </div>\n                                        ),\n                                      },\n                                      ...(canUpdate\n                                        ? [{\n                                          key: 'edit-task',\n                                          label: (\n                                            <span\n\n                                              className={`flex justify-start items-center gap-1 ${element?.status !== 'Assigned' ? 'text-gray-500' : ''}`}\n                                            >\n                                              <FaPenToSquare\n                                                className={`mr-2 ${element?.status !== 'Assigned' ? 'text-gray-500' : 'text-[#3c8dbc] hover:text-[#337ab7]'}`}\n                                                size={16}\n                                              />\n                                              {'Edit Task'}\n                                            </span>\n                                          ),\n                                          disabled: element?.status !== 'Assigned',\n                                          onClick: () => {\n                                            if (element?.status === 'Assigned') {\n                                              navigate(`/admin/task/edit/${encrypt(element?._id)}`);\n                                            }\n                                          }\n                                        }]\n                                        : []),\n                                      ...(canRead\n                                        ? [{\n                                          key: 'view-description',\n                                          label: (\n                                            <span\n                                              className=\"flex justify-start items-center gap-1\"\n                                              onClick={() => handleOpenChat(element)}>\n                                              <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} />\n                                              View Description\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n                                      ...((canDelete && userInfoglobal?.userType !== \"company\")\n                                        ? [{\n                                          key: 'delete-task',\n                                          label: (\n                                            <span\n                                              onClick={() => {\n                                                if (element?.status === 'Assigned') handleDelete(element?._id);\n                                              }}\n                                              className={`flex justify-start items-center gap-1 ${element?.status !== 'Assigned' ? 'text-gray-500' : 'text-red-500'}`}\n                                            >\n                                              <RiDeleteBin5Line\n                                                className={`mr-2 ${element?.status === 'Assigned'\n                                                  ? 'text-red-600 hover:text-red-500'\n                                                  : 'text-gray-500'\n                                                  }`}\n                                                size={16}\n                                              />\n                                              {'Delete Task'}\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n                                      ...(userInfoglobal?.userType === \"company\"\n                                        ? [{\n                                          key: 'delete-task',\n                                          label: (\n                                            <span\n                                              onClick={() => {\n                                                handleDelete(element?._id);\n                                              }}\n                                              className={`flex justify-start items-center gap-1  text-red-500`}\n                                            >\n                                              <RiDeleteBin5Line\n                                                className={`mr-2 ${'text-red-600 hover:text-red-500'}`}\n                                                size={16}\n                                              />\n                                              {'Delete Task'}\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n\n                                      // ...(canRead\n                                      //   ? [{\n                                      //     key: 'createdAt',\n                                      //     label: (\n                                      //       <span\n                                      //         className=\"flex justify-start items-center gap-1\"\n                                      //       // onClick={() => handleOpenChat(element)}\n                                      //       >\n                                      //         {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                      //         {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                                      //       </span>\n                                      //     ),\n                                      //   }]\n                                      //   : []),\n\n                                      // ...(canRead\n                                      //   ? [{\n                                      //     key: 'createdBy',\n                                      //     label: (\n                                      //       <span\n                                      //         className=\"flex justify-start items-center gap-1\"\n                                      //       // onClick={() => handleOpenChat(element)}\n                                      //       >\n                                      //         {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                      //         {element?.createdBy}\n                                      //       </span>\n                                      //     ),\n                                      //   }]\n                                      //   : []),\n                                    ],\n                                  }}\n                                  trigger={['click']}\n                                >\n                                  <button\n                                    className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border-gray-800 border-[1.5px]\"\n                                    type=\"button\"\n                                  >\n                                    <PiDotsThreeOutlineVerticalBold\n                                      className=\" hover:text-gray-900 text-gray-900\"\n                                      size={16}\n                                    />\n                                  </button>\n                                </Dropdown>\n                              </span>\n                            </td>\n                          )}\n                        </tr>\n                      ))\n                    ) : (\n                      <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                          colSpan={12}\n                          className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                          Record Not Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>}\n              </table>\n            )}\n          </div>\n          {\n            taskList?.length > 0 && (\n              <CustomPagination\n                totalCount={totalTaskCount}\n                pageSize={limit}\n                currentPage={currentPage}\n                onChange={onPaginationChange}\n              />\n            )}\n        </div>\n      </section>\n\n      {\n        isChatModalOpen && (\n          <ChatBox\n            isOpen={isChatModalOpen}\n            onClose={() => handleCloseChat()}\n            comment={comments}\n          />\n        )\n      }\n      <Modal\n        title=\"Employee List\"\n        visible={EmployeeViewModal?.isOpen}\n        onCancel={() => setEmployeeViewModal({\n          isOpen: false,\n          employee: null,\n        })}\n        className=\"antmodalclassName\"\n        footer={[\n          <button\n            key=\"close\"\n            onClick={() => setEmployeeViewModal({\n              isOpen: false,\n              employee: null,\n            })}\n            className=\" capitalize px-2 py-1 rounded-sm bg-header text-white\"\n          >\n            Close\n          </button>\n        ]}\n        width={800}\n        centered\n      >\n        <div className=\"flex items-center\">\n\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4 p-4\">\n            {EmployeeViewModal?.data?.assignedEmployeData?.map((element) => (\n              <div\n                key={element.id}\n                onClick={() => handleImageClick(element)}\n                className=\"flex flex-col items-center p-3 rounded-lg bg-white hover:bg-gray-50 cursor-pointer transition-all shadow-sm hover:shadow-md border border-gray-100\"\n              >\n                {/* Avatar with subtle ring */}\n                <div className=\"w-16 h-16 mb-2 rounded-full overflow-hidden ring-2 ring-amber-100\">\n                  <img\n                    alt={element.fullName}\n                    src={\n                      element.profileImage\n                        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`\n                        : \"/images/avatar.jpg\"\n                    }\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n\n                {/* Name + Role (if available) */}\n                <div className=\"text-center\">\n                  <p className=\"font-medium text-gray-800 truncate max-w-[100px]\">\n                    {element.fullName}\n                  </p>\n                  {element.designation && (\n                    <p className=\"text-xs text-gray-500 mt-1 truncate max-w-[100px]\">\n                      {element.designation}\n                    </p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <Modal\n          title=\"Employee Details\"\n          visible={modalOpen}\n          onCancel={closeModal}\n          className=\"antmodalclassName\"\n          footer={[\n            <button\n              key=\"close\"\n              onClick={closeModal}\n              className=\" capitalize px-2 py-1 rounded-sm bg-header text-white\"\n            >\n              Close\n            </button>\n          ]}\n          width={600}\n          centered\n        >\n          {loading ? (\n            <div className=\"flex justify-center\">\n              <Spin size=\"large\" />\n            </div>\n          ) : (\n            employeDetailsData?.data && (\n              <div className=\"mt-4\">\n                <div className=\"flex flex-col md:flex-row items-center\">\n                  <img\n                    alt=\"\"\n                    src={\n                      employeDetailsData?.data?.profileImage\n                        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${employeDetailsData?.data?.profileImage}`\n                        : `/images/avatar.jpg`\n                    }\n                    className=\"rounded-full w-16 h-16 ring-2 ring-amber-300\"\n                  />\n                  <div className=\"ml-4\">\n                    <p className=\"font-semibold\">{employeDetailsData?.data?.fullName}</p>\n                    <p>{employeDetailsData?.data?.designationData?.name}</p>\n                    <p>{employeDetailsData?.data?.email}</p>\n                    <p>{employeDetailsData?.data?.companyData?.fullName}</p>\n                    <p>{employeDetailsData?.data?.departmentData?.name}</p>\n                    <p>{employeDetailsData?.data?.branchData?.fullName}</p>\n                    <p>\n                      {employeDetailsData?.data?.mobile?.code} {employeDetailsData?.data?.mobile?.number}\n                    </p>\n                    {/* Additional Info */}\n                    <div className=\"mt-3\">\n                      <p>\n                        <strong>Office Email:</strong> {employeDetailsData?.data?.officeEmail}\n                      </p>\n                      <p>\n                        <strong>User Name:</strong> {employeDetailsData?.data?.userName}\n                      </p>\n                      <p>\n                        <strong>Status:</strong> {employeDetailsData?.data?.status ? 'Active' : 'Inactive'}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            )\n          )}\n        </Modal>\n      </Modal>\n\n    </GlobalLayout >\n  );\n}\nexport default ManagerTaskList;","import React, { useState, useRef, useEffect } from \"react\";\nimport { statusMapping } from \"../../../constents/global\";\nimport moment from \"moment\";\nimport { RxCross1 } from \"react-icons/rx\";\n\nconst ChatBox = ({ onClose, comment }) => {\n  const [messages, setMessages] = useState([]);\n  const [open, setOpen] = useState('translate-y-full');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    setOpen(\"translate-y-0\");\n    return () => {\n      setOpen(\"translate-y-full\");\n    };\n  }, [messages]);\n\n  useEffect(() => {\n    if (comment) {\n      const commentData = comment.map((comment) => ({\n        sender: comment?.creatorData?.fullName,\n        text: comment?.message,\n        status: comment?.status,\n        createdAt: comment?.createdAt || Date.now(),\n      }));\n      setMessages(commentData);\n    }\n  }, [comment]);\n\n  const handleClose = () => {\n    // Trigger the closing animation after 300ms\n    setTimeout(() => {\n      setOpen(\"translate-y-full\"); // This will trigger the closing animation\n      setTimeout(() => {\n        onClose(); // Call the onClose function after the animation\n      }, 300); // Ensure onClose is called after the animation ends (500ms)\n    }, 50); // 300ms delay before starting the animation\n  };\n\n  return (\n    <div\n      className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-end items-end px-2 z-[1501]\"\n      onClick={handleClose}\n    >\n      <div\n        className={`bg-white rounded-lg w-full max-w-md max-h-[80vh] shadow-xl overflow-hidden transform transition-all duration-500 ease-in-out ${open}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"p-2 bg-header text-white rounded-lg shadow-md text-center text-md font-semibold flex justify-between items-center\">\n          Task Comments\n          <RxCross1 className=\"cursor-pointer\" onClick={handleClose} />\n        </div>\n\n        <div className=\"p-4 h-[60vh] overflow-y-auto space-y-2\">\n          {messages.length > 0 ? (\n            messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`flex flex-col ${msg.sender === \"You\" ? \"items-end\" : \"items-start\"}`}\n              >\n                <div className=\"p-1 w-[100%] max-w-[100%]\">\n                  <div className=\"text-sm font-semibold mb-2 text-gray-600 \">\n                    {msg.sender}\n                  </div>\n\n                  <div\n                    className={`pl-4 border-l border-gray-200 ${\n                      msg.status === \"Assigned\"\n                        ? \"border-blue-500 text-white\"\n                        : msg.status === \"Accepted\"\n                        ? \"border-green-500 text-white\"\n                        : msg.status === \"Pending_at_client\"\n                        ? \"border-yellow-400 text-black\"\n                        : msg.status === \"Completed\"\n                        ? \"border-green-800 text-white\"\n                        : \"border-gray-300 text-black\"\n                    }`}\n                  >\n                    <p className=\"text-sm mb-2 text-gray-800 \">{msg.text}</p>\n                    <div\n                      className={`text-xs mb-2 px-2 py-1 rounded-full inline-block shadow-xl ${\n                        msg.status === \"Assigned\"\n                          ? \"bg-blue-500 text-white\"\n                          : msg.status === \"Accepted\"\n                          ? \"bg-green-500 text-white\"\n                          : msg.status === \"Pending_at_client\"\n                          ? \"bg-yellow-400 text-black\"\n                          : msg.status === \"Completed\"\n                          ? \"bg-green-800 text-white\"\n                          : \"bg-gray-300 text-black\"\n                      }`}\n                    >\n                      {statusMapping[msg.status] || \"No Status\"}\n                    </div>\n                  </div>\n                  {/* Date and Time at Bottom Left */}\n                  <div className=\"text-xs text-gray-500 mt-2\">\n                    {moment(msg.createdAt).format(\"MMM DD, YYYY - h:mm A\")}\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p className=\"text-center text-gray-500\">No comments available.</p>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"names":["_jsx","className","children","Spin","size","_CLIENT_TASK_STATUS_A","_EmployeeViewModal$da","_EmployeeViewModal$da2","_employeDetailsData$d","_employeDetailsData$d2","_employeDetailsData$d3","_employeDetailsData$d4","_employeDetailsData$d5","_employeDetailsData$d6","_employeDetailsData$d7","_employeDetailsData$d8","_employeDetailsData$d9","_employeDetailsData$d0","_employeDetailsData$d1","_employeDetailsData$d10","_employeDetailsData$d11","_employeDetailsData$d12","_employeDetailsData$d13","_employeDetailsData$d14","_employeDetailsData$d15","_employeDetailsData$d16","_employeDetailsData$d17","navigate","useNavigate","dispatch","useDispatch","isChatModalOpen","setIsChatModalOpen","useState","comments","setComments","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","employeList","useSelector","state","employe","taskList","totalTaskCount","loading","addTask","employeDetailsData","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","EmployeeViewModal","setEmployeeViewModal","isOpen","data","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialLimit","initialEmployeeId","initialStatus","initialOverdue","currentPage","setCurrentPage","limit","setLimit","employeeId","setEmployeeId","status","setStatus","isOverDue","setIsOverDue","searchText","setSearchText","useEffect","params","URLSearchParams","set","roleKey","userType","fetchClientListData","_userInfoglobal$depar","reqData","page","reqPayload","companyId","branchId","departmentId","directorId","clientId","employeId","taskTypeId","groupId","text","sort","CLIENT_TASK_STATUS_ARR","filter","isPagination","getTaskList","_id","getEmployeDetails","branchSearch","deptSearch","canCreate","canRead","canUpdate","canDelete","usePermissions","closeModal","handleDelete","id","Swal","title","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deletetaskFunc","length","Number","GlobalLayout","_jsxs","onChange","e","Select","value","disabled","showSearch","filterOption","input","option","_option$label","label","toLowerCase","includes","inputAntdSelectClassNameFilter","placeholder","onFocus","handleEmployeeFocus","employeSearch","isBranch","isDirector","options","map","element","fullName","defaultValue","String","Option","dataStatus","replace","char","toUpperCase","onClick","Tooltip","placement","FaPlus","pazeSizeReport","colSpan","Loader2","index","_element$clientData","_element$departmentDa","_element$assignedEmpl","_element$assignedEmpl2","_element$assignedEmpl3","_element$assignedEmpl4","_element$status","priority","clientData","departmentData","name","taskName","assignedEmployeData","FaEye","financialYear","type","monthName","monthQuaters","moment","createdAt","format","dueDate","updatedAt","encrypt","BsEye","Dropdown","menu","items","key","showSwal","dayjs","MdOutlineAssignment","MdOutlineTask","GrValidate","createdBy","TbPencilMinus","FaPenToSquare","handleOpenChat","commentData","HiChatAlt","RiDeleteBin5Line","trigger","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","pageSize","ChatBox","onClose","comment","Modal","visible","onCancel","employee","footer","width","centered","alt","src","profileImage","process","designation","designationData","email","companyData","branchData","mobile","code","number","officeEmail","userName","_ref","messages","setMessages","open","setOpen","messagesEndRef","useRef","_messagesEndRef$curre","current","scrollIntoView","behavior","_comment$creatorData","sender","creatorData","message","Date","now","handleClose","setTimeout","stopPropagation","RxCross1","msg","statusMapping","ref"],"sourceRoot":""}