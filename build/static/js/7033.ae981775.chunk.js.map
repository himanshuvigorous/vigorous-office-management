{"version":3,"file":"static/js/7033.ae981775.chunk.js","mappings":"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","sources":["pages/reportsManager/hrmsReports/salaryReport/EmployeeSalaryReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { convertMinutesToHoursAndMinutes, domainName, pazeSizeReport, sortByPropertyAlphabetically } from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { employeeSalaryReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { timeSlotSearch } from \"../../../timeSlot/timeSlotsFeatures/_timeSlots_reducers\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport { designationSearch } from \"../../../designation/designationFeatures/_designation_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\nfunction EmployeeSalaryReport() {\n  const { control, formState: { errors }, setValue } = useForm();\n  const dispatch = useDispatch();\n  const { employeeSalaryReportList, employeeSalaryReportFunc_loading, totalemployeeSalaryReportCount, } = useSelector((state) => state.reports);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { timeSlotsListData } = useSelector((state) => state.timeSlots);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const { designationList, loading: designationloading } = useSelector((state) => state.designation);\n  const { departmentListData, loading: depLoading } = useSelector((state) => state.department);\n  const CompanyId = useWatch({ control, name: \"PDCompanyId\", defaultValue: \"\", });\n  const BranchId = useWatch({ control, name: \"PDBranchId\", defaultValue: \"\", });\n  const status = useWatch({ control, name: \"status\", defaultValue: \"\", });\n  const departmentId = useWatch({ control, name: \"departmentId\", });\n  const employeeId = useWatch({ control, name: \"employeeId\", });\n  const isTerminated = useWatch({ control, name: \"isTerminated\", });\n  const isResigned = useWatch({ control, name: \"isResigned\", });\n  const designationId = useWatch({ control, name: \"PdDesignationId\", defaultValue: \"\", });\n  const startDate = useWatch({ control, name: \"startDate\", defaultValue: dayjs().subtract(1, \"month\"), });\n  const amountFrom = useWatch({ control, name: \"amountFrom\", defaultValue: 0 });\n  const amountTo = useWatch({ control, name: \"amountTo\", defaultValue: 0 });\n  const endDate = useWatch({ control, name: \"endDate\", defaultValue: dayjs(), });\n  const [pageSize, setPageSize] = useState(10);\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        })\n      );\n    }\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      })\n    )\n    setValue('startDate', dayjs().subtract(1, \"month\"));\n    setValue('endDate', dayjs());\n  }, []);\n  useEffect(() => {\n    fetchEmpSalaryListData();\n  }, [\n    currentPage,\n    debouncedFilterText,\n    pageSize\n  ]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        startDate: startDate\n          ? dayjs(startDate).format(\"YYYY-MM-DD\")\n          : '',\n        endDate: endDate\n          ? dayjs(endDate).format(\"YYYY-MM-DD\")\n          : '',\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        \"amountFrom\": Number(amountFrom) ?? '',\n        \"amountTo\": Number(amountTo) ?? '',\n        \"status\": '',\n        departmentId: departmentId,\n        employeIds: employeeId,\n        \"departmentIds\": [],\n        \"designationId\": designationId,\n        \"designationIds\": [],\n        \"roleKey\": \"\",\n        \"isTerminated\": isTerminated == \"Yes\" ? true : isTerminated == \"No\" ? false : '',\n        \"isResigned\": isResigned == \"Yes\" ? true : isResigned == \"No\" ? false : '',\n      },\n    };\n  }\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId ? departmentId : '',\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    )\n  };\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const fetchEmpSalaryListData = () => {\n    dispatch(employeeSalaryReportFunc(requestPayLoadReturn(true)));\n  };\n  const onChange = (e) => {\n    setSearchText(e);\n  }\n  const handleSubmit = async () => {\n    fetchEmpSalaryListData()\n  }\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Employee Salary\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 8 },\n      { header: \"Month\", key: \"month\", width: 15 },\n      { header: \"Employee Name\", key: \"employeeName\", width: 20 },\n      { header: \"Department Name\", key: \"departmentName\", width: 20 },\n      { header: \"Standard Salary\", key: \"standardSalary\", width: 18 },\n      { header: \"Total Days\", key: \"totalDays\", width: 14 },\n      { header: \"No of Present Days\", key: \"presentDays\", width: 20 },\n      { header: \"Actual Salary\", key: \"actualSalary\", width: 18 },\n      { header: \"Deductions\", key: \"deductions\", width: 16 },\n      { header: \"Final Salary\", key: \"finalSalary\", width: 18 },\n    ];\n\n    const response = await reportsServices?.employeeSalaryReportFunc(requestPayLoadReturn(false));\n    if (!employeeSalaryReportList && !response) return;\n\n    const apiData = response?.data?.docs?.map((data, index) => ({\n      sno: index + 1 + (currentPage - 1) * pageSize,\n      month: data?.monthName || \"N/A\",\n      employeeName: data?.employeName || \"N/A\",\n      departmentName: data?.departmentName || \"N/A\",\n      standardSalary: data?.standerdPayroll?.netSalary || \"N/A\",\n      totalDays: dayjs(data?.payrollData?.endDate).diff(dayjs(data?.payrollData?.startDate), 'day') + 1,\n      presentDays: data?.payrollData?.totalAttendance,\n      actualSalary: data?.payrollData?.currentSalaryPerMonth || \"-\",\n      deductions: data?.payrollData?.payrollTotal?.totalDeductions || \"-\",\n      finalSalary: data?.payrollData?.netSalary,\n    }));\n\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"K1\",\n    };\n\n    // Header styling\n    worksheet.getRow(1).eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"Employee_Salary_Report.xlsx\";\n      link.click();\n    });\n  };\n\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: 'landscape',\n      unit: 'pt'\n    });\n\n    doc.setFontSize(16);\n    doc.text(\"Employee Salary Report\", 40, 30);\n\n    const headers = [\n      \"S.No.\",\n      \"Month\",\n      \"Employee Name\",\n      \"Department Name\",\n      \"Standard Salary\",\n      \"Total Days\",\n      \"No of Present Days\",\n      \"Actual Salary\",\n      \"Deductions\",\n      \"Final Salary\",\n    ];\n\n    const response = await reportsServices?.employeeSalaryReportFunc(requestPayLoadReturn(false));\n    if (!employeeSalaryReportList && !response) return;\n\n    const body = response?.data?.docs?.map((data, index) => ([\n      index + 1,\n      data?.monthName || \"N/A\",\n      data?.employeName || \"N/A\",\n      data?.departmentName || \"N/A\",\n      data?.standerdPayroll?.netSalary || \"N/A\",\n      dayjs(data?.payrollData?.endDate).diff(dayjs(data?.payrollData?.startDate), 'day') + 1,\n      data?.payrollData?.totalAttendance,\n      data?.payrollData?.currentSalaryPerMonth || \"-\",\n      data?.payrollData?.payrollTotal?.totalDeductions || \"-\",\n      data?.payrollData?.netSalary\n    ]));\n\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 5,\n        fontSize: 9,\n        valign: 'middle',\n        halign: 'left',\n      },\n      headStyles: {\n        fillColor: [80, 130, 200],\n        textColor: [255, 255, 255],\n        fontStyle: 'bold',\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n\n    doc.save(\"Employee_Salary_Report.pdf\");\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1\">\n          <div className=\"sm:flex grid grid-cols-1 gap-1.5 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div>\n              <Controller\n                name=\"departmentId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        deptSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\n                            \"admin\",\n                            \"company\",\n                            \"companyDirector\",\n                          ].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"PdDesignationId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Designation\"\n                    onFocus={() => {\n                      dispatch(\n                        designationSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children)?.toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Designation</Select.Option>\n                    {designationloading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(designationList)?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"employeeId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    showSearch\n                    filterOption={(input, option) =>\n                      option?.label?.toLowerCase().includes(input.toLowerCase())\n                    }\n                    className=\"inputAntdMultiSelectClassNameFilterReport \"\n                    placeholder=\"Select Employee\"\n                    onFocus={handleEmployeeFocus}\n                    options={employeList?.map((element) => {\n                      return {\n                        label: element.fullName,\n                        value: element._id,\n                      }\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n\n\n                )}\n              />\n\n            </div>\n            {/* <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    allowClear\n                    // mode=\"multiple\"\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Select Status\"\n                    options={[\n                      { value: '', label: \"Select Status\" },\n                      { value: 'true', label: \"Active\" },\n                      { value: 'false', label: \"Inactive\" },\n                    ]}\n                    value={field.value}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div> */}\n            {/* <div>\n              <Controller\n                name=\"isTerminated\"\n                control={control}\n                render={({ field }) => (\n\n                  <Select\n                    {...field}\n                    \n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Select isTerminated\"\n                    options={[\n                      { value: \"Yes\", label: \"Yes\" },\n                      { value: \"No\", label: \"No\" },\n                    ]}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)} \n                  />\n                )}\n              />\n            </div> */}\n            {/* <div>\n              <Controller\n                name=\"isResigned\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Select isResigned\"\n                    options={[\n                      { value: \"Yes\", label: \"Yes\" },\n                      { value: \"No\", label: \"No\" },\n                    ]}\n                    value={field.value || []} \n                    onChange={(val) => field.onChange(val)} \n                  />\n                )}\n              />\n            </div> */}\n            <div>\n              <Controller\n                name=\"amountFrom\"\n                control={control}\n                render={({ field }) => (\n                  <input\n                    type=\"number\"\n                    value={field?.value}\n                    onChange={(val) => field.onChange(val)}\n                    className={`inputAntdMultiSelectClassNameFilterReport`}\n                    placeholder=\"Enter amountFrom \"\n                  />\n\n\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"amountTo\"\n                control={control}\n                render={({ field }) => (\n                  <input\n                    type=\"number\"\n                    value={field?.value}\n                    onChange={(val) => field.onChange(val)}\n                    className={`inputAntdMultiSelectClassNameFilterReport`}\n                    placeholder=\"Enter amountTo \"\n                  />\n\n\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"startDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs().subtract(1, \"month\")}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"endDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs()}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"PdCompanyId\", \"\");\n                setValue(\"departmentId\", \"\");\n                setValue(\"PdDesignationId\", \"\")\n                setValue(\"amountTo\", \"\")\n                setValue(\"amountFrom\", \"\")\n                setValue(\"status\", \"\");\n                setValue(\"employeeId\", \"\");\n                setValue(\"isTerminated\", \"\");\n                setValue(\"isResigned\", \"\");\n                setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n                setValue(\"endDate\", dayjs());\n\n                handleSubmit()\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit()\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n\n                }}\n              />\n            )}\n          >\n          </Collapse>\n          <div className=\"space-y-1.5 sm:flex justify-between items-center \">\n            <div className=\"flex items-center gap-2 sm:pt-0 pt-1\">\n              <span htmlFor=\"pageSize\" className=\"text-sm font-light text-gray-500\">\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Month\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Employee Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Department Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Standard Salary\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Total Days\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  No of Present Days\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Actual Salary\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Deductions\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Final Salary\n                </th>\n              </tr>\n\n            </thead>\n            {employeeSalaryReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {employeeSalaryReportList &&\n                  employeeSalaryReportList?.length > 0 ? (\n                  employeeSalaryReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.monthName || \"N/A\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.employeName || \"N/A\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.departmentName || \"N/A\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.standerdPayroll?.netSalary || \"N/A\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {(dayjs(element?.payrollData?.endDate).diff(dayjs(element?.payrollData?.startDate), 'day') + 1) || \"N/A\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.payrollData?.totalAttendance}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.payrollData?.currentSalaryPerMonth || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.payrollData?.payrollTotal?.totalDeductions || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.payrollData?.netSalary}\n                      </td>\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.isTL ? \"Yes\" : \"No\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.isHR ? \"Yes\" : \"No\"}\n                      </td> */}\n\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n        </div>\n        <CustomPagination\n          totalCount={totalemployeeSalaryReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default EmployeeSalaryReport;\n"],"names":["control","formState","errors","setValue","useForm","dispatch","useDispatch","employeeSalaryReportList","employeeSalaryReportFunc_loading","totalemployeeSalaryReportCount","useSelector","state","reports","employeList","employe","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","timeSlotsListData","timeSlots","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","designationList","loading","designationloading","designation","departmentListData","depLoading","department","CompanyId","useWatch","name","defaultValue","BranchId","departmentId","employeeId","isTerminated","isResigned","designationId","startDate","dayjs","subtract","amountFrom","amountTo","endDate","pageSize","setPageSize","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","deptSearch","fetchEmpSalaryListData","timer","setTimeout","clearTimeout","requestPayLoadReturn","_Number","_Number2","reqPayload","arguments","length","undefined","format","branchId","Number","employeIds","handleEmployeeFocus","employeSearch","includes","directorId","isBranch","isDirector","employeeSalaryReportFunc","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","Option","value","map","element","fullName","PDBranchId","message","_ref2","_sortByPropertyAlphab","onFocus","onChange","disabled","ListLoader","sortByPropertyAlphabetically","_ref3","_sortByPropertyAlphab2","designationSearch","_String","type","_ref4","mode","allowClear","_option$label","options","val","_ref5","_ref6","_ref7","CustomDatePicker","report","size","_ref8","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref9","isActive","MdKeyboardArrowDown","style","color","transform","transition","htmlFor","id","pazeSizeReport","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","body","data","docs","index","_data$standerdPayroll2","_data$payrollData7","_data$payrollData8","_data$payrollData9","_data$payrollData0","_data$payrollData1","_data$payrollData1$pa","_data$payrollData10","monthName","employeName","departmentName","standerdPayroll","netSalary","payrollData","diff","totalAttendance","currentSalaryPerMonth","payrollTotal","totalDeductions","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","apiData","_data$standerdPayroll","_data$payrollData","_data$payrollData2","_data$payrollData3","_data$payrollData4","_data$payrollData5","_data$payrollData5$pa","_data$payrollData6","sno","month","employeeName","standardSalary","totalDays","presentDays","actualSalary","deductions","finalSalary","forEach","item","addRow","eachCell","cell","alignment","vertical","border","top","left","bottom","right","autoFilter","from","to","getRow","fill","pattern","fgColor","argb","font","bold","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","_element$standerdPayr","_element$payrollData","_element$payrollData2","_element$payrollData3","_element$payrollData4","_element$payrollData5","_element$payrollData6","_element$payrollData7","CustomPagination","totalCount","page"],"sourceRoot":""}