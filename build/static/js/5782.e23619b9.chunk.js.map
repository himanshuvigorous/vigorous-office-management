{"version":3,"file":"static/js/5782.e23619b9.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/clientLedger/ClientLedger.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  inputAntdSelectClassName,\n  inputAntdSelectClassNameFilter,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Modal, Select, Tooltip } from \"antd\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { clientLedgerFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport { Option } from \"antd/es/mentions\";\nimport { designationSearch } from \"../../../designation/designationFeatures/_designation_reducers\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport { clientGrpSearch, getClientGroupList } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport * as ExcelJS from 'exceljs';\nimport jsPDF from \"jspdf\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\n\nfunction ClientLedger() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { clientLedgerList, totalclientReportCount, clientLedgerFunc_loading } = useSelector(\n    (state) => state.reports\n  );\n\n  const { employeList } = useSelector((state) => state.employe);\n  \n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const pageSize = 10;\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n  const { designationList } = useSelector((state) => state.designation);\n  const { departmentListData } = useSelector((state) => state.department);\n  const { clientGroupList, totalClientGroupCount, loading } = useSelector(state => state.clientGroup)\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const workType = useWatch({\n    control,\n    name: \"workType\",\n    defaultValue: \"\",\n  });\n  const shift = useWatch({\n    control,\n    name: \"shift\",\n    defaultValue: \"\",\n  });\n  const daterange = useWatch({\n    control,\n    name: \"daterange\",\n    defaultValue: \"\",\n  });\n  const employeeId = useWatch({\n    control,\n    name: \"employeeId\",\n    defaultValue: \"\",\n  });\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n  });\n  const isTL = useWatch({\n    control,\n    name: \"isTL\",\n  });\n  const isHR = useWatch({\n    control,\n    name: \"isHR\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n  });\n\n  const designation = useWatch({\n    control,\n    name: \"designation\",\n  });\n\n\n  const clientGroup = useWatch({\n    control,\n    name: \"clientGroup\",\n  });\n\n\n\n  useEffect(() => {\n    fetchClientGroupList()\n  }, [currentPage, BranchId, CompanyId])\n\n\n  const fetchClientGroupList = () => {\n    const reqData = {\n\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          :\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.branchId,\n      \"directorId\": \"\",\n      \"text\": \"\",\n      \"sort\": true,\n      \"status\": true,\n      \"isPagination\": true,\n\n    }\n    dispatch(clientGrpSearch(reqData))\n  }\n\n\n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n  useEffect(() => {\n    if (CompanyId) {\n      setValue(\"PDBranchId\", \"\");\n    }\n  }, [CompanyId]);\n\n  const handleDepartmentChange = (event) => {\n    setValue(\"PDDepartmentId\", event);\n    setValue(\"PDDesignationId\", \"\");\n    dispatch(\n      designationSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        departmentId: event,\n        companyId: userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      })\n    );\n  };\n\n  const handleFocusDepartment = () => {\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId: userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n      })\n    );\n  };\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    fetchClientLedger(debouncedFilterText);\n  }, [\n    currentPage,\n    debouncedFilterText,\n    CompanyId,\n    BranchId,\n    searchText,\n    Status,\n    workType,\n    shift,\n    daterange,\n    employeeId,\n    startDate,\n    isTL,\n    isHR,\n    designation,\n    department,\n    clientGroup\n  ]);\n\n  // useEffect(() => {\n  //     fetchEmployeListData();\n  // }, [\n\n  // ]);\n\n  // const fetchEmployeListData = () => {\n  //     const reqPayload = {\n  //       text: \"\",\n  //       status: true,\n  //       sort: true,\n  //       isTL: \"\",\n  //       isHR: \"\",\n  //       isPagination: true,\n  //       departmentId: \"\",\n  //       designationId: \"\",\n  //       companyId: userInfoglobal?.companyId,\n  //       branchId: userInfoglobal?.branchId,\n  //     };\n\n  //     dispatch(employeSearch(reqPayload));\n  //   };\n\n  const fetchClientLedger = (debouncedFilterText) => {\n    let reqData = {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        // \"companyId\": \"\",\n        // \"directorId\": \"\",\n        // \"branchId\": \"\",\n        // \"organizationId\": \"\",\n        // \"departmentId\": \"\",\n        // \"industryId\": \"\",\n        // \"groupId\": \"\",\n        // \"taskId\": \"\",\n        // \"text\": \"\",\n        // \"sort\": true,\n        // \"status\": \"\",\n        // \"isPagination\": true\n\n        text: \"\",\n        isTL: isTL === \"YES\" ? true : isTL === \"NO\" ? false : \"\",\n        isManager: \"\",\n        isReceptionist: \"\",\n        isHR: isHR === \"YES\" ? true : isHR === \"NO\" ? false : \"\",\n        status: Status === \"Active\" ? true : Status === \"InActive\" ? false : \"\",\n        sort: true,\n        isPagination: true,\n\n        directorId: \"\",\n\n        departmentId: department,\n        designationId: designation,\n        reporting_to: \"\",\n        roleKey: \"\",\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        \"groupId\": clientGroup,\n\n      },\n    };\n    dispatch(clientLedgerFunc(reqData));\n  };\n\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId]);\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  const onChange = (e) => {\n    ;\n    setSearchText(e);\n  };\n  const [inVoiceData, setInvoiceData] = useState(\"\");\n  const [viewInvoice, setViewInvoice] = useState(false);\n\n  const handleInvoiceDetails = (data) => {\n    setInvoiceData(data);\n    setViewInvoice(true);\n  };\n\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('API Data');\n    const apiData = clientLedgerList?.map((element) => {\n      return {\n        name: element?.fullName,\n        email: element?.email,\n        group: element?.groupData?.fullName || \"-\",\n        groupEmail: element?.groupData?.email || \"-\",\n\n        mobileNo: `${element?.mobile?.code || \"-\"}  ${element?.mobile?.number || \"-\"}`,\n        gstNumber: element?.clientProfile?.GSTNumber,\n        panNumber: element?.clientProfile?.penNumber,\n        aadharNumber: element?.clientProfile?.adharNumber,\n        dateOfJoining: `${dayjs(element.clientProfile.dateOfJoining).format(\"YYYY-MM-DD\")}`,\n        groupOwner: element?.clientProfile?.isGroupOwner ? \"Yes\" : \"No\",\n\n\n\n\n        status: element?.status ? \"Active\" : \"Inactive\" ?? \"-\"\n      }\n    })\n\n\n    worksheet.columns = [\n      { header: 'Client Name', key: 'name', width: 50 },\n      { header: 'Email', key: 'email', width: 50 },\n\n      { header: 'Group', key: 'group', width: 30 },\n      { header: 'Group Email', key: 'groupEmail', width: 50 },\n      { header: 'Mobile No.', key: 'mobileNo', width: 50 },\n      { header: 'Gst Number', key: 'gstNumber', width: 50 },\n      { header: 'Pan Number', key: 'panNumber', width: 50 },\n      { header: 'Aadhar Number', key: 'aadharNumber', width: 50 },\n      { header: 'dateOfJoining', key: 'dateOfJoining', width: 50 },\n      { header: 'groupOwner', key: 'groupOwner', width: 50 },\n\n      { header: 'status', key: 'status', width: 50 },\n    ];\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: 'pattern',\n        pattern: 'solid',\n        fgColor: { argb: 'FFB6D7A8' }, // Light green\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: 'middle', horizontal: 'center' };\n      cell.border = {\n        top: { style: 'thin' },\n        left: { style: 'thin' },\n        bottom: { style: 'thin' },\n        right: { style: 'thin' },\n      };\n    });\n\n    worksheet.autoFilter = {\n      from: 'A1',\n      to: 'I1',\n    };\n\n\n    apiData.forEach(item => {\n      worksheet.addRow(item);\n    });\n\n\n    workbook.xlsx.writeBuffer().then(buffer => {\n      const blob = new Blob([buffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'api_data.xlsx';\n      link.click();\n    });\n  };\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <div className=\"grid grid-cols-1 justify-between items-center space-y-1.5\">\n            <div className=\"grid 2xl:grid-cols-5 lg:grid-cols-3 md:grid-cols-3 sm:grid-cols-3 grid-cols-1 gap-2 flex-wrap text-[14px] rounded-md\">\n              {userInfoglobal?.userType === \"admin\" && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDCompanyId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Select Company\"\n                        showSearch\n                      >\n                        <Select.Option value=\"\">Select Company</Select.Option>\n                        {companyList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDCompanyId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDCompanyId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n              {(userInfoglobal?.userType === \"admin\" ||\n                userInfoglobal?.userType === \"company\" ||\n                userInfoglobal?.userType === \"companyDirector\") && (\n                  <div className=\"\">\n                    <Controller\n                      name=\"PDBranchId\"\n                      control={control}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                            }`}\n                          placeholder=\"Select Branch\"\n                          showSearch\n                          filterOption={(input, option) =>\n                            String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                        >\n                          <Select.Option value=\"\">Select Branch</Select.Option>\n                          {branchList?.map((element) => (\n                            <Select.Option value={element?._id}>\n                              {\" \"}\n                              {element?.fullName}{\" \"}\n                            </Select.Option>\n                          ))}\n                        </Select>\n                      )}\n                    />\n                    {errors.PDBranchId && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.PDBranchId.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n              <div className=\"\">\n                <Controller\n                  name=\"PDDepartmentId\"\n                  control={control}\n                  rules={{ required: \"Department is required\" }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${errors.PDDepartmentId\n                        ? \"border-[1px] \"\n                        : \"border-gray-300\"\n                        }`}\n                      onChange={(value) => {\n                        field.onChange(value);\n                        handleDepartmentChange(value); // Custom handler if needed\n                      }}\n                      onFocus={handleFocusDepartment}\n                      placeholder=\"Select Department\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Option value=\"\">Select Department</Option>\n                      {departmentListData?.map((element) => (\n                        <Option key={element?._id} value={element?._id}>\n                          {element?.name}\n                        </Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.employeeId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.employeeId.message}\n                  </p>\n                )}\n              </div>\n              <div className=\"\">\n                <Controller\n                  name=\"clientGroup\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select clientGroup\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Select.Option value=\"\">Select clientGroup</Select.Option>\n                      {clientGroupList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.fullName}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n\n              </div>\n              {/* <div className=\"\">\n                <Controller\n                  name=\"designation\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassNameFilter} ${\n                        errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                      placeholder=\"Select Designation\"\n                      showSearch\n                    >\n                      <Select.Option value=\"\">Select Designation</Select.Option>\n                      {designationList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.name}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.PDBranchId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDBranchId.message}\n                  </p>\n                )}\n              </div> */}\n              {/* <div>\n                                <Controller\n                                    name=\"status\"\n                                    control={control}\n                                    rules={{}}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                                                }`}\n                                            placeholder=\"Select Status\"\n                                            showSearch\n                                        >\n                                            <Select.Option value=\"\">Select Status</Select.Option>\n\n                                            <Select.Option value=\"Present\"> Present </Select.Option>\n                                            <Select.Option value=\"firstHalf\">\n                                                {\" \"}\n                                                First Half{\" \"}\n                                            </Select.Option>\n                                            <Select.Option value=\"secondHalf\">\n                                                {\" \"}\n                                                Second Half{\" \"}\n                                            </Select.Option>\n                                        </Select>\n                                    )}\n                                />\n                            </div> */}\n              {/* <div>\n                <Controller\n                  name=\"isTL\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${\n                        errors.shift ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                      placeholder=\"Select TL\"\n                    >\n                      <Select.Option value=\"\">Select TL</Select.Option>\n                      {[\"YES\", \"NO\"]?.map((type) => (\n                        <Select.Option key={type} value={type}>\n                          {type}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div> */}\n\n              {/* <div>\n                <Controller\n                  name=\"isHR\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${\n                        errors.shift ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                      placeholder=\"Select HR\"\n                    >\n                      <Select.Option value=\"\">Select HR</Select.Option>\n                      {[\"YES\", \"NO\"]?.map((type) => (\n                        <Select.Option key={type} value={type}>\n                          {type}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div> */}\n              <div>\n                <Controller\n                  name=\"status\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${errors.shift ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select Status\"\n                    >\n                      <Select.Option value=\"\">Select Status</Select.Option>\n                      {[\"Active\", \"InActive\"]?.map((type) => (\n                        <Select.Option key={type} value={type}>\n                          {type}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>\n              {/* <div>\n                                <Controller\n                                    name=\"workType\"\n                                    control={control}\n\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={`${inputAntdSelectClassNameFilter} ${errors.workType ? '' : 'border-gray-300'}`}\n                                            placeholder=\"Select Work Type\"\n                                        >\n                                            <Select.Option value=\"\">Select Work Type</Select.Option>\n                                            {[\n                                                { key: \"work_from_office\", value: \"Work From Office\" },\n                                                { key: \"work_from_home\", value: \"Work From Home\" },\n                                                { key: \"hybrid\", value: \"Hybrid\" },\n                                                { key: \"remote\", value: \"Remote\" }\n                                            ]?.map((type) => (\n                                                <Select.Option key={type.key} value={type.key}>\n                                                    {type.value}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    )}\n                                />\n                            </div> */}\n              {/* <div>\n                                <Controller\n                                    name=\"daterange\"\n                                    control={control}\n\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={`${inputAntdSelectClassNameFilter} ${errors.daterange ? '' : 'border-gray-300'}`}\n                                            placeholder=\"Select Date Range\"\n                                        >\n                                            <Select.Option value=\"\">Select Date Range</Select.Option>\n                                            {[\n                                                { key: \"thisWeek\", value: \"This Week\" },\n                                                { key: \"lastWeek\", value: \"Last Week\" },\n                                                { key: \"lastMonth\", value: \"Last Month\" },\n                                                { key: \"last3Months\", value: \"Last 3 Months\" },\n                                                { key: \"last6Months\", value: \"last 6 Months\" },\n                                                { key: \"lastYear\", value: \"Last Year\" }\n                                            ]?.map((type) => (\n                                                <Select.Option key={type.key} value={type.key}>\n                                                    {type.value}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    )}\n                                />\n                            </div> */}\n              <div>\n                {/* <Controller\n                    name=\"startDate\"\n                    control={control}\n        \n                    render={({ field }) => (\n                      <CustomDatePicker defaultValue={dayjs().subtract(1, 'month')} size={\"middle\"} field={field} errors={errors} />\n                    )}\n                  /> */}\n              </div>\n\n              {/* <div>\n                  <Controller\n                    name=\"endDate\"\n                    control={control}\n        \n                    render={({ field }) => (\n                      <CustomDatePicker defaultValue={dayjs()} size={\"middle\"} field={field} errors={errors} />\n                    )}\n                  />\n                </div> */}\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  setValue(\"PDBranchId\", \"\");\n                  setValue(\"PdCompanyId\", \"\");\n                  setValue(\"isTL\", \"\");\n                  setValue(\"isHR\", \"\");\n                  setValue(\"designation\", \"\");\n                  setValue(\"PDDepartmentId\", \"\");\n                  setValue(\"clientGroup\", \"\");\n                  setValue(\"status\", \"\");\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Client Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Email</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Group Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Group Email\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">User Name</th> */}\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Office Email\n                </th> */}\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Mobile No.\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Department\n                </th> */}\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Designation\n                </th> */}\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  <div className=\"flex gap-1\">Role Key</div>\n                </th> */}\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Pan Number\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Gst Number\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  adharNumber\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Date of joining\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Group Owner\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  createdAt\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  createdBy\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  View Invoice Details\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Status</th>\n              </tr>\n            </thead>\n            {clientLedgerFunc_loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {clientLedgerList && clientLedgerList?.length > 0 ? (\n                  clientLedgerList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {index + 1}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.fullName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.email || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.groupData?.fullName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.groupData?.email || \"-\"}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.userName || \"-\"}\n                    </td> */}\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.officeEmail || \"-\"}\n                    </td> */}\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.mobile?.code || \"-\"}{\" \"}\n                        {element?.mobile?.number || \"-\"}\n                      </td>\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.departmentData?.name || \"-\"}\n                    </td> */}\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.designationData?.name || \"-\"}\n                    </td> */}\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.designationData?.roleKey || \"-\"}\n                    </td> */}\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientProfile?.penNumber || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientProfile?.GSTNumber || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientProfile?.adharNumber || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {dayjs(element?.clientProfile?.dateOfJoining).format(\"DD-MM-YYYY\") || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientProfile?.isGroupOwner ? \"Yes\" : \"No\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.createdBy || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        <Tooltip placement=\"topLeft\"  title={\"View Invoice Details\"}>\n                          <button\n                            onClick={() => {\n                              handleInvoiceDetails(element);\n                            }}\n                            className=\"px-2 py-2 text-xs rounded-md bg-transparent text-header border border-muted\"\n                            type=\"button\"\n                          >\n                            <FaEye\n                              className={`${\" hover:text-[#337ab7] text-[#3c8dbc]\"}`}\n                            />\n                          </button>\n                        </Tooltip>\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        <span\n                          className={`${element?.status\n                            ? \"bg-[#E0FFBE] border-green-500\"\n                            : \"bg-red-200 border-red-500\"\n                            } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                        >\n                          {element?.status ? \"Active\" : \"Inactive\" ?? \"-\"}\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>\n\n        {viewInvoice && (\n          // <div\n          //   className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1560] lg:p-20\"\n          //   onClick={(e) => {\n          //     e.stopPropagation();\n          //     handleInvoiceDetails();\n          //   }}\n          // >\n          //   <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl !m-2\" onClick={(e) => {\n          //     e.stopPropagation();\n          //   }}>\n          <Modal\n            title=\"Invoice Details\"\n            open={viewInvoice}\n            onCancel={() => setViewInvoice(false)}\n            footer={null}\n            className=\"antmodalclassName\"\n            width=\"80%\"\n            style={{ top: 40 }}\n            bodyStyle={{ maxHeight: \"70vh\", overflowY: \"auto\" }}\n          >\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                    S.No.\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                    Invoice Number\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                    CGST\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap text-center\">Fees</th>\n                  {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">User Name</th> */}\n                  {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                          Office Email\n                        </th> */}\n                  <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                    IGST\n                  </th>\n                  {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                          Department\n                        </th> */}\n                  {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                          Designation\n                        </th> */}\n\n                  {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                          <div className=\"flex gap-1\">Role Key</div>\n                        </th> */}\n\n                  <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                    <div className=\"flex gap-1\">SGST</div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                    Discounted Amount\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                    Total Amount\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                    Grand Total\n                  </th>\n                </tr>\n              </thead>\n              <tbody>\n                {inVoiceData?.invoiceData && inVoiceData?.invoiceData?.length > 0 ? (\n                  inVoiceData?.invoiceData?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {index + 1}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.invoiceNumber || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.CGST || \"0\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.IGST || \"0\"}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                              {element?.userName || \"-\"}\n                            </td> */}\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                              {element?.officeEmail || \"-\"}\n                            </td> */}\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.SGST || \"0\"}\n                      </td>\n                      {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                              {element?.departmentData?.name || \"-\"}\n                            </td> */}\n                      {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                              {element?.designationData?.name || \"-\"}\n                            </td> */}\n                      {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                              {element?.designationData?.roleKey || \"-\"}\n                            </td> */}\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.discountAmount || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.totalAmount || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.grandTotal || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.status || \"-\"}\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </Modal>\n          // </div>\n          // </div>\n        )}\n        <CustomPagination\n          totalCount={totalclientReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default ClientLedger;\n"],"names":["_inVoiceData$invoiceD","_inVoiceData$invoiceD2","control","formState","errors","setValue","useForm","dispatch","useNavigate","useDispatch","clientLedgerList","totalclientReportCount","clientLedgerFunc_loading","useSelector","state","reports","employeList","employe","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","companyList","company","branchList","branch","designationList","designation","departmentListData","department","clientGroupList","totalClientGroupCount","loading","clientGroup","CompanyId","useWatch","name","defaultValue","BranchId","Status","workType","shift","daterange","employeeId","startDate","isTL","isHR","useEffect","fetchClientGroupList","reqData","companyId","userType","_id","branchId","clientGrpSearch","timer","setTimeout","clearTimeout","handleFocusDepartment","deptSearch","text","sort","status","isPagination","fetchClientLedger","pageSize","reqPayload","isManager","isReceptionist","directorId","departmentId","designationId","reporting_to","roleKey","clientLedgerFunc","branchSearch","companySearch","inVoiceData","setInvoiceData","viewInvoice","setViewInvoice","_jsx","GlobalLayout","onChange","e","children","_jsxs","className","Controller","render","_ref","field","Select","_objectSpread","inputAntdSelectClassNameFilter","PDPlan","placeholder","showSearch","Option","value","map","element","fullName","PDCompanyId","message","_ref2","filterOption","input","option","String","toLowerCase","includes","PDBranchId","rules","required","_ref3","PDDepartmentId","event","designationSearch","onFocus","_ref4","_ref5","_ref6","type","onClick","async","workbook","ExcelJS","worksheet","addWorksheet","apiData","_element$groupData","_element$groupData2","_element$mobile","_element$mobile2","_element$clientProfil","_element$clientProfil2","_element$clientProfil3","_element$clientProfil4","_Inactive","email","group","groupData","groupEmail","mobileNo","mobile","code","number","gstNumber","clientProfile","GSTNumber","panNumber","penNumber","aadharNumber","adharNumber","dateOfJoining","dayjs","format","groupOwner","isGroupOwner","columns","header","key","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","horizontal","border","top","style","left","bottom","right","autoFilter","from","to","forEach","item","addRow","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","length","index","_element$groupData3","_element$groupData4","_element$mobile3","_element$mobile4","_element$clientProfil5","_element$clientProfil6","_element$clientProfil7","_element$clientProfil8","_element$clientProfil9","_Inactive2","createdAt","createdBy","Tooltip","placement","title","FaEye","Modal","open","onCancel","footer","bodyStyle","maxHeight","overflowY","invoiceData","invoiceNumber","CGST","IGST","SGST","discountAmount","totalAmount","grandTotal","CustomPagination","totalCount","page"],"sourceRoot":""}