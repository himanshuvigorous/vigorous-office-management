{"version":3,"file":"static/js/2787.4f19f8da.chunk.js","mappings":"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","sources":["pages/company/companyManagement/planhistorylist/PlanHistory.js","pages/company/companyManagement/SubscriptionModal.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Loader2 from '../../../../global_layouts/Loader/Loader2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { message, Modal, Spin, Tooltip } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport usePermissions from '../../../../config/usePermissions';\nimport { companyInvoiceRefund, companyInvoiveDetail, companyPlanHistory, deleteCompany, getCompanyList, regeneratePassfunc, subscriptionFunc } from '../companyFeatures/_company_reducers';\nimport { sendProposalEmail } from '../../../client/proposal/proposalFeatures/_proposal_reducers';\nimport Swal from 'sweetalert2';\nimport { planSearch } from '../../../global/other/Plan/PlanFeatures/_plan_reducers';\nimport { handleSortLogic } from '../../../../constents/global';\nimport dayjs from 'dayjs';\nimport { FaEye, FaRegBuilding } from 'react-icons/fa';\nimport moment from 'moment';\nimport { BiDetail } from 'react-icons/bi';\nimport SubscriptionModal from '../SubscriptionModal';\nimport GlobalLayout from '../../../../global_layouts/GlobalLayout/GlobalLayout';\nimport { AiOutlinePercentage, AiOutlineSkype, AiTwotoneCheckSquare, AiTwotoneContacts, AiTwotoneContainer } from 'react-icons/ai';\nimport ListLoader from '../../../../global_layouts/ListLoader';\n\nconst PlanHistory = ({companyId}) => {\n\n  const [isCompanyMailOpen, setIsCompanyMailOpen] = useState(false);\n\n  const copyToClipboard = (text) => {\n    if(!text) return\n    navigator.clipboard.writeText(text);\n    message.success('Copied to clipboard!');\n  };\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { companyList, totalCompanyCount, companyPlanHistoryData, subscriptionData, companyInvoiceDetailsdata } = useSelector(\n    (state) => state.company\n  );\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n    const [isChangeModalOpen, setIsChangeModalOpen] = useState(false);\n  const [sortedList, setSortedList] = useState([]);\n \n  const [detailsModal, setDetailsModal] = useState({\n    data: null,\n    status: false,\n    loading: false\n  })\n  // const [detailsModal, setDetailsModal] = useState({\n  //   data: null,\n  //   status: false,\n  //   loading: false\n  // })\n  const [amount, setAmount] = useState('');\n  const [error, setError] = useState('');\n  const [refundloading, setRefundloading] = useState(false);\n\n  const handleSubmit = async (e, element) => {\n    e.preventDefault();\n    if (!amount.trim()) {\n      setError('Amount is required.');\n      return;\n    }\n    setError('');\n    setRefundloading(true)\n    await dispatch(companyInvoiceRefund({\n      \"paymentId\": element,\n      \"amount\": amount\n    })).then(data => {\n      if (!data?.error) {\n        dispatch(companyInvoiveDetail({ paymentId: element }));\n        setAmount('')\n      }\n    })\n    setRefundloading(false)\n  };\n  const { planListData } = useSelector((state) => state.plan);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [plan, setPlan] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [loadingPlanHistory, setLoadingPlanHistory] = useState(false);\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n    \n \nuseEffect(()=>{\n    setLoadingPlanHistory(true)\n    if (companyId) {\n       dispatch(companyPlanHistory({ companyId: companyId }))\n    }\n    setLoadingPlanHistory(false)\n},[companyId])\n  const handleClose = () => {\n    setIsModalOpen(false);\n  };\n  const limit = 10;\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      await fetchCompanyListData();\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [currentPage, searchText, plan, status]);\n  useEffect(() => {\n    if (companyInvoiceDetailsdata) {\n      setAmount(\n        (\n          (companyInvoiceDetailsdata?.amount ?? 0) / 100 -\n          (companyInvoiceDetailsdata?.amount_refunded ?? 0) / 100\n        ).toFixed(0)\n      );\n\n    }\n  }, [companyInvoiceDetailsdata])\n\n   const [subscriptionModal, setSubscriptionModal] = useState({\n    data: null,\n    status: false,\n    loading: false\n  })\n  const fetchCompanyListData = async () => {\n    let reqData = {\n      page: currentPage,\n      limit: limit,\n      reqPayload: {\n        text: searchText,\n        status: status,\n        planId: plan,\n        isPagination: true\n      },\n    };\n\n\n    try {\n      // Assuming dispatch is a function that returns a promise\n      await dispatch(getCompanyList(reqData));\n    } catch (error) {\n      console.error('Error fetching company list:', error);\n      setLoading(false); // Ensure loading is stopped on error\n    }\n  };\n  const handleProposalEmail = (emailData) => {\n    dispatch(sendProposalEmail(emailData)).then(data => {\n      if (!data.error) {\n\n        setIsCompanyMailOpen(false);\n        // setcompanyId([])\n        Swal.fire({\n          icon: 'success',\n          title: 'Proposal Email',\n          html: `\n                <p>Proposal Email has been send successfully!</p>\n              `,\n          confirmButtonColor: '#3085d6'\n        });\n      }\n    });\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    const listData = {\n      isClient: false,\n      size: 10,\n      pageNo: 1,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteCompany(reqData)).then((data) => {\n          fetchCompanyListData();\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    dispatch(planSearch({\n      text: \"\",\n      sort: true,\n      status: true,\n      isPagination: false,\n    }))\n  }, [])\n\n  const onChange = (e) => {\n    // \n    setSearchText(e)\n  }\n\n  useEffect(() => {\n    if (companyList) {\n      handleSort();\n    }\n  }, [companyList]);\n\n  const handleSort = (key, order) => {\n    const sortedList = handleSortLogic(key, order, companyList);\n    setSortedList(sortedList);\n  };\n  const handleRegeneratePassword = (element) => {\n    Swal.fire({\n      title: 'Regenerate Password',\n      text: `Are you sure to change password of ${element?.fullName}?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(regeneratePassfunc({ _id: element?._id })).then((data) => {\n          if (!data?.error) {\n            Swal.fire(\n              'Password Regenerated!',\n              'Password has been Regenerated.',\n              'success'\n            );\n\n          } else {\n            Swal.fire(\n              'Error!',\n              'Failed to Password Regenerated Successfully.',\n              'error'\n            );\n          }\n        });\n      }\n    });\n  }\n  const handleSubscriptionView = async (element) => {\n  \n    setSubscriptionModal({\n      data: element,\n      status: true,\n      loading: true,\n    });\n\n    try {\n      await dispatch(subscriptionFunc({\n        // subscriptionId: \"sub_QKU1wkxVzQVEvb\"\n        subscriptionId: element?.subscriptionId\n      }));\n    } catch (error) {\n      console.error('Error fetching subscription:', error);\n    } finally {\n      setSubscriptionModal(prevState => ({\n        ...prevState,\n        loading: false,\n      }));\n    }\n  };\n  const handleinvoicedetailsView = async (element) => {\n    setDetailsModal({\n      data: element,\n      status: true,\n      loading: true,\n    });\n\n    try {\n      await dispatch(companyInvoiveDetail({ paymentId: element?.payment_id }));\n    } catch (error) {\n      console.error('Error fetching subscription:', error);\n    } finally {\n      setDetailsModal(prevState => ({\n        ...prevState,\n        loading: false,\n      }));\n    }\n  };\n\n  return (\n\n        <div className='px-2'>\n        <div className=\"bg-[#ffffff] text-[13px] text-[#676a6c] w-full overflow-x-auto mt-1\">\n                          {/* <table className=\"w-full max-w-full rounded-xl overflow-hidden \">\n                            <thead className=\"\">\n                              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500]  h-[40px]\">\n                                <th className=\"border-none p-2 whitespace-nowrap w-[10%]\"> S.no.</th>\n                                <th className=\"border-none p-2 whitespace-nowrap\"> Plan Name </th>\n                                <th className=\"border-none p-2 whitespace-nowrap\"> Description</th>\n                                <th className=\"border-none p-2 whitespace-nowrap\"> Duration</th>\n                                <th className=\"border-none p-2 whitespace-nowrap\">Price / Month</th>\n                                <th className=\"border-none p-2 whitespace-nowrap\">Total Price</th>\n                                <th className=\"border-none p-2 whitespace-nowrap\">Created At</th>\n                                <th className=\"border-none p-2 whitespace-nowrap\">Created By</th>\n                                <th className=\"border-none p-2 whitespace-nowrap\">Status</th>\n                                <th className=\"border-none p-2 whitespace-nowrap text-center\">Action</th>\n                              </tr>\n                            </thead>\n                            {loadingPlanHistory ?\n                              <tr className=\"bg-white bg-opacity-5 \">\n                                <td\n                                  colSpan={15}\n                                  className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                                >\n                                  <Loader2 />\n                                </td>\n                              </tr> :\n        \n                              <tbody>\n                                {companyPlanHistoryData && companyPlanHistoryData?.planHistory && companyPlanHistoryData?.planHistory?.length > 0 ? (\n                                  companyPlanHistoryData?.planHistory?.map((element, index) => (\n                                    <tr\n                                      className={`border-b-[1px] border-[#DDDDDD] text-[#374151] text-[14px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                                        }`}\n                                    >\n                                      <td className=\"whitespace-nowrap border-none p-2 \">\n                                        {index + 1 + ((currentPage - 1) * limit)}\n                                      </td>\n        \n                                      <td className=\"whitespace-nowrap border-none p-2 \">\n                                        {`${element?.title} ` ?? \"-\"}\n                                      </td>\n                                      <td className=\"whitespace-nowrap border-none p-2 \">\n                                        {element?.planData?.description ?? \"-\"}\n                                      </td>\n                                      <td className=\"whitespace-nowrap border-none p-2 \">\n                                        {`${element?.days} days` ?? \"-\"}\n                                      </td>\n        \n                                      <td className=\"whitespace-nowrap border-none p-2 \">\n                                        {`₹ ${element?.price} ` ?? \"-\"}\n                                      </td>\n                                      <td className=\"whitespace-nowrap border-none p-2 \">\n                                        {`₹ ${element?.price * element?.planData?.billingCycle} ` ?? \"-\"}\n                                      </td>\n        \n                                      <td className=\"whitespace-nowrap border-none p-2 \">\n                                        {`${dayjs(element?.createdAt).format('DD-MM-YYYY')} ` ?? \"-\"}\n                                      </td>\n                                      <td className=\"whitespace-nowrap border-none p-2 \">\n                                        {element?.createdBy ?? \"-\"}\n                                      </td>\n                                      <td className=\"whitespace-nowrap border-none p-2 capitalize\">\n                                        {element?.status ?? \"-\"}\n                                      </td>\n                                      <td className=\"whitespace-nowrap border-none p-2 capitalize\">\n                                        <Tooltip placement=\"topLeft\"  title=\"Subscription\" >\n                                          <button\n                                            onClick={() => {\n                                              handleSubscriptionView(element)\n                                            }}\n                                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                            type=\"button\"\n                                          >\n                                            <FaEye\n                                              className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                              size={16}\n                                            />\n                                          </button>\n                                        </Tooltip>\n        \n                                      </td>\n        \n                                    </tr>\n                                  ))\n                                ) : (\n                                  <tr className=\"bg-white bg-opacity-5 \">\n                                    <td\n                                      colSpan={10}\n                                      className=\"px-6 text-center py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                                    >\n                                      Record Not Found\n                                    </td>\n                                  </tr>\n                                )}\n                              </tbody>}\n                          </table> */}\n                          <Modal\n                            title=\"Subscription Details\"\n                            open={subscriptionModal.status}\n                            onCancel={() => setSubscriptionModal(state => ({\n                              ...state,\n                              status: false\n                            }))}\n                            className=\"antmodalclassName\"\n                            footer={null}\n                            width={1100}\n                            wrapClassName=\"overflow-hidden\"\n                          >\n                            {subscriptionModal?.loading ? (\n                              <div className=\"flex justify-center items-center h-64\">\n                                <Spin />\n                              </div>\n                            ) : (\n                              <div className=\"\">\n                                {/* Subscription Info - Responsive Grid */}\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4  bg-gray-50 rounded-lg p-1\">\n                                  <div className=\"space-y-3\">\n                                    <InfoRow label=\"Subscription ID\" value={subscriptionData?.id} />\n                                    <InfoRow label=\"Payment Method\" value={subscriptionData?.payment_method} />\n                                    <InfoRow label=\"Plan ID\" value={subscriptionData?.plan_id} />\n                                    <InfoRow\n                                      label=\"Short URL\"\n                                      value={subscriptionData?.short_url}\n                                      copyable\n                                      onCopy={() => copyToClipboard(subscriptionData?.short_url)}\n                                    />\n                                    <InfoRow label=\"Total Count\" value={subscriptionData?.total_count} />\n                                  </div>\n                                  <div className=\"space-y-3\">\n                                    <InfoRow label=\"Paid Count\" value={subscriptionData?.paid_count} />\n                                    <InfoRow label=\"Remaining Count\" value={subscriptionData?.remaining_count} />\n                                    <InfoRow label=\"Status\" value={\n                                      <div onClick={()=>{\n        \n                                      }} className=\"flex justify-between items-center gap-2 text-xs\">\n                                        <span>\n                                          {\n                                            subscriptionData?.status ?? \"-\"\n                                          }\n                                        </span>\n                                        <span>\n                                        {/* {subscriptionData?.status !== \"cancelled\"  && <SubscriptionModal subscriptionId={subscriptionData?.id} />} */}\n                                        </span>\n                                      </div>\n                                    } capitalize />\n                                    <InfoRow\n                                      label=\"Period\"\n                                      value={\n                                        subscriptionData?.current_start && subscriptionData?.current_end\n                                          ? `${moment(subscriptionData.current_start).format(\"DD-MM-YYYY\")} to ${moment(subscriptionData.current_end).format(\"DD-MM-YYYY\")}`\n                                          : \"-\"\n                                      }\n                                    />\n                                  </div>\n                                </div>\n        \n                                {/* Invoice Table - Responsive with horizontal scroll on mobile */}\n                                <div className=\"bg-white rounded-lg shadow overflow-hidden border border-gray-200\">\n                                  <div className=\"overflow-x-auto\">\n                                    <table className=\"min-w-full divide-y divide-gray-200\">\n                                      <thead className=\"bg-gray-800\">\n                                        <tr>\n                                          <TableHeader>#</TableHeader>\n                                          <TableHeader>Order ID</TableHeader>\n                                          <TableHeader>Short URL</TableHeader>\n                                          <TableHeader>Amount</TableHeader>\n                                          <TableHeader>Amount Due</TableHeader>\n                                          <TableHeader>Gross Amount</TableHeader>\n                                          <TableHeader>Status</TableHeader>\n                                          <TableHeader>Action</TableHeader>\n                                        </tr>\n                                      </thead>\n                                      <tbody className=\"bg-white divide-y divide-gray-200\">\n                                        {loadingPlanHistory ? (\n                                          <tr>\n                                            <td colSpan={7} className=\"px-6 py-4 text-center\">\n                                              <div className=\"flex justify-center\">\n                                                <Loader2 />\n                                              </div>\n                                            </td>\n                                          </tr>\n                                        ) : subscriptionData?.invoiceList?.length > 0 ? (\n                                          subscriptionData.invoiceList.map((item, index) => (\n                                            <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\n                                              <TableCell>{index + 1 + ((currentPage - 1) * limit)}</TableCell>\n                                              <TableCell className=\"max-w-[120px] truncate\">{item?.order_id || \"-\"}</TableCell>\n                                              <TableCell>\n                                                {item?.short_url ? (\n                                                  <div className=\"flex items-center space-x-1\">\n                                                    <span className=\"truncate max-w-[100px] md:max-w-[180px]\">{item?.short_url}</span>\n                                                    <CopyButton onCopy={() => copyToClipboard(item?.short_url)} />\n                                                  </div>\n                                                ) : \"-\"}\n                                              </TableCell>\n                                              <TableCell>{item?.amount ? (item.amount / 100).toFixed(2) : \"-\"}</TableCell>\n                                              <TableCell>{item?.amount_due ? (item.amount_due / 100).toFixed(2): \"-\"}</TableCell>\n                                              <TableCell>{item?.gross_amount ? (item.gross_amount / 100).toFixed(2) : \"-\"}</TableCell>\n                                              <TableCell className=\"capitalize\">{item?.status || \"-\"}</TableCell>\n                                              <TableCell className=\"capitalize\">\n        \n        \n                                                <Tooltip placement=\"topLeft\"  title=\"Payment Summary\" >\n                                                  <button\n                                                    className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                                    type=\"button\"\n                                                    disabled={item.status === \"issued\"}\n                                                  >\n                                                    <BiDetail\n        \n                                                      onClick={() => handleinvoicedetailsView(item)}\n                                                      className={item.status === \"issued\" ? \"text-gray-500 \" : \"text-cyan-600 hover:text-cyan-500\"}\n                                                      size={16}\n                                                    />\n                                                  </button>\n                                                </Tooltip>\n                                              </TableCell>\n                                              <Modal\n                                                title=\"Payment Summary\"\n                                                className=\"antmodalclassName\"\n                                                open={detailsModal.status}\n                                                onCancel={() => setDetailsModal((state) => ({ ...state, status: false }))}\n                                                footer={null}\n                                                width={800}\n                                                wrapClassName=\"overflow-hidden\"\n                                                style={{ borderRadius: '12px' }}\n                                                bodyStyle={{ padding: '0' }}\n                                              >\n                                                {detailsModal?.loading ? (\n                                                  <div className=\"flex justify-center items-center h-64\">\n                                                    <Spin />\n                                                  </div>\n                                                ) : (\n                                                  <div className=\"p-6\">\n                                                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                                      {/* Payment Status Card */}\n                                                      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\n                                                        <div className=\"flex justify-between items-start mb-4\">\n                                                          <h3 className=\"text-lg font-semibold text-gray-800\">Payment Status</h3>\n                                                          <span\n                                                            className={`px-3 py-1 rounded-full text-sm font-medium ${companyInvoiceDetailsdata?.status === 'captured'\n                                                              ? 'bg-green-100 text-green-800'\n                                                              : 'bg-yellow-100 text-yellow-800'\n                                                              }`}\n                                                            style={{ textTransform: 'uppercase' }}\n                                                          >\n                                                            {companyInvoiceDetailsdata?.status}\n                                                          </span>\n                                                        </div>\n        \n                                                        <div className=\"space-y-3\">\n                                                          <div className=\"flex justify-between\">\n                                                            <span className=\"text-gray-500\">Amount</span>\n                                                            <span className=\"font-medium\">\n                                                              ₹{(companyInvoiceDetailsdata?.amount / 100).toFixed(2)}\n                                                            </span>\n                                                          </div>\n                                                          <div className=\"flex justify-between\">\n                                                            <span className=\"text-gray-500\">Payment Method</span>\n                                                            <span className=\"font-medium\" style={{ textTransform: 'uppercase' }}>\n                                                              {companyInvoiceDetailsdata?.method}\n                                                            </span>\n                                                          </div>\n                                                          <div className=\"flex justify-between\">\n                                                            <span className=\"text-gray-500\">Date</span>\n                                                            <span className=\"font-medium\">\n                                                              {new Date(companyInvoiceDetailsdata?.created_at).toLocaleString()}\n                                                            </span>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n        \n                                                      {/* Customer Details Card */}\n                                                      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\n                                                        <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Customer Details</h3>\n                                                        <div className=\"space-y-3\">\n                                                          <div className=\"flex justify-between\">\n                                                            <span className=\"text-gray-500\">Email</span>\n                                                            <span className=\"font-medium\">{companyInvoiceDetailsdata?.email}</span>\n                                                          </div>\n                                                          <div className=\"flex justify-between\">\n                                                            <span className=\"text-gray-500\">Contact</span>\n                                                            <span className=\"font-medium\">{companyInvoiceDetailsdata?.contact}</span>\n                                                          </div>\n                                                          <div className=\"flex justify-between\">\n                                                            <span className=\"text-gray-500\">Description</span>\n                                                            <span className=\"font-medium text-right\">{companyInvoiceDetailsdata?.description}</span>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n        \n        \n                                                      {/* {subscriptionData?.status === \"cancelled\" && <div className=\"bg-white p-2 rounded-lg shadow-sm border border-gray-100 md:col-span-2\">\n                                                        <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Refund Amount</h3>\n                                                        <form onSubmit={(e) => handleSubmit(e, companyInvoiceDetailsdata?.id)} className=\"max-w-md mx-auto\">\n                                                          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                                            Amount <span className=\"text-red-600\">*</span>\n                                                          </label>\n                                                          <div className=\"flex rounded-md shadow-sm overflow-hidden border border-gray-300 focus-within:ring-2 focus-within:ring-rose-500\">\n                                                            <input\n                                                              type=\"number\"\n                                                              value={amount}\n                                                              disabled={(!amount || amount === \"0\")}\n                                                              onChange={(e) => setAmount(e.target.value)}\n                                                              placeholder=\"Enter Amount\"\n                                                              className=\"flex-1 px-4 py-2 text-sm focus:outline-none\"\n                                                            />\n                                                            <button\n                                                              type=\"submit\"\n                                                              disabled={(!amount || amount === \"0\")}\n                                                              className={` ${(!amount || amount === \"0\") ? \" bg-gray-500\" : \"bg-rose-600 hover:bg-rose-700\"} text-white px-5 py-2 text-sm font-medium transition-colors    `}\n                                                            >\n                                                              {refundloading ? <Spin size=\"small\" /> : \"Submit\"}\n                                                            </button>\n                                                          </div>\n                                                          {error && (\n                                                            <p className=\"mt-2 text-sm text-red-600\">{error}</p>\n                                                          )}\n                                                        </form>\n                                                      </div>}\n         */}\n                                                      {/* Transaction Details Card */}\n                                                      <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100 md:col-span-2\">\n                                                        <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Transaction Details</h3>\n                                                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                                                          <div className=\"space-y-2\">\n                                                            <p className=\"text-gray-500\">Transaction ID</p>\n                                                            <p className=\"font-medium break-all\">{companyInvoiceDetailsdata?.id}</p>\n                                                          </div>\n                                                          <div className=\"space-y-2\">\n                                                            <p className=\"text-gray-500\">Order ID</p>\n                                                            <p className=\"font-medium break-all\">{companyInvoiceDetailsdata?.order_id}</p>\n                                                          </div>\n                                                          <div className=\"space-y-2\">\n                                                            <p className=\"text-gray-500\">Invoice ID</p>\n                                                            <p className=\"font-medium break-all\">{companyInvoiceDetailsdata?.invoice_id}</p>\n                                                          </div>\n                                                        </div>\n                                                      </div>\n                                                      {companyInvoiceDetailsdata?.refund_status && (\n                                                        <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100 md:col-span-2\">\n                                                          <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Refund Status</h3>\n                                                          <div className=\"flex justify-between\">\n                                                            <span className=\"text-gray-500\">Amount Refunded</span>\n                                                            <span className=\"font-medium\">\n                                                              ₹{(companyInvoiceDetailsdata?.amount_refunded / 100).toFixed(2)}\n                                                            </span>\n                                                          </div>\n                                                        </div>\n                                                      )}\n                                                    </div>\n        \n                                                    {/* Notes Section (if notes exist) */}\n                                                    {companyInvoiceDetailsdata?.notes?.length > 0 && (\n                                                      <div className=\"mt-6 bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\n                                                        <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Notes</h3>\n                                                        <ul className=\"list-disc pl-5 space-y-2\">\n                                                          {companyInvoiceDetailsdata.notes.map((note, index) => (\n                                                            <li key={index} className=\"text-gray-700\">{note}</li>\n                                                          ))}\n                                                        </ul>\n                                                      </div>\n                                                    )}\n                                                  </div>\n                                                )}\n                                              </Modal>\n                                            </tr>\n                                          ))\n                                        ) : (\n                                          <tr>\n                                            <td colSpan={7} className=\"px-6 py-4 text-center text-gray-500\">\n                                              No records found\n                                            </td>\n                                          </tr>\n                                        )}\n                                      </tbody>\n                                    </table>\n                                  </div>\n        \n        \n                                </div>\n                              </div>\n                            )}\n                          </Modal>\n        \n        \n        \n                        </div>\n\n                         <div>\n                                      {\n                                      companyPlanHistoryData && companyPlanHistoryData?.planHistory && companyPlanHistoryData?.planHistory?.length > 0 ?\n                                      (companyPlanHistoryData?.planHistory?.map((element, index) => (\n                                        <div key={index} className=\" rounded-md  \">\n                                          <div key={index} className=\" rounded-md \">\n                                            <div className=\"flex justify-between items-center rounded-t-md px-3\">\n                                              <div className=\"py-2 text-header font-semibold\">\n                                                Plan History {index + 1}\n                                              </div>\n                                            </div>\n                                            <div className=\"grid sm:grid-cols-1 grid-cols-1 gap-4 items-end overflow-auto\">\n                                              <div className=\"w-full\">\n                                                <table className=\"w-full  rounded-lg shadow-md overflow-hidden bg-white\">\n                                                  <thead>\n                                                    <tr></tr>\n                                                  </thead>\n                                                  <tbody className=\"text-sm text-gray-700\">\n                                                    {/* Company Name Row */}\n                                                    <tr className=\" hover:bg-indigo-50 \">\n                                                      <td className=\"p-3 w-1/2 text-gray-600\">\n                                                        <div className=\"flex items-center  gap-2\">\n                                                          <AiTwotoneContainer className=\"size-4 text-header text-lg\" />\n                                                          <span className=\"text-[16px] font-medium\">\n                                                            Plan Name\n                                                          </span>\n                                                        </div>\n                                                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                          {`${element?.title} ` ?? \"-\"}\n                                                        </span>\n                                                      </td>\n                        \n                                                      <td className=\"p-3 w-1/2 text-gray-600\">\n                                                        <div className=\"flex items-center gap-2\">\n                                                          <FaRegBuilding className=\"size-4 text-header text-lg\" />\n                                                          <span className=\"text-[16px] font-medium\">\n                                                            Plan Description\n                                                          </span>\n                                                        </div>\n                                                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                           {element?.planData?.description ?? \"-\"}\n                                                        </span>\n                                                      </td>\n                                                    </tr>\n                        \n                                                    {/* <tr className=\" hover:bg-indigo-50\">\n                                              <td className=\"p-3  text-gray-600\">\n                                                <div className=\"flex items-center gap-2\">\n                                                  <FaPeopleGroup className=\"size-4 text-header text-lg\" />\n                                                  <span className=\"text-[16px] font-medium\">\n                                                    Branch Head\n                                                  </span>\n                                                </div>\n                                                <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                  {branchDetailsData?.data?.branchProfile?.head || \"N/A\"}\n                                                </span>\n                                              </td>\n                        \n                                              <td className=\"p-3  text-gray-600\">\n                                                <div className=\"flex items-center gap-2\">\n                                                  <FaIndustry className=\"size-4 text-header text-lg\" />\n                                                  <span className=\"text-[16px] font-medium\">\n                                                    Remark\n                                                  </span>\n                                                </div>\n                                                <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                  {branchDetailsData?.data?.branchProfile?.remarks || \"N/A\"}\n                                                </span>\n                                              </td>\n                                            </tr> */}\n                        \n                                                    <tr className=\" hover:bg-indigo-50\">\n                                                      <td className=\"p-3 w-1/2 text-gray-600\">\n                                                        <div className=\"flex items-center gap-2\">\n                                                          <AiTwotoneContacts className=\"size-4 text-header text-lg\" />\n                                                          <span className=\"text-[16px] font-medium\">\n                                                            Duration\n                                                          </span>\n                                                        </div>\n                                                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                         {`${element?.days} days` ?? \"-\"}\n                                                        </span>\n                                                      </td>\n                                                      <td className=\"p-3 w-1/2 text-gray-600\">\n                                                        <div className=\"flex items-center gap-2\">\n                                                          <AiTwotoneContacts className=\"size-4 text-header text-lg\" />\n                                                          <span className=\"text-[16px] font-medium\">\n                                                            {\" \"}\n                                                            Price/Month\n                                                          </span>\n                                                        </div>\n                                                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                           {`₹ ${element?.price} ` ?? \"-\"}\n                                                        </span>\n                                                      </td>\n                        \n                                                      {/* <td className=\"p-3  text-gray-600\">\n                                                <div className=\"flex items-center gap-2\">\n                                                  <AiOutlineMail className=\"size-4 text-header text-lg\" />\n                                                  <span className=\"text-[16px] font-medium\">Email</span>\n                                                </div>\n                                                <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                  {branchDetailsData?.data?.email || \"N/A\"}\n                                                </span>\n                                              </td>*/}\n                                                    </tr>\n                        \n                                                    <tr className=\" hover:bg-indigo-50\">\n                                                      <td className=\"p-3 w-1/2 text-gray-600\">\n                                                        <div className=\"flex items-center gap-2\">\n                                                          <AiTwotoneCheckSquare className=\"size-4 text-header text-lg\" />\n                                                          <span className=\"text-[16px] font-medium\">\n                                                            Total Price\n                                                          </span>\n                                                        </div>\n                                                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                            {`₹ ${element?.price * element?.planData?.billingCycle} ` ?? \"-\"}\n                                                        </span>\n                                                      </td>\n                                                      <td className=\"p-3 w-1/2 text-gray-600\">\n                                                        <div className=\"flex items-center gap-2\">\n                                                          <AiOutlinePercentage className=\"size-4 text-header text-lg\" />\n                                                          <span className=\"text-[16px] font-medium\">\n                                                            {\" \"}\n                                                            Created At\n                                                          </span>\n                                                        </div>\n                                                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                          {`${dayjs(element?.createdAt).format('DD-MM-YYYY')} ` ?? \"-\"}\n                                                        </span>\n                                                      </td>\n                                                    </tr>\n                        \n                                                    <tr className=\" hover:bg-indigo-50\">\n                                                      <td className=\"p-3 w-1/2 text-gray-600\">\n                                                        <div className=\"flex items-center gap-2\">\n                                                          {/* <AiOutlineSkype className=\"size-4 text-header text-lg\" /> */}\n                                                          <span className=\"text-[16px] font-medium\">\n                                                            CreatedBy\n                                                          </span>\n                                                        </div>\n                                                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                          {element?.createdBy ?? \"-\"}\n                                                        </span>\n                                                      </td>\n                                                      <td className=\"p-3 w-1/2 text-gray-600\">\n                                                        <div className=\"flex items-center gap-2\">\n                                                          {/* <AiOutlineSkype className=\"size-4 text-header text-lg\" /> */}\n                                                          <span className=\"text-[16px] font-medium\">\n                                                            Status\n                                                          </span>\n                                                        </div>\n                                                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                          {element?.status ?? \"-\"}\n                                                        </span>\n                                                      </td>\n\n                                                    </tr>\n                                                    <tr className=\" hover:bg-indigo-50 \">\n                                                      <td className=\"p-3 w-1/2 text-gray-600\">\n                                                        <div className=\"flex items-center  gap-2\">\n                                                          <AiTwotoneContainer className=\"size-4 text-header text-lg\" />\n                                                          <span className=\"text-[16px] font-medium\">\n                                                            Action\n                                                          </span>\n                                                        </div>\n                                                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                                                          <Tooltip placement=\"topLeft\"  title=\"Subscription\" >\n                                          <button\n                                            onClick={() => {\n                                              handleSubscriptionView(element)\n                                            }}\n                                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                            type=\"button\"\n                                          >\n                                            <FaEye\n                                              className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                              size={16}\n                                            />\n                                          </button>\n                                        </Tooltip>\n                                                        </span>\n                                                      </td>\n                        \n                                                      \n                                                    </tr>\n                                                  </tbody>\n                                                </table>\n                                              </div>\n                                            </div>\n                                          </div>\n                                        </div>\n                                      ))) :<div className='flex justify-center items-center text-[15px] text-header'> No Data Found </div>\n                                      \n                                      }\n                        \n                                      {/* Add Education Button */}\n                                    </div>\n    </div>\n  \n  )\n}\n\nexport default PlanHistory\nconst InfoRow = ({ label, value, copyable = false, capitalize = false, onCopy }) => (\n  <div className=\"flex flex-wrap items-center\">\n    <span className=\"w-32 md:w-40 text-sm font-medium text-gray-600\">{label}:</span>\n    <span className={`flex-1 text-sm text-gray-800 ${capitalize ? 'capitalize' : ''}`}>\n      {value || \"-\"}\n      {copyable && value && (\n        <button\n          onClick={onCopy}\n          className=\"ml-2 text-blue-500 hover:text-blue-700 focus:outline-none\"\n          aria-label=\"Copy to clipboard\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\" />\n          </svg>\n        </button>\n      )}\n    </span>\n  </div>\n);\n\nconst TableHeader = ({ children }) => (\n  <th className=\"px-4 py-3 text-left text-xs font-medium text-white uppercase tracking-wider\">\n    {children}\n  </th>\n);\n\nconst TableCell = ({ children, className = '' }) => (\n  <td className={`px-4 py-3 text-sm text-gray-700 ${className}`}>\n    {children}\n  </td>\n);\n\nconst CopyButton = ({ onCopy }) => (\n  <button\n    onClick={onCopy}\n    className=\"text-blue-500 hover:text-blue-700 focus:outline-none\"\n    title=\"Copy to clipboard\"\n  >\n    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\" />\n    </svg>\n  </button>\n);","import React, { useState } from \"react\";\nimport { Modal, Select, message } from \"antd\";\nimport axios from \"axios\";\nimport { inputAntdSelectClassName } from \"../../../constents/global\";\nimport { useDispatch } from \"react-redux\";\nimport { companySubscriptionStatus, subscriptionFunc } from \"./companyFeatures/_company_reducers\";\n\nconst { Option } = Select;\n\nconst SUBSCRIPTION_STATUS_CANCELED = \"cancel\";\nconst SUBSCRIPTION_STATUS_PAUSE_RESUME = \"pause_resume\";\nconst SUBSCRIPTION_STATUS_ARR = [\n  SUBSCRIPTION_STATUS_CANCELED,\n  SUBSCRIPTION_STATUS_PAUSE_RESUME,\n];\n\nconst SUBSCRIPTION_TYPE_IMMEDIATE = \"immidate\"; \n// const SUBSCRIPTION_TYPE_EOC = \"end_of_cycle\"; // Uncomment this in future if needed\nconst SUBSCRIPTION_TYPE_PAUSE = \"pause\";\nconst SUBSCRIPTION_TYPE_RESUME = \"resume\";\n\nconst SUBSCRIPTION_TYPE_OPTIONS = {\n  [SUBSCRIPTION_STATUS_CANCELED]: [\n    SUBSCRIPTION_TYPE_IMMEDIATE,\n    // SUBSCRIPTION_TYPE_EOC, // Uncomment this in the future if needed\n  ],\n  [SUBSCRIPTION_STATUS_PAUSE_RESUME]: [\n    SUBSCRIPTION_TYPE_PAUSE,\n    SUBSCRIPTION_TYPE_RESUME,\n  ],\n};\n\nconst LABEL_MAP = {\n  cancel: \"Cancel\",\n  pause_resume: \"Pause / Resume\",\n  immidate: \"Immediate\",\n  // end_of_cycle: \"End of Cycle\",\n  pause: \"Pause\",\n  resume: \"Resume\",\n};\n\nconst SubscriptionModal = ({ subscriptionId }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleStatusChange = (value) => {\n    setStatus(value);\n    setType(\"\"); // Reset type when status changes\n  };\n\n  const handleOk = async () => {\n    if (!status || !type) {\n      message.warning(\"Please select both status and type.\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await dispatch(companySubscriptionStatus({\n        subscriptionId: subscriptionId,\n        status: status,\n        type: type,\n      })).then((data) => {\n        if (!data?.error) {\n          dispatch(subscriptionFunc({ subscriptionId }));\n          setIsModalOpen(false);\n          setStatus(\"\");\n          setType(\"\");\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getFilteredTypeOptions = () => {\n    return SUBSCRIPTION_TYPE_OPTIONS[status] || [];\n  };\n\n  return (\n    <>\n      <button\n        onClick={() => setIsModalOpen(true)}\n        className=\"px-2 py-1 bg-cyan-800 text-white rounded font-semibold\"\n      >\n        Change\n      </button>\n\n      <Modal\n        title=\"Update Subscription\"\n        className=\"antmodalclassName\"\n        open={isModalOpen}\n        onOk={handleOk}\n        onCancel={() => {setIsModalOpen(false);setStatus('') ; setType('')}}\n        confirmLoading={loading}\n        okText=\"Submit\"\n      >\n        <div style={{ marginBottom: 16 }}>\n          <label>Status:</label>\n          <Select\n            value={status || undefined}\n            onChange={handleStatusChange}\n            placeholder=\"Select subscription status\"\n            getPopupContainer={(trigger) => trigger.parentNode}\n            className={`${inputAntdSelectClassName} border-2`}\n            style={{ width: \"100%\" }}\n          >\n            {SUBSCRIPTION_STATUS_ARR.map((statusOption) => (\n              <Option key={statusOption} value={statusOption}>\n                {LABEL_MAP[statusOption] || statusOption}\n              </Option>\n            ))}\n          </Select>\n        </div>\n\n        <div>\n          <label>Type:</label>\n          <Select\n            value={type || undefined}\n            onChange={setType}\n            placeholder=\"Select subscription type\"\n            getPopupContainer={(trigger) => trigger.parentNode}\n            className={`${inputAntdSelectClassName} border-2`}\n            style={{ width: \"100%\" }}\n            disabled={!status}\n          >\n            {getFilteredTypeOptions().map((typeOption) => (\n              <Option key={typeOption} value={typeOption}>\n                {LABEL_MAP[typeOption] || typeOption}\n              </Option>\n            ))}\n          </Select>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default SubscriptionModal;\n"],"names":["_ref","_subscriptionData$sta","_subscriptionData$inv","_companyPlanHistoryDa","_companyPlanHistoryDa2","companyId","isCompanyMailOpen","setIsCompanyMailOpen","useState","copyToClipboard","text","navigator","clipboard","writeText","message","success","dispatch","useNavigate","useDispatch","companyList","totalCompanyCount","companyPlanHistoryData","subscriptionData","companyInvoiceDetailsdata","useSelector","state","company","canCreate","canRead","canUpdate","canDelete","usePermissions","isModalOpen","setIsModalOpen","isChangeModalOpen","setIsChangeModalOpen","sortedList","setSortedList","detailsModal","setDetailsModal","data","status","loading","amount","setAmount","error","setError","refundloading","setRefundloading","planListData","plan","currentPage","setCurrentPage","searchText","setSearchText","setStatus","setPlan","setLoading","loadingPlanHistory","setLoadingPlanHistory","useEffect","companyPlanHistory","async","fetchCompanyListData","fetchData","_companyInvoiceDetail","_companyInvoiceDetail2","amount_refunded","toFixed","subscriptionModal","setSubscriptionModal","reqData","page","limit","reqPayload","planId","isPagination","getCompanyList","console","planSearch","sort","handleSort","key","order","handleSortLogic","_jsxs","className","children","_jsx","Modal","title","open","onCancel","_objectSpread","footer","width","wrapClassName","Spin","InfoRow","label","value","id","payment_method","plan_id","short_url","copyable","onCopy","total_count","paid_count","remaining_count","onClick","capitalize","current_start","current_end","concat","moment","format","TableHeader","colSpan","Loader2","invoiceList","length","map","item","index","_companyInvoiceDetail3","TableCell","order_id","CopyButton","amount_due","gross_amount","Tooltip","placement","type","disabled","BiDetail","element","companyInvoiveDetail","paymentId","payment_id","prevState","handleinvoicedetailsView","size","style","borderRadius","bodyStyle","padding","textTransform","method","Date","created_at","toLocaleString","email","contact","description","invoice_id","refund_status","notes","note","planHistory","_ref2","_element$planData$des","_element$planData","_ref3","_ref4","_ref5","_element$planData2","_ref6","_element$createdBy","_element$status","AiTwotoneContainer","FaRegBuilding","planData","AiTwotoneContacts","days","price","AiTwotoneCheckSquare","billingCycle","AiOutlinePercentage","dayjs","createdAt","createdBy","subscriptionFunc","subscriptionId","handleSubscriptionView","FaEye","_ref7","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_ref8","_ref9","_ref0","Option","Select","SUBSCRIPTION_STATUS_CANCELED","SUBSCRIPTION_STATUS_PAUSE_RESUME","SUBSCRIPTION_STATUS_ARR","SUBSCRIPTION_TYPE_OPTIONS","LABEL_MAP","cancel","pause_resume","immidate","pause","resume","setType","_Fragment","onOk","companySubscriptionStatus","then","warning","confirmLoading","okText","marginBottom","undefined","onChange","placeholder","getPopupContainer","trigger","parentNode","inputAntdSelectClassName","statusOption","typeOption"],"sourceRoot":""}