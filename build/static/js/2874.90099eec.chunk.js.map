{"version":3,"file":"static/js/2874.90099eec.chunk.js","mappings":"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","sources":["pages/taskManagement/addTask/TaskList.js","pages/taskManagement/employeeAddTask/ChatBox.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaEye, FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { decrypt, encrypt } from \"../../../config/Encryption\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport { HiChatAlt, } from \"react-icons/hi\";\nimport {\n  domainName,\n  inputAntdSelectClassNameFilter,\n  pazeSizeReport,\n  showSwal,\n} from \"../../../constents/global\";\nimport {\n  deletetaskFunc,\n  getTaskList,\n} from \"./addTaskFeatures/_addTask_reducers\";\nimport moment from \"moment\";\nimport ChatBox from \"../employeeAddTask/ChatBox\";\nimport { BsEye } from \"react-icons/bs\";\nimport { Modal, Select, Spin, Tooltip, Dropdown } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport { deptSearch } from \"../../department/departmentFeatures/_department_reducers\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { employeSearch, getEmployeDetails } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\nimport { MdOutlineTask } from \"react-icons/md\";\nimport { CLIENT_TASK_STATUS_ARR } from \"../../../constents/ActionConstent\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport dayjs from \"dayjs\";\nimport { GrValidate } from \"react-icons/gr\";\nimport { MdOutlineAssignment } from \"react-icons/md\";\nimport { TbPencilMinus } from \"react-icons/tb\";\nimport { clientSearch } from \"../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../taskType/taskFeatures/_task_reducers\";\n\n\nfunction TaskList() {\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isChatModalOpen, setIsChatModalOpen] = useState(false);\n  const [comments, setComments] = useState(null);\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { employeList } = useSelector((state) => state.employe);\n  const { taskList, totalTaskCount, loading } = useSelector((state) => state.addTask);\n  const { employeDetailsData } = useSelector((state) => state.employe);\n  const { clientList, loading: clientLoading } = useSelector((state) => state.client);\n  const { taskTypeList } = useSelector((state) => state.taskType);\n\n  const { departmentListData, loading: deptLoading } = useSelector((state) => state.department);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [EmployeeViewModal, setEmployeeViewModal] = useState({\n    isOpen: false,\n    data: null\n  });\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initialPage = parseInt(searchParams.get('page')) || 1;\n  const initialLimit = parseInt(searchParams.get('limit')) || 10;\n  const initialBranchId = searchParams.get('branchId') || '';\n  const initialDepartmentId = searchParams.get('departmentId') || '';\n  const initialEmployeeId = searchParams.get('employeeId') || '';\n  const initialClientId = searchParams.get('clientId') || '';\n  const initialTaskId = searchParams.get('taskId') || '';\n  const initialStatus = searchParams.get('status') || '';\n  const initialOverdue = searchParams.get('overdue') || '';\n\n\n\n  const [currentPage, setCurrentPage] = useState(initialPage);\n  const [limit, setLimit] = useState(initialLimit);\n  const [status, setStatus] = useState(initialStatus);\n  const [searchText, setSearchText] = useState('');\n  const [branchId, setBranchId] = useState(initialBranchId);\n  const [departmentId, setDepartmentId] = useState(initialDepartmentId);\n  const [employeeId, setEmployeeId] = useState(initialEmployeeId);\n  const [clientId, setClientId] = useState(initialClientId);\n  const [taskId, setTaskId] = useState(initialTaskId);\n  const [isOverDue, setIsOverDue] = useState(initialOverdue);\n\n\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (currentPage > 1) params.set('page', currentPage);\n    if (limit !== 10) params.set('limit', limit);\n    if (branchId) params.set('branchId', branchId);\n    if (departmentId) params.set('departmentId', departmentId);\n    if (employeeId) params.set('employeeId', employeeId);\n    if (clientId) params.set('clientId', clientId);\n    if (taskId) params.set('taskId', taskId);\n    if (status) params.set('status', status);\n    if (isOverDue) params.set('overdue', isOverDue);\n    setSearchParams(params);\n  }, [currentPage, limit, branchId, departmentId, employeeId, clientId, taskId, status, isOverDue, searchText]);\n  useEffect(() => {\n    fetchClientListData();\n  }, [currentPage, limit, branchId, departmentId, employeeId, clientId, taskId, status, isOverDue, searchText]);\n\n  const handleResetFilters = () => {\n    setCurrentPage(1);\n    setLimit(10);\n    setBranchId('');\n    setDepartmentId('');\n    setClientId('');\n    setTaskId('');\n    setEmployeeId('');\n    setStatus('');\n    setIsOverDue('');\n    setSearchText('');\n  };\n  const onChange = (e) => {\n    setSearchText(e);\n\n  };\n  const handlePageSizeChange = (e) => {\n    setLimit(Number(e));\n    setCurrentPage(Number(1))\n  };\n  const onPaginationChange = (page) => setCurrentPage(page)\n  const handleBranchChange = (value) => {\n    setBranchId(value);\n    setCurrentPage(1);\n  };\n\n  const handleDepartmentChange = (value) => {\n    setDepartmentId(value);\n    setCurrentPage(1);\n  };\n\n  const handleEmployeeChange = (value) => {\n    setEmployeeId(value);\n    setCurrentPage(1);\n  };\n\n  const handleClientChange = (value) => {\n    setClientId(value);\n    setCurrentPage(1);\n  };\n\n  const handleTaskChange = (value) => {\n    setTaskId(value);\n    setCurrentPage(1);\n  };\n\n  const handleStatusChange = (value) => {\n    setStatus(value);\n    setCurrentPage(1);\n  };\n\n  const handleOverdueChange = (value) => {\n    setIsOverDue(value);\n    setCurrentPage(1);\n  };\n  const fetchClientListData = () => {\n    let reqData = {\n      page: currentPage,\n      limit: limit,\n      reqPayload: {\n        companyId:\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId,\n        directorId: \"\",\n        clientId: clientId,\n        employeId: employeeId,\n        taskTypeId: taskId,\n        groupId: \"\",\n        text: searchText,\n        sort: true,\n        status: status ? status : CLIENT_TASK_STATUS_ARR.filter(\n          status => status !== 'Completed' && status !== 'Task_Stop' && status !== 'Rejected'\n        ),\n        isOverDue: isOverDue === 'true' ? true : isOverDue === 'false' ? false : '',\n        isPagination: true,\n      },\n    };\n    dispatch(getTaskList(reqData));\n  };\n\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId:\n          [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId ? departmentId : '',\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: false,\n        isDirector: false,\n      })\n    )\n  };\n\n  const handleClientFocus = () => {\n    dispatch(\n      clientSearch({\n        companyId:\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId:\n          [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId ? departmentId : '',\n        groupId: \"\",\n        directorId: \"\",\n        organizationId: \"\",\n        industryId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n      })\n    )\n\n  };\n\n  const handleTaskFocus = () => {\n    dispatch(\n      taskTypeSearch({\n        companyId:\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId:\n          [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId ? departmentId : '',\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n      })\n    )\n\n  };\n\n\n  useEffect(() => {\n    if (selectedEmployee) {\n      const reqData = { _id: selectedEmployee?._id };\n      dispatch(getEmployeDetails(reqData));\n    }\n  }, [selectedEmployee]);\n  const handleImageClick = (employee) => {\n    setSelectedEmployee(employee);\n    setModalOpen(true);\n  }\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedEmployee(null);\n  };\n\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deletetaskFunc(reqData)).then((data) => {\n          // fetchClientListData();\n          if (currentPage > 1 && taskList?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n\n          } else {\n            fetchClientListData();\n          }\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n\n    dispatch(\n      branchSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.companyId,\n      })\n    )\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.companyId,\n      })\n    )\n\n  }, []);\n\n  useEffect(() => {\n    handleTaskFocus()\n    handleClientFocus()\n    handleEmployeeFocus()\n  }, [departmentId, branchId])\n\n  const handleOpenChat = (data) => {\n    setIsChatModalOpen(true);\n    setComments(data?.commentData);\n  };\n\n  const handleCloseChat = () => {\n    setIsChatModalOpen(false);\n    setComments(null);\n  };\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n\n  return (\n    <GlobalLayout onChange={onChange}>\n\n      <section>\n        <div>\n          <div className=\"space-y-1\">\n            <div className=\"2xl:flex justify-between items-center space-y-1.5 overflow-y-auto py-1\">\n              {/* <div class=\"xl:flex justify-between items-center py-1 lg:space-y-0 space-y-2 overflow-y-auto\"> */}\n              <div className=\"grid sm:grid-cols-3 grid-cols-1 md:grid-cols-4 lg:grid-cols-4 xl:flex xl:gap-3 gap-1.5\">\n                {(userInfoglobal?.userType == 'company' || userInfoglobal?.userType == 'companyDirector') && (\n                  <div>\n                    <Select\n                      value={branchId}\n                      onChange={handleBranchChange}\n                      defaultValue=\"\"\n                      disabled={loading}\n                      className={`${inputAntdSelectClassNameFilter} `}\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Branch</Select.Option>\n                      {branchListloading ? (\n                        <Select.Option disabled><ListLoader /></Select.Option>\n                      ) : (\n                        branchList?.map((type) => (\n                          <Select.Option key={type?._id} value={type?._id}>\n                            {type?.fullName}\n                          </Select.Option>\n                        ))\n                      )}\n                    </Select>\n                  </div>\n                )}\n\n                <div className=\"\">\n                  <Select\n                    value={departmentId}\n                    onChange={handleDepartmentChange}\n                    showSearch\n                    disabled={loading}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    defaultValue=\"\"\n                    className={`${inputAntdSelectClassNameFilter} `}\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {deptLoading ? (\n                      <Select.Option disabled><ListLoader /></Select.Option>\n                    ) : (\n                      departmentListData?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                </div>\n\n                <div className=\"\">\n                  <Select\n                    value={employeeId}\n                    onChange={handleEmployeeChange}\n                    disabled={loading}\n                    showSearch\n                    filterOption={(input, option) =>\n                      option?.label?.toLowerCase().includes(input.toLowerCase())\n                    }\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    placeholder=\"Select Employee\"\n                    // onFocus={handleEmployeeFocus}\n                    options={[\n                      { label: \"Select Employee\", value: '' },\n                      ...(employeList || []).map((element) => ({\n                        label: element.fullName,\n                        value: element._id,\n                      })),\n                    ]}\n                  />\n                </div>\n\n                <div className=\"\">\n                  <Select\n                    value={clientId}\n                    onChange={handleClientChange}\n                    showSearch\n                    disabled={loading}\n                    placeholder=\"Select Client\"\n                    // onFocus={handleClientFocus}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    defaultValue=\"\"\n                    className={`${inputAntdSelectClassNameFilter} `}\n                  >\n                    <Select.Option value=\"\">Select Client</Select.Option>\n                    {clientLoading ? (\n                      <Select.Option disabled><ListLoader /></Select.Option>\n                    ) : (\n                      clientList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.fullName}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                </div>\n\n                <div className=\"\">\n                  <Select\n                    value={taskId}\n                    onChange={handleTaskChange}\n                    disabled={loading}\n                    showSearch\n                    filterOption={(input, option) =>\n                      option?.label?.toLowerCase().includes(input.toLowerCase())\n                    }\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    placeholder=\"Select Task\"\n                    // onFocus={handleTaskFocus}\n                    options={[\n                      { label: \"Select Task\", value: '' },\n                      ...(taskTypeList || []).map((element) => ({\n                        label: element.name,\n                        value: element._id,\n                      })),\n                    ]}\n                  />\n                </div>\n\n                <div className=\"\">\n                  <Select\n                    value={status}\n                    onChange={handleStatusChange}\n                    disabled={loading}\n                    defaultValue=\"\"\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    {CLIENT_TASK_STATUS_ARR.filter(\n                      status => status !== 'Completed' && status !== 'Task_Stop' && status !== 'Rejected'\n                    )?.map(dataStatus => (\n                      <Select.Option value={dataStatus}>\n                        {dataStatus?.replace(/_/g, ' ')\n                          .toLowerCase()\n                          .replace(/\\b\\w/g, char => char.toUpperCase())}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                </div>\n\n                <div>\n                  <Select\n                    value={isOverDue}\n                    onChange={handleOverdueChange}\n                    defaultValue=\"\"\n                    disabled={loading}\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">All Task</Select.Option>\n                    <Select.Option value=\"true\">Overdue Task</Select.Option>\n                    <Select.Option value=\"false\">Other Task</Select.Option>\n                  </Select>\n                </div>\n\n\n              </div>\n\n\n              {/* </div> */}\n              <div className=\"flex justify-end items-center gap-2 \">\n                <button\n                  onClick={() => {\n                    handleResetFilters();\n\n                  }}\n                  className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                  <span className=\"text-[12px]\">Reset</span>\n                </button>\n                {canCreate && (\n                  <Tooltip placement=\"topLeft\" title='Add Task'>\n                    <button\n                      onClick={() => {\n                        navigate(\"/admin/task/create\");\n                      }}\n                      className=\"bg-header px-2 py-1.5 rounded-md flex justify-center whitespace-nowrap items-center space-x-2 text-white\"\n                    >\n                      <FaPlus />\n                      <span className=\"text-[12px]\">Add Task</span>\n                    </button>\n                  </Tooltip>)}\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-light text-gray-500\">\n                Rows per page:\n              </span>\n              <Select\n                value={limit}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n          </div>\n          <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n            {canRead && (\n              <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                <thead className=\"bg-header text-white text-[12px] font-[500]\">\n                  <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                    <th className=\"p-2 whitespace-nowrap text-left w-[50px]\">S.No.</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[135px]\">Client Name</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[115px]\">Department</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[135px]\">Task Name</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[125px]\">Assign To</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[85px]\">Financial Year</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[85px]\">Period</th>\n                    <th className=\"p-2 whitespace-nowrap text-left 2xl:table-cell min-w-[95px]\">Assigned Date</th>\n                    <th className=\"p-2 whitespace-nowrap text-left 2xl:table-cell min-w-[95px]\">Due Date</th>\n                    <th className=\"p-2 whitespace-nowrap text-left 2xl:table-cell min-w-[125px]\">Last Updated On</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[75px]\">Status</th>\n                    {(canUpdate || canDelete || canRead) && (\n                      <th className=\"p-2 whitespace-nowrap text-left w-[75px]\">Action</th>\n                    )}\n                  </tr>\n                </thead>\n\n                {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={12}\n                    className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr> :\n                  <tbody>\n                    {taskList && taskList.length > 0 ? (\n                      taskList.map((element, index) => (\n                        <tr\n                          className={` !text-xs \n                          ${element?.isOverDue ? \"bg-rose-300 text-gray-800\" :\n                              element?.priority == \"high\" ? \"bg-[#FFE5B4] text-gray-800\" :\n                                element?.priority == \"medium\" ? \"bg-green-300 text-gray-800\" : \"bg-white text-[#374151]\"\n                            }\n                          border-b-[1px] border-[#DDDDDD]  text-[14px]`}>\n                          <td className=\"p-2 text-left w-[50px]\">\n                            {index + 1 + (currentPage - 1) * limit}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[135px]\">\n                            {element?.clientData?.fullName}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[115px]\">\n                            {element?.departmentData?.name}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[135px]\">\n                            {element?.taskName}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[125px]\">\n                            <div className=\"flex gap-1 items-center\">\n                              <span>{element?.assignedEmployeData?.[0]?.fullName}</span>\n                              {element?.assignedEmployeData?.length > 1 && (\n                                <span className=\"text-header flex items-center gap-1\">\n                                  +\n                                  <span className=\"h-5 w-5 bg-header text-white text-[12px] rounded-full flex items-center justify-center\">\n                                    {element?.assignedEmployeData?.length - 1}\n                                  </span>\n                                </span>\n                              )}\n                              <FaEye\n                                className=\"text-[#374151] text-[14px] cursor-pointer\"\n                                onClick={() =>\n                                  setEmployeeViewModal({ isOpen: true, data: element })\n                                }\n                              />\n                            </div>\n                          </td>\n                          <td className=\"p-2 text-left min-w-[85px]\">\n                            {element?.financialYear || \"-\"}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[85px]\">\n                            {element?.type === \"Monthly\" && element?.monthName}\n                            {element?.type === \"Quaterly\" && element?.monthQuaters}\n                            {element?.type === \"Yearly\" && \"Yearly\"}\n                          </td>\n                          <td className=\"p-2 text-left 2xl:table-cell min-w-[95px]\">\n                            {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n                          <td className=\"p-2 text-left 2xl:table-cell min-w-[95px]\">\n                            {moment(element?.dueDate).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n                          <td className=\"p-2 text-left 2xl:table-cell min-w-[125px]\">\n                            {moment(element?.updatedAt).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[75px]\">\n                            <span\n                              className={`\n                              ${element?.status === \"Assigned\"\n                                  ? \"bg-blue-500 text-white\"\n                                  : element?.status === \"Accepted\"\n                                    ? \"bg-green-500 text-white\"\n                                    : element?.status === \"Pending_at_client\"\n                                      ? \"bg-yellow-300 text-black\"\n                                      : element?.status === \"Pending_at_department\"\n                                        ? \"bg-purple-300 text-black\"\n                                        : element?.status === \"Pending_at_colleague\"\n                                          ? \"bg-teal-300 text-black\"\n                                          : element?.status === \"Pending_at_manager\"\n                                            ? \"bg-orange-300 text-black\"\n                                            : element?.status === \"Work_in_progress\"\n                                              ? \"bg-indigo-500 text-white\"\n                                              : element?.status === \"Pending_for_approval\"\n                                                ? \"bg-pink-300 text-black\"\n                                                : element?.status === \"Pending_for_fees\"\n                                                  ? \"bg-gray-400 text-black\"\n                                                  : element?.status === \"Completed\"\n                                                    ? \"bg-green-600 text-white\"\n                                                    : element?.status === \"Task_Stop\"\n                                                      ? \"bg-red-600 text-white\"\n                                                      : element?.status === \"Rejected\"\n                                                        ? \"bg-rose-800 text-white\"\n                                                        : element?.status === \"reAssign_to_other\"\n                                                          ? \"bg-cyan-700 text-white\"\n                                                          : \"bg-white text-black\"\n                                } border-header border-[1px] px-2 py-1.5 rounded-lg whitespace-nowrap text-[12px]`}\n\n                            >\n                              {element?.status\n                                ?.replace(/_/g, ' ')\n                                .toLowerCase()\n                                .replace(/\\b\\w/g, char => char.toUpperCase())}\n\n                            </span>\n                          </td>\n                          {(canUpdate || canDelete || canRead) && (\n                            <td className=\"p-2 text-left w-[75px]\">\n                              <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                {canRead && (\n                                  <Tooltip placement=\"topLeft\" title=\"View Task\">\n                                    <button\n                                      onClick={() => {\n                                        navigate(\n                                          `/admin/task/view/${encrypt(\n                                            element?._id\n                                          )}/${encrypt(`manager`)}`\n                                        );\n                                      }}\n                                      className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border-gray-800 border-[1.5px]\"\n                                      type=\"button\"\n                                    >\n                                      <BsEye\n                                        className=\" hover:text-gray-800 text-gray-800\"\n                                        size={16}\n                                      />\n                                    </button>\n                                  </Tooltip>\n                                )}\n\n                                <Dropdown\n                                  menu={{\n                                    items: [\n                                      {\n                                        key: 'responsive-date-info',\n                                        label: (\n                                          <div className=\"2xl:hidden block\">\n                                            <div className=\"flex flex-col space-y-1.5\">\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-slate-800 hover:text-slate-700\"\n                                              >\n                                                <MdOutlineAssignment className=\"mr-2\" size={16} />\n                                                Assigned Date\n                                              </span>\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(dayjs(element?.dueDate).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-purple-800 hover:text-purple-700\"\n                                              >\n                                                <MdOutlineTask className=\"mr-2\" size={16} />\n                                                Due Date\n                                              </span>\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(dayjs(element?.updatedAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-teal-700 hover:text-teal-600\"\n                                              >\n                                                <GrValidate className=\"mr-2\" size={15} />\n                                                Last Updated On\n                                              </span>\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(element?.createdBy || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-sky-800 hover:text-sky-700\"\n                                              >\n                                                <TbPencilMinus className=\"mr-2\" size={16} />\n                                                Created By\n                                              </span>\n                                            </div>\n                                          </div>\n                                        ),\n                                      },\n                                      ...(canUpdate\n                                        ? [{\n                                          key: 'edit-task',\n                                          label: (\n                                            <span\n\n                                              className={`flex justify-start items-center gap-1 ${element?.status !== 'Assigned' ? 'text-gray-500' : ''}`}\n                                            >\n                                              <FaPenToSquare\n                                                className={`mr-2 ${element?.status !== 'Assigned' ? 'text-gray-500' : 'text-[#3c8dbc] hover:text-[#337ab7]'}`}\n                                                size={16}\n                                              />\n                                              {'Edit Task'}\n                                            </span>\n                                          ),\n                                          disabled: element?.status !== 'Assigned',\n                                          onClick: () => {\n                                            if (element?.status === 'Assigned') {\n                                              navigate(`/admin/task/edit/${encrypt(element?._id)}`);\n                                            }\n                                          }\n                                        }]\n                                        : []),\n                                      ...(canRead\n                                        ? [{\n                                          key: 'view-description',\n                                          label: (\n                                            <span\n                                              className=\"flex justify-start items-center gap-1\"\n                                              onClick={() => handleOpenChat(element)}>\n                                              <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} />\n                                              View Description\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n                                      ...((canDelete && userInfoglobal?.userType !== \"company\")\n                                        ? [{\n                                          key: 'delete-task',\n                                          label: (\n                                            <span\n                                              onClick={() => {\n                                                if (element?.status === 'Assigned') handleDelete(element?._id);\n                                              }}\n                                              className={`flex justify-start items-center gap-1 ${element?.status !== 'Assigned' ? 'text-gray-500' : 'text-red-500'}`}\n                                            >\n                                              <RiDeleteBin5Line\n                                                className={`mr-2 ${element?.status === 'Assigned'\n                                                  ? 'text-red-600 hover:text-red-500'\n                                                  : 'text-gray-500'\n                                                  }`}\n                                                size={16}\n                                              />\n                                              {'Delete Task'}\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n                                      ...(userInfoglobal?.userType === \"company\"\n                                        ? [{\n                                          key: 'delete-task',\n                                          label: (\n                                            <span\n                                              onClick={() => {\n                                                handleDelete(element?._id);\n                                              }}\n                                              className={`flex justify-start items-center gap-1  text-red-500`}\n                                            >\n                                              <RiDeleteBin5Line\n                                                className={`mr-2 ${'text-red-600 hover:text-red-500'}`}\n                                                size={16}\n                                              />\n                                              {'Delete Task'}\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n\n                                      // ...(canRead\n                                      //   ? [{\n                                      //     key: 'createdAt',\n                                      //     label: (\n                                      //       <span\n                                      //         className=\"flex justify-start items-center gap-1\"\n                                      //       // onClick={() => handleOpenChat(element)}\n                                      //       >\n                                      //         {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                      //         {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                                      //       </span>\n                                      //     ),\n                                      //   }]\n                                      //   : []),\n\n                                      // ...(canRead\n                                      //   ? [{\n                                      //     key: 'createdBy',\n                                      //     label: (\n                                      //       <span\n                                      //         className=\"flex justify-start items-center gap-1\"\n                                      //       // onClick={() => handleOpenChat(element)}\n                                      //       >\n                                      //         {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                      //         {element?.createdBy}\n                                      //       </span>\n                                      //     ),\n                                      //   }]\n                                      //   : []),\n                                    ],\n                                  }}\n                                  trigger={['click']}\n                                >\n                                  <button\n                                    className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border-gray-800 border-[1.5px]\"\n                                    type=\"button\"\n                                  >\n                                    <PiDotsThreeOutlineVerticalBold\n                                      className=\" hover:text-gray-900 text-gray-900\"\n                                      size={16}\n                                    />\n                                  </button>\n                                </Dropdown>\n                              </span>\n                            </td>\n                          )}\n                        </tr>\n                      ))\n                    ) : (\n                      <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                          colSpan={12}\n                          className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                          Record Not Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>}\n              </table>\n            )}\n          </div>\n          {\n            taskList?.length > 0 && (\n              <CustomPagination\n                totalCount={totalTaskCount}\n                pageSize={limit}\n                currentPage={currentPage}\n                onChange={onPaginationChange}\n              />\n            )}\n        </div>\n      </section>\n\n      {\n        isChatModalOpen && (\n          <ChatBox\n            isOpen={isChatModalOpen}\n            onClose={() => handleCloseChat()}\n            comment={comments}\n          />\n        )\n      }\n      <Modal\n        title=\"Employee List\"\n        visible={EmployeeViewModal?.isOpen}\n        onCancel={() => setEmployeeViewModal({\n          isOpen: false,\n          employee: null,\n        })}\n        className=\"antmodalclassName\"\n        footer={[\n          <button\n            key=\"close\"\n            onClick={() => setEmployeeViewModal({\n              isOpen: false,\n              employee: null,\n            })}\n            className=\" capitalize px-2 py-1 rounded-sm bg-header text-white\"\n          >\n            Close\n          </button>\n        ]}\n        width={800}\n        centered\n      >\n        <div className=\"flex items-center\">\n\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4 p-4\">\n            {EmployeeViewModal?.data?.assignedEmployeData?.map((element) => (\n              <div\n                key={element.id}\n                onClick={() => handleImageClick(element)}\n                className=\"flex flex-col items-center p-3 rounded-lg bg-white hover:bg-gray-50 cursor-pointer transition-all shadow-sm hover:shadow-md border border-gray-100\"\n              >\n                {/* Avatar with subtle ring */}\n                <div className=\"w-16 h-16 mb-2 rounded-full overflow-hidden ring-2 ring-amber-100\">\n                  <img\n                    alt={element.fullName}\n                    src={\n                      element.profileImage\n                        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`\n                        : \"/images/avatar.jpg\"\n                    }\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n\n                {/* Name + Role (if available) */}\n                <div className=\"text-center\">\n                  <p className=\"font-medium text-gray-800 truncate max-w-[100px]\">\n                    {element.fullName}\n                  </p>\n                  {element.designation && (\n                    <p className=\"text-xs text-gray-500 mt-1 truncate max-w-[100px]\">\n                      {element.designation}\n                    </p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <Modal\n          title=\"Employee Details\"\n          visible={modalOpen}\n          onCancel={closeModal}\n          className=\"antmodalclassName\"\n          footer={[\n            <button\n              key=\"close\"\n              onClick={closeModal}\n              className=\" capitalize px-2 py-1 rounded-sm bg-header text-white\"\n            >\n              Close\n            </button>\n          ]}\n          width={600}\n          centered\n        >\n          {loading ? (\n            <div className=\"flex justify-center\">\n              <Spin size=\"large\" />\n            </div>\n          ) : (\n            employeDetailsData?.data && (\n              <div className=\"mt-4\">\n                <div className=\"flex flex-col md:flex-row items-center\">\n                  <img\n                    alt=\"\"\n                    src={\n                      employeDetailsData?.data?.profileImage\n                        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${employeDetailsData?.data?.profileImage}`\n                        : `/images/avatar.jpg`\n                    }\n                    className=\"rounded-full w-16 h-16 ring-2 ring-amber-300\"\n                  />\n                  <div className=\"ml-4\">\n                    <p className=\"font-semibold\">{employeDetailsData?.data?.fullName}</p>\n                    <p>{employeDetailsData?.data?.designationData?.name}</p>\n                    <p>{employeDetailsData?.data?.email}</p>\n                    <p>{employeDetailsData?.data?.companyData?.fullName}</p>\n                    <p>{employeDetailsData?.data?.departmentData?.name}</p>\n                    <p>{employeDetailsData?.data?.branchData?.fullName}</p>\n                    <p>\n                      {employeDetailsData?.data?.mobile?.code} {employeDetailsData?.data?.mobile?.number}\n                    </p>\n                    {/* Additional Info */}\n                    <div className=\"mt-3\">\n                      <p>\n                        <strong>Office Email:</strong> {employeDetailsData?.data?.officeEmail}\n                      </p>\n                      <p>\n                        <strong>User Name:</strong> {employeDetailsData?.data?.userName}\n                      </p>\n                      <p>\n                        <strong>Status:</strong> {employeDetailsData?.data?.status ? 'Active' : 'Inactive'}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            )\n          )}\n        </Modal>\n      </Modal>\n\n    </GlobalLayout >\n  );\n}\nexport default TaskList;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { statusMapping } from \"../../../constents/global\";\nimport moment from \"moment\";\nimport { RxCross1 } from \"react-icons/rx\";\n\nconst ChatBox = ({ onClose, comment }) => {\n  const [messages, setMessages] = useState([]);\n  const [open, setOpen] = useState('translate-y-full');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    setOpen(\"translate-y-0\");\n    return () => {\n      setOpen(\"translate-y-full\");\n    };\n  }, [messages]);\n\n  useEffect(() => {\n    if (comment) {\n      const commentData = comment.map((comment) => ({\n        sender: comment?.creatorData?.fullName,\n        text: comment?.message,\n        status: comment?.status,\n        createdAt: comment?.createdAt || Date.now(),\n      }));\n      setMessages(commentData);\n    }\n  }, [comment]);\n\n  const handleClose = () => {\n    // Trigger the closing animation after 300ms\n    setTimeout(() => {\n      setOpen(\"translate-y-full\"); // This will trigger the closing animation\n      setTimeout(() => {\n        onClose(); // Call the onClose function after the animation\n      }, 300); // Ensure onClose is called after the animation ends (500ms)\n    }, 50); // 300ms delay before starting the animation\n  };\n\n  return (\n    <div\n      className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-end items-end px-2 z-[1501]\"\n      onClick={handleClose}\n    >\n      <div\n        className={`bg-white rounded-lg w-full max-w-md max-h-[80vh] shadow-xl overflow-hidden transform transition-all duration-500 ease-in-out ${open}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"p-2 bg-header text-white rounded-lg shadow-md text-center text-md font-semibold flex justify-between items-center\">\n          Task Comments\n          <RxCross1 className=\"cursor-pointer\" onClick={handleClose} />\n        </div>\n\n        <div className=\"p-4 h-[60vh] overflow-y-auto space-y-2\">\n          {messages.length > 0 ? (\n            messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`flex flex-col ${msg.sender === \"You\" ? \"items-end\" : \"items-start\"}`}\n              >\n                <div className=\"p-1 w-[100%] max-w-[100%]\">\n                  <div className=\"text-sm font-semibold mb-2 text-gray-600 \">\n                    {msg.sender}\n                  </div>\n\n                  <div\n                    className={`pl-4 border-l border-gray-200 ${\n                      msg.status === \"Assigned\"\n                        ? \"border-blue-500 text-white\"\n                        : msg.status === \"Accepted\"\n                        ? \"border-green-500 text-white\"\n                        : msg.status === \"Pending_at_client\"\n                        ? \"border-yellow-400 text-black\"\n                        : msg.status === \"Completed\"\n                        ? \"border-green-800 text-white\"\n                        : \"border-gray-300 text-black\"\n                    }`}\n                  >\n                    <p className=\"text-sm mb-2 text-gray-800 \">{msg.text}</p>\n                    <div\n                      className={`text-xs mb-2 px-2 py-1 rounded-full inline-block shadow-xl ${\n                        msg.status === \"Assigned\"\n                          ? \"bg-blue-500 text-white\"\n                          : msg.status === \"Accepted\"\n                          ? \"bg-green-500 text-white\"\n                          : msg.status === \"Pending_at_client\"\n                          ? \"bg-yellow-400 text-black\"\n                          : msg.status === \"Completed\"\n                          ? \"bg-green-800 text-white\"\n                          : \"bg-gray-300 text-black\"\n                      }`}\n                    >\n                      {statusMapping[msg.status] || \"No Status\"}\n                    </div>\n                  </div>\n                  {/* Date and Time at Bottom Left */}\n                  <div className=\"text-xs text-gray-500 mt-2\">\n                    {moment(msg.createdAt).format(\"MMM DD, YYYY - h:mm A\")}\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p className=\"text-center text-gray-500\">No comments available.</p>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"names":["_CLIENT_TASK_STATUS_A","_EmployeeViewModal$da","_EmployeeViewModal$da2","_employeDetailsData$d","_employeDetailsData$d2","_employeDetailsData$d3","_employeDetailsData$d4","_employeDetailsData$d5","_employeDetailsData$d6","_employeDetailsData$d7","_employeDetailsData$d8","_employeDetailsData$d9","_employeDetailsData$d0","_employeDetailsData$d1","_employeDetailsData$d10","_employeDetailsData$d11","_employeDetailsData$d12","_employeDetailsData$d13","_employeDetailsData$d14","_employeDetailsData$d15","_employeDetailsData$d16","_employeDetailsData$d17","branchList","branchListloading","useSelector","state","branch","navigate","useNavigate","dispatch","useDispatch","isChatModalOpen","setIsChatModalOpen","useState","comments","setComments","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","employeList","employe","taskList","totalTaskCount","loading","addTask","employeDetailsData","clientList","clientLoading","client","taskTypeList","taskType","departmentListData","deptLoading","department","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","EmployeeViewModal","setEmployeeViewModal","isOpen","data","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialLimit","initialBranchId","initialDepartmentId","initialEmployeeId","initialClientId","initialTaskId","initialStatus","initialOverdue","currentPage","setCurrentPage","limit","setLimit","status","setStatus","searchText","setSearchText","branchId","setBranchId","departmentId","setDepartmentId","employeeId","setEmployeeId","clientId","setClientId","taskId","setTaskId","isOverDue","setIsOverDue","useEffect","params","URLSearchParams","set","fetchClientListData","reqData","page","reqPayload","companyId","userType","_id","directorId","employeId","taskTypeId","groupId","text","sort","CLIENT_TASK_STATUS_ARR","filter","isPagination","getTaskList","getEmployeDetails","closeModal","handleDelete","id","Swal","title","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deletetaskFunc","length","Number","branchSearch","deptSearch","taskTypeSearch","includes","clientSearch","organizationId","industryId","employeSearch","isBranch","isDirector","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsxs","GlobalLayout","onChange","e","children","_jsx","className","Select","value","defaultValue","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","Option","ListLoader","map","type","fullName","name","_option$label","label","placeholder","options","element","_option$label2","dataStatus","replace","char","toUpperCase","onClick","Tooltip","placement","FaPlus","pazeSizeReport","size","colSpan","Loader2","index","_element$clientData","_element$departmentDa","_element$assignedEmpl","_element$assignedEmpl2","_element$assignedEmpl3","_element$assignedEmpl4","_element$status","priority","clientData","departmentData","taskName","assignedEmployeData","FaEye","financialYear","monthName","monthQuaters","moment","createdAt","format","dueDate","updatedAt","encrypt","BsEye","Dropdown","menu","items","key","showSwal","dayjs","MdOutlineAssignment","MdOutlineTask","GrValidate","createdBy","TbPencilMinus","FaPenToSquare","handleOpenChat","commentData","HiChatAlt","RiDeleteBin5Line","trigger","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","pageSize","ChatBox","onClose","comment","Modal","visible","onCancel","employee","footer","width","centered","alt","src","profileImage","process","designation","Spin","designationData","email","companyData","branchData","mobile","code","number","officeEmail","userName","_ref","messages","setMessages","open","setOpen","messagesEndRef","useRef","_messagesEndRef$curre","current","scrollIntoView","behavior","_comment$creatorData","sender","creatorData","message","Date","now","handleClose","setTimeout","stopPropagation","RxCross1","msg","statusMapping","ref"],"sourceRoot":""}