{"version":3,"file":"static/js/8865.7ea2e4d8.chunk.js","mappings":"0iBAYA,MA0UA,EA1UoBA,IAAiE,IAAhE,OAAEC,EAAM,QAAEC,EAAO,SAAEC,EAAQ,aAAEC,EAAY,cAAEC,GAAeL,EAC3E,MAAOM,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACrCC,GAAI,GACJC,GAAI,GACJC,QAAS,qBACTC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,OAAQ,GACRC,eAAgB,OAChBC,qBAAsB,GACtBC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,UAAW,GACXC,eAAgB,GAChBC,eAAgB,GAChBC,YAAa,MAEVC,EAAWC,IAAgBrB,EAAAA,EAAAA,WAAS,IACpCsB,EAAaC,IAAkBvB,EAAAA,EAAAA,UAAS,IACzCwB,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,WAAU,KACN3B,EAAY,CACRE,GAAI,GACJC,GAAI,GACJC,QAAS,qBACTC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,OAAQ,GACRC,eAAgB,OAChBC,qBAAsB,GACtBC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,UAAW,GACXC,eAAgB,GAChBC,eAAgB,GAChBC,YAAa,KAGbvB,GAEAG,EAAaD,IACT6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO7B,GAAQ,IACXG,GAAgB,OAAZL,QAAY,IAAZA,OAAY,EAAZA,EAAcgC,UAiD/B,CAAChC,IAIJ,MAAMiC,EAAgBC,IAClB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BlC,EAAYmC,IAAIP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUO,GAAI,IAAE,CAACH,GAAOC,MAuCtCG,EAAcA,KAChBpC,EAAY,CACRE,GAAI,GACJC,GAAI,GACJC,QAAS,GACTC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,OAAQ,GACRC,eAAgB,OAChBC,qBAAsB,GACtBC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,UAAW,GACXC,eAAgB,GAChBC,eAAgB,GAChBC,YAAa,KAEjBE,GAAa,GACbE,EAAe,IACf1B,EAAc,IACdH,KAOJ,OAAKD,GASD2C,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACFC,MAAM,EACNC,SAAUJ,EACVK,OAAQ,KACRC,UAAU,EACVC,MAAO,IACPC,MAAO,CAAEC,UAAW,QACpBC,UAAQ,EACRC,OAAQ,KAAKC,SAAA,EAEbC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCF,UAC/CC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCF,SAC9C3B,EAAY,gBAAkB,sBAI3CgB,EAAAA,EAAAA,MAAA,QAAMc,aAAa,MAAMvD,SArEXmC,IAClBA,EAAEqB,iBACFxD,EAAS,CACLyD,QAAS9B,EACTrB,GAAY,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUG,GACdC,GAA4B,kBAAT,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUI,IAAkBJ,EAASI,GAAGmD,MAAM,KAAKC,IAAIC,GAAKA,EAAEC,QAAU,GACnFrD,QAAiB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUK,QACnBgB,YAAqB,OAARrB,QAAQ,IAARA,OAAQ,EAARA,EAAUqB,eA8D0B8B,UAAU,aAAYF,SAAA,EACnEX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,0EAAyEF,SAAA,EACpFX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EAEtBX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,wBAAuBF,SAAA,CAAC,OACnCC,EAAAA,EAAAA,KAAA,SACIjB,KAAK,KACLC,MAAOlC,EAASG,GAChBwD,SAAU5B,EACV6B,YAAY,kBACZT,UAAU,0BAGlBb,EAAAA,EAAAA,MAAA,OAAKa,UAAU,wBAAuBF,SAAA,CAAC,OACnCC,EAAAA,EAAAA,KAAA,SACIjB,KAAK,KACLC,MAAOlC,EAASI,GAChBuD,SAAU5B,EACV6B,YAAY,YACZT,UAAU,0BAGlBb,EAAAA,EAAAA,MAAA,OAAKa,UAAU,wBAAuBF,SAAA,CAAC,YACnCC,EAAAA,EAAAA,KAAA,SACIjB,KAAK,UACLC,MAAOlC,EAASK,QAChBsD,SAAU5B,EACV6B,YAAY,gBACZT,UAAU,6BAMtBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMF,UACjBC,EAAAA,EAAAA,KAACW,IAAU,CACP3B,MAAOV,EACPmC,SAlEIzB,IACxBT,EAAeS,IAkEK0B,YAAY,4BACZE,QAAS,CACLC,QAAS,CACL,CAAC,CAAE,OAAU,KAAO,CAAE,OAAU,KAAO,CAAE,KAAQ,KACjD,CAAC,CAAE,KAAQ,WAAa,CAAE,KAAQ,WAClC,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,CAAE,MAAS,KACZ,CAAC,OAAQ,QAAS,SAClB,CAAC,aAAc,cACf,CAAC,WAGTC,QAAS,CAAC,SAAU,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,QAAS,cAK5F1B,EAAAA,EAAAA,MAAA,OAAKa,UAAU,qBAAoBF,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,SAAC,iBAChC3B,GA+BE4B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eA9Bfb,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EACtBC,EAAAA,EAAAA,KAAA,SAAOe,KAAK,OAAON,SAxJrB3B,IACtB,MACMkC,EAAU,CACZC,SAFSnC,EAAEG,OAAOiC,MAAM,GAGxBC,SAAS,EACTC,YAAY,GAEhB5C,GAAS6C,EAAAA,EAAAA,IAAeL,IAAUM,KAAMC,IAAS,IAADC,EACrC,OAAHD,QAAG,IAAHA,GAAY,QAATC,EAAHD,EAAKE,eAAO,IAAAD,GAAZA,EAAcE,MACd3E,EAAYmC,IAAI,IAAAyC,EAAA,OAAAhD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTO,GAAI,IACPf,YAAa,IAAIe,EAAKf,YAAwB,QAAbwD,EAAEJ,EAAIE,eAAO,IAAAE,OAAA,EAAXA,EAAaD,aA6IWzB,UAAU,SAAS2B,GAAG,iBACrExC,EAAAA,EAAAA,MAAA,SAAOyC,QAAQ,cAAc5B,UAAU,iIAAgIF,SAAA,EACnKC,EAAAA,EAAAA,KAAC8B,EAAAA,IAAS,CAAC7B,UAAU,SAAS,uBAGlCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,SACrBjD,EAASqB,YAAYmC,IAAI,CAACyB,EAAMC,KAC7B5C,EAAAA,EAAAA,MAAA,OAAiBa,UAAU,8DAA6DF,SAAA,EACpFX,EAAAA,EAAAA,MAAA,KACI6C,KAAI,GAAAC,OAAKC,gCAAyC,YAAAD,OAAWH,GAC7D9B,UAAU,8BACVhB,OAAO,SACPmD,IAAI,sBAAqBrC,SAAA,EAEzBC,EAAAA,EAAAA,KAAC8B,EAAAA,IAAS,CAAC7B,UAAU,mBACrBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBF,SAAEgC,QAE7C/B,EAAAA,EAAAA,KAAA,UACIe,KAAK,SACLsB,QAASA,IA1J3BL,KACtBjF,EAAYmC,IACR,MAAMoD,EAAqBpD,EAAKf,YAAYoE,OAAO,CAACC,EAAGC,IAAMA,IAAMT,GACnE,OAAArD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYO,GAAI,IAAEf,YAAamE,OAuJoBI,CAAiBV,GAChC/B,UAAU,kCAAiCF,UAE3CC,EAAAA,EAAAA,KAAC2C,EAAAA,IAAO,QAfNX,gBA6BlC5C,EAAAA,EAAAA,MAAA,OAAKa,UAAU,8BAA6BF,SAAA,EAQxCC,EAAAA,EAAAA,KAAA,UACIe,KAAK,SACLsB,QAASlD,EACTc,UAAU,0GAAyGF,SACtH,YAGDC,EAAAA,EAAAA,KAAA,UACIe,KAAK,SACLd,UAAU,8GAA6GF,SAC1H,4BA1IG,M,eCi9BxB,QA5mCA,WAA8B,IAAD6C,EAAAC,EAAAC,EAAAC,EAC3B,MAAOC,EAAWC,IAAgBjG,EAAAA,EAAAA,UAAS,IACpCkG,EAAmBC,IAAwBnG,EAAAA,EAAAA,WAAS,GAErDoG,EAAmBC,IAClBA,IACLC,UAAUC,UAAUC,UAAUH,GAC9BI,EAAAA,GAAQC,QAAQ,0BAEZC,GAAWC,EAAAA,EAAAA,MACXpF,GAAWC,EAAAA,EAAAA,OACX,YAAEoF,EAAW,kBAAEC,EAAiB,uBAAEC,EAAsB,iBAAEC,EAAgB,0BAAEC,IAA8BC,EAAAA,EAAAA,IAC7GC,GAAUA,EAAMC,UAIb,UAAEC,EAAS,QAAEC,GAAO,UAAEC,GAAS,UAAEC,KAAcC,EAAAA,EAAAA,MAC9CC,GAAaC,KAAkB3H,EAAAA,EAAAA,WAAS,IACxC4H,GAAmBC,KAAwB7H,EAAAA,EAAAA,WAAS,IACpD8H,GAAYC,KAAiB/H,EAAAA,EAAAA,UAAS,KAItCgI,GAAcC,KAAmBjI,EAAAA,EAAAA,aACjCkI,GAAmBC,KAAwBnI,EAAAA,EAAAA,UAAS,CACzD0E,KAAM,KACN0D,QAAQ,EACRC,SAAS,KAEJC,GAAcC,KAAmBvI,EAAAA,EAAAA,UAAS,CAC/C0E,KAAM,KACN0D,QAAQ,EACRC,SAAS,KAOJG,GAAQC,KAAazI,EAAAA,EAAAA,UAAS,KAC9B0I,GAAOC,KAAY3I,EAAAA,EAAAA,UAAS,KAC5B4I,GAAeC,KAAoB7I,EAAAA,EAAAA,WAAS,IAsB7C,aAAE8I,KAAiB5B,EAAAA,EAAAA,IAAaC,GAAUA,EAAM4B,OAC/CC,GAAaC,KAAkBjJ,EAAAA,EAAAA,UAAS,IACxCkJ,GAAYC,KAAiBnJ,EAAAA,EAAAA,UAAS,KACtCoI,GAAQgB,KAAapJ,EAAAA,EAAAA,UAAS,KAC9B+I,GAAMM,KAAWrJ,EAAAA,EAAAA,UAAS,KAC1BqI,GAASiB,KAActJ,EAAAA,EAAAA,WAAS,IAChCuJ,GAAoBC,KAAyBxJ,EAAAA,EAAAA,WAAS,IAsB7D0B,EAAAA,EAAAA,WAAU,KACU+H,WAChBH,IAAW,SACLI,KACNJ,IAAW,IAGbK,IACC,CAACX,GAAaE,GAAYH,GAAMX,MACnC1G,EAAAA,EAAAA,WAAU,KACwB,IAADkI,EAAAC,EAA3B5C,GACFwB,KAEsC,QAAlCmB,EAA0B,OAAzB3C,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BuB,cAAM,IAAAoB,EAAAA,EAAI,GAAK,KACA,QAA3CC,EAA0B,OAAzB5C,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2B6C,uBAAe,IAAAD,EAAAA,EAAI,GAAK,KACpDE,QAAQ,KAIb,CAAC9C,IACJ,MAAMyC,GAAuBD,UAC3B,IAAIzF,EAAU,CACZgG,KAAMhB,GACNiB,MAxBU,GAyBVC,WAAY,CACV7D,KAAM6C,GACNd,OAAQA,GACR+B,OAAQpB,GACRqB,cAAc,IAIlB,UAEqB5I,GAAS6I,EAAAA,EAAAA,IAAerG,GAE7C,CAAE,MAAO0E,IACP4B,QAAQ5B,MAAM,+BAAgCA,IAC9CY,IAAW,EACb,IA0DF5H,EAAAA,EAAAA,WAAU,KACRF,GAAS+I,EAAAA,EAAAA,IAAW,CAClBlE,KAAM,GACNmE,MAAM,EACNpC,QAAQ,EACRgC,cAAc,MAEf,KAOH1I,EAAAA,EAAAA,WAAU,KACJmF,GACF4D,MAED,CAAC5D,IAEJ,MAAM4D,GAAaA,CAACC,EAAKC,KACvB,MAAM7C,GAAa8C,EAAAA,EAAAA,IAAgBF,EAAKC,EAAO9D,GAC/CkB,GAAcD,IA0EhB,OACE9E,EAAAA,EAAAA,KAAC6H,EAAAA,EAAY,CAACpH,SAxFE3B,IAEhBqH,GAAcrH,IAsFmBiB,UAE/BX,EAAAA,EAAAA,MAAA0I,EAAAA,SAAA,CAAA/H,SAAA,EACEC,EAAAA,EAAAA,KAAC+H,EAAW,CACVtL,OAAQyG,EACRxG,QAASA,IAAMyG,GAAqB,GACpCxG,SA/JqBqL,IAC3BxJ,GAASyJ,EAAAA,EAAAA,IAAkBD,IAAY1G,KAAKI,IACrCA,EAAKgE,QAERvC,GAAqB,GACrBF,EAAa,IACbiF,IAAAA,KAAU,CACRC,KAAM,UACNC,MAAO,iBACPC,KAAK,sFAGLC,mBAAoB,gBAoJpB1L,aAAcoG,EACdnG,cAAeoG,KAGjB7D,EAAAA,EAAAA,MAAA,OAAKa,UAAU,yBAAwBF,SAAA,EACrCC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQF,UACrBX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,8DAA6DF,SAAA,EAC1EX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,+EAA8EF,SAAA,EAC3FX,EAAAA,EAAAA,MAACmJ,EAAAA,EAAM,CACLtI,UAAS,IAAAiC,OAAMsG,EAAAA,GAA8B,KAC7C/H,SAAW3B,IACTuH,GAAQvH,IAEVE,MAAO+G,GACPrF,YAAY,cACZ+H,YAAU,EAAA1I,SAAA,EACVC,EAAAA,EAAAA,KAACuI,EAAAA,EAAOG,OAAM,CAAC1J,MAAM,GAAEe,SAAC,gBACX,OAAZ+F,SAAY,IAAZA,QAAY,EAAZA,GAAcxF,IAAI,CAACqI,EAAS3G,KAC3BhC,EAAAA,EAAAA,KAACuI,EAAAA,EAAOG,OAAM,CAAa1J,MAAc,OAAP2J,QAAO,IAAPA,OAAO,EAAPA,EAASC,IAAI7I,SACrC,OAAP4I,QAAO,IAAPA,OAAO,EAAPA,EAASP,OADQpG,QAKxB5C,EAAAA,EAAAA,MAACmJ,EAAAA,EAAM,CACLtI,UAAS,IAAAiC,OAAMsG,EAAAA,GAA8B,KAC7CxJ,MAAOoG,GACP3E,SAAW3B,IACTsH,GAAUtH,IAEZ4B,YAAY,cACZ+H,YAAU,EAAA1I,SAAA,EAEVC,EAAAA,EAAAA,KAACuI,EAAAA,EAAOG,OAAM,CAAC1J,MAAM,GAAEe,SAAC,mBACxBC,EAAAA,EAAAA,KAACuI,EAAAA,EAAOG,OAAM,CAAC1J,OAAO,EAAKe,SAAE,YAC7BC,EAAAA,EAAAA,KAACuI,EAAAA,EAAOG,OAAM,CAAC1J,OAAO,EAAMe,SAAE,iBAEhCC,EAAAA,EAAAA,KAAA,UACEqC,QAASA,KACPgE,GAAQ,IACRD,GAAU,KAEZnG,UAAU,kFAAiFF,UAC3FC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaF,SAAC,gBAIlCX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,sCAAqCF,SAAA,EAClDC,EAAAA,EAAAA,KAAA,UACEqC,QAASA,KACPgE,GAAQ,IACRD,GAAU,KAEZnG,UAAU,0FAAyFF,UACnGC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaF,SAAC,aAEhCC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAO,CAACC,UAAU,UAAWV,MAAM,cAAarI,UAC/CX,EAAAA,EAAAA,MAAA,UACEiD,QAASA,KACPsB,EAAS,0BAEX1D,UAAU,yFAAwFF,SAAA,EAElGC,EAAAA,EAAAA,KAAC+I,EAAAA,IAAM,KACP/I,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaF,SAAC,8BAOxCX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uDAAsDF,SAAA,EAEnEX,EAAAA,EAAAA,MAAA,SAAOa,UAAU,+CAA8CF,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,GAAEF,UACjBX,EAAAA,EAAAA,MAAA,MAAIa,UAAU,kGAAiGF,SAAA,EAC7GC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4DAA2DF,SAAC,WAG1EC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCF,UACjDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBACNX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAACgJ,EAAAA,IAAS,CACR3G,QAASA,IAAMoF,GAAW,WAAY,UAExCzH,EAAAA,EAAAA,KAACiJ,EAAAA,IAAW,CACV5G,QAASA,IAAMoF,GAAW,WAAY,mBAK9CzH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCF,UACjDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,cACNX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAACgJ,EAAAA,IAAS,CACR3G,QAASA,IAAMoF,GAAW,WAAY,UAExCzH,EAAAA,EAAAA,KAACiJ,EAAAA,IAAW,CACV5G,QAASA,IAAMoF,GAAW,WAAY,mBAK9CrI,EAAAA,EAAAA,MAAA,MAAIa,UAAU,qCAAoCF,SAAA,EAChDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,YACNX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAACgJ,EAAAA,IAAS,CAAC3G,QAASA,IAAMoF,GAAW,QAAS,UAC9CzH,EAAAA,EAAAA,KAACiJ,EAAAA,IAAW,CACV5G,QAASA,IAAMoF,GAAW,QAAS,gBAGlC,QAETrI,EAAAA,EAAAA,MAAA,MAAIa,UAAU,qCAAoCF,SAAA,EAChDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBACNX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAACgJ,EAAAA,IAAS,CACR3G,QAASA,IAAMoF,GAAW,gBAAiB,UAE7CzH,EAAAA,EAAAA,KAACiJ,EAAAA,IAAW,CACV5G,QAASA,IAAMoF,GAAW,gBAAiB,gBAG1C,QAETzH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,UAChDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,UACNX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAACgJ,EAAAA,IAAS,CACR3G,QAASA,IAAMoF,GAAW,iBAAkB,UAE9CzH,EAAAA,EAAAA,KAACiJ,EAAAA,IAAW,CACV5G,QAASA,IAAMoF,GAAW,iBAAkB,mBAKpDzH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,UAChDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,aACNX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,4CAA2CF,SAAA,EACxDC,EAAAA,EAAAA,KAACgJ,EAAAA,IAAS,CACR3G,QAASA,IACPoF,GAAW,2BAA4B,UAG3CzH,EAAAA,EAAAA,KAACiJ,EAAAA,IAAW,CACV5G,QAASA,IACPoF,GAAW,2BAA4B,mBAMjDzH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,UAChDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CF,UACxDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBAIVC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,UAChDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CF,UACxDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBAGVC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,UAChDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CF,UACxDC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,gBAIVC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wDAAuDF,SAAC,gBAKzEsF,IAAUrF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBF,UAC/CC,EAAAA,EAAAA,KAAA,MACEkJ,QAAS,EACTjJ,UAAU,+DAA8DF,UAExEC,EAAAA,EAAAA,KAACmJ,EAAAA,EAAO,SAEJnJ,EAAAA,EAAAA,KAAA,SAAAD,SACL+E,IAAcA,GAAWsE,OAAS,EACjCtE,GAAWxE,IAAI,CAACqI,EAAS3G,KAAK,IAAAqH,EAAAC,EAAAC,EAAAC,EAAA,OAC5BpK,EAAAA,EAAAA,MAAA,MAEEa,UAAS,kBAAAiC,OAAoBF,EAAQ,IAAM,EAAI,kBAAoB,WAAU,gDAC5BjC,SAAA,EAEjDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAC9CiC,EAAQ,EA9YjB,IA8YuBgE,GAAc,MAE/BhG,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SACvC,OAAP4I,QAAO,IAAPA,OAAO,EAAPA,EAASc,YAEZzJ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SACvC,OAAP4I,QAAO,IAAPA,OAAO,EAAPA,EAASe,YAEZ1J,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SACxC,OAAP4I,QAAO,IAAPA,OAAO,EAAPA,EAAS/J,SAEZQ,EAAAA,EAAAA,MAAA,MAAIa,UAAU,qCAAoCF,SAAA,EACxC,OAAP4I,QAAO,IAAPA,GAAe,QAARU,EAAPV,EAASgB,cAAM,IAAAN,OAAR,EAAPA,EAAiBO,OAAc,OAAPjB,QAAO,IAAPA,GAAe,QAARW,EAAPX,EAASgB,cAAM,IAAAL,OAAR,EAAPA,EAAiBO,QAAQ,QAEpD7J,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SACxC,OAAP4I,QAAO,IAAPA,GAAiB,QAAVY,EAAPZ,EAASmB,gBAAQ,IAAAP,OAAV,EAAPA,EAAmBnB,SAEtBpI,EAAAA,EAAAA,KAAA,MACEC,UAAU,gFAA+EF,UAExFgK,EAAAA,EAAAA,IAAqB,OAAPpB,QAAO,IAAPA,GAAkB,QAAXa,EAAPb,EAASqB,iBAAS,IAAAR,OAAX,EAAPA,EAAoBS,YAErCjK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAC/CmK,IAAa,OAAPvB,QAAO,IAAPA,OAAO,EAAPA,EAASwB,WAAWC,OAAO,yBAEpCpK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SACxC,OAAP4I,QAAO,IAAPA,OAAO,EAAPA,EAAS0B,aAEZrK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,UAC/CC,EAAAA,EAAAA,KAACsK,EAAAA,EAAM,CACLC,KAAK,QACLC,QAAgB,OAAP7B,QAAO,IAAPA,OAAO,EAAPA,EAASvD,OAClB3E,SAAUA,KACRjC,GACEiM,EAAAA,EAAAA,IAAmB,CAAE7B,IAAY,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASC,OACnCtH,KAAMI,IACG,OAAJA,QAAI,IAAJA,GAAAA,EAAMgE,OACTgB,QAIN/G,MAAO,CACL+K,gBAAwB,OAAP/B,QAAO,IAAPA,GAAAA,EAASvD,OACtB,UACA,UACJuF,WAAY,8BAEdC,OAAQ,GACRlL,MAAO,QAGXM,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,UAC/CX,EAAAA,EAAAA,MAAA,QAAMa,UAAU,mDAAkDF,SAAA,EAChEC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAO,CAACC,UAAU,UAAWV,MAAM,eAAcrI,UAChDC,EAAAA,EAAAA,KAAA,UACEqC,QAASA,KACPsB,EAAS,uBAADzB,QACiB2I,EAAAA,EAAAA,GAAe,OAAPlC,QAAO,IAAPA,OAAO,EAAPA,EAASC,QAG5C3I,UAAU,oEACVc,KAAK,SAAQhB,UAEbC,EAAAA,EAAAA,KAAC8K,EAAAA,IAAK,CACJ7K,UAAU,uCACVsK,KAAM,UAmEZvK,EAAAA,EAAAA,KAAC+K,EAAAA,EAAQ,CACPC,KAAM,CACJC,MAAO,IACD5G,EACA,CAAC,CACDqD,IAAK,aACLwD,OACE9L,EAAAA,EAAAA,MAAA,QAAMa,UAAU,kCAAkCoC,QAASA,KAAQY,EAAa0F,GAAUxF,GAAqB,IAASpD,SAAA,EACtHC,EAAAA,EAAAA,KAACmL,EAAAA,IAAO,CAAClL,UAAU,sBAAsBsK,KAAM,KAAM,kBAKzD,GACJ,CACE7C,IAAK,OACLwD,OACE9L,EAAAA,EAAAA,MAAA,QACEa,UAAU,kCACVoC,QAASA,IAAMsB,EAAS,uBAADzB,QAAwB2I,EAAAA,EAAAA,GAAe,OAAPlC,QAAO,IAAPA,OAAO,EAAPA,EAASC,OAAQ7I,SAAA,EACxEC,EAAAA,EAAAA,KAACoL,EAAAA,IAAM,CAACnL,UAAU,2CAA2CsK,KAAM,KAAM,mBAK/E,CACE7C,IAAK,SACLwD,OACE9L,EAAAA,EAAAA,MAAA,QACEa,UAAU,+CACVoC,QAASA,IApfvBT,KACpB,IAAIZ,EAAU,CACZ4H,IAAKhH,GAOPsG,IAAAA,KAAU,CACRE,MAAO,UACP/E,KAAM,mCACN8E,KAAM,UACNkD,kBAAkB,EAClBC,iBAAkB,OACjBhK,KAAMiK,IACHA,EAAOC,aACThN,GAASiN,EAAAA,EAAAA,IAAczK,IAAUM,KAAMI,IACrCgF,UAke2CgF,CAAoB,OAAP/C,QAAO,IAAPA,OAAO,EAAPA,EAASC,KAAK7I,SAAA,EAC1CC,EAAAA,EAAAA,KAAC2L,EAAAA,IAAgB,CAAC1L,UAAU,uCAAuCsK,KAAM,KAAM,qBAKrF,CACE7C,IAAK,sBACLwD,OACE9L,EAAAA,EAAAA,MAAA,QACEa,UAAU,kCACVoC,QAASA,IAjcXsG,KAChCT,IAAAA,KAAU,CACRE,MAAO,sBACP/E,KAAK,sCAADnB,OAA+C,OAAPyG,QAAO,IAAPA,OAAO,EAAPA,EAASc,SAAQ,KAC7DtB,KAAM,UACNkD,kBAAkB,EAClB/C,mBAAoB,UACpBsD,kBAAmB,OACnBC,kBAAmB,YAClBvK,KAAMiK,IACHA,EAAOC,aACThN,GAASsN,EAAAA,EAAAA,IAAmB,CAAElD,IAAY,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASC,OAAQtH,KAAMI,IAC/C,OAAJA,QAAI,IAAJA,GAAAA,EAAMgE,MAQTwC,IAAAA,KACE,SACA,+CACA,SAVFA,IAAAA,KACE,wBACA,iCACA,gBAibuC6D,CAAyBpD,GAAS5I,SAAA,EACjDC,EAAAA,EAAAA,KAACgM,EAAAA,IAAS,CAAC/L,UAAU,mBAAmBsK,KAAM,KAAM,0BAK1D,CACE7C,IAAK,eACLwD,OACE9L,EAAAA,EAAAA,MAAA,QACEa,UAAU,kCACVoC,QAASA,IAplBhBoE,WAC3BxD,EAAoB,OAAP0F,QAAO,IAAPA,OAAO,EAAPA,EAASC,KACtBjE,IAAe,GACfM,GAAuB,OAAP0D,QAAO,IAAPA,OAAO,EAAPA,EAAS/J,OACzB4H,IAAsB,GACX,OAAPmC,QAAO,IAAPA,GAAAA,EAASC,WACLpK,GAASyN,EAAAA,EAAAA,IAAmB,CAAEjJ,UAAW2F,EAAQC,OAEzDpC,IAAsB,IA4kB2B0F,CAAqBvD,GAAS5I,SAAA,EAC7CC,EAAAA,EAAAA,KAACmM,EAAAA,IAAS,CAAClM,UAAU,mBAAmBsK,KAAM,KAAM,qBAO9D6B,QAAS,CAAC,SAASrM,UAEnBC,EAAAA,EAAAA,KAAA,UACEC,UAAU,oEACVc,KAAK,SAAQhB,UAEbC,EAAAA,EAAAA,KAACqM,EAAAA,IAA8B,CAC7BpM,UAAU,sCACVsK,KAAM,gBA7MXvI,MAsNThC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBF,UACpCC,EAAAA,EAAAA,KAAA,MACEkJ,QAAS,GACTjJ,UAAU,2EAA0EF,SACrF,6BAOTX,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJ+I,MAAM,uBACN9I,KAAMoF,GACNnF,SAhnBQJ,KAClBwF,IAAe,IAgnBLnF,OAAQ,KACRE,MAAO,KACPO,UAAU,oBAAmBF,SAAA,EAE7BC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,sBACJsF,IACCrF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,UAC/BC,EAAAA,EAAAA,KAACsM,EAAAA,EAAI,OAGPlN,EAAAA,EAAAA,MAAA,OAAKa,UAAU,sEAAqEF,SAAA,EAClFX,EAAAA,EAAAA,MAAA,SAAOa,UAAU,gDAA+CF,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,GAAEF,UACjBX,EAAAA,EAAAA,MAAA,MAAIa,UAAU,mGAAkGF,SAAA,EAC9GC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CF,SAAC,YAC1DC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,iBAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,kBAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,eAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,mBAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,iBAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,gBAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,gBAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,YAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CF,SAAC,gBAGjEwG,IACCvG,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBF,UACpCC,EAAAA,EAAAA,KAAA,MACEkJ,QAAS,GACTjJ,UAAU,+DAA8DF,UAExEC,EAAAA,EAAAA,KAACmJ,EAAAA,EAAO,SAIZnJ,EAAAA,EAAAA,KAAA,SAAAD,SACGgE,GAAgD,OAAtBA,QAAsB,IAAtBA,GAAAA,EAAwBwI,cAAqC,OAAtBxI,QAAsB,IAAtBA,GAAmC,QAAbnB,EAAtBmB,EAAwBwI,mBAAW,IAAA3J,OAAb,EAAtBA,EAAqCwG,QAAS,EACxF,OAAtBrF,QAAsB,IAAtBA,GAAmC,QAAblB,EAAtBkB,EAAwBwI,mBAAW,IAAA1J,OAAb,EAAtBA,EAAqCvC,IAAI,CAACqI,EAAS3G,KAAK,IAAAxF,EAAAgQ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACtD5N,EAAAA,EAAAA,MAAA,MACEa,UAAS,8DAAAiC,OAAgEF,EAAQ,IAAM,EAAI,kBAAoB,YAC1GjC,SAAA,EAGLC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAC/CiC,EAAQ,EA3pBzB,IA2pB+BgE,GAAc,MAG/BhG,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAC9B,QAD8BvD,EAAA,GAAA0F,OACrC,OAAPyG,QAAO,IAAPA,OAAO,EAAPA,EAASP,MAAK,gBAAA5L,EAAAA,EAAO,OAE3BwD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SACjB,QADiByM,EACxC,OAAP7D,QAAO,IAAPA,GAAiB,QAAV8D,EAAP9D,EAASmB,gBAAQ,IAAA2C,OAAV,EAAPA,EAAmBQ,mBAAW,IAAAT,EAAAA,EAAI,OAErCxM,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAC/B,QAD+B2M,EAAA,GAAAxK,OACrC,OAAPyG,QAAO,IAAPA,OAAO,EAAPA,EAASuE,KAAI,oBAAAR,EAAAA,EAAW,OAG9B1M,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAC5B,QAD4B4M,EAAA,UAAAzK,OACnC,OAAPyG,QAAO,IAAPA,OAAO,EAAPA,EAASwE,MAAK,gBAAAR,EAAAA,EAAO,OAE7B3M,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SACM,QADN6M,EAAA,UAAA1K,QACnC,OAAPyG,QAAO,IAAPA,OAAO,EAAPA,EAASwE,QAAe,OAAPxE,QAAO,IAAPA,GAAiB,QAAVkE,EAAPlE,EAASmB,gBAAQ,IAAA+C,OAAV,EAAPA,EAAmBO,cAAY,gBAAAR,EAAAA,EAAO,OAG/D5M,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SACE,QADF+M,EAAA,GAAA5K,OAC5CgI,IAAa,OAAPvB,QAAO,IAAPA,OAAO,EAAPA,EAASwB,WAAWC,OAAO,cAAa,gBAAA0C,EAAAA,EAAO,OAE3D9M,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAC7B,QAD6BgN,EACxC,OAAPpE,QAAO,IAAPA,OAAO,EAAPA,EAAS0B,iBAAS,IAAA0C,EAAAA,EAAI,OAEzB/M,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+CAA8CF,SAC1C,QAD0CiN,EAClD,OAAPrE,QAAO,IAAPA,OAAO,EAAPA,EAASvD,cAAM,IAAA4H,EAAAA,EAAI,OAEtBhN,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+CAA8CF,UAC1DC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAO,CAACC,UAAU,UAAWV,MAAM,eAAcrI,UAChDC,EAAAA,EAAAA,KAAA,UACEqC,QAASA,KAniBZoE,WAC7BtB,GAAqB,CACnBzD,KAAMiH,EACNvD,QAAQ,EACRC,SAAS,IAGX,UACQ7G,GAAS6O,EAAAA,EAAAA,IAAiB,CAE9BC,eAAuB,OAAP3E,QAAO,IAAPA,OAAO,EAAPA,EAAS2E,iBAE7B,CAAE,MAAO5H,IACP4B,QAAQ5B,MAAM,+BAAgCA,GAChD,CAAC,QACCP,GAAqBoI,IAAS5O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzB4O,GAAS,IACZlI,SAAS,IAEb,GAihBkCmI,CAAuB7E,IAEzB1I,UAAU,oEACVc,KAAK,SAAQhB,UAEbC,EAAAA,EAAAA,KAAC8K,EAAAA,IAAK,CACJ7K,UAAU,uCACVsK,KAAM,iBAUlBvK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBF,UACpCC,EAAAA,EAAAA,KAAA,MACEkJ,QAAS,GACTjJ,UAAU,2EAA0EF,SACrF,6BAOXC,EAAAA,EAAAA,KAACX,EAAAA,EAAK,CACJY,UAAU,oBACVmI,MAAM,uBACN9I,KAAM4F,GAAkBE,OACxB7F,SAAUA,IAAM4F,GAAqBhB,IAAKxF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACrCwF,GAAK,IACRiB,QAAQ,KAEV5F,OAAQ,KACRE,MAAO,KACP+N,cAAc,kBAAiB1N,SAEb,OAAjBmF,SAAiB,IAAjBA,IAAAA,GAAmBG,SAClBrF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCF,UACpDC,EAAAA,EAAAA,KAACsM,EAAAA,EAAI,OAGPlN,EAAAA,EAAAA,MAAA,OAAKa,UAAU,GAAEF,SAAA,EAEfX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,mEAAkEF,SAAA,EAC/EX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,KAAC0N,EAAO,CAACxC,MAAM,kBAAkBlM,MAAuB,OAAhBgF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBpC,MAC1D5B,EAAAA,EAAAA,KAAC0N,EAAO,CAACxC,MAAM,iBAAiBlM,MAAuB,OAAhBgF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB2J,kBAEzD3N,EAAAA,EAAAA,KAAC0N,EAAO,CAACxC,MAAM,UAAUlM,MAAuB,OAAhBgF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB4J,WAGlDxO,EAAAA,EAAAA,MAAA,OAAKa,UAAU,cAAaF,SAAA,EAC1BC,EAAAA,EAAAA,KAAC0N,EAAO,CACNxC,MAAM,YACNlM,MAAuB,OAAhBgF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB6J,UACzBC,UAAQ,EACRC,OAAQA,IAAM3K,EAAgC,OAAhBY,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB6J,cAElD7N,EAAAA,EAAAA,KAAA,UAAAD,UAAQC,EAAAA,EAAAA,KAACmL,EAAAA,IAAO,CAACZ,KAAM,GAAIyD,MAAM,UAAU3L,QAASA,KArqBrD4L,KAEzB,MAAMC,EAAM,CACV9N,QAAQ,6CAAD8B,OAA+C+L,EAAI,6CAC1DhR,GAAI+H,GACJ9H,GAAI,CAAC8H,IACL7H,QAAS,cACTgB,YAAa,IAEfK,GAASyJ,EAAAA,EAAAA,IAAkBiG,KA4pB2DC,CAAkC,OAAhBnK,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB6J,oBAElG7N,EAAAA,EAAAA,KAAC0N,EAAO,CAACxC,MAAM,cAAclM,MAAuB,OAAhBgF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoK,kBAExDhP,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,KAAC0N,EAAO,CAACxC,MAAM,aAAalM,MAAuB,OAAhBgF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBqK,cACrDrO,EAAAA,EAAAA,KAAC0N,EAAO,CAACxC,MAAM,kBAAkBlM,MAAuB,OAAhBgF,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBsK,mBAC1DtO,EAAAA,EAAAA,KAAC0N,EAAO,CAACxC,MAAM,SAASlM,OACtBI,EAAAA,EAAAA,MAAA,OAAKiD,QAASA,OAEXpC,UAAU,kDAAiDF,SAAA,EAC5DC,EAAAA,EAAAA,KAAA,QAAAD,SAE4B,QAF5B+C,EAEoB,OAAhBkB,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoB,cAAM,IAAAtC,EAAAA,EAAI,OAGhC9C,EAAAA,EAAAA,KAAA,QAAAD,UACgC,WAAZ,OAAhBiE,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoB,SAAkD,WAAZ,OAAhBpB,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoB,WAAuBpF,EAAAA,EAAAA,KAACuO,EAAAA,EAAiB,CAACjB,eAAgC,OAAhBtJ,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBpC,UAG5I4M,YAAU,KACZxO,EAAAA,EAAAA,KAAC0N,EAAO,CACNxC,MAAM,SACNlM,MACkB,OAAhBgF,QAAgB,IAAhBA,GAAAA,EAAkByK,eAAiC,OAAhBzK,QAAgB,IAAhBA,GAAAA,EAAkB0K,YAAW,GAAAxM,OACzDyM,IAAO3K,EAAiByK,eAAerE,OAAO,cAAa,QAAAlI,OAAOyM,IAAO3K,EAAiB0K,aAAatE,OAAO,eACjH,aAOZpK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oEAAmEF,UAChFC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,UAC9BX,EAAAA,EAAAA,MAAA,SAAOa,UAAU,sCAAqCF,SAAA,EACpDC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,cAAaF,UAC5BX,EAAAA,EAAAA,MAAA,MAAAW,SAAA,EACEC,EAAAA,EAAAA,KAAC4O,EAAW,CAAA7O,SAAC,OACbC,EAAAA,EAAAA,KAAC4O,EAAW,CAAA7O,SAAC,cACbC,EAAAA,EAAAA,KAAC4O,EAAW,CAAA7O,SAAC,eACbC,EAAAA,EAAAA,KAAC4O,EAAW,CAAA7O,SAAC,YACbC,EAAAA,EAAAA,KAAC4O,EAAW,CAAA7O,SAAC,gBACbC,EAAAA,EAAAA,KAAC4O,EAAW,CAAA7O,SAAC,kBACbC,EAAAA,EAAAA,KAAC4O,EAAW,CAAA7O,SAAC,YACbC,EAAAA,EAAAA,KAAC4O,EAAW,CAAA7O,SAAC,iBAGjBC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,oCAAmCF,SACjDwG,IACCvG,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIkJ,QAAS,EAAGjJ,UAAU,wBAAuBF,UAC/CC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBF,UAClCC,EAAAA,EAAAA,KAACmJ,EAAAA,EAAO,WAII,OAAhBnF,QAAgB,IAAhBA,GAA6B,QAAbjB,EAAhBiB,EAAkB6K,mBAAW,IAAA9L,OAAb,EAAhBA,EAA+BqG,QAAS,EAC1CpF,EAAiB6K,YAAYvO,IAAI,CAACwO,EAAM9M,KAAK,IAAA+M,EAAA,OAC3C3P,EAAAA,EAAAA,MAAA,MAAgBa,UAAW+B,EAAQ,IAAM,EAAI,aAAe,WAAWjC,SAAA,EACrEC,EAAAA,EAAAA,KAACgP,EAAS,CAAAjP,SAAEiC,EAAQ,EAtzB1C,IAszBgDgE,GAAc,MACxChG,EAAAA,EAAAA,KAACgP,EAAS,CAAC/O,UAAU,yBAAwBF,UAAM,OAAJ+O,QAAI,IAAJA,OAAI,EAAJA,EAAMG,WAAY,OACjEjP,EAAAA,EAAAA,KAACgP,EAAS,CAAAjP,SACH,OAAJ+O,QAAI,IAAJA,GAAAA,EAAMjB,WACLzO,EAAAA,EAAAA,MAAA,OAAKa,UAAU,8BAA6BF,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,0CAAyCF,SAAM,OAAJ+O,QAAI,IAAJA,OAAI,EAAJA,EAAMjB,aACjE7N,EAAAA,EAAAA,KAACkP,EAAU,CAACnB,OAAQA,IAAM3K,EAAoB,OAAJ0L,QAAI,IAAJA,OAAI,EAAJA,EAAMjB,gBAEhD,OAEN7N,EAAAA,EAAAA,KAACgP,EAAS,CAAAjP,SAAM,OAAJ+O,QAAI,IAAJA,GAAAA,EAAMtJ,QAAUsJ,EAAKtJ,OAAS,KAAKuB,QAAQ,GAAK,OAC5D/G,EAAAA,EAAAA,KAACgP,EAAS,CAAAjP,SAAM,OAAJ+O,QAAI,IAAJA,GAAAA,EAAMK,YAAcL,EAAKK,WAAa,KAAKpI,QAAQ,GAAK,OACpE/G,EAAAA,EAAAA,KAACgP,EAAS,CAAAjP,SAAM,OAAJ+O,QAAI,IAAJA,GAAAA,EAAMM,cAAgBN,EAAKM,aAAe,KAAKrI,QAAQ,GAAK,OACxE/G,EAAAA,EAAAA,KAACgP,EAAS,CAAC/O,UAAU,aAAYF,UAAM,OAAJ+O,QAAI,IAAJA,OAAI,EAAJA,EAAM1J,SAAU,OACnDpF,EAAAA,EAAAA,KAACgP,EAAS,CAAC/O,UAAU,aAAYF,UAG/BC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAO,CAACC,UAAU,UAAWV,MAAM,kBAAiBrI,UACnDC,EAAAA,EAAAA,KAAA,UACEC,UAAU,4DACVc,KAAK,SACLsO,SAA0B,WAAhBP,EAAK1J,OAAoBrF,UAEnCC,EAAAA,EAAAA,KAACsP,EAAAA,IAAQ,CAEPjN,QAASA,IAlqBpBoE,WAC/BlB,GAAgB,CACd7D,KAAMiH,EACNvD,QAAQ,EACRC,SAAS,IAGX,UACQ7G,GAAS+Q,EAAAA,EAAAA,IAAqB,CAAEC,UAAkB,OAAP7G,QAAO,IAAPA,OAAO,EAAPA,EAAS8G,aAC5D,CAAE,MAAO/J,IACP4B,QAAQ5B,MAAM,+BAAgCA,GAChD,CAAC,QACCH,GAAgBgI,IAAS5O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpB4O,GAAS,IACZlI,SAAS,IAEb,GAkpByDqK,CAAyBZ,GACxC7O,UAA2B,WAAhB6O,EAAK1J,OAAsB,iBAAmB,oCACzDmF,KAAM,YAKdvK,EAAAA,EAAAA,KAACX,EAAAA,EAAK,CACJY,UAAU,oBACVmI,MAAM,kBACN9I,KAAMgG,GAAaF,OACnB7F,SAAUA,IAAMgG,GAAiBpB,IAAKxF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWwF,GAAK,IAAEiB,QAAQ,KAChE5F,OAAQ,KACRE,MAAO,IACP+N,cAAc,kBACd9N,MAAO,CAAEgQ,aAAc,QACvBC,UAAW,CAAEC,QAAS,KAAM9P,SAEf,OAAZuF,SAAY,IAAZA,IAAAA,GAAcD,SACbrF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCF,UACpDC,EAAAA,EAAAA,KAACsM,EAAAA,EAAI,OAGPlN,EAAAA,EAAAA,MAAA,OAAKa,UAAU,MAAKF,SAAA,EAClBX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,wCAAuCF,SAAA,EAEpDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,2DAA0DF,SAAA,EACvEX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,wCAAuCF,SAAA,EACpDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCF,SAAC,oBACpDC,EAAAA,EAAAA,KAAA,QACEC,UAAS,8CAAAiC,OAAsF,cAAb,OAAzB+B,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BmB,QAChF,8BACA,iCAEJzF,MAAO,CAAEmQ,cAAe,aAAc/P,SAEZ,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BmB,aAIhChG,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EACxBX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeF,SAAC,YAChCX,EAAAA,EAAAA,MAAA,QAAMa,UAAU,cAAaF,SAAA,CAAC,WACA,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BuB,QAAS,KAAKuB,QAAQ,UAGxD3H,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeF,SAAC,oBAChCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAcN,MAAO,CAAEmQ,cAAe,aAAc/P,SACxC,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2B8L,aAGhC3Q,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeF,SAAC,UAChCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaF,SAC1B,IAAIiQ,KAA8B,OAAzB/L,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BgM,YAAYC,6BAOzD9Q,EAAAA,EAAAA,MAAA,OAAKa,UAAU,2DAA0DF,SAAA,EACvEC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CF,SAAC,sBACzDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EACxBX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeF,SAAC,WAChCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaF,SAA2B,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BrF,YAE5DQ,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeF,SAAC,aAChCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaF,SAA2B,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BkM,cAE5D/Q,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeF,SAAC,iBAChCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yBAAwBF,SAA2B,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BgJ,uBAM7C,eAAb,OAAhBjJ,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoB,UAA0BhG,EAAAA,EAAAA,MAAA,OAAKa,UAAU,yEAAwEF,SAAA,EAClIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CF,SAAC,mBACzDX,EAAAA,EAAAA,MAAA,QAAMzC,SAAWmC,GAl9B1C2H,OAAO3H,EAAG6J,KAC7B7J,EAAEqB,iBACGqF,IAILG,GAAS,IACTE,IAAiB,SACXrH,GAAS4R,EAAAA,EAAAA,IAAqB,CAClC,UAAazH,EACb,OAAU0H,OAAO7K,IACjB,UAAaxC,KACX1B,KAAKI,IACE,OAAJA,QAAI,IAAJA,GAAAA,EAAMgE,QACTlH,GAAS+Q,EAAAA,EAAAA,IAAqB,CAAEC,UAAW7G,KAC3ClD,GAAU,OAGdI,IAAiB,IAffF,GAAS,wBA+8BwD2K,CAAaxR,EAA4B,OAAzBmF,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BrC,IAAK3B,UAAU,mBAAkBF,SAAA,EACjGX,EAAAA,EAAAA,MAAA,SAAOa,UAAU,+CAA8CF,SAAA,CAAC,WACvDC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,eAAcF,SAAC,UAExCX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,kHAAiHF,SAAA,EAC9HC,EAAAA,EAAAA,KAAA,SACEe,KAAK,SACL/B,MAAOwG,GACP6J,SAAsC,aAAZ,OAAhBrL,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoB,QAC5B3E,SAAW3B,GAAM2G,IAAW3G,EAAEG,OAAOD,OACrC0B,YAAY,eACZT,UAAU,iDAEZD,EAAAA,EAAAA,KAAA,UACEe,KAAK,SACLsO,UAAY7J,IAAqB,MAAXA,GACtBvF,UAAS,IAAAiC,OAAQsD,IAAqB,MAAXA,GAAmC,gCAAjB,eAAgD,mEAAkEzF,SAE9J6F,IAAgB5F,EAAAA,EAAAA,KAACsM,EAAAA,EAAI,CAAC/B,KAAK,UAAa,cAG5C7E,KACC1F,EAAAA,EAAAA,KAAA,KAAGC,UAAU,4BAA2BF,SAAE2F,YAMhDtG,EAAAA,EAAAA,MAAA,OAAKa,UAAU,yEAAwEF,SAAA,EACrFC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CF,SAAC,yBACzDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,wCAAuCF,SAAA,EACpDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeF,SAAC,oBAC7BC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBF,SAA2B,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BrC,SAEnExC,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeF,SAAC,cAC7BC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBF,SAA2B,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BgL,eAEnE7P,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EACxBC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeF,SAAC,gBAC7BC,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wBAAuBF,SAA2B,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BsM,uBAI7C,OAAzBtM,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2BuM,iBAC1BpR,EAAAA,EAAAA,MAAA,OAAKa,UAAU,yEAAwEF,SAAA,EACrFC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CF,SAAC,mBACzDX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,uBAAsBF,SAAA,EACnCC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,gBAAeF,SAAC,qBAChCX,EAAAA,EAAAA,MAAA,QAAMa,UAAU,cAAaF,SAAA,CAAC,WACA,OAAzBkE,QAAyB,IAAzBA,OAAyB,EAAzBA,EAA2B6C,iBAAkB,KAAKC,QAAQ,gBAQ7C,OAAzB9C,QAAyB,IAAzBA,GAAgC,QAAP8K,EAAzB9K,EAA2BwM,aAAK,IAAA1B,OAAP,EAAzBA,EAAkC3F,QAAS,IAC1ChK,EAAAA,EAAAA,MAAA,OAAKa,UAAU,gEAA+DF,SAAA,EAC5EC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CF,SAAC,WACzDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2BAA0BF,SACrCkE,EAA0BwM,MAAMnQ,IAAI,CAACoQ,EAAM1O,KAC1ChC,EAAAA,EAAAA,KAAA,MAAgBC,UAAU,gBAAeF,SAAE2Q,GAAlC1O,gBA9KhBA,MAyLXhC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAIkJ,QAAS,EAAGjJ,UAAU,sCAAqCF,SAAC,+CAqB1FC,EAAAA,EAAAA,KAAC2Q,EAAAA,EAAgB,CACfC,WAAY9M,EACZ+M,SAtgCI,GAugCJ7K,YAAaA,GACbvF,SA5hCkBuG,IAC1Bf,GAAee,aAoiCnB,EAKM0G,EAAUoD,IAAA,IAAC,MAAE5F,EAAK,MAAElM,EAAK,SAAE8O,GAAW,EAAK,WAAEU,GAAa,EAAK,OAAET,GAAQ+C,EAAA,OAC7E1R,EAAAA,EAAAA,MAAA,OAAKa,UAAU,8BAA6BF,SAAA,EAC1CX,EAAAA,EAAAA,MAAA,QAAMa,UAAU,iDAAgDF,SAAA,CAAEmL,EAAM,QACxE9L,EAAAA,EAAAA,MAAA,QAAMa,UAAS,gCAAAiC,OAAkCsM,EAAa,aAAe,IAAKzO,SAAA,CAC/Ef,GAAS,IACT8O,GAAY9O,IACXgB,EAAAA,EAAAA,KAAA,UACEqC,QAAS0L,EACT9N,UAAU,4DACV,aAAW,oBAAmBF,UAE9BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAU8Q,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAWlR,UAC5EC,EAAAA,EAAAA,KAAA,QAAMkR,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,4KAQ3EzC,EAAc0C,IAAA,IAAC,SAAEvR,GAAUuR,EAAA,OAC/BtR,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8EAA6EF,SACxFA,KAICiP,EAAYuC,IAAA,IAAC,SAAExR,EAAQ,UAAEE,EAAY,IAAIsR,EAAA,OAC7CvR,EAAAA,EAAAA,KAAA,MAAIC,UAAS,mCAAAiC,OAAqCjC,GAAYF,SAC3DA,KAICmP,EAAasC,IAAA,IAAC,OAAEzD,GAAQyD,EAAA,OAC5BxR,EAAAA,EAAAA,KAAA,UACEqC,QAAS0L,EACT9N,UAAU,uDACVmI,MAAM,oBAAmBrI,UAEzBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAAU8Q,KAAK,OAAOC,OAAO,eAAeC,QAAQ,YAAWlR,UAC5EC,EAAAA,EAAAA,KAAA,QAAMkR,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,qK,+HCtrC3E,MAAM,OAAE3I,GAAWH,EAAAA,EAEbkJ,EAA+B,SAC/BC,EAAmC,eACnCC,EAA0B,CAC9BF,EACAC,GAQIE,EAA4B,CAChC,CAACH,GAA+B,CANE,YAUlC,CAACC,GAAmC,CARN,QACC,WAa3BG,EAAY,CAChBC,OAAQ,SACRC,aAAc,iBACdC,SAAU,YAEVC,MAAO,QACPC,OAAQ,UAyGV,EAtG0B1V,IAAyB,IAAxB,eAAE8Q,GAAgB9Q,EAC3C,MAAOkI,EAAaC,IAAkB3H,EAAAA,EAAAA,WAAS,IACxCoI,EAAQgB,IAAapJ,EAAAA,EAAAA,UAAS,KAC9B+D,EAAMoR,IAAWnV,EAAAA,EAAAA,UAAS,KAC1BqI,EAASiB,IAActJ,EAAAA,EAAAA,WAAS,GACjCwB,GAAWC,EAAAA,EAAAA,MAsCjB,OACEW,EAAAA,EAAAA,MAAA0I,EAAAA,SAAA,CAAA/H,SAAA,EACEC,EAAAA,EAAAA,KAAA,UACEqC,QAASA,IAAMsC,GAAe,GAC9B1E,UAAU,yDAAwDF,SACnE,YAIDX,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACJ+I,MAAM,sBACNnI,UAAU,oBACVX,KAAMoF,EACN0N,KA5CW3L,UACf,GAAKrB,GAAWrE,EAAhB,CAKAuF,GAAW,GACX,UACQ9H,GAAS6T,EAAAA,EAAAA,IAA0B,CACvC/E,eAAgBA,EAChBlI,OAAQA,EACRrE,KAAMA,KACJO,KAAMI,IACC,OAAJA,QAAI,IAAJA,GAAAA,EAAMgE,QACTlH,GAAS6O,EAAAA,EAAAA,IAAiB,CAAEC,oBAC5B3I,GAAe,GACfyB,EAAU,IACV+L,EAAQ,MAGd,CAAE,MAAOzM,GACP4B,QAAQ5B,MAAMA,EAChB,CAAC,QACCY,GAAW,EACb,CApBA,MAFE7C,EAAAA,GAAQ6O,QAAQ,wCA2Cd/S,SAAUA,KAAOoF,GAAe,GAAOyB,EAAU,IAAM+L,EAAQ,KAC/DI,eAAgBlN,EAChBmN,OAAO,SAAQzS,SAAA,EAEfX,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAE8S,aAAc,IAAK1S,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aACPC,EAAAA,EAAAA,KAACuI,EAAAA,EAAM,CACLvJ,MAAOoG,QAAUsN,EACjBjS,SA1DkBzB,IAC1BoH,EAAUpH,GACVmT,EAAQ,KAyDAzR,YAAY,6BACZiS,kBAAoBvG,GAAYA,EAAQwG,WACxC3S,UAAS,GAAAiC,OAAK2Q,EAAAA,GAAwB,aACtClT,MAAO,CAAED,MAAO,QAASK,SAExB4R,EAAwBrR,IAAKwS,IAC5B9S,EAAAA,EAAAA,KAAC0I,EAAM,CAAoB1J,MAAO8T,EAAa/S,SAC5C8R,EAAUiB,IAAiBA,GADjBA,UAOnB1T,EAAAA,EAAAA,MAAA,OAAAW,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,WACPC,EAAAA,EAAAA,KAACuI,EAAAA,EAAM,CACLvJ,MAAO+B,QAAQ2R,EACfjS,SAAU0R,EACVzR,YAAY,2BACZiS,kBAAoBvG,GAAYA,EAAQwG,WACxC3S,UAAS,GAAAiC,OAAK2Q,EAAAA,GAAwB,aACtClT,MAAO,CAAED,MAAO,QAChB2P,UAAWjK,EAAOrF,UAhDnB6R,EAA0BxM,IAAW,IAkDV9E,IAAKyS,IAC7B/S,EAAAA,EAAAA,KAAC0I,EAAM,CAAkB1J,MAAO+T,EAAWhT,SACxC8R,EAAUkB,IAAeA,GADfA,e,kLCxH3B,MA2UA,EA3U0BvW,IAAiE,IAAhE,OAAEC,EAAM,QAAEC,EAAO,SAAEC,EAAQ,aAAEC,EAAY,cAAEC,GAAeL,EAEjF,MAAOM,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACrCC,GAAI,GACJC,GAAI,GACJC,QAAS,qBACTC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,OAAQ,GACRC,eAAgB,OAChBC,qBAAsB,GACtBC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,UAAW,GACXC,eAAgB,GAChBC,eAAgB,GAChBC,YAAa,MAEVC,EAAWC,IAAgBrB,EAAAA,EAAAA,WAAS,IACpCsB,EAAaC,IAAkBvB,EAAAA,EAAAA,UAAS,IACzCwB,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,WAAU,KAsBN,GArBA3B,EAAY,CACRE,GAAI,GACJC,GAAI,GACJC,QAAS,qBACTC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,OAAQ,GACRC,eAAgB,OAChBC,qBAAsB,GACtBC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,UAAW,GACXC,eAAgB,GAChBC,eAAgB,GAChBC,YAAa,KAEbvB,EAAc,CAAC,IAADoW,EAAAC,EAAAC,EAAAC,EAEdpW,EAAaD,IACT6B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO7B,GAAQ,IACXG,GAAgB,OAAZL,QAAY,IAAZA,OAAY,EAAZA,EAAcgC,SAG1B,MAAMwU,EAAW,yBAAAlR,OAA4B,gBAAe,+MAEkB,QAFlB8Q,EAENpW,EAAayW,mBAAW,IAAAL,OAAA,EAAxBA,EAA0BvJ,SAAQ,mkBAAAvH,OAOpCyM,IAAmB,OAAZ/R,QAAY,IAAZA,OAAY,EAAZA,EAAc0W,eAAelJ,OAAO,cAAa,mFAAAlI,OAC9CyM,IAAmB,OAAZ/R,QAAY,IAAZA,OAAY,EAAZA,EAAc0W,eAAelJ,OAAO,SAAQ,o3EAAAlI,OA4BV,QA5BU+Q,EA4BrEM,KAAKC,MAAMC,aAAaC,QAAQ,aAADxR,OAAcyR,EAAAA,aAAc,IAAAV,OAAA,EAA3DA,EAA6DxJ,SAAQ,8IAAAvH,OAE7C,QAF6CgR,EAErEtW,EAAayW,mBAAW,IAAAH,OAAA,EAAxBA,EAA0BzJ,SAAQ,4IAAAvH,OAEyB,QAFzBiR,EAElCI,KAAKC,MAAMC,aAAaC,QAAQ,aAADxR,OAAcyR,EAAAA,aAAc,IAAAR,OAAA,EAA3DA,EAA6DvU,MAAK,qFAE9GL,EAAe6U,EACnB,GACD,CAACxW,IAIJ,MAAMiC,EAAgBC,IAClB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,OAC1BlC,EAAYmC,IAAIP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUO,GAAI,IAAE,CAACH,GAAOC,MAuCtCG,EAAcA,KAChBpC,EAAY,CACRE,GAAI,GACJC,GAAI,GACJC,QAAS,GACTC,aAAc,GACdC,SAAU,GACVC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,cAAe,GACfC,OAAQ,GACRC,eAAgB,OAChBC,qBAAsB,GACtBC,UAAW,GACXC,WAAY,GACZC,YAAa,GACbC,UAAW,GACXC,eAAgB,GAChBC,eAAgB,GAChBC,YAAa,KAEjBE,GAAa,GACbE,EAAe,IACf1B,EAAc,IACdH,KAOJ,OAAKD,GAUD2C,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CACFC,MAAM,EACNC,SAAUJ,EACVK,OAAQ,KACRC,UAAU,EACVC,MAAO,IACPkQ,UAAW,CAAEhQ,UAAW,QACxBC,UAAQ,EACRC,OAAQ,KAAKC,SAAA,EAEbC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yCAAwCF,UACnDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sCAAqCF,SAC9C3B,EAAY,gBAAkB,+BAIvCgB,EAAAA,EAAAA,MAAA,QAAMc,aAAa,MAAMvD,SAtEXmC,IAClBA,EAAEqB,iBACFxD,EAAS,CACLyD,QAAS9B,EACTrB,GAAY,OAARH,QAAQ,IAARA,OAAQ,EAARA,EAAUG,GACdC,GAA4B,kBAAT,OAARJ,QAAQ,IAARA,OAAQ,EAARA,EAAUI,IAAkBJ,EAASI,GAAGmD,MAAM,KAAKC,IAAIC,GAAKA,EAAEC,QAAU,GACnFrD,QAAiB,OAARL,QAAQ,IAARA,OAAQ,EAARA,EAAUK,QACnBgB,YAAqB,OAARrB,QAAQ,IAARA,OAAQ,EAARA,EAAUqB,eA+D0B8B,UAAU,aAAYF,SAAA,EACnEX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,0EAAyEF,SAAA,EACpFX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EAEtBX,EAAAA,EAAAA,MAAA,OAAKa,UAAU,wBAAuBF,SAAA,CAAC,OACnCC,EAAAA,EAAAA,KAAA,SACIjB,KAAK,KACLC,MAAOlC,EAASG,GAChBwD,SAAU5B,EACV6B,YAAY,kBACZT,UAAU,0BAGlBb,EAAAA,EAAAA,MAAA,OAAKa,UAAU,wBAAuBF,SAAA,CAAC,OACnCC,EAAAA,EAAAA,KAAA,SACIjB,KAAK,KACLC,MAAOlC,EAASI,GAChBuD,SAAU5B,EACV6B,YAAY,YACZT,UAAU,0BAGlBb,EAAAA,EAAAA,MAAA,OAAKa,UAAU,wBAAuBF,SAAA,CAAC,YACnCC,EAAAA,EAAAA,KAAA,SACIjB,KAAK,UACLC,MAAOlC,EAASK,QAChBsD,SAAU5B,EACV6B,YAAY,gBACZT,UAAU,6BAMtBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMF,UACjBC,EAAAA,EAAAA,KAACW,IAAU,CACP3B,MAAOV,EACPmC,SAnEIzB,IACxBT,EAAeS,IAmEK0B,YAAY,4BACZE,QAAS,CACLC,QAAS,CACL,CAAC,CAAE,OAAU,KAAO,CAAE,OAAU,KAAO,CAAE,KAAQ,KACjD,CAAC,CAAE,KAAQ,WAAa,CAAE,KAAQ,WAClC,CAAC,OAAQ,SAAU,YAAa,UAChC,CAAC,CAAE,MAAS,KACZ,CAAC,OAAQ,QAAS,SAClB,CAAC,aAAc,cACf,CAAC,WAGTC,QAAS,CAAC,SAAU,OAAQ,OAAQ,OAAQ,SAAU,YAAa,OAAQ,QAAS,cAK5F1B,EAAAA,EAAAA,MAAA,OAAKa,UAAU,qBAAoBF,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,SAAC,iBAChC3B,GA+BE4B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eA9Bfb,EAAAA,EAAAA,MAAA,OAAKa,UAAU,YAAWF,SAAA,EACtBC,EAAAA,EAAAA,KAAA,SAAOe,KAAK,OAAON,SAzJrB3B,IACtB,MACMkC,EAAU,CACZC,SAFSnC,EAAEG,OAAOiC,MAAM,GAGxBC,SAAS,EACTC,YAAY,GAEhB5C,GAAS6C,EAAAA,EAAAA,IAAeL,IAAUM,KAAMC,IAAS,IAADC,EACrC,OAAHD,QAAG,IAAHA,GAAY,QAATC,EAAHD,EAAKE,eAAO,IAAAD,GAAZA,EAAcE,MACd3E,EAAYmC,IAAI,IAAAyC,EAAA,OAAAhD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTO,GAAI,IACPf,YAAa,IAAIe,EAAKf,YAAwB,QAAbwD,EAAEJ,EAAIE,eAAO,IAAAE,OAAA,EAAXA,EAAaD,aA8IWzB,UAAU,SAAS2B,GAAG,iBACrExC,EAAAA,EAAAA,MAAA,SAAOyC,QAAQ,cAAc5B,UAAU,iIAAgIF,SAAA,EACnKC,EAAAA,EAAAA,KAAC8B,EAAAA,IAAS,CAAC7B,UAAU,SAAS,uBAGlCD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWF,SACrBjD,EAASqB,YAAYmC,IAAI,CAACyB,EAAMC,KAC7B5C,EAAAA,EAAAA,MAAA,OAAiBa,UAAU,8DAA6DF,SAAA,EACpFX,EAAAA,EAAAA,MAAA,KACI6C,KAAI,GAAAC,OAAKC,gCAAyC,YAAAD,OAAWH,GAC7D9B,UAAU,8BACVhB,OAAO,SACPmD,IAAI,sBAAqBrC,SAAA,EAEzBC,EAAAA,EAAAA,KAAC8B,EAAAA,IAAS,CAAC7B,UAAU,mBACrBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,wBAAuBF,SAAEgC,QAE7C/B,EAAAA,EAAAA,KAAA,UACIe,KAAK,SACLsB,QAASA,IA3J3BL,KACtBjF,EAAYmC,IACR,MAAMoD,EAAqBpD,EAAKf,YAAYoE,OAAO,CAACC,EAAGC,IAAMA,IAAMT,GACnE,OAAArD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAYO,GAAI,IAAEf,YAAamE,OAwJoBI,CAAiBV,GAChC/B,UAAU,kCAAiCF,UAE3CC,EAAAA,EAAAA,KAAC2C,EAAAA,IAAO,QAfNX,gBA6BlC5C,EAAAA,EAAAA,MAAA,OAAKa,UAAU,8BAA6BF,SAAA,EAQxCC,EAAAA,EAAAA,KAAA,UACIe,KAAK,SACLsB,QAASlD,EACTc,UAAU,0GAAyGF,SACtH,YAGDC,EAAAA,EAAAA,KAAA,UACIe,KAAK,SACLd,UAAU,8GAA6GF,SAC1H,4BA3IG,K","sources":["pages/client/proposal/CompanyMail.js","pages/company/companyManagement/CompanyManagement.js","pages/company/companyManagement/SubscriptionModal.js","pages/client/proposal/SendProposalModal.js"],"sourcesContent":["import React, { useState, useEffect, memo } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css'; // Import styles\nimport { FaRegFile, FaTimes } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fileUploadFunc } from '../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers';\nimport moment from 'moment';\nimport {\n    domainName,\n} from \"../../../constents/global\";\nimport { Modal } from 'antd';\n\nconst CompanyMail = ({ isOpen, onClose, onSubmit, proposalData, setProposalId }) => {\n    const [formData, setFormData] = useState({\n        to: '',\n        cc: [],\n        subject: 'Regarding Proposal',\n        employeeName: '',\n        jobTitle: '',\n        companyName: '',\n        joiningDate: '',\n        joiningTime: '',\n        officeAddress: '',\n        salary: '',\n        salaryDuration: 'year',\n        confirmationDeadline: '',\n        hrContact: '',\n        senderName: '',\n        senderTitle: '',\n        portalURL: '',\n        portalUsername: '',\n        portalPassword: '',\n        attachments: []\n    });\n    const [isPreview, setIsPreview] = useState(false);\n    const [editorValue, setEditorValue] = useState(``);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        setFormData({\n            to: '',\n            cc: [],\n            subject: 'Regarding Proposal',\n            employeeName: '',\n            jobTitle: '',\n            companyName: '',\n            joiningDate: '',\n            joiningTime: '',\n            officeAddress: '',\n            salary: '',\n            salaryDuration: 'year',\n            confirmationDeadline: '',\n            hrContact: '',\n            senderName: '',\n            senderTitle: '',\n            portalURL: '',\n            portalUsername: '',\n            portalPassword: '',\n            attachments: []\n        });\n\n        if (proposalData) {\n\n            setFormData((formData) => {\n                return {\n                    ...formData,\n                    to: proposalData?.email\n                }\n            })\n            //     const fetchedData = `<div class=\"space-y-4 ${'text-gray-600'}\">\n            //  <div style=\"width: 80%; margin: 0 auto; padding: 20px; background-color: #ffffff; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\">\n            // <h1 style=\"font-size: 24px; color: #0073e6;\">Welcome to ${proposalData?.fullName}!</h1>\n            // <p style=\"font-size: 16px; line-height: 1.5;\">We are excited to have you join our team and begin this new chapter together.</p>\n\n            // <p style=\"font-size: 16px; line-height: 1.5;\">As part of your onboarding process, we would like to ensure that you have access to all the necessary tools and resources. Below are the details to get started:</p>\n\n            // <h3 style=\"font-size: 18px; color: #0073e6;\">Your First Day Information:</h3>\n            // <ul style=\"font-size: 16px; line-height: 1.5;\">\n            //     <li><span style=\"font-weight: bold;\">Date:</span> ${moment(proposalData?.dateOfJoining).format('YYYY-MM-DD')}</li>\n            //     <li><span style=\"font-weight: bold;\">Reporting Time:</span> ${moment(proposalData?.dateOfJoining).format('HH:MM')}</li>\n            //     <li><span style=\"font-weight: bold;\">Location:</span> [Office Address / Virtual Meeting Link]</li>\n            //     <li><span style=\"font-weight: bold;\">Reporting To:</span> [Name and Designation of Reporting Manager/HR Contact]</li>\n            // </ul>\n\n            // <h3 style=\"font-size: 18px; color: #0073e6;\">Login Credentials:</h3>\n            // <p style=\"font-size: 16px; line-height: 1.5;\">To facilitate a smooth onboarding process, we have set up your account in our HRMS (Human Resource Management System). Please use the credentials below to log in:</p>\n            // <ul style=\"font-size: 16px; line-height: 1.5;\">\n            //     <li><span style=\"font-weight: bold;\">HRMS Portal Link:</span> [Insert HRMS URL]</li>\n            //     <li><span style=\"font-weight: bold;\">Username:</span> [Candidate's Email ID or Assigned Username]</li>\n            //     <li><span style=\"font-weight: bold;\">Temporary Password:</span> [Insert Temporary Password]</li>\n            // </ul>\n            // <p style=\"font-size: 16px; line-height: 1.5;\"><span style=\"font-weight: bold;\">Note:</span> For security purposes, please log in at your earliest convenience and update your password upon first login.</p>\n\n            // <h3 style=\"font-size: 18px; color: #0073e6;\">Next Steps:</h3>\n            // <ul style=\"font-size: 16px; line-height: 1.5;\">\n            //     <li><span style=\"font-weight: bold;\">Complete Your Profile:</span> Update your details (e.g., contact information, bank details, and personal information) in the HRMS portal.</li>\n            //     <li><span style=\"font-weight: bold;\">Access Onboarding Materials:</span> You will find important documents, policies, and onboarding checklists available in the system.</li>\n            //     <li><span style=\"font-weight: bold;\">Attend Orientation:</span> [Provide timing/details if applicable].</li>\n            // </ul>\n\n            // <p style=\"font-size: 16px; line-height: 1.5;\">If you face any issues accessing the portal or require assistance, please do not hesitate to reach out to me.</p>\n\n            // <p style=\"font-size: 16px; line-height: 1.5;\">We are thrilled to have you on board and are confident you will have a wonderful journey with [Company Name]. Wishing you a fantastic start!</p>\n\n            // <p style=\"font-size: 16px; line-height: 1.5;\">Once again, welcome aboard!</p>\n\n            // <p style=\"font-size: 16px; line-height: 1.5;\">Best Regards,</p>\n            // <p style=\"font-size: 16px; line-height: 1.5;\">${JSON.parse(localStorage.getItem(`user_info_${domainName}`))?.fullName}</p>\n            // <p style=\"font-size: 16px; line-height: 1.5;\">[Your Designation]</p>\n            // <p style=\"font-size: 16px; line-height: 1.5;\">${proposalData.companyData?.fullName}</p>\n            // <p style=\"font-size: 16px; line-height: 1.5;\">[Contact Number]</p>\n            // <p style=\"font-size: 16px; line-height: 1.5;\">${JSON.parse(localStorage.getItem(`user_info_${domainName}`))?.email}</p>\n            // <p style=\"font-size: 16px; line-height: 1.5;\">[Company Website]</p>`\n            // setEditorValue(fetchedData)\n        }\n    }, [proposalData])\n\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        const reqData = {\n            filePath: file,\n            isVideo: false,\n            isMultiple: false,\n        };\n        dispatch(fileUploadFunc(reqData)).then((res) => {\n            if (res?.payload?.data) {\n                setFormData(prev => ({\n                    ...prev,\n                    attachments: [...prev.attachments, res.payload?.data]\n                }));\n            }\n        });\n    };\n\n    const handleRemoveFile = (index) => {\n        setFormData(prev => {\n            const updatedAttachments = prev.attachments.filter((_, i) => i !== index);\n            return { ...prev, attachments: updatedAttachments };\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({\n            content: editorValue,\n            to: formData?.to,\n            cc: typeof formData?.cc === 'string' ? formData.cc.split(',').map(v => v.trim()) : [],\n            subject: formData?.subject,\n            attachments: formData?.attachments\n        });\n\n    };\n\n    const handleClose = () => {\n        setFormData({\n            to: '',\n            cc: [],\n            subject: '',\n            employeeName: '',\n            jobTitle: '',\n            companyName: '',\n            joiningDate: '',\n            joiningTime: '',\n            officeAddress: '',\n            salary: '',\n            salaryDuration: 'year',\n            confirmationDeadline: '',\n            hrContact: '',\n            senderName: '',\n            senderTitle: '',\n            portalURL: '',\n            portalUsername: '',\n            portalPassword: '',\n            attachments: []\n        });\n        setIsPreview(false);\n        setEditorValue('');\n        setProposalId([])\n        onClose();\n    };\n\n    const handleEditorChange = (value) => {\n        setEditorValue(value);\n    };\n\n    if (!isOpen) return null;\n\n    return (\n        // <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1501]\">\n        //     <div className=\"bg-white rounded-lg px-6 pt-6 pb-3 w-[800px] max-h-[70vh] overflow-y-hidden\">\n        //         <div className=\"flex justify-between items-center mb-4\">\n        //             <h2 className=\"text-sm font-semibold text-gray-800\">{isPreview ? 'Email Preview' : ' Email Template'}</h2>\n        //             <button onClick={handleClose} className=\"text-gray-500 hover:text-gray-700\"><FaTimes/></button>\n        //         </div>\n        <Modal\n            open={true}\n            onCancel={handleClose}\n            footer={null}\n            closable={true}\n            width={800}\n            style={{ maxHeight: '70vh' }}\n            centered\n            zIndex={1501}\n        >\n            <div className=\"flex justify-between items-center mb-3\">\n                    <h2 className=\"text-sm font-semibold text-gray-800\">\n                        {isPreview ? 'Email Preview' : 'Email Template'}\n                </h2>\n            </div>\n\n            <form autoComplete=\"off\" onSubmit={handleSubmit} className=\"space-y-4 \">\n                <div className=\"bg-white p-6 rounded-lg border border-gray-200 h-[50vh] overflow-y-auto\">\n                    <div className=\"space-y-4\">\n                        {/* Email Header */}\n                        <div className=\"font-semibold text-sm\">To:\n                            <input\n                                name=\"to\"\n                                value={formData.to}\n                                onChange={handleChange}\n                                placeholder=\"Recipient Email\"\n                                className=\"border p-2 w-full\"\n                            />\n                        </div>\n                        <div className=\"font-semibold text-sm\">CC:\n                            <input\n                                name=\"cc\"\n                                value={formData.cc}\n                                onChange={handleChange}\n                                placeholder=\"CC Emails\"\n                                className=\"border p-2 w-full\"\n                            />\n                        </div>\n                        <div className=\"font-semibold text-sm\">Subject:\n                            <input\n                                name=\"subject\"\n                                value={formData.subject}\n                                onChange={handleChange}\n                                placeholder=\"Email Subject\"\n                                className=\"border p-2 w-full\"\n                            />\n                        </div>\n                    </div>\n\n                    {/* Email Body with React Quill */}\n                    <div className=\"mt-4\">\n                        <ReactQuill\n                            value={editorValue}\n                            onChange={handleEditorChange}\n                            placeholder=\"Write the email body here\"\n                            modules={{\n                                toolbar: [\n                                    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                                    ['bold', 'italic', 'underline', 'strike'],\n                                    [{ 'align': [] }],\n                                    ['link', 'image', 'video'],\n                                    ['blockquote', 'code-block'],\n                                    ['clean']\n                                ],\n                            }}\n                            formats={['header', 'font', 'list', 'bold', 'italic', 'underline', 'link', 'align', 'clean']}\n                        />\n                    </div>\n\n\n                    <div className=\"border-t pt-4 mt-6\">\n                        <div className=\"font-medium mb-2\">Attachments:</div>\n                        {!isPreview ? (\n                            <div className=\"space-y-4\">\n                                <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                                <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer\">\n                                    <FaRegFile className=\"mr-2\" /> Add Attachments\n                                </label>\n\n                                <div className=\"space-y-2\">\n                                    {formData.attachments.map((file, index) => (\n                                        <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                                            <a\n                                                href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                                                className=\"flex items-center space-x-2\"\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <FaRegFile className=\"text-gray-500\" />\n                                                <span className=\"text-sm text-gray-600\">{file}</span>\n                                            </a>\n                                            <button\n                                                type=\"button\"\n                                                onClick={() => handleRemoveFile(index)}\n                                                className=\"text-red-500 hover:text-red-700\"\n                                            >\n                                                <FaTimes />\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"space-y-2\">\n                                {/* Attachments preview logic */}\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"flex justify-end gap-3 mt-6\">\n                    {/* <button\n                            type=\"button\"\n                            onClick={() => setIsPreview(!isPreview)}\n                            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n                        >\n                            {isPreview ? 'Edit Template' : 'Preview'}\n                        </button> */}\n                    <button\n                        type=\"button\"\n                        onClick={handleClose}\n                        className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        type=\"submit\"\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700\"\n                    >\n                        Generate Email\n                    </button>\n                </div>\n            </form>\n        </Modal>\n        //     </div>\n        // </div>\n    );\n};\n\nexport default CompanyMail;\n","import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { FaCopy, FaPlus } from \"react-icons/fa6\";\nimport { FaAngleUp, FaAngleDown, FaEye, FaHistory } from \"react-icons/fa\";\nimport {\n  companyInvoiceRefund,\n  companyInvoiveDetail,\n  companyPlanHistory,\n  companyStatuspdate,\n  deleteCompany,\n  getCompanyList,\n  regeneratePassfunc,\n  subscriptionFunc,\n} from \"./companyFeatures/_company_reducers\";\nimport { formatAddress, handleSortLogic, inputAntdSelectClassNameFilter, inputClassName, inputLabelClassName } from \"../../../constents/global\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { encrypt } from \"../../../config/Encryption\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport { planSearch } from \"../../global/other/Plan/PlanFeatures/_plan_reducers\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport { Button, message, Modal, Select, Spin, Switch, Tooltip, Dropdown } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { TfiReload, TfiViewList } from \"react-icons/tfi\";\nimport { BiDetail, BiEdit } from \"react-icons/bi\";\nimport moment from \"moment/moment\";\nimport SubscriptionModal from \"./SubscriptionModal\";\nimport SendProposalModal from \"../../client/proposal/SendProposalModal\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport { MdEmail } from \"react-icons/md\";\nimport { sendProposalEmail } from \"../../client/proposal/proposalFeatures/_proposal_reducers\";\nimport CompanyMail from \"../../client/proposal/CompanyMail\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\n\n\n\nfunction CompanyManagement() {\n  const [companyId, setcompanyId] = useState(1);\n  const [isCompanyMailOpen, setIsCompanyMailOpen] = useState(false);\n\n  const copyToClipboard = (text) => {\n    if (!text) return\n    navigator.clipboard.writeText(text);\n    message.success('Copied to clipboard!');\n  };\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { companyList, totalCompanyCount, companyPlanHistoryData, subscriptionData, companyInvoiceDetailsdata } = useSelector(\n    (state) => state.company\n  );\n\n\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isChangeModalOpen, setIsChangeModalOpen] = useState(false);\n  const [sortedList, setSortedList] = useState([]);\n\n\n\n  const [companyEmail, setCompanyEmail] = useState();\n  const [subscriptionModal, setSubscriptionModal] = useState({\n    data: null,\n    status: false,\n    loading: false\n  })\n  const [detailsModal, setDetailsModal] = useState({\n    data: null,\n    status: false,\n    loading: false\n  })\n  // const [detailsModal, setDetailsModal] = useState({\n  //   data: null,\n  //   status: false,\n  //   loading: false\n  // })\n  const [amount, setAmount] = useState('');\n  const [error, setError] = useState('');\n  const [refundloading, setRefundloading] = useState(false);\n\n  const handleSubmit = async (e, element) => {\n    e.preventDefault();\n    if (!amount) {\n      setError('Amount is required.');\n      return;\n    }\n    setError('');\n    setRefundloading(true)\n    await dispatch(companyInvoiceRefund({\n      \"paymentId\": element,\n      \"amount\": Number(amount),\n      'companyId': companyId,\n    })).then(data => {\n      if (!data?.error) {\n        dispatch(companyInvoiveDetail({ paymentId: element }));\n        setAmount('')\n      }\n    })\n    setRefundloading(false)\n  };\n  const { planListData } = useSelector((state) => state.plan);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchText, setSearchText] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [plan, setPlan] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [loadingPlanHistory, setLoadingPlanHistory] = useState(false);\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n\n\n  const openplanHistoryModal = async (element) => {\n    setcompanyId(element?._id)\n    setIsModalOpen(true);\n    setCompanyEmail(element?.email)\n    setLoadingPlanHistory(true)\n    if (element?._id) {\n      await dispatch(companyPlanHistory({ companyId: element._id }))\n    }\n    setLoadingPlanHistory(false)\n\n  };\n  const handleClose = () => {\n    setIsModalOpen(false);\n  };\n  const limit = 10;\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      await fetchCompanyListData();\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [currentPage, searchText, plan, status]);\n  useEffect(() => {\n    if (companyInvoiceDetailsdata) {\n      setAmount(\n        (\n          (companyInvoiceDetailsdata?.amount ?? 0) / 100 -\n          (companyInvoiceDetailsdata?.amount_refunded ?? 0) / 100\n        ).toFixed(0)\n      );\n\n    }\n  }, [companyInvoiceDetailsdata])\n  const fetchCompanyListData = async () => {\n    let reqData = {\n      page: currentPage,\n      limit: limit,\n      reqPayload: {\n        text: searchText,\n        status: status,\n        planId: plan,\n        isPagination: true\n      },\n    };\n\n    try {\n      // Assuming dispatch is a function that returns a promise\n      const resp = await dispatch(getCompanyList(reqData));\n\n    } catch (error) {\n      console.error('Error fetching company list:', error);\n      setLoading(false); // Ensure loading is stopped on error\n    }\n  };\n  const handleProposalEmail = (emailData) => {\n    dispatch(sendProposalEmail(emailData)).then(data => {\n      if (!data.error) {\n\n        setIsCompanyMailOpen(false);\n        setcompanyId([])\n        Swal.fire({\n          icon: 'success',\n          title: 'Proposal Email',\n          html: `\n                <p>Proposal Email has been send successfully!</p>\n              `,\n          confirmButtonColor: '#3085d6'\n        });\n      }\n    });\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    const listData = {\n      isClient: false,\n      size: 10,\n      pageNo: 1,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteCompany(reqData)).then((data) => {\n          fetchCompanyListData();\n        });\n      }\n    });\n  };\n\n\n  const handleEmailSubmit = (link) => {\n\n    const req = {\n      content: `Hey, your Plan Details are here. <a href=\"${link}\" target=\"_blank\">Click here to view</a>.`,\n      to: companyEmail,\n      cc: [companyEmail],\n      subject: 'CompanyMail',\n      attachments: []\n    };\n    dispatch(sendProposalEmail(req))\n\n  };\n\n  useEffect(() => {\n    dispatch(planSearch({\n      text: \"\",\n      sort: true,\n      status: true,\n      isPagination: false,\n    }))\n  }, [])\n\n  const onChange = (e) => {\n    // \n    setSearchText(e)\n  }\n\n  useEffect(() => {\n    if (companyList) {\n      handleSort();\n    }\n  }, [companyList]);\n\n  const handleSort = (key, order) => {\n    const sortedList = handleSortLogic(key, order, companyList);\n    setSortedList(sortedList);\n  };\n  const handleRegeneratePassword = (element) => {\n    Swal.fire({\n      title: 'Regenerate Password',\n      text: `Are you sure to change password of ${element?.fullName}?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(regeneratePassfunc({ _id: element?._id })).then((data) => {\n          if (!data?.error) {\n            Swal.fire(\n              'Password Regenerated!',\n              'Password has been Regenerated.',\n              'success'\n            );\n\n          } else {\n            Swal.fire(\n              'Error!',\n              'Failed to Password Regenerated Successfully.',\n              'error'\n            );\n          }\n        });\n      }\n    });\n  }\n  const handleSubscriptionView = async (element) => {\n    setSubscriptionModal({\n      data: element,\n      status: true,\n      loading: true,\n    });\n\n    try {\n      await dispatch(subscriptionFunc({\n        // subscriptionId: \"sub_QKU1wkxVzQVEvb\"\n        subscriptionId: element?.subscriptionId\n      }));\n    } catch (error) {\n      console.error('Error fetching subscription:', error);\n    } finally {\n      setSubscriptionModal(prevState => ({\n        ...prevState,\n        loading: false,\n      }));\n    }\n  };\n  const handleinvoicedetailsView = async (element) => {\n    setDetailsModal({\n      data: element,\n      status: true,\n      loading: true,\n    });\n\n    try {\n      await dispatch(companyInvoiveDetail({ paymentId: element?.payment_id }));\n    } catch (error) {\n      console.error('Error fetching subscription:', error);\n    } finally {\n      setDetailsModal(prevState => ({\n        ...prevState,\n        loading: false,\n      }));\n    }\n  };\n\n\n\n  return (\n    <GlobalLayout onChange={onChange}>\n\n      <>\n        <CompanyMail\n          isOpen={isCompanyMailOpen}\n          onClose={() => setIsCompanyMailOpen(false)}\n          onSubmit={handleProposalEmail}\n          proposalData={companyId}\n          setProposalId={setcompanyId}\n        />\n\n        <div className=\"bg-grey-100 w-full p-1\">\n          <div className=\"w-full\">\n            <div className=\"sm:flex justify-between items-center md:space-y-0 space-y-2\">\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 md:gap-3 gap-1\">\n                <Select\n                  className={` ${inputAntdSelectClassNameFilter} `}\n                  onChange={(e) => {\n                    setPlan(e);\n                  }}\n                  value={plan}\n                  placeholder=\"Select Plan\"\n                  showSearch>\n                  <Select.Option value=\"\">Select Plan</Select.Option>\n                  {planListData?.map((element, index) => (\n                    <Select.Option key={index} value={element?._id}>\n                      {element?.title}\n                    </Select.Option>\n                  ))}\n                </Select>\n                <Select\n                  className={` ${inputAntdSelectClassNameFilter} `}\n                  value={status}\n                  onChange={(e) => {\n                    setStatus(e);\n                  }}\n                  placeholder=\"Select Plan\"\n                  showSearch\n                >\n                  <Select.Option value=\"\">Select Status</Select.Option>\n                  <Select.Option value={true}>{\"Active\"}</Select.Option>\n                  <Select.Option value={false}>{\"InActive\"}</Select.Option>\n                </Select>\n                <button\n                  onClick={() => {\n                    setPlan(\"\")\n                    setStatus(\"\")\n                  }}\n                  className=\"bg-header mt-1 rounded-md md:flex hidden justify-center items-center text-white\">\n                  <span className=\"text-[12px]\">Reset</span>\n                </button>\n              </div>\n\n              <div className=\"flex justify-end items-center gap-2\">\n                <button\n                  onClick={() => {\n                    setPlan(\"\")\n                    setStatus(\"\")\n                  }}\n                  className=\"bg-header px-4 py-1.5 rounded-md flex md:hidden justify-center items-center  text-white\">\n                  <span className=\"text-[12px]\">Reset</span>\n                </button>\n                <Tooltip placement=\"topLeft\"  title='Add Company'>\n                  <button\n                    onClick={() => {\n                      navigate(\"/admin/company/create\");\n                    }}\n                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n                  >\n                    <FaPlus />\n                    <span className=\"text-[12px]\">Add Company</span>\n                  </button>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead className=\"\">\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap min-w-[120px] w-[120px]\">\n                    S.No.\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap  \">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Company Name</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"fullName\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"fullName\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap  \">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>userName</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"userName\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"userName\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>E-mail</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp onClick={() => handleSort(\"email\", \"asc\")} />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"email\", \"desc\")}\n                        />\n                      </div>\n                    </div>{\" \"}\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Phone Number</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"mobile.number\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"mobile.number\", \"desc\")}\n                        />\n                      </div>\n                    </div>{\" \"}\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Plan</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"planData.title\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"planData.title\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Address</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() =>\n                            handleSort(\"addresses.primary.street\", \"asc\")\n                          }\n                        />\n                        <FaAngleDown\n                          onClick={() =>\n                            handleSort(\"addresses.primary.street\", \"desc\")\n                          }\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>createdAt</span>\n\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>createdBy</span>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Status</span>\n\n                    </div>\n                  </th>\n                  <th className=\"border-none text-center p-2 whitespace-nowrap w-[10%]\">\n                    Action\n                  </th>\n                </tr>\n              </thead>\n              {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={9}\n                  className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr> : <tbody>\n                {sortedList && sortedList.length > 0 ? (\n                  sortedList.map((element, index) => (\n                    <tr\n                      key={index}\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        {index + 1 + ((currentPage - 1) * limit)}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        {element?.fullName}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        {element?.userName}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2 \">\n                        {element?.email}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2 \">\n                        {element?.mobile?.code + element?.mobile?.number}{\" \"}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2 \">\n                        {element?.planData?.title}\n                      </td>\n                      <td\n                        className=\"whitespace-nowrap border-none p-2 overflow-hidden text-ellipsis max-w-[200px]\"\n                      >\n                        {formatAddress(element?.addresses?.primary)}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2 \">\n                        {dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a')}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2 \">\n                        {element?.createdBy}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        <Switch\n                          size=\"small\"\n                          checked={element?.status}\n                          onChange={() => {\n                            dispatch(\n                              companyStatuspdate({ _id: element?._id })\n                            ).then((data) => {\n                              if (!data?.error) {\n                                fetchCompanyListData();\n                              }\n                            });\n                          }}\n                          style={{\n                            backgroundColor: element?.status\n                              ? \"#4caf50\"\n                              : \"#f44336\",\n                            transition: \"background-color 0.3s ease\",\n                          }}\n                          height={20}\n                          width={40}\n                        />\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                          <Tooltip placement=\"topLeft\"  title=\"view company\" >\n                            <button\n                              onClick={() => {\n                                navigate(\n                                  `/admin/company/view/${encrypt(element?._id)}`\n                                );\n                              }}\n                              className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                            >\n                              <FaEye\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>\n                          {/* {canCreate && <Tooltip placement=\"topLeft\"  title=\"Send Email\">\n                            <button\n                              onClick={() => { setcompanyId(element); setIsCompanyMailOpen(true); }}\n                              className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                            >\n                              <MdEmail className='text-green-600 hover:text-green-500' size={16} />\n                            </button>\n                          </Tooltip>}\n                          <Tooltip placement=\"topLeft\"  title=\"Edit Company\" >\n                            <button\n                              onClick={() => {\n                                navigate(\n                                  `/admin/company/edit/${encrypt(element?._id)}`\n                                );\n                              }}\n                              className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                            >\n                              <BiEdit\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>\n                          <Tooltip placement=\"topLeft\"  title=\"Delete\" >\n                            <button\n                              onClick={() => handleDelete(element?._id)}\n                              className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                            >\n                              <RiDeleteBin5Line\n                                className=\"text-red-600 hover:text-red-500\"\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>\n                          <Tooltip placement=\"topLeft\"  title=\"Regenerate Password\" >\n                            <button\n                              onClick={() => handleRegeneratePassword(element)}\n                              className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                            >\n\n                              <TfiReload\n                                className=\"text-header \"\n                                size={14}\n                              />\n                            </button>\n                          </Tooltip>\n                          <Tooltip placement=\"topLeft\"  title=\"Plan History\" >\n                            <button\n                              onClick={() => openplanHistoryModal(element)}\n                              className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                            >\n\n                              <FaHistory\n                                className=\"text-header \"\n                                size={14}\n                              />\n                            </button>\n                          </Tooltip> */}\n\n                          <Dropdown\n                            menu={{\n                              items: [\n                                ...(canCreate\n                                  ? [{\n                                    key: 'send-email',\n                                    label: (\n                                      <span className=\"flex justify-start items-center\" onClick={() => { setcompanyId(element); setIsCompanyMailOpen(true); }}>\n                                        <MdEmail className=\"mr-2 text-green-600\" size={16} />\n                                        Send Email\n                                      </span>\n                                    ),\n                                  }]\n                                  : []),\n                                {\n                                  key: 'edit',\n                                  label: (\n                                    <span\n                                      className=\"flex justify-start items-center\"\n                                      onClick={() => navigate(`/admin/company/edit/${encrypt(element?._id)}`)}>\n                                      <BiEdit className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} />\n                                      Edit Company\n                                    </span>\n                                  ),\n                                },\n                                {\n                                  key: 'delete',\n                                  label: (\n                                    <span\n                                      className=\"flex justify-start items-center text-red-500\"\n                                      onClick={() => handleDelete(element?._id)}>\n                                      <RiDeleteBin5Line className=\"mr-2 text-red-600 hover:text-red-500\" size={16} />\n                                      Delete Company\n                                    </span>\n                                  ),\n                                },\n                                {\n                                  key: 'regenerate-password',\n                                  label: (\n                                    <span\n                                      className=\"flex justify-start items-center\"\n                                      onClick={() => handleRegeneratePassword(element)}>\n                                      <TfiReload className=\"mr-2 text-header\" size={14} />\n                                      Regenerate Password\n                                    </span>\n                                  ),\n                                },\n                                {\n                                  key: 'plan-history',\n                                  label: (\n                                    <span\n                                      className=\"flex justify-start items-center\"\n                                      onClick={() => openplanHistoryModal(element)}>\n                                      <FaHistory className=\"mr-2 text-header\" size={14} />\n                                      Plan History\n                                    </span>\n                                  ),\n                                },\n                              ],\n                            }}\n                            trigger={['click']}\n                          >\n                            <button\n                              className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                            >\n                              <PiDotsThreeOutlineVerticalBold\n                                className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={16}\n                              />\n                            </button>\n                          </Dropdown>\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5 \">\n                    <td\n                      colSpan={12}\n                      className=\"px-6 py-2 text-center whitespace-nowrap font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n            </table>\n            <Modal\n              title=\"Company Plan History\"\n              open={isModalOpen}\n              onCancel={handleClose}\n              footer={null}\n              width={1200}\n              className=\"antmodalclassName\"\n            >\n              <div>Plan History Data</div>\n              {loading ? (\n                <div className=\"text-center my-8\">\n                  <Spin />\n                </div>\n              ) : (\n                <div className=\"bg-[#ffffff] text-[13px] text-[#676a6c] w-full overflow-x-auto mt-1\">\n                  <table className=\"w-full max-w-full rounded-xl overflow-hidden \">\n                    <thead className=\"\">\n                      <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500]  h-[40px]\">\n                        <th className=\"border-none p-2 whitespace-nowrap w-[10%]\"> S.no.</th>\n                        <th className=\"border-none p-2 whitespace-nowrap\"> Plan Name </th>\n                        <th className=\"border-none p-2 whitespace-nowrap\"> Description</th>\n                        <th className=\"border-none p-2 whitespace-nowrap\"> Duration</th>\n                        <th className=\"border-none p-2 whitespace-nowrap\">Price / Month</th>\n                        <th className=\"border-none p-2 whitespace-nowrap\">Total Price</th>\n                        <th className=\"border-none p-2 whitespace-nowrap\">Created At</th>\n                        <th className=\"border-none p-2 whitespace-nowrap\">Created By</th>\n                        <th className=\"border-none p-2 whitespace-nowrap\">Status</th>\n                        <th className=\"border-none p-2 whitespace-nowrap text-center\">Action</th>\n                      </tr>\n                    </thead>\n                    {loadingPlanHistory ?\n                      <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                          colSpan={15}\n                          className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                          <Loader2 />\n                        </td>\n                      </tr> :\n\n                      <tbody>\n                        {companyPlanHistoryData && companyPlanHistoryData?.planHistory && companyPlanHistoryData?.planHistory?.length > 0 ? (\n                          companyPlanHistoryData?.planHistory?.map((element, index) => (\n                            <tr\n                              className={`border-b-[1px] border-[#DDDDDD] text-[#374151] text-[14px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                                }`}\n                            >\n\n                              <td className=\"whitespace-nowrap border-none p-2 \">\n                                {index + 1 + ((currentPage - 1) * limit)}\n                              </td>\n\n                              <td className=\"whitespace-nowrap border-none p-2 \">\n                                {`${element?.title} ` ?? \"-\"}\n                              </td>\n                              <td className=\"whitespace-nowrap border-none p-2 \">\n                                {element?.planData?.description ?? \"-\"}\n                              </td>\n                              <td className=\"whitespace-nowrap border-none p-2 \">\n                                {`${element?.days} days` ?? \"-\"}\n                              </td>\n\n                              <td className=\"whitespace-nowrap border-none p-2 \">\n                                {`₹ ${element?.price} ` ?? \"-\"}\n                              </td>\n                              <td className=\"whitespace-nowrap border-none p-2 \">\n                                {`₹ ${element?.price * element?.planData?.billingCycle} ` ?? \"-\"}\n                              </td>\n\n                              <td className=\"whitespace-nowrap border-none p-2 \">\n                                {`${dayjs(element?.createdAt).format('DD-MM-YYYY')} ` ?? \"-\"}\n                              </td>\n                              <td className=\"whitespace-nowrap border-none p-2 \">\n                                {element?.createdBy ?? \"-\"}\n                              </td>\n                              <td className=\"whitespace-nowrap border-none p-2 capitalize\">\n                                {element?.status ?? \"-\"}\n                              </td>\n                              <td className=\"whitespace-nowrap border-none p-2 capitalize\">\n                                <Tooltip placement=\"topLeft\"  title=\"Subscription\" >\n                                  <button\n                                    onClick={() => {\n                                      handleSubscriptionView(element)\n                                    }}\n                                    className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                    type=\"button\"\n                                  >\n                                    <FaEye\n                                      className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                      size={16}\n                                    />\n                                  </button>\n                                </Tooltip>\n\n                              </td>\n\n                            </tr>\n                          ))\n                        ) : (\n                          <tr className=\"bg-white bg-opacity-5 \">\n                            <td\n                              colSpan={10}\n                              className=\"px-6 text-center py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                            >\n                              Record Not Found\n                            </td>\n                          </tr>\n                        )}\n                      </tbody>}\n                  </table>\n                  <Modal\n                    className=\"antmodalclassName\"\n                    title=\"Subscription Details\"\n                    open={subscriptionModal.status}\n                    onCancel={() => setSubscriptionModal(state => ({\n                      ...state,\n                      status: false\n                    }))}\n                    footer={null}\n                    width={1100}\n                    wrapClassName=\"overflow-hidden\"\n                  >\n                    {subscriptionModal?.loading ? (\n                      <div className=\"flex justify-center items-center h-64\">\n                        <Spin />\n                      </div>\n                    ) : (\n                      <div className=\"\">\n                        {/* Subscription Info - Responsive Grid */}\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4  bg-gray-50 rounded-lg p-1\">\n                          <div className=\"space-y-3\">\n                            <InfoRow label=\"Subscription ID\" value={subscriptionData?.id} />\n                            <InfoRow label=\"Payment Method\" value={subscriptionData?.payment_method} />\n\n                            <InfoRow label=\"Plan ID\" value={subscriptionData?.plan_id} />\n\n\n                            <div className=\"flex gap-2 \">\n                              <InfoRow\n                                label=\"Short URL\"\n                                value={subscriptionData?.short_url}\n                                copyable\n                                onCopy={() => copyToClipboard(subscriptionData?.short_url)}\n                              />\n                              <button><MdEmail size={16} color=\"#325EDB\" onClick={() => { handleEmailSubmit(subscriptionData?.short_url) }} /></button>\n                            </div>\n                            <InfoRow label=\"Total Count\" value={subscriptionData?.total_count} />\n                          </div>\n                          <div className=\"space-y-3\">\n                            <InfoRow label=\"Paid Count\" value={subscriptionData?.paid_count} />\n                            <InfoRow label=\"Remaining Count\" value={subscriptionData?.remaining_count} />\n                            <InfoRow label=\"Status\" value={\n                              <div onClick={() => {\n\n                              }} className=\"flex justify-between items-center gap-2 text-xs\">\n                                <span>\n                                  {\n                                    subscriptionData?.status ?? \"-\"\n                                  }\n                                </span>\n                                <span>\n                                  {(subscriptionData?.status == \"active\" || subscriptionData?.status == \"paused\") && <SubscriptionModal subscriptionId={subscriptionData?.id} />}\n                                </span>\n                              </div>\n                            } capitalize />\n                            <InfoRow\n                              label=\"Period\"\n                              value={\n                                subscriptionData?.current_start && subscriptionData?.current_end\n                                  ? `${moment(subscriptionData.current_start).format(\"DD-MM-YYYY\")} to ${moment(subscriptionData.current_end).format(\"DD-MM-YYYY\")}`\n                                  : \"-\"\n                              }\n                            />\n                          </div>\n                        </div>\n\n                        {/* Invoice Table - Responsive with horizontal scroll on mobile */}\n                        <div className=\"bg-white rounded-lg shadow overflow-hidden border border-gray-200\">\n                          <div className=\"overflow-x-auto\">\n                            <table className=\"min-w-full divide-y divide-gray-200\">\n                              <thead className=\"bg-gray-800\">\n                                <tr>\n                                  <TableHeader>#</TableHeader>\n                                  <TableHeader>Order ID</TableHeader>\n                                  <TableHeader>Short URL</TableHeader>\n                                  <TableHeader>Amount</TableHeader>\n                                  <TableHeader>Amount Due</TableHeader>\n                                  <TableHeader>Gross Amount</TableHeader>\n                                  <TableHeader>Status</TableHeader>\n                                  <TableHeader>Action</TableHeader>\n                                </tr>\n                              </thead>\n                              <tbody className=\"bg-white divide-y divide-gray-200\">\n                                {loadingPlanHistory ? (\n                                  <tr>\n                                    <td colSpan={7} className=\"px-6 py-4 text-center\">\n                                      <div className=\"flex justify-center\">\n                                        <Loader2 />\n                                      </div>\n                                    </td>\n                                  </tr>\n                                ) : subscriptionData?.invoiceList?.length > 0 ? (\n                                  subscriptionData.invoiceList.map((item, index) => (\n                                    <tr key={index} className={index % 2 === 0 ? 'bg-gray-50' : 'bg-white'}>\n                                      <TableCell>{index + 1 + ((currentPage - 1) * limit)}</TableCell>\n                                      <TableCell className=\"max-w-[120px] truncate\">{item?.order_id || \"-\"}</TableCell>\n                                      <TableCell>\n                                        {item?.short_url ? (\n                                          <div className=\"flex items-center space-x-1\">\n                                            <span className=\"truncate max-w-[100px] md:max-w-[180px]\">{item?.short_url}</span>\n                                            <CopyButton onCopy={() => copyToClipboard(item?.short_url)} />\n                                          </div>\n                                        ) : \"-\"}\n                                      </TableCell>\n                                      <TableCell>{item?.amount ? (item.amount / 100).toFixed(2) : \"-\"}</TableCell>\n                                      <TableCell>{item?.amount_due ? (item.amount_due / 100).toFixed(2) : \"-\"}</TableCell>\n                                      <TableCell>{item?.gross_amount ? (item.gross_amount / 100).toFixed(2) : \"-\"}</TableCell>\n                                      <TableCell className=\"capitalize\">{item?.status || \"-\"}</TableCell>\n                                      <TableCell className=\"capitalize\">\n\n\n                                        <Tooltip placement=\"topLeft\"  title=\"Payment Summary\" >\n                                          <button\n                                            className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                            type=\"button\"\n                                            disabled={item.status === \"issued\"}\n                                          >\n                                            <BiDetail\n\n                                              onClick={() => handleinvoicedetailsView(item)}\n                                              className={item.status === \"issued\" ? \"text-gray-500 \" : \"text-cyan-600 hover:text-cyan-500\"}\n                                              size={16}\n                                            />\n                                          </button>\n                                        </Tooltip>\n                                      </TableCell>\n                                      <Modal\n                                        className=\"antmodalclassName\"\n                                        title=\"Payment Summary\"\n                                        open={detailsModal.status}\n                                        onCancel={() => setDetailsModal((state) => ({ ...state, status: false }))}\n                                        footer={null}\n                                        width={800}\n                                        wrapClassName=\"overflow-hidden\"\n                                        style={{ borderRadius: '12px' }}\n                                        bodyStyle={{ padding: '0' }}\n                                      >\n                                        {detailsModal?.loading ? (\n                                          <div className=\"flex justify-center items-center h-64\">\n                                            <Spin />\n                                          </div>\n                                        ) : (\n                                          <div className=\"p-6\">\n                                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                                              {/* Payment Status Card */}\n                                              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\n                                                <div className=\"flex justify-between items-start mb-4\">\n                                                  <h3 className=\"text-lg font-semibold text-gray-800\">Payment Status</h3>\n                                                  <span\n                                                    className={`px-3 py-1 rounded-full text-sm font-medium ${companyInvoiceDetailsdata?.status === 'captured'\n                                                      ? 'bg-green-100 text-green-800'\n                                                      : 'bg-yellow-100 text-yellow-800'\n                                                      }`}\n                                                    style={{ textTransform: 'uppercase' }}\n                                                  >\n                                                    {companyInvoiceDetailsdata?.status}\n                                                  </span>\n                                                </div>\n\n                                                <div className=\"space-y-3\">\n                                                  <div className=\"flex justify-between\">\n                                                    <span className=\"text-gray-500\">Amount</span>\n                                                    <span className=\"font-medium\">\n                                                      ₹{(companyInvoiceDetailsdata?.amount / 100).toFixed(2)}\n                                                    </span>\n                                                  </div>\n                                                  <div className=\"flex justify-between\">\n                                                    <span className=\"text-gray-500\">Payment Method</span>\n                                                    <span className=\"font-medium\" style={{ textTransform: 'uppercase' }}>\n                                                      {companyInvoiceDetailsdata?.method}\n                                                    </span>\n                                                  </div>\n                                                  <div className=\"flex justify-between\">\n                                                    <span className=\"text-gray-500\">Date</span>\n                                                    <span className=\"font-medium\">\n                                                      {new Date(companyInvoiceDetailsdata?.created_at).toLocaleString()}\n                                                    </span>\n                                                  </div>\n                                                </div>\n                                              </div>\n\n                                              {/* Customer Details Card */}\n                                              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\n                                                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Customer Details</h3>\n                                                <div className=\"space-y-3\">\n                                                  <div className=\"flex justify-between\">\n                                                    <span className=\"text-gray-500\">Email</span>\n                                                    <span className=\"font-medium\">{companyInvoiceDetailsdata?.email}</span>\n                                                  </div>\n                                                  <div className=\"flex justify-between\">\n                                                    <span className=\"text-gray-500\">Contact</span>\n                                                    <span className=\"font-medium\">{companyInvoiceDetailsdata?.contact}</span>\n                                                  </div>\n                                                  <div className=\"flex justify-between\">\n                                                    <span className=\"text-gray-500\">Description</span>\n                                                    <span className=\"font-medium text-right\">{companyInvoiceDetailsdata?.description}</span>\n                                                  </div>\n                                                </div>\n                                              </div>\n\n\n                                              {subscriptionData?.status === \"cancelled\" && <div className=\"bg-white p-2 rounded-lg shadow-sm border border-gray-100 md:col-span-2\">\n                                                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Refund Amount</h3>\n                                                <form onSubmit={(e) => handleSubmit(e, companyInvoiceDetailsdata?.id)} className=\"max-w-md mx-auto\">\n                                                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n                                                    Amount <span className=\"text-red-600\">*</span>\n                                                  </label>\n                                                  <div className=\"flex rounded-md shadow-sm overflow-hidden border border-gray-300 focus-within:ring-2 focus-within:ring-rose-500\">\n                                                    <input\n                                                      type=\"number\"\n                                                      value={amount}\n                                                      disabled={subscriptionData?.status == 'refunded'}\n                                                      onChange={(e) => setAmount(+e.target.value)}\n                                                      placeholder=\"Enter Amount\"\n                                                      className=\"flex-1 px-4 py-2 text-sm focus:outline-none\"\n                                                    />\n                                                    <button\n                                                      type=\"submit\"\n                                                      disabled={(!amount || amount === \"0\")}\n                                                      className={` ${(!amount || amount === \"0\") ? \" bg-gray-500\" : \"bg-rose-600 hover:bg-rose-700\"} text-white px-5 py-2 text-sm font-medium transition-colors    `}\n                                                    >\n                                                      {refundloading ? <Spin size=\"small\" /> : \"Submit\"}\n                                                    </button>\n                                                  </div>\n                                                  {error && (\n                                                    <p className=\"mt-2 text-sm text-red-600\">{error}</p>\n                                                  )}\n                                                </form>\n                                              </div>}\n\n                                              {/* Transaction Details Card */}\n                                              <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100 md:col-span-2\">\n                                                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Transaction Details</h3>\n                                                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                                                  <div className=\"space-y-2\">\n                                                    <p className=\"text-gray-500\">Transaction ID</p>\n                                                    <p className=\"font-medium break-all\">{companyInvoiceDetailsdata?.id}</p>\n                                                  </div>\n                                                  <div className=\"space-y-2\">\n                                                    <p className=\"text-gray-500\">Order ID</p>\n                                                    <p className=\"font-medium break-all\">{companyInvoiceDetailsdata?.order_id}</p>\n                                                  </div>\n                                                  <div className=\"space-y-2\">\n                                                    <p className=\"text-gray-500\">Invoice ID</p>\n                                                    <p className=\"font-medium break-all\">{companyInvoiceDetailsdata?.invoice_id}</p>\n                                                  </div>\n                                                </div>\n                                              </div>\n                                              {companyInvoiceDetailsdata?.refund_status && (\n                                                <div className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-100 md:col-span-2\">\n                                                  <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Refund Status</h3>\n                                                  <div className=\"flex justify-between\">\n                                                    <span className=\"text-gray-500\">Amount Refunded</span>\n                                                    <span className=\"font-medium\">\n                                                      ₹{(companyInvoiceDetailsdata?.amount_refunded / 100).toFixed(2)}\n                                                    </span>\n                                                  </div>\n                                                </div>\n                                              )}\n                                            </div>\n\n                                            {/* Notes Section (if notes exist) */}\n                                            {companyInvoiceDetailsdata?.notes?.length > 0 && (\n                                              <div className=\"mt-6 bg-white p-6 rounded-lg shadow-sm border border-gray-100\">\n                                                <h3 className=\"text-lg font-semibold text-gray-800 mb-4\">Notes</h3>\n                                                <ul className=\"list-disc pl-5 space-y-2\">\n                                                  {companyInvoiceDetailsdata.notes.map((note, index) => (\n                                                    <li key={index} className=\"text-gray-700\">{note}</li>\n                                                  ))}\n                                                </ul>\n                                              </div>\n                                            )}\n                                          </div>\n                                        )}\n                                      </Modal>\n                                    </tr>\n                                  ))\n                                ) : (\n                                  <tr>\n                                    <td colSpan={7} className=\"px-6 py-4 text-center text-gray-500\">\n                                      No records found\n                                    </td>\n                                  </tr>\n                                )}\n                              </tbody>\n                            </table>\n                          </div>\n\n\n                        </div>\n                      </div>\n                    )}\n                  </Modal>\n\n\n\n                </div>\n              )}\n            </Modal>\n          </div>\n          <CustomPagination\n            totalCount={totalCompanyCount}\n            pageSize={limit}\n            currentPage={currentPage}\n            onChange={onPaginationChange}\n          />\n\n\n        </div>\n      </>\n\n    </GlobalLayout>\n  );\n}\nexport default CompanyManagement;\n\n\n\nconst InfoRow = ({ label, value, copyable = false, capitalize = false, onCopy }) => (\n  <div className=\"flex flex-wrap items-center\">\n    <span className=\"w-32 md:w-40 text-sm font-medium text-gray-600\">{label}:</span>\n    <span className={`flex-1 text-sm text-gray-800 ${capitalize ? 'capitalize' : ''}`}>\n      {value || \"-\"}\n      {copyable && value && (\n        <button\n          onClick={onCopy}\n          className=\"ml-2 text-blue-500 hover:text-blue-700 focus:outline-none\"\n          aria-label=\"Copy to clipboard\"\n        >\n          <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\" />\n          </svg>\n        </button>\n      )}\n    </span>\n  </div>\n);\n\nconst TableHeader = ({ children }) => (\n  <th className=\"px-4 py-3 text-left text-xs font-medium text-white uppercase tracking-wider\">\n    {children}\n  </th>\n);\n\nconst TableCell = ({ children, className = '' }) => (\n  <td className={`px-4 py-3 text-sm text-gray-700 ${className}`}>\n    {children}\n  </td>\n);\n\nconst CopyButton = ({ onCopy }) => (\n  <button\n    onClick={onCopy}\n    className=\"text-blue-500 hover:text-blue-700 focus:outline-none\"\n    title=\"Copy to clipboard\"\n  >\n    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 5H6a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2v-1M8 5a2 2 0 002 2h2a2 2 0 002-2M8 5a2 2 0 012-2h2a2 2 0 012 2m0 0h2a2 2 0 012 2v3m2 4H10m0 0l3-3m-3 3l3 3\" />\n    </svg>\n  </button>\n);","import React, { useState } from \"react\";\nimport { Modal, Select, message } from \"antd\";\nimport axios from \"axios\";\nimport { inputAntdSelectClassName } from \"../../../constents/global\";\nimport { useDispatch } from \"react-redux\";\nimport { companySubscriptionStatus, subscriptionFunc } from \"./companyFeatures/_company_reducers\";\n\nconst { Option } = Select;\n\nconst SUBSCRIPTION_STATUS_CANCELED = \"cancel\";\nconst SUBSCRIPTION_STATUS_PAUSE_RESUME = \"pause_resume\";\nconst SUBSCRIPTION_STATUS_ARR = [\n  SUBSCRIPTION_STATUS_CANCELED,\n  SUBSCRIPTION_STATUS_PAUSE_RESUME,\n];\n\nconst SUBSCRIPTION_TYPE_IMMEDIATE = \"immidate\"; \n// const SUBSCRIPTION_TYPE_EOC = \"end_of_cycle\"; // Uncomment this in future if needed\nconst SUBSCRIPTION_TYPE_PAUSE = \"pause\";\nconst SUBSCRIPTION_TYPE_RESUME = \"resume\";\n\nconst SUBSCRIPTION_TYPE_OPTIONS = {\n  [SUBSCRIPTION_STATUS_CANCELED]: [\n    SUBSCRIPTION_TYPE_IMMEDIATE,\n    // SUBSCRIPTION_TYPE_EOC, // Uncomment this in the future if needed\n  ],\n  [SUBSCRIPTION_STATUS_PAUSE_RESUME]: [\n    SUBSCRIPTION_TYPE_PAUSE,\n    SUBSCRIPTION_TYPE_RESUME,\n  ],\n};\n\nconst LABEL_MAP = {\n  cancel: \"Cancel\",\n  pause_resume: \"Pause / Resume\",\n  immidate: \"Immediate\",\n  // end_of_cycle: \"End of Cycle\",\n  pause: \"Pause\",\n  resume: \"Resume\",\n};\n\nconst SubscriptionModal = ({ subscriptionId }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [status, setStatus] = useState(\"\");\n  const [type, setType] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n\n  const handleStatusChange = (value) => {\n    setStatus(value);\n    setType(\"\"); // Reset type when status changes\n  };\n\n  const handleOk = async () => {\n    if (!status || !type) {\n      message.warning(\"Please select both status and type.\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await dispatch(companySubscriptionStatus({\n        subscriptionId: subscriptionId,\n        status: status,\n        type: type,\n      })).then((data) => {\n        if (!data?.error) {\n          dispatch(subscriptionFunc({ subscriptionId }));\n          setIsModalOpen(false);\n          setStatus(\"\");\n          setType(\"\");\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getFilteredTypeOptions = () => {\n    return SUBSCRIPTION_TYPE_OPTIONS[status] || [];\n  };\n\n  return (\n    <>\n      <button\n        onClick={() => setIsModalOpen(true)}\n        className=\"px-2 py-1 bg-cyan-800 text-white rounded font-semibold\"\n      >\n        Change\n      </button>\n\n      <Modal\n        title=\"Update Subscription\"\n        className=\"antmodalclassName\"\n        open={isModalOpen}\n        onOk={handleOk}\n        onCancel={() => {setIsModalOpen(false);setStatus('') ; setType('')}}\n        confirmLoading={loading}\n        okText=\"Submit\"\n      >\n        <div style={{ marginBottom: 16 }}>\n          <label>Status:</label>\n          <Select\n            value={status || undefined}\n            onChange={handleStatusChange}\n            placeholder=\"Select subscription status\"\n            getPopupContainer={(trigger) => trigger.parentNode}\n            className={`${inputAntdSelectClassName} border-2`}\n            style={{ width: \"100%\" }}\n          >\n            {SUBSCRIPTION_STATUS_ARR.map((statusOption) => (\n              <Option key={statusOption} value={statusOption}>\n                {LABEL_MAP[statusOption] || statusOption}\n              </Option>\n            ))}\n          </Select>\n        </div>\n\n        <div>\n          <label>Type:</label>\n          <Select\n            value={type || undefined}\n            onChange={setType}\n            placeholder=\"Select subscription type\"\n            getPopupContainer={(trigger) => trigger.parentNode}\n            className={`${inputAntdSelectClassName} border-2`}\n            style={{ width: \"100%\" }}\n            disabled={!status}\n          >\n            {getFilteredTypeOptions().map((typeOption) => (\n              <Option key={typeOption} value={typeOption}>\n                {LABEL_MAP[typeOption] || typeOption}\n              </Option>\n            ))}\n          </Select>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default SubscriptionModal;\n","import React, { useState, useEffect, memo } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css'; // Import styles\nimport { FaRegFile, FaTimes } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fileUploadFunc } from '../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers';\nimport moment from 'moment';\nimport {\n    domainName,\n} from \"../../../constents/global\";\nimport { Modal } from 'antd';\n\nconst SendProposalModal = ({ isOpen, onClose, onSubmit, proposalData, setProposalId }) => {\n\n    const [formData, setFormData] = useState({\n        to: '',\n        cc: [],\n        subject: 'Regarding Proposal',\n        employeeName: '',\n        jobTitle: '',\n        companyName: '',\n        joiningDate: '',\n        joiningTime: '',\n        officeAddress: '',\n        salary: '',\n        salaryDuration: 'year',\n        confirmationDeadline: '',\n        hrContact: '',\n        senderName: '',\n        senderTitle: '',\n        portalURL: '',\n        portalUsername: '',\n        portalPassword: '',\n        attachments: []\n    });\n    const [isPreview, setIsPreview] = useState(false);\n    const [editorValue, setEditorValue] = useState(``);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        setFormData({\n            to: '',\n            cc: [],\n            subject: 'Regarding Proposal',\n            employeeName: '',\n            jobTitle: '',\n            companyName: '',\n            joiningDate: '',\n            joiningTime: '',\n            officeAddress: '',\n            salary: '',\n            salaryDuration: 'year',\n            confirmationDeadline: '',\n            hrContact: '',\n            senderName: '',\n            senderTitle: '',\n            portalURL: '',\n            portalUsername: '',\n            portalPassword: '',\n            attachments: []\n        });\n        if (proposalData) {\n\n            setFormData((formData) => {\n                return {\n                    ...formData,\n                    to: proposalData?.email\n                }\n            })\n            const fetchedData = `<div class=\"space-y-4 ${'text-gray-600'}\">\n         <div style=\"width: 80%; margin: 0 auto; padding: 20px; background-color: #ffffff; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\">\n        <h1 style=\"font-size: 24px; color: #0073e6;\">Welcome to ${proposalData.companyData?.fullName}!</h1>\n        <p style=\"font-size: 16px; line-height: 1.5;\">We are excited to have you join our team and begin this new chapter together.</p>\n\n        <p style=\"font-size: 16px; line-height: 1.5;\">As part of your onboarding process, we would like to ensure that you have access to all the necessary tools and resources. Below are the details to get started:</p>\n\n        <h3 style=\"font-size: 18px; color: #0073e6;\">Your First Day Information:</h3>\n        <ul style=\"font-size: 16px; line-height: 1.5;\">\n            <li><span style=\"font-weight: bold;\">Date:</span> ${moment(proposalData?.dateOfJoining).format('YYYY-MM-DD')}</li>\n            <li><span style=\"font-weight: bold;\">Reporting Time:</span> ${moment(proposalData?.dateOfJoining).format('HH:MM')}</li>\n            <li><span style=\"font-weight: bold;\">Location:</span> [Office Address / Virtual Meeting Link]</li>\n            <li><span style=\"font-weight: bold;\">Reporting To:</span> [Name and Designation of Reporting Manager/HR Contact]</li>\n        </ul>\n\n        <h3 style=\"font-size: 18px; color: #0073e6;\">Login Credentials:</h3>\n        <p style=\"font-size: 16px; line-height: 1.5;\">To facilitate a smooth onboarding process, we have set up your account in our HRMS (Human Resource Management System). Please use the credentials below to log in:</p>\n        <ul style=\"font-size: 16px; line-height: 1.5;\">\n            <li><span style=\"font-weight: bold;\">HRMS Portal Link:</span> [Insert HRMS URL]</li>\n            <li><span style=\"font-weight: bold;\">Username:</span> [Candidate's Email ID or Assigned Username]</li>\n            <li><span style=\"font-weight: bold;\">Temporary Password:</span> [Insert Temporary Password]</li>\n        </ul>\n        <p style=\"font-size: 16px; line-height: 1.5;\"><span style=\"font-weight: bold;\">Note:</span> For security purposes, please log in at your earliest convenience and update your password upon first login.</p>\n\n        <h3 style=\"font-size: 18px; color: #0073e6;\">Next Steps:</h3>\n        <ul style=\"font-size: 16px; line-height: 1.5;\">\n            <li><span style=\"font-weight: bold;\">Complete Your Profile:</span> Update your details (e.g., contact information, bank details, and personal information) in the HRMS portal.</li>\n            <li><span style=\"font-weight: bold;\">Access Onboarding Materials:</span> You will find important documents, policies, and onboarding checklists available in the system.</li>\n            <li><span style=\"font-weight: bold;\">Attend Orientation:</span> [Provide timing/details if applicable].</li>\n        </ul>\n\n        <p style=\"font-size: 16px; line-height: 1.5;\">If you face any issues accessing the portal or require assistance, please do not hesitate to reach out to me.</p>\n\n        <p style=\"font-size: 16px; line-height: 1.5;\">We are thrilled to have you on board and are confident you will have a wonderful journey with [Company Name]. Wishing you a fantastic start!</p>\n\n        <p style=\"font-size: 16px; line-height: 1.5;\">Once again, welcome aboard!</p>\n\n        <p style=\"font-size: 16px; line-height: 1.5;\">Best Regards,</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">${JSON.parse(localStorage.getItem(`user_info_${domainName}`))?.fullName}</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">[Your Designation]</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">${proposalData.companyData?.fullName}</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">[Contact Number]</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">${JSON.parse(localStorage.getItem(`user_info_${domainName}`))?.email}</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">[Company Website]</p>`\n            setEditorValue(fetchedData)\n        }\n    }, [proposalData])\n\n\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        const reqData = {\n            filePath: file,\n            isVideo: false,\n            isMultiple: false,\n        };\n        dispatch(fileUploadFunc(reqData)).then((res) => {\n            if (res?.payload?.data) {\n                setFormData(prev => ({\n                    ...prev,\n                    attachments: [...prev.attachments, res.payload?.data]\n                }));\n            }\n        });\n    };\n\n    const handleRemoveFile = (index) => {\n        setFormData(prev => {\n            const updatedAttachments = prev.attachments.filter((_, i) => i !== index);\n            return { ...prev, attachments: updatedAttachments };\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({\n            content: editorValue,\n            to: formData?.to,\n            cc: typeof formData?.cc === 'string' ? formData.cc.split(',').map(v => v.trim()) : [],\n            subject: formData?.subject,\n            attachments: formData?.attachments\n        });\n\n    };\n\n    const handleClose = () => {\n        setFormData({\n            to: '',\n            cc: [],\n            subject: '',\n            employeeName: '',\n            jobTitle: '',\n            companyName: '',\n            joiningDate: '',\n            joiningTime: '',\n            officeAddress: '',\n            salary: '',\n            salaryDuration: 'year',\n            confirmationDeadline: '',\n            hrContact: '',\n            senderName: '',\n            senderTitle: '',\n            portalURL: '',\n            portalUsername: '',\n            portalPassword: '',\n            attachments: []\n        });\n        setIsPreview(false);\n        setEditorValue('');\n        setProposalId([])\n        onClose();\n    };\n\n    const handleEditorChange = (value) => {\n        setEditorValue(value);\n    };\n\n    if (!isOpen) return null;\n\n    return (\n        // <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1501]\">\n        //     <div className=\"bg-white rounded-lg px-6 pt-6 pb-3 w-[800px] max-h-[70vh] overflow-y-hidden\">\n        //         <div className=\"flex justify-between items-center mb-4\">\n        //             <h2 className=\"text-sm font-semibold text-gray-800\">{isPreview ? 'Email Preview' : 'Proposal Email Template'}</h2>\n        //             <button onClick={handleClose} className=\"text-gray-500 hover:text-gray-700\"><FaTimes/></button>\n        //         </div>\n\n        <Modal\n            open={true}\n            onCancel={handleClose}\n            footer={null}\n            closable={true}\n            width={800}\n            bodyStyle={{ maxHeight: '70vh' }}\n            centered\n            zIndex={1501}\n        >\n            <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-sm font-semibold text-gray-800\">\n                    {isPreview ? 'Email Preview' : 'Proposal Email Template'}\n                </h2>\n            </div>\n\n            <form autoComplete=\"off\" onSubmit={handleSubmit} className=\"space-y-4 \">\n                <div className=\"bg-white p-6 rounded-lg border border-gray-200 h-[50vh] overflow-y-auto\">\n                    <div className=\"space-y-4\">\n                        {/* Email Header */}\n                        <div className=\"font-semibold text-sm\">To:\n                            <input\n                                name=\"to\"\n                                value={formData.to}\n                                onChange={handleChange}\n                                placeholder=\"Recipient Email\"\n                                className=\"border p-2 w-full\"\n                            />\n                        </div>\n                        <div className=\"font-semibold text-sm\">CC:\n                            <input\n                                name=\"cc\"\n                                value={formData.cc}\n                                onChange={handleChange}\n                                placeholder=\"CC Emails\"\n                                className=\"border p-2 w-full\"\n                            />\n                        </div>\n                        <div className=\"font-semibold text-sm\">Subject:\n                            <input\n                                name=\"subject\"\n                                value={formData.subject}\n                                onChange={handleChange}\n                                placeholder=\"Email Subject\"\n                                className=\"border p-2 w-full\"\n                            />\n                        </div>\n                    </div>\n\n                    {/* Email Body with React Quill */}\n                    <div className=\"mt-4\">\n                        <ReactQuill\n                            value={editorValue}\n                            onChange={handleEditorChange}\n                            placeholder=\"Write the email body here\"\n                            modules={{\n                                toolbar: [\n                                    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                                    ['bold', 'italic', 'underline', 'strike'],\n                                    [{ 'align': [] }],\n                                    ['link', 'image', 'video'],\n                                    ['blockquote', 'code-block'],\n                                    ['clean']\n                                ],\n                            }}\n                            formats={['header', 'font', 'list', 'bold', 'italic', 'underline', 'link', 'align', 'clean']}\n                        />\n                    </div>\n\n\n                    <div className=\"border-t pt-4 mt-6\">\n                        <div className=\"font-medium mb-2\">Attachments:</div>\n                        {!isPreview ? (\n                            <div className=\"space-y-4\">\n                                <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                                <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer\">\n                                    <FaRegFile className=\"mr-2\" /> Add Attachments\n                                </label>\n\n                                <div className=\"space-y-2\">\n                                    {formData.attachments.map((file, index) => (\n                                        <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                                            <a\n                                                href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                                                className=\"flex items-center space-x-2\"\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <FaRegFile className=\"text-gray-500\" />\n                                                <span className=\"text-sm text-gray-600\">{file}</span>\n                                            </a>\n                                            <button\n                                                type=\"button\"\n                                                onClick={() => handleRemoveFile(index)}\n                                                className=\"text-red-500 hover:text-red-700\"\n                                            >\n                                                <FaTimes />\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"space-y-2\">\n                                {/* Attachments preview logic */}\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"flex justify-end gap-3 mt-6\">\n                    {/* <button\n                            type=\"button\"\n                            onClick={() => setIsPreview(!isPreview)}\n                            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n                        >\n                            {isPreview ? 'Edit Template' : 'Preview'}\n                        </button> */}\n                    <button\n                        type=\"button\"\n                        onClick={handleClose}\n                        className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        type=\"submit\"\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700\"\n                    >\n                        Generate Email\n                    </button>\n                </div>\n            </form>\n        </Modal>\n        // </div>\n        // </div>\n    );\n};\n\nexport default SendProposalModal;\n"],"names":["_ref","isOpen","onClose","onSubmit","proposalData","setProposalId","formData","setFormData","useState","to","cc","subject","employeeName","jobTitle","companyName","joiningDate","joiningTime","officeAddress","salary","salaryDuration","confirmationDeadline","hrContact","senderName","senderTitle","portalURL","portalUsername","portalPassword","attachments","isPreview","setIsPreview","editorValue","setEditorValue","dispatch","useDispatch","useEffect","_objectSpread","email","handleChange","e","name","value","target","prev","handleClose","_jsxs","Modal","open","onCancel","footer","closable","width","style","maxHeight","centered","zIndex","children","_jsx","className","autoComplete","preventDefault","content","split","map","v","trim","onChange","placeholder","ReactQuill","modules","toolbar","formats","type","reqData","filePath","files","isVideo","isMultiple","fileUploadFunc","then","res","_res$payload","payload","data","_res$payload2","id","htmlFor","FaRegFile","file","index","href","concat","process","rel","onClick","updatedAttachments","filter","_","i","handleRemoveFile","FaTimes","_companyPlanHistoryDa","_companyPlanHistoryDa2","_subscriptionData$sta","_subscriptionData$inv","companyId","setcompanyId","isCompanyMailOpen","setIsCompanyMailOpen","copyToClipboard","text","navigator","clipboard","writeText","message","success","navigate","useNavigate","companyList","totalCompanyCount","companyPlanHistoryData","subscriptionData","companyInvoiceDetailsdata","useSelector","state","company","canCreate","canRead","canUpdate","canDelete","usePermissions","isModalOpen","setIsModalOpen","isChangeModalOpen","setIsChangeModalOpen","sortedList","setSortedList","companyEmail","setCompanyEmail","subscriptionModal","setSubscriptionModal","status","loading","detailsModal","setDetailsModal","amount","setAmount","error","setError","refundloading","setRefundloading","planListData","plan","currentPage","setCurrentPage","searchText","setSearchText","setStatus","setPlan","setLoading","loadingPlanHistory","setLoadingPlanHistory","async","fetchCompanyListData","fetchData","_companyInvoiceDetail","_companyInvoiceDetail2","amount_refunded","toFixed","page","limit","reqPayload","planId","isPagination","getCompanyList","console","planSearch","sort","handleSort","key","order","handleSortLogic","GlobalLayout","_Fragment","CompanyMail","emailData","sendProposalEmail","Swal","icon","title","html","confirmButtonColor","Select","inputAntdSelectClassNameFilter","showSearch","Option","element","_id","Tooltip","placement","FaPlus","FaAngleUp","FaAngleDown","colSpan","Loader2","length","_element$mobile","_element$mobile2","_element$planData","_element$addresses","fullName","userName","mobile","code","number","planData","formatAddress","addresses","primary","dayjs","createdAt","format","createdBy","Switch","size","checked","companyStatuspdate","backgroundColor","transition","height","encrypt","FaEye","Dropdown","menu","items","label","MdEmail","BiEdit","showCancelButton","cancelButtonText","result","isConfirmed","deleteCompany","handleDelete","RiDeleteBin5Line","cancelButtonColor","confirmButtonText","regeneratePassfunc","handleRegeneratePassword","TfiReload","companyPlanHistory","openplanHistoryModal","FaHistory","trigger","PiDotsThreeOutlineVerticalBold","Spin","planHistory","_element$planData$des","_element$planData2","_ref2","_ref3","_ref4","_element$planData3","_ref5","_element$createdBy","_element$status","description","days","price","billingCycle","subscriptionFunc","subscriptionId","prevState","handleSubscriptionView","wrapClassName","InfoRow","payment_method","plan_id","short_url","copyable","onCopy","color","link","req","handleEmailSubmit","total_count","paid_count","remaining_count","SubscriptionModal","capitalize","current_start","current_end","moment","TableHeader","invoiceList","item","_companyInvoiceDetail3","TableCell","order_id","CopyButton","amount_due","gross_amount","disabled","BiDetail","companyInvoiveDetail","paymentId","payment_id","handleinvoicedetailsView","borderRadius","bodyStyle","padding","textTransform","method","Date","created_at","toLocaleString","contact","companyInvoiceRefund","Number","handleSubmit","invoice_id","refund_status","notes","note","CustomPagination","totalCount","pageSize","_ref6","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_ref7","_ref8","_ref9","SUBSCRIPTION_STATUS_CANCELED","SUBSCRIPTION_STATUS_PAUSE_RESUME","SUBSCRIPTION_STATUS_ARR","SUBSCRIPTION_TYPE_OPTIONS","LABEL_MAP","cancel","pause_resume","immidate","pause","resume","setType","onOk","companySubscriptionStatus","warning","confirmLoading","okText","marginBottom","undefined","getPopupContainer","parentNode","inputAntdSelectClassName","statusOption","typeOption","_proposalData$company","_JSON$parse","_proposalData$company2","_JSON$parse2","fetchedData","companyData","dateOfJoining","JSON","parse","localStorage","getItem","domainName"],"sourceRoot":""}