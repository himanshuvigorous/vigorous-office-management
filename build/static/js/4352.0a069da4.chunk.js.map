{"version":3,"file":"static/js/4352.0a069da4.chunk.js","mappings":"+bA0hBA,QAjgBA,WACI,MAAM,SAAEA,EAAQ,QAAEC,EAAO,SAAEC,EAAUC,WAAW,OAAEC,KAAaC,EAAAA,EAAAA,MAGzDC,IADWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,OACXC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAC9D,gBAAEC,EAAe,sBAAEC,EAAqB,QAAEC,IAAYC,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,cACjF,YAAEC,EAAaC,QAASC,IAAwBL,EAAAA,EAAAA,IAAaC,GAAUA,EAAMK,UAE5EC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,CACnDG,QAAQ,EACRC,KAAM,QAEHC,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,CACnDG,QAAQ,EACRC,KAAM,QAEHG,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,CAC/CG,QAAQ,EACRC,KAAM,QAGHK,EAAaC,IAAkBV,EAAAA,EAAAA,UAAS,GACzCW,GAASC,EAAAA,EAAAA,IAAS,CACpBvC,UACAwC,KAAM,SACNC,aAAc,KAEZC,GAAYH,EAAAA,EAAAA,IAAS,CACvBvC,UACAwC,KAAM,YACNC,aAAcE,QAGZC,GAAUL,EAAAA,EAAAA,IAAS,CACrBvC,UACAwC,KAAM,UACNC,aAAcE,QAEZE,GAAaN,EAAAA,EAAAA,IAAS,CACxBvC,UACAwC,KAAM,aACNC,aAAc,KASZK,EAAU,CAACR,EAAQb,EAAYiB,EAAWE,EAASC,GAAYE,KAAK,MACnEC,EAAeC,IAAoBtB,EAAAA,EAAAA,WAAS,IAEnDuB,EAAAA,EAAAA,WAAU,KACDF,EAIe,IAAhBZ,EACAe,KAEAd,EAAe,GANfY,EAAiB9B,IAAS,IAQ/B,CAAC2B,KAEJI,EAAAA,EAAAA,WAAU,KAC4B,aAAd,OAAd1C,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,UAAsD,cAAf,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB6C,WAC/DF,MACD,CAACf,IAGJ,MAAMe,GAAuBA,KACzB,MAAMG,EAAU,CACZC,KAAMnB,EACNoB,MA/BM,GAgCNC,WAAY,CACRC,UAAyB,OAAdlD,QAAc,IAAdA,OAAc,EAAdA,EAAgBkD,UAC3BC,SAAwB,OAAdnD,QAAc,IAAdA,OAAc,EAAdA,EAAgBmD,SAC1BC,WAAY,GACZC,KAAMpC,EACNqC,MAAM,EACNxB,OAAQA,EACRyB,cAAc,EACd,UAAa,GACb,OAAU,GACV,WAAclB,EACd,aAA8B,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgBwD,aAChC,UAAa,GACb,YAAe,GACftB,UAAWA,EAAYC,IAAMD,GAAWuB,OAAO,cAAgB,GAC/DrB,QAASA,EAAUD,IAAMC,GAASqB,OAAO,cAAgB,KAK9C,OAAdzD,QAAc,IAAdA,GAAAA,EAAgBwD,cACrB3D,GAAS6D,EAAAA,EAAAA,IAAmBZ,KA+B1Ba,GAAsBA,KACxB9D,GACI+D,EAAAA,EAAAA,IAAc,CACVV,UAAyB,OAAdlD,QAAc,IAAdA,OAAc,EAAdA,EAAgBkD,UAC3BC,SAAwB,OAAdnD,QAAc,IAAdA,OAAc,EAAdA,EAAgBmD,SAC1BK,aAA4B,OAAdxD,QAAc,IAAdA,OAAc,EAAdA,EAAgBwD,aAC9BJ,WAAY,GACZC,KAAM,GACNC,MAAM,EACNxB,QAAQ,EACRyB,cAAc,EACdM,UAAU,EACVC,YAAY,MAKlBC,GAAqBA,CAACjC,EAAQkC,KAChCnE,GAASoE,EAAAA,EAAAA,IAAsB,CAE3B,IAAOD,EACP,OAAUlC,KAEVoC,KAAMC,IACDA,EAAIC,OACLzB,SAIN,UAAE0B,GAAS,QAAEC,GAAO,UAAEC,GAAS,UAAEC,KAAcC,EAAAA,EAAAA,KAMrD,MAAkC,aAAd,OAAdzE,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,UAAsD,cAAf,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB6C,WAEvD6B,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACTF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,8CAA6CD,UACxDF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,4BAA2BD,SAAC,wEAQrDF,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAACG,SAhBAC,IAEd7D,EAAc6D,IAcmBH,UAE7BI,EAAAA,EAAAA,MAAA,WAAAJ,SAAA,EACII,EAAAA,EAAAA,MAAA,OAAKH,UAAU,GAAED,SAAA,EAEbI,EAAAA,EAAAA,MAAA,OAAKH,UAAU,gGAA+FD,SAAA,EAG1GF,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACPjD,KAAK,aACLxC,QAASA,EACT0F,OAAQC,IAAA,IAAAC,EAAA,IAAC,MAAEC,GAAOF,EAAA,OACdH,EAAAA,EAAAA,MAACM,EAAAA,EAAM,CACHC,YAAU,EACVV,UAAS,uCACTW,SAAU/E,EACVgF,YAAY,kBACZC,QAAS/B,GACTgC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IAClBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQlB,UAAUoB,cAAcC,SAASJ,EAAMG,eAG1DE,MAAOb,EAAMa,OAAS,GACtBpB,SAAWqB,GAAQd,EAAMP,SAASqB,GAAKvB,SAAA,EAEvCF,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAACF,MAAM,GAAEtB,SAAC,oBACvB7D,GAAuB2D,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAACZ,UAAQ,EAAAZ,UAC3CF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,MAC2D,QAA1DjB,GAAKkB,EAAAA,EAAAA,IAA6BzF,EAAa,mBAAW,IAAAuE,OAAA,EAArDA,EAAuDmB,IAAKC,IAC7E9B,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAAiBF,MAAW,OAAJM,QAAI,IAAJA,OAAI,EAAJA,EAAMC,IAAI7B,SACvC,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAME,UADa,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMC,eAQ9C/B,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACPjD,KAAK,SACLxC,QAASA,EACTmH,MAAO,CAAC,EACRzB,OAAQ0B,IAAA,IAAC,MAAEvB,GAAOuB,EAAA,OACd5B,EAAAA,EAAAA,MAACM,EAAAA,GAAMuB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCxB,GAAK,IACTR,UAAS,mBAAAxE,OAAqByG,EAAAA,GAA8B,KAAAzG,OAAIV,EAAOmC,OACjE,gBACA,mBAEN2D,YAAY,gBACZE,YAAU,EACVC,aAAcA,CAACC,EAAOC,IAClBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQlB,UAAUoB,cAAcC,SAASJ,EAAMG,eACzDpB,SAAA,EAEDF,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAACF,MAAM,GAAEtB,SAAC,kBACN,OAAjBmC,EAAAA,SAAiB,IAAjBA,EAAAA,QAAiB,EAAjBA,EAAAA,GAAmBR,IAAIhF,IAGpByD,EAAAA,EAAAA,MAACM,EAAAA,EAAOc,OAAM,CAACvB,UAAU,aAAwBqB,MAAO3E,EAAKqD,SAAA,CAAC,IAAErD,EAAK,MAA1BA,cAM/DmD,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACPjD,KAAK,YACLxC,QAASA,EACTyC,aAAcE,MACd+C,OAAQ8B,IAAA,IAAC,MAAE3B,GAAO2B,EAAA,OACdtC,EAAAA,EAAAA,KAACuC,EAAAA,EAAgB,CACbC,QAAQ,EACR1B,SAAU/E,EACVgF,YAAY,aACZ0B,KAAM,SAAU9B,MAAOA,EAAO1F,OAAQA,UAItD+E,EAAAA,EAAAA,KAAA,OAAAE,UACIF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACPjD,KAAK,UACLkF,QAAQ,EACR1H,QAASA,EACTyC,aAAcE,MACd+C,OAAQkC,IAAA,IAAC,MAAE/B,GAAO+B,EAAA,OACd1C,EAAAA,EAAAA,KAACuC,EAAAA,EAAgB,CAACE,KAAM,SACpB3B,SAAU/E,EACVgF,YAAY,aACZyB,QAAQ,EAAM7B,MAAOA,EAAO1F,OAAQA,aAKxDqF,EAAAA,EAAAA,MAAA,OAAKH,UAAU,2CAA0CD,SAAA,EACrDF,EAAAA,EAAAA,KAAA,UACI2C,QAASA,KACL5H,EAAS,SAAU,IACnBA,EAAS,aAAc,IACvBA,EAAS,cAAe,IACxBA,EAAS,YAAa0C,OACtB1C,EAAS,UAAW0C,QAGxB0C,UAAU,sFAAqFD,UAC/FF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaD,SAAC,YAEjCP,KACGK,EAAAA,EAAAA,KAAC4C,EAAAA,EAAO,CAACC,UAAU,UAAUC,MAAM,WAAU5C,UACzCI,EAAAA,EAAAA,MAAA,UACIqC,QAASA,KAELhG,EAAmB,CACfC,QAAQ,EACRC,KAAM,QAGdsD,UAAU,yFAAwFD,SAAA,EAElGF,EAAAA,EAAAA,KAAC+C,EAAAA,IAAM,KACP/C,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaD,SAAC,yBAKlDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sDAAqDD,SAC9DN,KAAYU,EAAAA,EAAAA,MAAA,SAAOH,UAAU,+CAA8CD,SAAA,EACzEF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,GAAED,UACfI,EAAAA,EAAAA,MAAA,MAAIH,UAAU,kGAAiGD,SAAA,EAC3GF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,2CAA0CD,SAAC,WAIzDF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CD,SAAC,WAG1DF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CD,SAAC,iBAG1DF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CD,SAAC,gBAG1DF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CD,SAAC,gBAG1DF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CD,SAAC,gBAG1DF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CD,SAAC,cAG1DF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CD,SAAC,YAGxDJ,IAAaD,MAAcG,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CD,SAAC,gBAK9FnE,GAAUiE,EAAAA,EAAAA,KAAA,MAAIG,UAAU,yBAAwBD,UAC7CF,EAAAA,EAAAA,KAAA,MACIgD,QAAS,GACT7C,UAAU,+DAA8DD,UAExEF,EAAAA,EAAAA,KAACiD,EAAAA,EAAO,SAGZjD,EAAAA,EAAAA,KAAA,SAAAE,SACKrE,IAAkC,OAAfA,QAAe,IAAfA,OAAe,EAAfA,EAAiBqH,QAAS,EAC3B,OAAfrH,QAAe,IAAfA,OAAe,EAAfA,EAAiBgG,IAAI,CAACsB,EAASC,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAChCpD,EAAAA,EAAAA,MAAA,MAAIH,UAAS,mCAAAxE,OAAqCyH,EAAQ,IAAM,EAAI,kBAAoB,WAAU,+BAA8BlD,SAAA,EAC5HF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,gDAA+CD,SACxDkD,EAAQ,EAjTvC,IAiT6ClG,EAAc,MAEjC8C,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qCAAoCD,SAC/B,QAD+BmD,EACtC,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASL,aAAK,IAAAO,EAAAA,EAAI,OAEvBrD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qCAAoCD,SACZ,QADYoD,EACtC,OAAPH,QAAO,IAAPA,GAAuB,QAAhBI,EAAPJ,EAASQ,sBAAc,IAAAJ,OAAhB,EAAPA,EAAyBvB,gBAAQ,IAAAsB,EAAAA,EAAI,OAE1CtD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qCAAoCD,SACtB,QADsBsD,EACtC,OAAPL,QAAO,IAAPA,OAAO,EAAPA,EAASS,sBAAc,IAAAJ,EAAAA,EAAI,OAEhCxD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,4CAA2CD,SAAC,gBAG1DF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,kDAAiDD,cACzB2D,KAA1B,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASW,qBAAiC,GAAAnI,OAClCoI,KAAKC,MAAMb,EAAQW,oBAAsB,IAAG,MAAAnI,OAAKwH,EAAQW,oBAAsB,GAAE,KACpF,OAGV9D,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qCAAoCD,SAC3B,QAD2BuD,EACtC,OAAPN,QAAO,IAAPA,OAAO,EAAPA,EAASc,iBAAS,IAAAR,EAAAA,EAAI,OAE3BzD,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qCAAoCD,SACS,QADTwD,EAC7CjG,IAAa,OAAP0F,QAAO,IAAPA,OAAO,EAAPA,EAASe,WAAWnF,OAAO,6BAAqB,IAAA2E,EAAAA,EAAI,OAE/D1D,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qCAAoCD,UAC9CF,EAAAA,EAAAA,KAAA,QAAMG,UAAS,+CAAAxE,OAAuE,UAAf,OAAPwH,QAAO,IAAPA,OAAO,EAAPA,EAASgB,UAAsB,aACrE,YAAf,OAAPhB,QAAO,IAAPA,OAAO,EAAPA,EAASgB,UAAwB,gBAC7B,gBACDjE,SACK,OAAPiD,QAAO,IAAPA,GAAAA,EAASgB,SAAWhB,EAAQgB,SAASC,OAAO,GAAGC,cAAgBlB,EAAQgB,SAASG,MAAM,GAAK,SAGpGtE,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qCAAoCD,UAC9CF,EAAAA,EAAAA,KAACuE,EAAAA,EAAc,CAACpB,QAASA,EAAS9D,mBAAoBA,QAIxDS,IAAaD,MAAcG,EAAAA,EAAAA,KAAA,MAAIG,UAAU,oCAAmCD,UAC1EI,EAAAA,EAAAA,MAAA,QAAMH,UAAU,mDAAkDD,SAAA,CAC7DL,KACGG,EAAAA,EAAAA,KAAC4C,EAAAA,EAAO,CAACC,UAAU,UAAUC,MAAM,OAAM5C,UACrCF,EAAAA,EAAAA,KAAA,UACI2C,QAASA,KACL1F,EAAiB,CACbL,QAAQ,EACRC,KAAMsG,KAKdhD,UAAU,oEAAoE2B,KAAK,SAAQ5B,UAC3FF,EAAAA,EAAAA,KAACwE,EAAAA,IAAK,CAACrE,UAAU,uCAAuCsC,KAAM,SAIzE5C,KACGG,EAAAA,EAAAA,KAAC4C,EAAAA,EAAO,CACJC,UAAU,UACVC,MACwB,UAAb,OAAPK,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,QACjC,qCACA,OACT8C,UAEDF,EAAAA,EAAAA,KAAA,UACI2C,QAASA,KACmB,UAAb,OAAPQ,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAC3CL,EAAmB,CACfH,QAAQ,EACRC,KAAMsG,KAGdrC,SAA8B,UAAb,OAAPqC,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,QACjD+C,UAAS,gFAAAxE,OAAsG,UAAb,OAAPwH,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,QAC5H,gCACA,0BAEN0E,KAAK,SAAQ5B,UAEbF,EAAAA,EAAAA,KAACyE,EAAAA,IAAa,CACVtE,UAAS,GAAAxE,OAAyB,UAAb,OAAPwH,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,QAC/C,gBACA,uCAENqF,KAAM,SAMrB3C,KACGE,EAAAA,EAAAA,KAAC4C,EAAAA,EAAO,CACJC,UAAU,UACVC,MACwB,UAAb,OAAPK,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,QACjC,uCACA,SACT8C,UAEDF,EAAAA,EAAAA,KAAA,UACI2C,QAASA,KACmB,UAAb,OAAPQ,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAhWrFkC,KAClB,IAAIlB,EAAU,CACV2D,IAAKzC,GAEToF,IAAAA,KAAU,CACN5B,MAAO,UACPnE,KAAM,mCACNgG,KAAM,UACNC,kBAAkB,EAClBC,iBAAkB,OACnBrF,KAAMsF,IACDA,EAAOC,aACP5J,GAAS6J,EAAAA,EAAAA,IAAsB5G,IAAUoB,KAAM3C,IAGvCK,EAAc,GAAgC,IAAZ,OAAfrB,QAAe,IAAfA,OAAe,EAAfA,EAAiBqH,QACpC/F,EAAe8H,OAAO/H,EAAc,IAGpCe,UA8U4CiH,CAAoB,OAAP/B,QAAO,IAAPA,OAAO,EAAPA,EAASpB,MAE1BjB,SAA8B,UAAb,OAAPqC,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,QACjD+C,UAAS,wEAAAxE,OAA8F,UAAb,OAAPwH,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,QACpH,gCACA,wBAEN0E,KAAK,SAAQ5B,UAEbF,EAAAA,EAAAA,KAACmF,EAAAA,IAAgB,CACbhF,UAAS,GAAAxE,OAAyB,UAAb,OAAPwH,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,SAAyC,cAAb,OAAP+F,QAAO,IAAPA,OAAO,EAAPA,EAAS/F,QAC/C,gBACA,mCAENqF,KAAM,oBAUnCzC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,yBAAwBD,UACrCF,EAAAA,EAAAA,KAAA,MAAIgD,QAAS,GAAI7C,UAAU,2EAA0ED,SAAC,6BAM9HF,EAAAA,EAAAA,KAACoF,EAAAA,EAAgB,CACbC,WAAYvJ,EACZwJ,SA1bF,GA2bEpI,YAAaA,EACbkD,SA1bY/B,IACxBlB,EAAekB,OA4bP2B,EAAAA,EAAAA,KAACuF,EAAAA,EAAiB,CAAC3I,OAAuB,OAAfF,QAAe,IAAfA,OAAe,EAAfA,EAAiBE,OAAQC,KAAqB,OAAfH,QAAe,IAAfA,OAAe,EAAfA,EAAiBG,KAAM2I,sBAAuBvH,GAAsBwH,eAAgBA,IAAM9I,EAAmB,CACnKC,QAAQ,EACRC,KAAM,UAEVmD,EAAAA,EAAAA,KAAC0F,EAAAA,EAAiB,CAAC9I,OAAuB,OAAfE,QAAe,IAAfA,OAAe,EAAfA,EAAiBF,OAAQC,KAAqB,OAAfC,QAAe,IAAfA,OAAe,EAAfA,EAAiBD,KAAM2I,sBAAuBvH,GAAsBwH,eAAgBA,IAAM1I,EAAmB,CACnKH,QAAQ,EACRC,KAAM,UAEVmD,EAAAA,EAAAA,KAAC2F,EAAAA,EAAmB,CAAC/I,OAAqB,OAAbI,QAAa,IAAbA,OAAa,EAAbA,EAAeJ,OAAQC,KAAmB,OAAbG,QAAa,IAAbA,OAAa,EAAbA,EAAeH,KAAM2I,sBAAuBvH,GAAsBwH,eAAgBA,KACxIxI,EAAiB,CACbL,QAAQ,EACRC,KAAM,OAEVoB,YAOpB,C,iRCpFA,QApbA,SAA0BwC,GAA2D,IAADmF,EAAA,IAAzD,OAAEhJ,EAAM,KAAEC,EAAI,sBAAE2I,EAAqB,eAAEC,GAAgBhF,EAChF,MAAQ1E,QAAS8J,IAA2B7J,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,cACjE,SACJrB,EAAQ,aACRiL,EAAY,SACZ/K,EAAQ,QACRD,EAAO,MACPiL,EAAK,MACLC,EACAhL,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MAEE+K,EAAoB,OAAJpJ,QAAI,IAAJA,OAAI,EAAJA,EAAMkF,KACtB,cACJmE,EAAa,eACbC,EAAc,aACdC,EAAY,SACZjI,IACEkI,EAAAA,EAAAA,KAEElL,GAAWE,EAAAA,EAAAA,OACViL,EAAYC,IAAiB9J,EAAAA,EAAAA,UAAS,KAEvC,YAAEN,EAAaJ,QAASyK,IADPjL,KAAKC,MAAMC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAClBI,EAAAA,EAAAA,IAAaC,GAAUA,EAAMK,WACzE,sBAAEmK,IAA0BzK,EAAAA,EAAAA,IAAaC,GAAUA,EAAMyK,oBACzD,mBAAEC,IAAuB3K,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,aAEtD0K,GAAYvJ,EAAAA,EAAAA,IAAS,CACzBvC,UACAwC,KAAM,YACNC,aAAc,KAGVI,GAAaN,EAAAA,EAAAA,IAAS,CAC1BvC,UACAwC,KAAM,WACNC,aAAc,KA2BVsJ,GAxB6B,OAAX1K,QAAW,IAAXA,GAAmD,QAAxCyJ,EAAXzJ,EAAa2K,KAAKjK,IAAY,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMkF,OAAQpE,UAAW,IAAAiI,GAAnDA,EAAqDmB,gBAwBlDC,GAClBA,EAAYC,aAIrBjJ,EAAAA,EAAAA,WAAU,KACJpB,GAAUqJ,GACZ9K,GAAS+L,EAAAA,EAAAA,IAAsB,CAAEnF,IAAKkE,MAEvC,CAACrJ,EAAQqJ,KAGZjI,EAAAA,EAAAA,WAAU,KACUmJ,WAChB,GAAIvK,GAAU+J,EACZ,IAAK,IAADS,QACIC,QAAQC,IAAI,CAChBnM,GAASoM,EAAAA,EAAAA,IAAwB,CAC/B7I,WAAY,GACZF,UAA6B,OAAlBmI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBnI,UAC/BC,SAA4B,OAAlBkI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBlI,SAC9BE,KAAM,GACNC,MAAM,EACNxB,OAAQ,GACRyB,cAAc,OAMlBmH,EAAM,CACJ1I,KAAwB,OAAlBqJ,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoB7D,MAC1B0E,UAA6B,OAAlBb,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBa,UAC/BC,aAAgC,OAAlBd,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBe,YAClCC,SAA4B,OAAlBhB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBiB,WAC9BC,mBAAsC,OAAlBlB,QAAkB,IAAlBA,GAAkC,QAAhBS,EAAlBT,EAAoBhD,sBAAc,IAAAyD,OAAhB,EAAlBA,EAAoCpF,SACxD8F,YAA+B,OAAlBnB,QAAkB,IAAlBA,GAAAA,EAAoBoB,cAAgBtK,IAAwB,OAAlBkJ,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBoB,eAAiB,KAC5FC,aAAgC,OAAlBrB,QAAkB,IAAlBA,GAAAA,EAAoBsB,YAAcxK,IAAwB,OAAlBkJ,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBsB,aAAe,KACzFrB,UAA6B,OAAlBD,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBC,UAC/BsB,aAAgC,OAAlBvB,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBxC,WAIpCoC,GAAgC,OAAlBI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBL,aAAc,GAClD,CAAE,MAAO5G,GACPyI,QAAQzI,MAAM,uBAAwBA,EACxC,GAIJ0I,IACC,CAACxL,EAAQ+J,KAGZ3I,EAAAA,EAAAA,WAAU,IACD,KACL7C,GAASkN,EAAAA,EAAAA,QAEV,IAEH,MA8BMC,EAAeA,KACnBtC,IACAO,EAAc,IACdd,KAGF,OACEzF,EAAAA,EAAAA,KAACuI,EAAAA,EAAK,CACJzF,MAAM,sBACN0F,KAAM5L,EACN6L,SAAUH,EACVI,OAAQ,KACRC,MAAO,IACPC,UAAQ,EACRC,gBAAc,EACd1I,UAAU,oBAAmBD,UAE7BI,EAAAA,EAAAA,MAAA,QAAMwI,aAAa,MAAMC,SAAUjD,EA/CrBjJ,IAChB,MAAMmM,EAAe,CACnBjH,IAAKkE,EACLzH,UAA6B,OAAlBmI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBnI,UAC/BE,WAAY,GACZD,SAA4B,OAAlBkI,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBlI,SAC9BqE,MAAW,OAAJjG,QAAI,IAAJA,OAAI,EAAJA,EAAMS,KACbkK,UAA+B,aAAhB,OAAJ3K,QAAI,IAAJA,OAAI,EAAJA,EAAM+J,WAA8B,OAAJ/J,QAAI,IAAJA,OAAI,EAAJA,EAAM2K,UAAY,KAC7DE,YAAiB,OAAJ7K,QAAI,IAAJA,OAAI,EAAJA,EAAM4K,aACnBwB,YAAa,GACbrB,WAAgB,OAAJ/K,QAAI,IAAJA,OAAI,EAAJA,EAAM8K,SAClBI,cAAmB,OAAJlL,QAAI,IAAJA,OAAI,EAAJA,EAAMiL,YACrBG,YAAiB,OAAJpL,QAAI,IAAJA,OAAI,EAAJA,EAAMmL,aACnBpB,UAAe,OAAJ/J,QAAI,IAAJA,OAAI,EAAJA,EAAM+J,UACjBzC,SAAc,OAAJtH,QAAI,IAAJA,OAAI,EAAJA,EAAMqL,aAChB5B,WAAYA,EACZ4C,eAAgB,KAChBC,KAAM,IAGRhO,GAASiO,EAAAA,EAAAA,IAAsBJ,IAAexJ,KAAMsF,IAC7CA,EAAOpF,QACVsG,IACAO,EAAc,IACdd,IACAD,SAsBwDtF,SAAA,EACxDI,EAAAA,EAAAA,MAAA,OAAKH,UAAU,6CAA4CD,SAAA,EACzDI,EAAAA,EAAAA,MAAA,OAAKH,UAAU,GAAED,SAAA,EACfI,EAAAA,EAAAA,MAAA,SAAOH,UAAS,GAAAxE,OAAK0N,EAAAA,IAAsBnJ,SAAA,CAAC,eAC/BF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE5CF,EAAAA,EAAAA,KAAA,SAAAmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEL,KAAK,QACDjH,EAAS,OAAQ,CACnByO,SAAU,4BACV,IACFnJ,UAAS,GAAAxE,OAAK4N,EAAAA,GAAc,KAAA5N,OAAIV,EAAOqC,KAAO,iBAAmB,mBACjEyD,YAAY,sBAEb9F,EAAOqC,OACN0C,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCjF,EAAOqC,KAAKkM,cAKnBlJ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,GAAED,SAAA,EACfI,EAAAA,EAAAA,MAAA,SAAOH,UAAS,GAAAxE,OAAK0N,EAAAA,IAAsBnJ,SAAA,CAAC,cAChCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE3CI,EAAAA,EAAAA,MAAA,OAAKH,UAAU,GAAED,SAAA,EAEfF,EAAAA,EAAAA,KAAA,SAAAmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEL,KAAK,QACDjH,EAAS,uBAAqB,IAClCiG,UAAQ,EACRX,UAAS,GAAAxE,OAAK8N,EAAAA,GAAsB,KAAA9N,OAAIV,EAAOqC,KAAO,iBAAmB,mBACzEyD,YAAY,kBAEb9F,EAAOqC,OACN0C,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCjF,EAAOqC,KAAKkM,iBAOrBlJ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,SAAQD,SAAA,EACrBI,EAAAA,EAAAA,MAAA,SAAOH,UAAS,GAAAxE,OAAK0N,EAAAA,IAAsBnJ,SAAA,CAAC,kBAC5BF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE/CF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTzF,QAASA,EACTwC,KAAK,eACL2E,MAAO,CAAEqH,SAAU,6BACnB9I,OAAQ0B,IAAA,IAAAI,EAAA,IAAC,MAAE3B,GAAOuB,EAAA,OAChB5B,EAAAA,EAAAA,MAACM,EAAAA,GAAMuB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDxB,GAAK,IACTI,YAAY,uBACZZ,UAAS,GAAAxE,OAAK+N,EAAAA,GAAwB,KAAA/N,OAAIV,EAAOiN,aAAe,iBAAmB,mBACnFrB,kBAAmBA,EAAkB3G,SAAA,EAErCF,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAACF,MAAM,GAAEtB,SAAC,yBACY,QADwBoC,EAC3D,CAAC,MAAO,SAAU,OAAQ,iBAAS,IAAAA,OAAA,EAAnCA,EAAqCT,IAAIhF,IACxCmD,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAAYF,MAAO3E,EAAKqD,SAAErD,GAApBA,WAK3B5B,EAAOiN,eACNlI,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCjF,EAAOiN,aAAasB,cAK3BlJ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,SAAQD,SAAA,EACrBI,EAAAA,EAAAA,MAAA,SAAOH,UAAS,GAAAxE,OAAK0N,EAAAA,IAAsBnJ,SAAA,CAAC,eAC/BF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE5CF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTzF,QAASA,EACTwC,KAAK,YACL2E,MAAO,CAAEqH,SAAU,0BACnB9I,OAAQkC,IAAA,IAAAiH,EAAA,IAAC,MAAEhJ,GAAO+B,EAAA,OAChBpC,EAAAA,EAAAA,MAACM,EAAAA,GAAMuB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDxB,GAAK,IACTI,YAAY,oBACZZ,UAAS,GAAAxE,OAAK+N,EAAAA,GAAwB,KAAA/N,OAAIV,EAAO2L,UAAY,iBAAmB,mBAChFC,kBAAmBA,EAAkB3G,SAAA,EAErCF,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAACF,MAAM,GAAEtB,SAAC,sBACH,QADoCyJ,EACxD,CAAC,UAAW,gBAAQ,IAAAA,OAAA,EAApBA,EAAsB9H,IAAIhF,IACzBmD,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAAYF,MAAO3E,EAAKqD,SAAErD,GAApBA,WAK3B5B,EAAO2L,YACN5G,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCjF,EAAO2L,UAAU4C,aAKT,YAAd5C,IACCtG,EAAAA,EAAAA,MAAA,OAAKH,UAAU,SAAQD,SAAA,EACrBI,EAAAA,EAAAA,MAAA,SAAOH,UAAS,GAAAxE,OAAK0N,EAAAA,IAAsBnJ,SAAA,CAAC,YAClCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAEzCF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTzF,QAASA,EACTwC,KAAK,YACL2E,MAAO,CAAEqH,SAAU,uBACnB9I,OAAQoJ,IAAA,IAAC,MAAEjJ,GAAOiJ,EAAA,OAChBtJ,EAAAA,EAAAA,MAACM,EAAAA,GAAMuB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDxB,GAAK,IACTI,YAAY,iBACZZ,UAAS,GAAAxE,OAAK+N,EAAAA,GAAwB,KAAA/N,OAAIV,EAAOuM,UAAY,iBAAmB,mBAChFvG,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQlB,UAAUoB,cAAcC,SAASJ,EAAMG,eAExDuF,kBAAmBA,EAAkB3G,SAAA,EAErCF,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAACF,MAAM,GAAEtB,SAAC,mBACF,OAArBuG,QAAqB,IAArBA,OAAqB,EAArBA,EAAuB5E,IAAI,CAAChF,EAAMuG,KACjCpD,EAAAA,EAAAA,KAACY,EAAAA,EAAOc,OAAM,CAAaF,MAAW,OAAJ3E,QAAI,IAAJA,OAAI,EAAJA,EAAMkF,IAAI7B,SAAM,OAAJrD,QAAI,IAAJA,OAAI,EAAJA,EAAMiG,OAAhCM,WAK3BnI,EAAOuM,YACNxH,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCjF,EAAOuM,UAAUgC,cAM1BlJ,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEI,EAAAA,EAAAA,MAAA,SAAOH,UAAS,GAAAxE,OAAK0N,EAAAA,IAAsBnJ,SAAA,CAAC,eAC/BF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE5CF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTjD,KAAK,cACLxC,QAASA,EACTmH,MAAO,CAAEqH,UAAU,GACnB9I,OAAQqJ,IAAA,IAAC,MAAElJ,GAAOkJ,EAAA,OAChB7J,EAAAA,EAAAA,KAACuC,EAAAA,EAAgB,CACf5B,MAAOA,EACPmJ,UAAU,EACV/K,OAAO,mBACP9D,OAAQA,EACR8O,aAAeC,GACNA,GAAWA,EAAQC,SAASC,MAASC,MAAM,OAAQ,YAKjElP,EAAO6M,cACN9H,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAC,+BAIxCI,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,EACEI,EAAAA,EAAAA,MAAA,SAAOH,UAAS,GAAAxE,OAAK0N,EAAAA,IAAsBnJ,SAAA,CAAC,aACjCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE1CF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACTjD,KAAK,eACLxC,QAASA,EACTmH,MAAO,CAAEqH,UAAU,GACnB9I,OAAQ4J,IAAA,IAAC,MAAEzJ,GAAOyJ,EAAA,OAChBpK,EAAAA,EAAAA,KAACuC,EAAAA,EAAgB,CACf5B,MAAOA,EACPmJ,UAAU,EACV/K,OAAO,mBACP9D,OAAQA,EACR8O,aAAeC,GACNA,GAAWA,EAAQC,SAASC,MAASC,MAAM,OAAQ,YAKjElP,EAAO+M,eACNhI,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAC,6BAIxCI,EAAAA,EAAAA,MAAA,OAAKH,UAAU,aAAYD,SAAA,EACzBI,EAAAA,EAAAA,MAAA,SAAOH,UAAS,GAAAxE,OAAK0N,EAAAA,IAAsBnJ,SAAA,CAAC,gBAC9BF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE7CF,EAAAA,EAAAA,KAAA,YAAAmC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMtH,EAAS,eAAgB,CAC3ByO,SAAU,6BACV,IACFnJ,UAAS,GAAAxE,OAAK4N,EAAAA,GAAc,KAAA5N,OAAIV,EAAOwM,aAAe,iBAAmB,kBAAiB,SAC1F1G,YAAY,uBAEb9F,EAAOwM,eACNzH,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCjF,EAAOwM,aAAa+B,cAK3BlJ,EAAAA,EAAAA,MAAA,OAAKH,UAAU,uBAAsBD,SAAA,EACnCF,EAAAA,EAAAA,KAAA,SACE8B,KAAK,OACL1B,SAhVcC,IACxB,MAAMgK,EAAOhK,EAAEiK,OAAOC,MAAM,GAC5B,IAAKF,EAAM,OAEX,MAAMjM,EAAU,CACdoM,SAAUH,EACVI,SAAS,EACTC,YAAY,GAGdvP,GAASwP,EAAAA,EAAAA,IAAevM,IAAUoB,KAAMC,IAAS,IAADmL,EACvC,OAAHnL,QAAG,IAAHA,GAAY,QAATmL,EAAHnL,EAAKoL,eAAO,IAAAD,GAAZA,EAAc/N,MAChB0J,EAAeuE,IAAI,IAAAC,EAAA,MAAK,IAAID,EAAS,OAAHrL,QAAG,IAAHA,GAAY,QAATsL,EAAHtL,EAAKoL,eAAO,IAAAE,OAAT,EAAHA,EAAclO,WAqU1CsD,UAAU,SACVb,GAAG,iBAELgB,EAAAA,EAAAA,MAAA,SACE0K,QAAQ,cACR7K,UAAU,kJAAiJD,SAAA,EAE3JF,EAAAA,EAAAA,KAACiL,EAAAA,IAAS,CAAC9K,UAAU,SAAS,uBAGhCH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,SACb,OAAVoG,QAAU,IAAVA,OAAU,EAAVA,EAAYzE,IAAI,CAACwI,EAAMjH,KACtB9C,EAAAA,EAAAA,MAAA,OAEEH,UAAU,8DAA6DD,SAAA,EAEvEI,EAAAA,EAAAA,MAAA,KACE4K,KAAI,GAAAvP,OAAKwP,gCAAyC,YAAAxP,OAAW0O,GAC7DlK,UAAU,8BACVmK,OAAO,SACPc,IAAI,sBAAqBlL,SAAA,EAEzBF,EAAAA,EAAAA,KAACiL,EAAAA,IAAS,CAAC9K,UAAU,mBACrBH,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wBAAuBD,SACpCmK,QAGLrK,EAAAA,EAAAA,KAAA,UACE8B,KAAK,SACLa,QAASA,IA7VDS,KACxBmD,EAAeuE,GAAa,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMO,OAAO,CAACC,EAAGC,IAAMA,IAAMnI,KA4VtBoI,CAAiBpI,GAChCjD,UAAU,kCAAiCD,UAE3CF,EAAAA,EAAAA,KAACyL,EAAAA,IAAO,QAnBLrI,aA2Bf9C,EAAAA,EAAAA,MAAA,OAAKH,UAAU,kCAAiCD,SAAA,EAC9CF,EAAAA,EAAAA,KAAC0L,EAAAA,GAAM,CAAC/I,QAAS2F,EAAcxH,SAAU+E,EAAuB3F,SAAC,YAGjEF,EAAAA,EAAAA,KAAC0L,EAAAA,GAAM,CACL5J,KAAK,UACL6J,SAAS,SACT7K,SAAU+E,EACV9J,QAAS8J,EAAuB3F,SAE/B2F,EAAyB,cAAgB,kBAMtD,C","sources":["pages/Project management/ProjecttaskMagement/ManagerProjectTaskList.js","pages/Project management/ProjecttaskMagement/UpdateProjectTask.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\"\nimport { encrypt } from \"../../../config/Encryption\"\nimport { FaPlus, FaPenToSquare } from \"react-icons/fa6\"\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { domainName, inputAntdSelectClassNameFilter, ProjectTaskStatus, sortByPropertyAlphabetically } from \"../../../constents/global\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\"\nimport { Select, Tooltip } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport dayjs from \"dayjs\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport { deleteProjectTaskFunc, getProjectTaskList, statusProjectTaskFunc } from \"./ProjecttaskFeatures/_project_task_reducers\";\nimport CreateProjectTask from \"./CreateProjectTask\";\nimport UpdateProjectTask from \"./UpdateProjectTask\";\nimport { BsEye } from \"react-icons/bs\";\nimport LogsProjectTaskView from \"./LogsProjectTaskView\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport StatusDropdown from \"./StatusDropDown\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\n\nfunction ManagerProjectTaskList() {\n    const { register, control, setValue, formState: { errors } } = useForm();\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n    const { projectTaskList, totalProjectTaskCount, loading } = useSelector(state => state.projectTask)\n    const { employeList, laoding: employeelistLoading } = useSelector((state) => state.employe);\n\n    const [searchText, setSearchText] = useState(\"\");\n    const [openCreateModal, setOpenCreateModal] = useState({\n        isOpen: false,\n        data: null\n    })\n    const [openUpdateModal, setOpenUpdateModal] = useState({\n        isOpen: false,\n        data: null\n    })\n    const [openLogsModal, setOpenLogsModal] = useState({\n        isOpen: false,\n        data: null\n    })\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const status = useWatch({\n        control,\n        name: 'status',\n        defaultValue: ''\n    });\n    const startDate = useWatch({\n        control,\n        name: \"startDate\",\n        defaultValue: dayjs(),\n    });\n\n    const endDate = useWatch({\n        control,\n        name: \"endDate\",\n        defaultValue: dayjs(),\n    });\n    const employeeId = useWatch({\n        control,\n        name: \"employeeId\",\n        defaultValue: \"\",\n    });\n    const limit = 10;\n\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n\n    const filters = [status, searchText, startDate, endDate, employeeId].join(\"-\");\n    const [isFirstRender, setisFirstRender] = useState(false)\n\n    useEffect(() => {\n        if (!isFirstRender) {\n            setisFirstRender(state => true);\n            return;\n        }\n        if (currentPage === 1) {\n            fetchProjectTaskList();\n        } else {\n            setCurrentPage(1);\n        }\n    }, [filters])\n\n    useEffect(() => {\n        if (!(userInfoglobal?.roleKey === \"manager\" && userInfoglobal?.userType === \"employee\")) return\n        fetchProjectTaskList()\n    }, [currentPage])\n\n\n    const fetchProjectTaskList = () => {\n        const reqData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                companyId: userInfoglobal?.companyId,\n                branchId: userInfoglobal?.branchId,\n                directorId: \"\",\n                text: searchText,\n                sort: true,\n                status: status,\n                isPagination: true,\n                \"projectId\": \"\",\n                \"taskId\": \"\",\n                \"assignedTo\": employeeId,\n                \"departmentId\": userInfoglobal?.departmentId,\n                \"creatorId\": \"\",\n                \"followerIds\": [],\n                startDate: startDate ? dayjs(startDate).format('YYYY-MM-DD') : '',\n                endDate: endDate ? dayjs(endDate).format('YYYY-MM-DD') : '',\n\n\n            }\n        }\n        if (!userInfoglobal?.departmentId) return\n        dispatch(getProjectTaskList(reqData))\n    }\n\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id,\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteProjectTaskFunc(reqData)).then((data) => {\n                    // fetchVendorList()\n\n                    if (currentPage > 1 && projectTaskList?.length == 1) {\n                        setCurrentPage(Number(currentPage - 1));\n\n                    } else {\n                        fetchProjectTaskList();\n                    }\n                })\n            }\n        });\n    };\n\n\n\n    const handleEmployeeFocus = () => {\n        dispatch(\n            employeSearch({\n                companyId: userInfoglobal?.companyId,\n                branchId: userInfoglobal?.branchId,\n                departmentId: userInfoglobal?.departmentId,\n                directorId: \"\",\n                text: \"\",\n                sort: true,\n                status: true,\n                isPagination: false,\n                isBranch: true,\n                isDirector: false,\n            })\n        )\n    }\n\n    const handleStatusChange = (status, id) => {\n        dispatch(statusProjectTaskFunc({\n\n            \"_id\": id,\n            \"status\": status\n\n        })).then((res) => {\n            if (!res.error) {\n                fetchProjectTaskList()\n            }\n        })\n    }\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n    const onChange = (e) => {\n\n        setSearchText(e);\n    };\n    if (!(userInfoglobal?.roleKey === \"manager\" && userInfoglobal?.userType === \"employee\")) {\n        return (\n            <GlobalLayout>\n                <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n                    <p className=\"text-center font-semibold\">\n                        You are not a Manager. This page is viewable for Manager only.\n                    </p>\n                </div>\n            </GlobalLayout>\n        );\n    }\n    return (\n        <GlobalLayout onChange={onChange}>\n\n            <section>\n                <div className=\"\">\n\n                    <div className=\"grid grid-cols-1 sm:flex  gap-2 items-center justify-start py-1 text-[14px] rounded-md w-full\">\n\n\n                        <div >\n                            <Controller\n                                name=\"employeeId\"\n                                control={control}\n                                render={({ field }) => (\n                                    <Select\n                                        allowClear\n                                        className={`inputAntdSelectClassNameFilterReport`}\n                                        disabled={loading}\n                                        placeholder=\"Select Employee\"\n                                        onFocus={handleEmployeeFocus}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n\n                                        value={field.value || []}\n                                        onChange={(val) => field.onChange(val)}\n                                    >\n                                        <Select.Option value=\"\">Select Employee</Select.Option>\n                                        {employeelistLoading ? (<Select.Option disabled>\n                                            <ListLoader />\n                                        </Select.Option>) : (sortByPropertyAlphabetically(employeList, 'fullName')?.map((type) => (\n                                            <Select.Option key={type?._id} value={type?._id}>\n                                                {type?.fullName}\n                                            </Select.Option>\n                                        )))}\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                        <div >\n                            <Controller\n                                name=\"status\"\n                                control={control}\n                                rules={{}}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        className={`capitalize w-32 ${inputAntdSelectClassNameFilter} ${errors.status\n                                            ? \"border-[1px] \"\n                                            : \"border-gray-300\"\n                                            }`}\n                                        placeholder=\"Select Status\"\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                    >\n                                        <Select.Option value=\"\">Select Status</Select.Option>\n                                        {ProjectTaskStatus?.map(data =>\n\n\n                                            <Select.Option className=\"capitalize\" key={data} value={data}> {data} </Select.Option>)}\n\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                        <div >\n                            <Controller\n                                name=\"startDate\"\n                                control={control}\n                                defaultValue={dayjs()}\n                                render={({ field }) => (\n                                    <CustomDatePicker\n                                        report={true}\n                                        disabled={loading}\n                                        placeholder=\"Start date\"\n                                        size={\"middle\"} field={field} errors={errors} />\n                                )}\n                            />\n                        </div>\n                        <div >\n                            <Controller\n                                name=\"endDate\"\n                                report={true}\n                                control={control}\n                                defaultValue={dayjs()}\n                                render={({ field }) => (\n                                    <CustomDatePicker size={\"middle\"}\n                                        disabled={loading}\n                                        placeholder=\"Start date\"\n                                        report={true} field={field} errors={errors} />\n                                )}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"flex justify-end items-center gap-2 my-1\">\n                        <button\n                            onClick={() => {\n                                setValue(\"status\", \"\");\n                                setValue(\"PDBranchId\", '');\n                                setValue(\"PdCompanyId\", \"\");\n                                setValue(\"startDate\", dayjs());\n                                setValue(\"endDate\", dayjs());\n                                // setValue(\"PdDepartmentId\", \"\");\n                            }}\n                            className=\"bg-header   py-[5px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                        {canCreate &&\n                            <Tooltip placement=\"topLeft\" title='Add task'>\n                                <button\n                                    onClick={() => {\n                                        // navigate(\"/admin/project-task/create\");\n                                        setOpenCreateModal({\n                                            isOpen: true,\n                                            data: null\n                                        })\n                                    }}\n                                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n                                >\n                                    <FaPlus />\n                                    <span className=\"text-[12px]\">Add task</span>\n                                </button>\n                            </Tooltip>}\n                    </div>\n                </div>\n                <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n                    {(canRead) && <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n                        <thead className=''>\n                            <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                                <th className='border-none p-2 whitespace-nowrap w-[5%]'>\n                                    S.No.\n                                </th>\n\n                                <th className='border-none p-2 whitespace-nowrap w-[20%]'>\n                                    Title\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap w-[15%]'>\n                                    Assigned To\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                    Department\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap w-[15%]'>\n                                    Created By\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap w-[15%]'>\n                                    Created At\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                    Priority\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                    Status\n                                </th>\n                                {(canDelete || canUpdate) && <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                    Action\n                                </th>}\n                            </tr>\n                        </thead>\n                        {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                            <td\n                                colSpan={10}\n                                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                            >\n                                <Loader2 />\n                            </td>\n                        </tr> :\n                            <tbody>\n                                {projectTaskList && projectTaskList?.length > 0 ?\n                                    projectTaskList?.map((element, index) => (\n                                        <tr className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151] text-[14px]`}>\n                                            <td className='whitespace-nowrap border-none p-2 text-center'>\n                                                {index + 1 + ((currentPage - 1) * limit)}\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                {element?.title ?? \"-\"}\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                {element?.assignedToData?.fullName ?? \"-\"}\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                {element?.departmentName ?? \"-\"}\n                                            </td>\n                                            <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                                Time Spent\n                                            </th>\n                                            <td className='whitespace-nowrap border-none text-teal-600 p-2'>\n                                                {element?.totalTimeSpentInMin !== undefined\n                                                    ? `${Math.floor(element.totalTimeSpentInMin / 60)}h ${element.totalTimeSpentInMin % 60}m`\n                                                    : \"-\"}\n                                            </td>\n\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                {element?.createdBy ?? \"-\"}\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                {dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') ?? \"-\"}\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                <span className={`px-2 py-1 rounded-lg text-white text-[12px] ${element?.priority === 'high' ? 'bg-red-500' :\n                                                    element?.priority === 'medium' ? 'bg-yellow-500' :\n                                                        'bg-green-500'\n                                                    }`}>\n                                                    {element?.priority ? element.priority.charAt(0).toUpperCase() + element.priority.slice(1) : \"-\"}\n                                                </span>\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                <StatusDropdown element={element} handleStatusChange={handleStatusChange} />\n\n\n                                            </td>\n                                            {(canDelete || canUpdate) && <td className='whitespace-nowrap border-none p-2'>\n                                                <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                    {canUpdate &&\n                                                        <Tooltip placement=\"topLeft\" title='view'>\n                                                            <button\n                                                                onClick={() => {\n                                                                    setOpenLogsModal({\n                                                                        isOpen: true,\n                                                                        data: element\n\n                                                                    })\n\n                                                                }}\n                                                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                                <BsEye className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} />\n                                                            </button>\n                                                        </Tooltip>\n                                                    }\n                                                    {canUpdate && (\n                                                        <Tooltip\n                                                            placement=\"topLeft\"\n                                                            title={\n                                                                element?.status === \"done\" || element?.status === \"rejected\"\n                                                                    ? \"Edit not allowed for Done/Rejected\"\n                                                                    : \"Edit\"\n                                                            }\n                                                        >\n                                                            <button\n                                                                onClick={() => {\n                                                                    if (element?.status === \"done\" || element?.status === \"rejected\") return;\n                                                                    setOpenUpdateModal({\n                                                                        isOpen: true,\n                                                                        data: element,\n                                                                    });\n                                                                }}\n                                                                disabled={element?.status === \"done\" || element?.status === \"rejected\"}\n                                                                className={`px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted transition ${element?.status === \"done\" || element?.status === \"rejected\"\n                                                                    ? \"opacity-50 cursor-not-allowed\"\n                                                                    : \"hover:border-[#337ab7]\"\n                                                                    }`}\n                                                                type=\"button\"\n                                                            >\n                                                                <FaPenToSquare\n                                                                    className={`${element?.status === \"done\" || element?.status === \"rejected\"\n                                                                        ? \"text-gray-400\"\n                                                                        : \"text-[#3c8dbc] hover:text-[#337ab7]\"\n                                                                        }`}\n                                                                    size={16}\n                                                                />\n                                                            </button>\n                                                        </Tooltip>\n                                                    )}\n\n                                                    {canDelete && (\n                                                        <Tooltip\n                                                            placement=\"topLeft\"\n                                                            title={\n                                                                element?.status === \"done\" || element?.status === \"rejected\"\n                                                                    ? \"Delete not allowed for Done/Rejected\"\n                                                                    : \"Delete\"\n                                                            }\n                                                        >\n                                                            <button\n                                                                onClick={() => {\n                                                                    if (element?.status === \"done\" || element?.status === \"rejected\") return;\n                                                                    handleDelete(element?._id);\n                                                                }}\n                                                                disabled={element?.status === \"done\" || element?.status === \"rejected\"}\n                                                                className={`px-2 py-1.5 rounded-md bg-transparent border border-muted transition ${element?.status === \"done\" || element?.status === \"rejected\"\n                                                                    ? \"opacity-50 cursor-not-allowed\"\n                                                                    : \"hover:border-red-400\"\n                                                                    }`}\n                                                                type=\"button\"\n                                                            >\n                                                                <RiDeleteBin5Line\n                                                                    className={`${element?.status === \"done\" || element?.status === \"rejected\"\n                                                                        ? \"text-gray-400\"\n                                                                        : \"text-red-600 hover:text-red-500\"\n                                                                        }`}\n                                                                    size={16}\n                                                                />\n                                                            </button>\n                                                        </Tooltip>\n                                                    )}\n\n                                                </span>\n                                            </td>}\n                                        </tr>\n                                    ))\n                                    : (<tr className=\"bg-white bg-opacity-5 \" >\n                                        <td colSpan={10} className=\"px-6 py-2 whitespace-nowrap font-[600] text-center text-sm text-gray-500\">No Tasks Found</td>\n                                    </tr>)}\n                            </tbody>}\n                    </table>}\n                </div>\n\n                <CustomPagination\n                    totalCount={totalProjectTaskCount}\n                    pageSize={limit}\n                    currentPage={currentPage}\n                    onChange={onPaginationChange}\n                />\n\n                <CreateProjectTask isOpen={openCreateModal?.isOpen} data={openCreateModal?.data} fetchListAfterSuccess={fetchProjectTaskList} closeModalFunc={() => setOpenCreateModal({\n                    isOpen: false,\n                    data: null\n                })} />\n                <UpdateProjectTask isOpen={openUpdateModal?.isOpen} data={openUpdateModal?.data} fetchListAfterSuccess={fetchProjectTaskList} closeModalFunc={() => setOpenUpdateModal({\n                    isOpen: false,\n                    data: null\n                })} />\n                <LogsProjectTaskView isOpen={openLogsModal?.isOpen} data={openLogsModal?.data} fetchListAfterSuccess={fetchProjectTaskList} closeModalFunc={() => {\n                    setOpenLogsModal({\n                        isOpen: false,\n                        data: null\n                    })\n                    fetchProjectTaskList()\n                }\n                } />\n            </section>\n\n        </GlobalLayout>\n    )\n}\nexport default ManagerProjectTaskList","import { useEffect, useState } from \"react\";\nimport { useForm, Controller, useWatch } from \"react-hook-form\";\nimport { Modal, Select, Button, Space } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport getUserIds from '../../../constents/getUserIds';\nimport { domainName, inputAntdSelectClassName, inputClassName, inputDisabledClassName, inputLabelClassName, sortByPropertyAlphabetically } from \"../../../constents/global\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport { getProjectTaskDetails, projectTaskreset, updateProjectTaskFunc } from \"./ProjecttaskFeatures/_project_task_reducers\";\nimport { projectmanagementSearch } from \"../ProjectManagement/ProjectManagementFeatures/_ProjectManagement_reducers\";\nimport { FaRegFile, FaTimes } from \"react-icons/fa\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport { fileUploadFunc } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\n\nfunction UpdateProjectTask({ isOpen, data, fetchListAfterSuccess, closeModalFunc }) {\n  const { loading: projectTaskListLoading } = useSelector(state => state.projectTask);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    control,\n    watch,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const projectTaskId = data?._id;\n  const {\n    userCompanyId,\n    userDirectorId,\n    userBranchId,\n    userType\n  } = getUserIds();\n\n  const dispatch = useDispatch();\n  const [attachment, setAttachment] = useState([]);\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { employeList, loading: employeeLoading } = useSelector((state) => state.employe);\n  const { projectmanagementList } = useSelector((state) => state.projectManagement);\n  const { projectTaskDetails } = useSelector((state) => state.projectTask);\n\n  const relatedTo = useWatch({\n    control,\n    name: \"relatedTo\",\n    defaultValue: \"\",\n  });\n\n  const employeeId = useWatch({\n    control,\n    name: \"employee\",\n    defaultValue: \"\",\n  });\n\n  const reportingperson = employeList?.find(data => data?._id === employeeId)?.reportingperson;\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setAttachment((prev) => [...prev, res?.payload?.data]);\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setAttachment((prev) => prev?.filter((_, i) => i !== index));\n  };\n\n  // Get dropdown container for select elements to work properly in modal\n  const getPopupContainer = (triggerNode) => {\n    return triggerNode.parentNode;\n  };\n\n  // Fetch task details when modal opens\n  useEffect(() => {\n    if (isOpen && projectTaskId) {\n      dispatch(getProjectTaskDetails({ _id: projectTaskId }));\n    }\n  }, [isOpen, projectTaskId]);\n\n  // Set form values when details are loaded\n  useEffect(() => {\n    const fetchData = async () => {\n      if (isOpen && projectTaskDetails) {\n        try {\n          await Promise.all([\n            dispatch(projectmanagementSearch({\n              directorId: \"\",\n              companyId: projectTaskDetails?.companyId,\n              branchId: projectTaskDetails?.branchId,\n              text: '',\n              sort: true,\n              status: '',\n              isPagination: false,\n            })),\n\n          ]);\n\n          // Set form values\n          reset({\n            name: projectTaskDetails?.title,\n            projectId: projectTaskDetails?.projectId,\n            descriptions: projectTaskDetails?.description,\n            employee: projectTaskDetails?.assignedTo,\n            assignedPersonname: projectTaskDetails?.assignedToData?.fullName,\n            checkInTime: projectTaskDetails?.startDateTime ? dayjs(projectTaskDetails?.startDateTime) : null,\n            checkOutTime: projectTaskDetails?.endDateTime ? dayjs(projectTaskDetails?.endDateTime) : null,\n            relatedTo: projectTaskDetails?.relatedTo,\n            taskPriority: projectTaskDetails?.priority,\n\n          });\n\n          setAttachment(projectTaskDetails?.attachment || []);\n        } catch (error) {\n          console.error(\"Error fetching data:\", error);\n        }\n      }\n    };\n\n    fetchData();\n  }, [isOpen, projectTaskDetails]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      dispatch(projectTaskreset());\n    };\n  }, []);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: projectTaskId, // Include ID for update\n      companyId: projectTaskDetails?.companyId,\n      directorId: \"\",\n      branchId: projectTaskDetails?.branchId,\n      title: data?.name,\n      projectId: data?.relatedTo === \"project\" ? data?.projectId : null,\n      description: data?.descriptions,\n      followerIds: [],\n      assignedTo: data?.employee,\n      startDateTime: data?.checkInTime,\n      endDateTime: data?.checkOutTime,\n      relatedTo: data?.relatedTo,\n      priority: data?.taskPriority,\n      attachment: attachment,\n      estimatedHours: null,\n      tags: [],\n    };\n\n    dispatch(updateProjectTaskFunc(finalPayload)).then((result) => {\n      if (!result.error) {\n        reset();\n        setAttachment([]);\n        closeModalFunc();\n        fetchListAfterSuccess(); // Refresh the parent list\n      }\n    });\n  };\n\n  const handleCancel = () => {\n    reset();\n    setAttachment([]);\n    closeModalFunc();\n  };\n\n  return (\n    <Modal\n      title=\"Update Project Task\"\n      open={isOpen}\n      onCancel={handleCancel}\n      footer={null}\n      width={800}\n      centered\n      destroyOnClose\n      className=\"antmodalclassName\"\n    >\n      <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 my-4\">\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>\n              Task Title <span className=\"text-red-600\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              {...register(\"name\", {\n                required: \"Task Title is required\",\n              })}\n              className={`${inputClassName} ${errors.name ? \"border-red-500\" : \"border-gray-300\"}`}\n              placeholder=\"Enter Task Title\"\n            />\n            {errors.name && (\n              <p className=\"text-red-500 text-sm\">\n                {errors.name.message}\n              </p>\n            )}\n          </div>\n\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>\n              Assign To <span className=\"text-red-600\">*</span>\n            </label>\n            <div className=\"\">\n\n              <input\n                type=\"text\"\n                {...register(\"assignedPersonname\")}\n                disabled\n                className={`${inputDisabledClassName} ${errors.name ? \"border-red-500\" : \"border-gray-300\"}`}\n                placeholder=\"Assigned To \"\n              />\n              {errors.name && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.name.message}\n                </p>\n              )}\n            </div>\n\n          </div>\n\n          <div className=\"w-full\">\n            <label className={`${inputLabelClassName}`}>\n              Task Priority <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              control={control}\n              name=\"taskPriority\"\n              rules={{ required: \"Task Priority is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  placeholder=\"Select Task Priority\"\n                  className={`${inputAntdSelectClassName} ${errors.taskPriority ? \"border-red-500\" : \"border-gray-300\"}`}\n                  getPopupContainer={getPopupContainer}\n                >\n                  <Select.Option value=\"\">Select Task Priority</Select.Option>\n                  {['low', 'medium', 'high', 'urgent']?.map(data =>\n                    <Select.Option key={data} value={data}>{data}</Select.Option>\n                  )}\n                </Select>\n              )}\n            />\n            {errors.taskPriority && (\n              <p className=\"text-red-500 text-sm\">\n                {errors.taskPriority.message}\n              </p>\n            )}\n          </div>\n\n          <div className=\"w-full\">\n            <label className={`${inputLabelClassName}`}>\n              Related To <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              control={control}\n              name=\"relatedTo\"\n              rules={{ required: \"Related To is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  placeholder=\"Select Related To\"\n                  className={`${inputAntdSelectClassName} ${errors.relatedTo ? \"border-red-500\" : \"border-gray-300\"}`}\n                  getPopupContainer={getPopupContainer}\n                >\n                  <Select.Option value=\"\">Select Related To</Select.Option>\n                  {['project', 'other']?.map(data =>\n                    <Select.Option key={data} value={data}>{data}</Select.Option>\n                  )}\n                </Select>\n              )}\n            />\n            {errors.relatedTo && (\n              <p className=\"text-red-500 text-sm\">\n                {errors.relatedTo.message}\n              </p>\n            )}\n          </div>\n\n          {relatedTo === \"project\" && (\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>\n                Project <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                control={control}\n                name=\"projectId\"\n                rules={{ required: \"Project is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    placeholder=\"Select Project\"\n                    className={`${inputAntdSelectClassName} ${errors.projectId ? \"border-red-500\" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    getPopupContainer={getPopupContainer}\n                  >\n                    <Select.Option value=\"\">Select Project</Select.Option>\n                    {projectmanagementList?.map((data, index) =>\n                      <Select.Option key={index} value={data?._id}>{data?.title}</Select.Option>\n                    )}\n                  </Select>\n                )}\n              />\n              {errors.projectId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.projectId.message}\n                </p>\n              )}\n            </div>\n          )}\n\n          <div>\n            <label className={`${inputLabelClassName}`}>\n              Start Time <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              name=\"checkInTime\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field }) => (\n                <CustomDatePicker\n                  field={field}\n                  showTime={true}\n                  format=\"DD/MM/YYYY HH:mm\"\n                  errors={errors}\n                  disabledDate={(current) => {\n                    return current && current.isBefore(moment().endOf('day'), 'day');\n                  }}\n                />\n              )}\n            />\n            {errors.checkInTime && (\n              <p className=\"text-red-500 text-sm\">Start Time is required</p>\n            )}\n          </div>\n\n          <div>\n            <label className={`${inputLabelClassName}`}>\n              End Time <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              name=\"checkOutTime\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field }) => (\n                <CustomDatePicker\n                  field={field}\n                  showTime={true}\n                  format=\"DD/MM/YYYY HH:mm\"\n                  errors={errors}\n                  disabledDate={(current) => {\n                    return current && current.isBefore(moment().endOf('day'), 'day');\n                  }}\n                />\n              )}\n            />\n            {errors.checkOutTime && (\n              <p className=\"text-red-500 text-sm\">End Time is required</p>\n            )}\n          </div>\n\n          <div className=\"col-span-2\">\n            <label className={`${inputLabelClassName}`}>\n              Description <span className=\"text-red-600\">*</span>\n            </label>\n            <textarea\n              {...register(\"descriptions\", {\n                required: \"Description is required\",\n              })}\n              className={`${inputClassName} ${errors.descriptions ? \"border-red-500\" : \"border-gray-300\"} h-24`}\n              placeholder=\"Enter description\"\n            />\n            {errors.descriptions && (\n              <p className=\"text-red-500 text-sm\">\n                {errors.descriptions.message}\n              </p>\n            )}\n          </div>\n\n          <div className=\"col-span-2 space-y-4\">\n            <input\n              type=\"file\"\n              onChange={handleFileChange}\n              className=\"hidden\"\n              id=\"file-upload\"\n            />\n            <label\n              htmlFor=\"file-upload\"\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer hover:bg-gray-50\"\n            >\n              <FaRegFile className=\"mr-2\" /> Add Attachments\n            </label>\n\n            <div className=\"space-y-2\">\n              {attachment?.map((file, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\"\n                >\n                  <a\n                    href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                    className=\"flex items-center space-x-2\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <FaRegFile className=\"text-gray-500\" />\n                    <span className=\"text-sm text-gray-600\">\n                      {file}\n                    </span>\n                  </a>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleRemoveFile(index)}\n                    className=\"text-red-500 hover:text-red-700\"\n                  >\n                    <FaTimes />\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end space-x-4 mt-6\">\n          <Button onClick={handleCancel} disabled={projectTaskListLoading}>\n            Cancel\n          </Button>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={projectTaskListLoading}\n            loading={projectTaskListLoading}\n          >\n            {projectTaskListLoading ? 'Updating...' : 'Update'}\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default UpdateProjectTask;"],"names":["register","control","setValue","formState","errors","useForm","dispatch","useNavigate","useDispatch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","projectTaskList","totalProjectTaskCount","loading","useSelector","state","projectTask","employeList","laoding","employeelistLoading","employe","searchText","setSearchText","useState","openCreateModal","setOpenCreateModal","isOpen","data","openUpdateModal","setOpenUpdateModal","openLogsModal","setOpenLogsModal","currentPage","setCurrentPage","status","useWatch","name","defaultValue","startDate","dayjs","endDate","employeeId","filters","join","isFirstRender","setisFirstRender","useEffect","fetchProjectTaskList","roleKey","userType","reqData","page","limit","reqPayload","companyId","branchId","directorId","text","sort","isPagination","departmentId","format","getProjectTaskList","handleEmployeeFocus","employeSearch","isBranch","isDirector","handleStatusChange","id","statusProjectTaskFunc","then","res","error","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsx","GlobalLayout","children","className","onChange","e","_jsxs","Controller","render","_ref","_sortByPropertyAlphab","field","Select","allowClear","disabled","placeholder","onFocus","showSearch","filterOption","input","option","String","toLowerCase","includes","value","val","Option","ListLoader","sortByPropertyAlphabetically","map","type","_id","fullName","rules","_ref2","_objectSpread","inputAntdSelectClassNameFilter","ProjectTaskStatus","_ref3","CustomDatePicker","report","size","_ref4","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","element","index","_element$title","_element$assignedToDa","_element$assignedToDa2","_element$departmentNa","_element$createdBy","_dayjs$format","assignedToData","departmentName","undefined","totalTimeSpentInMin","Math","floor","createdBy","createdAt","priority","charAt","toUpperCase","slice","StatusDropdown","BsEye","FaPenToSquare","Swal","icon","showCancelButton","cancelButtonText","result","isConfirmed","deleteProjectTaskFunc","Number","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","pageSize","CreateProjectTask","fetchListAfterSuccess","closeModalFunc","UpdateProjectTask","LogsProjectTaskView","_employeList$find","projectTaskListLoading","handleSubmit","watch","reset","projectTaskId","userCompanyId","userDirectorId","userBranchId","getUserIds","attachment","setAttachment","employeeLoading","projectmanagementList","projectManagement","projectTaskDetails","relatedTo","getPopupContainer","find","reportingperson","triggerNode","parentNode","getProjectTaskDetails","async","_projectTaskDetails$a","Promise","all","projectmanagementSearch","projectId","descriptions","description","employee","assignedTo","assignedPersonname","checkInTime","startDateTime","checkOutTime","endDateTime","taskPriority","console","fetchData","projectTaskreset","handleCancel","Modal","open","onCancel","footer","width","centered","destroyOnClose","autoComplete","onSubmit","finalPayload","followerIds","estimatedHours","tags","updateProjectTaskFunc","inputLabelClassName","required","inputClassName","message","inputDisabledClassName","inputAntdSelectClassName","_ref5","_ref6","_ref7","showTime","disabledDate","current","isBefore","moment","endOf","_ref8","file","target","files","filePath","isVideo","isMultiple","fileUploadFunc","_res$payload","payload","prev","_res$payload2","htmlFor","FaRegFile","href","process","rel","filter","_","i","handleRemoveFile","FaTimes","Button","htmlType"],"sourceRoot":""}