{"version":3,"file":"static/js/3763.5a16b179.chunk.js","mappings":"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","sources":["pages/hr/attendance/HrAttendanceManagment.js","pages/hr/attendance/ManualAttendanceModal.js","pages/hr/attendance/UpdateManualAttendanceModal .js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { FaPenToSquare, FaPlus } from \"react-icons/fa6\";\nimport { FaEye } from \"react-icons/fa\";\n\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\n\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport moment from \"moment/moment\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  inputAntdSelectClassNameFilter,\n  showSwal,\n  sortByPropertyAlphabetically,\n} from \"../../../constents/global\";\nimport {\n\n  attendanceStatus,\n  deleteattendanceg,\n  getattendancegList,\n} from \"./AttendanceFeatures/_attendance_reducers\";\nimport ManualAttendanceModal from \"./ManualAttendanceModal\";\nimport UpdateManualAttendanceModal from \"./UpdateManualAttendanceModal \";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { Select, Tooltip, Dropdown, Modal } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { MdDoneAll } from \"react-icons/md\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport { PiDotsThreeOutlineVerticalBold } from 'react-icons/pi';\nimport { CgComment } from \"react-icons/cg\";\nimport { IoPersonSharp } from \"react-icons/io5\";\nimport { AiOutlineTags } from \"react-icons/ai\";\n\nimport { GoogleMap, Marker, } from '@react-google-maps/api';\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\n\nfunction HrAttendanceManagment() {\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { attendanceList, totalattendancegCount, loading } = useSelector(\n    (state) => state.attendance\n  );\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [filterText, setFilterText] = useState(\"\");\n  const [debouncedFilterText, setDebouncedFilterText] = useState(filterText);\n  const [isManualModalOpen, setIsManualModalOpen] = useState(false);\n  const [isManualUpdateModalOpen, setIsManualUpdateModalOpen] = useState(false);\n  const [updateId, setUpdateId] = useState(\"\");\n  const pageSize = 10;\n  const { companyList } = useSelector((state) => state.company);\n  const { employeList, laoding: employeelistLoading } = useSelector((state) => state.employe);\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const employeeId = useWatch({\n    control,\n    name: \"employeeId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: [\"present\"],\n  });\n\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n    defaultValue: dayjs(),\n  });\n\n  const endDate = useWatch({\n    control,\n    name: \"endDate\",\n    defaultValue: dayjs(),\n  });\n\n  const isVerified = useWatch({\n    control,\n    name: \"isVerified\",\n    defaultValue: \"\",\n  });\n\n\n\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId: userInfoglobal?.userType === \"company\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.companyId,\n        branchId:\n          [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: '',\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    )\n  }\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteattendanceg(reqData)).then((data) => {\n          // fetchattendanceListData();\n          if (currentPage > 1 && attendanceList?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n\n          } else {\n            fetchattendanceListData();\n          }\n        });\n      }\n    });\n  };\n\n\n\n  const [empDetailModalData, setEmpDetailModalData] = useState({});\n  const [empCheckInDetailModalOpen, setEmpCheckinDetailModalOpen] = useState(false);\n  const [checkIn, setCheckIn] = useState('')\n\n  const handleEmployeeCheckInModal = (element, checkInOrCheckOut) => {\n    setCheckIn(checkInOrCheckOut)\n    setEmpCheckinDetailModalOpen(true);\n    setEmpDetailModalData(element);\n  };\n\n\n  const handleApprove = (id) => {\n    let reqData = {\n      _id: id,\n    };\n\n    // Show confirmation Swal before proceeding with API call\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to Approve?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // Dispatch the action to approve attendance\n        dispatch(attendanceStatus(reqData)).then((data) => {\n          if (!data.error) {\n            // If success, show success Swal\n            Swal.fire({\n              title: \"Approved!\",\n              text: \"The attendance has been approved successfully.\",\n              icon: \"success\",\n              confirmButtonText: \"OK\",\n            }).then(() => {\n              // Reload the attendance list\n              fetchattendanceListData();\n            });\n          } else {\n            // If error, show error Swal\n            Swal.fire({\n              title: \"Error!\",\n              text: \"There was an issue approving the attendance. Please try again.\",\n              icon: \"error\",\n              confirmButtonText: \"OK\",\n            });\n          }\n        }).catch((error) => {\n          // In case of network errors or unforeseen issues\n          Swal.fire({\n            title: \"Error!\",\n            text: \"An unexpected error occurred. Please try again later.\",\n            icon: \"error\",\n            confirmButtonText: \"OK\",\n          });\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(filterText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [filterText]);\n  useEffect(() => {\n    if (CompanyId) {\n      setValue(\"PDBranchId\", \"\");\n    }\n  }, [CompanyId]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const [searchText, setSearchText] = useState(\"\");\n\n  const filters = [CompanyId, debouncedFilterText, BranchId, searchText, Status, startDate, endDate, isVerified, employeeId].join(\"-\");\n\n  const [isFirstRender, setisFirstRender] = useState(false)\n\n  useEffect(() => {\n    if (!isFirstRender) {\n      setisFirstRender(state => true);\n      return;\n    }\n    if (currentPage === 1) {\n      fetchattendanceListData();\n    } else {\n      setCurrentPage(1);\n    }\n  }, [filters]);\n  useEffect(() => {\n    fetchattendanceListData(debouncedFilterText);\n  }, [\n    currentPage,\n\n  ]);\n  const fetchattendanceListData = (filterText) => {\n    let reqData = {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        shift: \"\",\n        workType: \"\",\n        text: searchText,\n        isPresentDay: Status,\n        status: isVerified == 'true' ? true : isVerified == 'false' ? false : '',\n        sort: true,\n        isPagination: true,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        startDate: startDate ? dayjs(startDate).format('YYYY-MM-DD') : '',\n        endDate: endDate ? dayjs(endDate).format('YYYY-MM-DD') : '',\n        employeId: employeeId ? employeeId : '',\n      },\n    };\n    dispatch(getattendancegList(reqData));\n  };\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId]);\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1 sm:space-y-[4px] space-y-1\">\n        <div className=\"2xl:flex justify-between items-center sm:space-y-[2px] space-y-1\">\n          <div className=\"grid grid-cols-1 sm:flex sm:flex-wrap gap-2 items-center py-1 text-[14px] rounded-md\">\n            {userInfoglobal?.userType === \"admin\" && (\n              <div className=\"\">\n                <Controller\n                  name=\"PDCompanyId\"\n                  control={control}\n                  rules={{\n                    required: \"Company is required\",\n                  }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select Company\"\n                      disabled={loading}\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Company</Select.Option>\n                      {companyList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.fullName}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.PDCompanyId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDCompanyId.message}\n                  </p>\n                )}\n              </div>\n            )}\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    rules={{\n                      required: \"Branch is required\",\n                    }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Select Branch\"\n                        disabled={loading}\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children).toLowerCase().includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchListloading ? (<Select.Option disabled>\n                          <ListLoader />\n                        </Select.Option>) : (branchList?.map((type) => (\n                          <Select.Option key={type?._id} value={type?._id}>\n                            {type?.fullName}\n                          </Select.Option>\n                        )))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n\n\n            <div className=\"\">\n              <Controller\n                name=\"employeeId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    allowClear\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    disabled={loading}\n                    placeholder=\"Select Employee\"\n                    onFocus={handleEmployeeFocus}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  >\n                    <Select.Option value=\"\">Select Employee</Select.Option>\n                    {employeelistLoading ? (<Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>) : (sortByPropertyAlphabetically(employeList, 'fullName')?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"isVerified\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={` w-32 ${inputAntdSelectClassNameFilter}`}\n                    placeholder=\"Select isVerified\"\n                    showSearch\n                    disabled={loading}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select isVerified</Select.Option>\n                    <Select.Option value=\"true\"> Yes </Select.Option>\n                    <Select.Option value='false'>No</Select.Option>\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    mode=\"multiple\"\n                    {...field}\n                    className={`   inputAntdMultiSelectClassNameFilterReport ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Select Status\"\n                    showSearch\n                    disabled={loading}\n                    defaultValue={\"present\"}\n                  >\n                   \n                    <Select.Option value=\"present\"> Present </Select.Option>\n                    <Select.Option value=\"firstHalf\">\n                      {\" \"}\n                      First Half{\" \"}\n                    </Select.Option>\n                    <Select.Option value=\"secondHalf\">\n                      {\" \"}\n                      Second Half{\" \"}\n                    </Select.Option>\n                    <Select.Option value=\"leave\">\n                      {\" \"}\n                      Leave{\" \"}\n                    </Select.Option>\n                    <Select.Option value=\"absent\">\n                      {\" \"}\n                      Absent{\" \"}\n                    </Select.Option>\n                    <Select.Option value=\"off\">\n                      {\" \"}\n                      OFF{\" \"}\n                    </Select.Option>\n                    <Select.Option value=\"holiday\">\n                      {\" \"}\n                      holiday{\" \"}\n                    </Select.Option>\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"startDate\"\n                control={control}\n                defaultValue={dayjs()}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    disabled={loading}\n                    size={\"middle\"} field={field} errors={errors} />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"endDate\"\n                report={true}\n                control={control}\n                defaultValue={dayjs()}\n                render={({ field }) => (\n                  <CustomDatePicker size={\"middle\"}\n                    disabled={loading}\n                    report={true} field={field} errors={errors} />\n                )}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"flex w-full justify-end items-center gap-2 \">\n          <button\n            onClick={() => {\n              setValue(\"PDBranchId\", \"\");\n              setValue(\"PdCompanyId\", \"\");\n              setValue(\"status\", ['present']);\n              setValue(\"isVerified\", \"\");\n              setValue(\"startDate\", dayjs());\n              setValue(\"endDate\", dayjs());\n              setValue(\"employeeId\", \"\");\n            }}\n            className=\"bg-header py-[5px] rounded-md flex px-5 justify-center items-center  text-white\"\n          >\n            <span className=\"text-[12px]\">Reset</span>\n          </button>\n          {(canCreate && canRead) &&\n            <Tooltip placement=\"topLeft\" title=\"Add Manual Attendence\">\n              <button\n                onClick={() => setIsManualModalOpen(true)}\n\n                className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n              >\n                <FaPlus />\n                <span className=\"text-[12px]\">Manual Attendance</span>\n              </button>\n            </Tooltip>}\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          {canRead &&\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"tableHead w-[5%]\">\n                    S.No.\n                  </th>\n                  <th className=\"tableHead w-[10%]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Profile</span>\n                    </div>\n                  </th>\n                  <th className=\"tableHead\">\n                    Employee Name\n                  </th>\n\n                  <th className=\"tableHead\">\n                    Attendance Date\n                  </th>\n                  <th className=\"tableHead\">\n                    Check-In Time\n                  </th>\n                  <th className=\"tableHead\">\n                    Check-Out Time\n                  </th>\n                  <th className=\"tableHead\">\n                    <div className=\"flex gap-1\">Worked Hours (HH:MM)</div>\n                  </th>\n                  <th className=\"tableHead\">\n                    Pending Hours (HH:MM)\n                  </th>\n                  <th className=\"tableHead\">\n                    Overtime Hours (HH:MM)\n                  </th>\n                  <th className=\"tableHead\">Is WFH</th>\n                  <th className=\"tableHead\">Status</th>\n                  <th className=\"tableHead\">Last Updated By</th>\n                  <th className=\"tableHead\">Is Verified</th>\n\n                  {(canUpdate || canDelete) && <th className=\"tableHead w-[10%]\">\n                    Action\n                  </th>}\n                </tr>\n              </thead>\n              {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={10}\n                  className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr> :\n                <tbody>\n                  {attendanceList && attendanceList?.length > 0 ? (\n                    attendanceList?.map((element, index) => (\n                      <tr\n                        className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                          } border-[#DDDDDD] text-[#374151]`}\n                      >\n                        <td className=\"tableData\">\n                          {index + 1 + (currentPage - 1) * pageSize}\n                        </td>\n\n                        <td className=\"tableData\">\n                          {element.profileImage ? (\n                            <img\n                              alt=\"\"\n                              src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                              className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                            />\n                          ) : (\n                            <img\n                              alt=\"\"\n                              src={`/images/avatar.jpg`}\n                              className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                            />\n                          )}\n                        </td>\n\n                        <td className=\"tableData\">\n                          {element.employeName}\n                        </td>\n\n                        <td className=\"tableData\">\n                          {moment(element.attendanceDate).format(\"DD-MM-YYYY\")}\n                        </td>\n\n                        <td className=\"tableData\">\n                          <div className=\"flex gap-2 justify-center items-center\">\n                            {element.checkInTime\n                              ? dayjs(element.checkInTime).format(\"DD-MM-YYYY hh:mm A\")\n                              : \"-\"}\n                            {element.checkInTime ?\n                              <FaEye\n                                onClick={() => handleEmployeeCheckInModal(element, 'checkin')}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              /> : ''}\n                          </div>\n                        </td>\n\n                        <td className=\"tableData\">\n                          <div className=\"flex gap-2 justify-center items-center\">\n                            {element.checkOutTime\n                              ? dayjs(element.checkOutTime).format(\"DD-MM-YYYY hh:mm A\")\n                              : \"-\"}\n                            {element.checkOutTime ?\n                              <FaEye\n                                onClick={() => handleEmployeeCheckInModal(element, 'checkout')}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              /> : ''}\n                          </div>\n                        </td>\n\n                        <td className=\"tableData\">\n                          {convertMinutesToHoursAndMinutes(element.workedHRS)}\n                        </td>\n\n                        <td className=\"tableData\">\n                          {convertMinutesToHoursAndMinutes(element.pendingHRS)}\n                        </td>\n\n                        <td className=\"tableData\">\n                          {convertMinutesToHoursAndMinutes(element.overtimeHRS)}\n                        </td>\n\n\n\n                    <td className=\"tableData\">{element.isWFHapplied ? \"Yes\" : \"No\"}</td>\n\n                        <td className=\"tableData\">\n                          <Tooltip placement=\"topLeft\" title={`status - ${element.isPresentDay}`}>\n                            <span\n                              className={\n                                (() => {\n                                  switch (element.isPresentDay) {\n                                    case \"present\":\n                                      return \"bg-[#E0FFBE] border-green-500\"; // Green for present\n                                    case \"absent\":\n                                      return \"bg-red-200 border-red-500\"; // Red for absent\n                                    case \"leave\":\n                                      return \"bg-yellow-300 border-yellow-500\"; // Yellow for leave\n                                    case \"off\":\n                                      return \"bg-gray-300 border-gray-500\"; // Gray for off\n                                    case \"holiday\":\n                                      return \"bg-blue-200 border-blue-500\"; // Blue for holiday\n                                    case \"firstHalf\":\n                                      return \"bg-orange-200 border-orange-500\"; // Orange for first half\n                                    case \"secondHalf\":\n                                      return \"bg-purple-200 border-purple-500\"; // Purple for second half\n                                    default:\n                                      return \"bg-white border-gray-400\"; // Default case for undefined states\n                                  }\n                                })() +\n                                \" border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px] capitalize\"\n                              }\n                            >\n                              {element.isPresentDay}\n                            </span>\n                          </Tooltip>\n                        </td>\n                        <td className=\"tableData\">{element.updatedBy || \"-\"}</td>\n                        <td className=\"tableData\">{(element.status == false && element.isPresentDay=='present') ? \"No\" : 'Yes'}</td>\n\n                        {(canUpdate || canDelete) &&\n                          <td className=\"tableData\">\n                            <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                              {canUpdate && <Tooltip placement=\"topLeft\" title={(element?.status === false && element.isPresentDay=='present') ? \"Approve Attendence\" : \"Alredy Approved\"}>\n                                <button\n                                  disabled={element.isPresentDay !=='present' || element?.status !== false}\n                                  onClick={() => handleApprove(element?._id)}\n                                  className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted hover:bg-red-100\"\n                                  type=\"button\"\n                                >\n                                  <MdDoneAll\n                                    className={(element?.status === false && element.isPresentDay=='present') ? \"text-cyan-600 hover:text-cyan-500\" : \"text-gray-400\"}\n                                    size={16}\n                                  />\n                                </button>\n                              </Tooltip>}\n\n                              <Tooltip placement=\"topLeft\" title='More Actions'>\n                                <Dropdown\n                                  menu={{\n                                    items: [\n                                      {\n                                        key: 'view-comment',\n                                        label: (\n                                          <span\n                                            onClick={() =>\n                                              showSwal(element?.reason || \"Data not available\")\n                                            }\n                                            className=\"flex items-center text-blue-800 hover:text-blue-700\"\n                                          >\n                                            <CgComment className=\"mr-2\" size={16} />\n                                            View Comment\n                                          </span>\n                                        ),\n                                      },\n                                      canUpdate && {\n                                        key: 'edit-attendance',\n                                        label: (\n                                          <span\n                                            onClick={() => {\n                                              setIsManualUpdateModalOpen(true);\n                                              setUpdateId(element?._id);\n                                            }}\n                                            className=\"flex items-center text-[#3c8dbc] hover:text-[#337ab7]\"\n                                          >\n                                            <FaPenToSquare className=\"mr-2\" size={16} />\n                                            Edit Attendance\n                                          </span>\n                                        ),\n                                      },\n                                      canDelete && {\n                                        key: 'delete-attendance',\n                                        label: (\n                                          <span\n                                            onClick={() => handleDelete(element?._id)}\n                                            className=\"flex items-center text-red-600 hover:text-red-500\"\n                                          >\n                                            <RiDeleteBin5Line className=\"mr-2\" size={16} />\n                                            Delete Attendance\n                                          </span>\n                                        ),\n                                      },\n                                    ].filter(Boolean),\n                                  }}\n                                  trigger={['click']}\n                                >\n                                  <button\n                                    className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                    type=\"button\"\n                                  >\n                                    <PiDotsThreeOutlineVerticalBold\n                                      className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                      size={16}\n                                    />\n                                  </button>\n                                </Dropdown>\n                              </Tooltip>\n                            </span>\n                          </td>}\n                      </tr>\n                    ))\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={15}\n                        className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>}\n\n            </table>}\n\n          <Modal\n            className=\"antmodalclassName sm:!w-[60%] !w-[100%] !h-[50%]\"\n            title={`Employee Name : ${empDetailModalData?.employeName} `}\n            open={empCheckInDetailModalOpen}\n            onCancel={() => setEmpCheckinDetailModalOpen(false)}\n            footer={null}\n          >\n            <div className=\"flex justify-between items-center mb-4\">\n              <table className=\"w-full rounded-lg shadow-md overflow-hidden bg-white\">\n                <thead>\n                  <tr>\n                    <th className=\"text-header\">\n                      <div className=\"mt-2 ml-2\">{` `}</div>\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"text-sm text-gray-700\">\n                  <tr className=\"hover:bg-indigo-50\">\n                    <td className=\"p-3 text-gray-600\">\n                      <div className=\"flex items-center gap-2\">\n                        <AiOutlineTags className=\"size-4 text-header text-lg\" />\n                        <span className=\"text-[16px] font-medium\">Address</span>\n                      </div>\n                      <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                        {(checkIn === 'checkin'\n                          ? empDetailModalData?.checkInLocation?.address\n                          : empDetailModalData?.checkOutLocation?.address) || 'N/A'}\n                      </span>\n                    </td>\n\n                    <td className=\"p-3 text-gray-600\">\n                      <div className=\"flex items-center gap-2\">\n                        <IoPersonSharp className=\"size-4 text-header text-lg\" />\n                        <span className=\"text-[16px] font-medium\">\n                          Distance From Branch\n                        </span>\n                      </div>\n                      <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                        {checkIn === 'checkin'\n                          ? empDetailModalData?.checkInLocation?.disatnceInMeter\n                          : empDetailModalData?.checkOutLocation?.disatnceInMeter}\n                      </span>\n                    </td>\n                  </tr>\n\n                  <tr className=\"hover:bg-indigo-50\">\n                    <td className=\"p-3 text-gray-600\">\n                      <div className=\"flex items-center gap-2\">\n                        <AiOutlineTags className=\"size-4 text-header text-lg\" />\n                        <span className=\"text-[16px] font-medium\">Latitude</span>\n                      </div>\n                      <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                        {checkIn === 'checkin'\n                          ? empDetailModalData?.checkInLocation?.latitude\n                          : empDetailModalData?.checkOutLocation?.latitude}\n                      </span>\n                    </td>\n\n                    <td className=\"p-3 text-gray-600\">\n                      <div className=\"flex items-center gap-2\">\n                        <IoPersonSharp className=\"size-4 text-header text-lg\" />\n                        <span className=\"text-[16px] font-medium\">Longitude</span>\n                      </div>\n                      <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                        {checkIn === 'checkin'\n                          ? empDetailModalData?.checkInLocation?.longitude\n                          : empDetailModalData?.checkOutLocation?.longitude}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n\n            <div className=\"h-[400px] w-full rounded-lg overflow-hidden shadow-md\">\n              {empDetailModalData && (\n\n                <GoogleMap\n                  mapContainerStyle={{\n                    width: '100%',\n                    height: '400px'\n                  }}\n                  center={{\n                    lat: checkIn === 'checkin'\n                      ? empDetailModalData?.checkInLocation?.latitude\n                      : empDetailModalData?.checkOutLocation?.latitude,\n                    lng: checkIn === 'checkin'\n                      ? empDetailModalData?.checkInLocation?.longitude\n                      : empDetailModalData?.checkOutLocation?.longitude\n                  }}\n                  zoom={15}\n                >\n                  <Marker\n                    position={{\n                      lat: checkIn === 'checkin'\n                        ? empDetailModalData?.checkInLocation?.latitude\n                        : empDetailModalData?.checkOutLocation?.latitude,\n                      lng: checkIn === 'checkin'\n                        ? empDetailModalData?.checkInLocation?.longitude\n                        : empDetailModalData?.checkOutLocation?.longitude\n                    }}\n                  />\n                </GoogleMap>\n\n              )}\n            </div>\n\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={totalattendancegCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n      {isManualModalOpen && (\n        <ManualAttendanceModal\n          isOpen={true}\n          onClose={() => setIsManualModalOpen(false)}\n          fetchattendanceListData={fetchattendanceListData}\n        />\n      )}\n      {isManualUpdateModalOpen && (\n        <UpdateManualAttendanceModal\n          isOpen={true}\n          onClose={() => setIsManualUpdateModalOpen(false)}\n          updateId={updateId}\n          fetchattendanceListData={fetchattendanceListData}\n        />\n      )}\n    </GlobalLayout>\n  );\n}\n\nexport default HrAttendanceManagment;\n","import React, { useEffect } from 'react';\nimport { Controller, useForm, useWatch } from 'react-hook-form';\nimport moment from 'moment';\nimport { employeSearch } from '../../employeManagement/employeFeatures/_employe_reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName, inputLabelClassNameReactSelect, sortByPropertyAlphabetically } from '../../../constents/global';\nimport { companySearch } from '../../company/companyManagement/companyFeatures/_company_reducers';\nimport { deptSearch } from '../../department/departmentFeatures/_department_reducers';\nimport { branchSearch } from '../../branch/branchManagement/branchFeatures/_branch_reducers';\nimport { attendancegCreate } from './AttendanceFeatures/_attendance_reducers';\nimport { useNavigate } from 'react-router-dom';\nimport ReactSelect from \"react-select\";\nimport Swal from 'sweetalert2';\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker.js\";\nimport dayjs from 'dayjs';\nimport { Modal, Select, TimePicker } from 'antd';\nimport Loader from '../../../global_layouts/Loader.js';\nimport ListLoader from '../../../global_layouts/ListLoader.js';\nimport { timeSlotSearch } from '../../timeSlot/timeSlotsFeatures/_timeSlots_reducers.js';\nconst ManualAttendanceModal = ({ isOpen, onClose, fetchattendanceListData }) => {\n  const { register, handleSubmit,watch, control, setValue, reset, formState: { errors } } = useForm({\n    defaultValues: {\n      employeeName: '',\n      date: '',\n      checkInTime: '',\n      checkOutTime: '',\n      reason: '',\n      errors: {},\n    }\n  });\n  const Option = Select.Option;\n  const { timeSlotsListData } = useSelector(state => state.timeSlots)\n  const navigate = useNavigate();\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n\n  const departmentId = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n    defaultValue: \"\",\n  });\n  const designationId = useWatch({\n    control,\n    name: \"PDDesignationId\",\n    defaultValue: \"\",\n  });\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const dispatch = useDispatch();\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const { companyList, companyListLoading } = useSelector((state) => state.company);\n  const { loading: atentdanceLoading } = useSelector((state) => state.attendance);\n  const { employeList } = useSelector((state) => state.employe);\n\nconst parseToISOString = (date, timeStr) => {\n  if (!timeStr) return null;\n  const formattedDate = dayjs(date).format('YYYY-MM-DD');\n  const trimmedTime = timeStr.trim();\n  const hasAMPM = /AM|PM/i.test(trimmedTime);\n  const format = hasAMPM ? 'YYYY-MM-DD HH:mm A' : 'YYYY-MM-DD HH:mm';\n  const dateTimeString = `${formattedDate} ${trimmedTime}`;\n\n  const parsed = moment(dateTimeString, format, true); // strict parsing\n  if (!parsed.isValid()) {\n    return null;\n  }\n  return parsed.toISOString();\n};\n  const onFormSubmit = (data) => {\n\nconsole.log(data)\n    const reqData = {\n      employeId: data?.employee,\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      directorId: userInfoglobal?.userType === \"companyDirector\" ? userInfoglobal?._id : userInfoglobal?.directorId,\n      // checkInTime: new Date(new Date(data.date).setHours(...data.checkInTime.split(':').map(Number), 0, 0)).toISOString(),\n      // checkOutTime: data.checkOutTime ? new Date(new Date(data.date).setHours(...data.checkOutTime.split(':').map(Number), 0, 0)).toISOString() : null,\n      attendanceDate: dayjs(data.checkInTime).format('YYYY-MM-DD'),\n     checkInTime: data?.checkInTime ? data?.checkInTime : null,\n    checkOutTime: data.checkOutTime ? data?.checkOutTime : null,\n      method: \"hr_portal\",\n      reason: data.reason,\n      employeeName: data.employeeName,\n      isVerified: true,\n      shift: data.shift,\n    };\n\n    dispatch(attendancegCreate(reqData)).then((response) => {\n      if (!response.error) {\n\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Attendance record has been created successfully.',\n          confirmButtonText: 'OK',\n          customClass: {\n            confirmButton: 'bg-header text-white hover:bg-[#063156]',\n          },\n        });\n        fetchattendanceListData();\n        onClose();\n      }\n\n    });\n  };\n\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(companySearch({ text: \"\", sort: true, status: true, isPagination: false }))\n    }\n  }, [])\n\n  useEffect(() => {\n    if (userInfoglobal?.userType !== \"admin\" || companyId) {\n      setValue(\"PDDepartmentId\", \"\");\n      setValue(\"PDDesignationId\", \"\");\n      setValue(\"PDBranchId\", \"\");\n      dispatch(deptSearch({\n        companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        text: \"\", sort: true, status: true, isPagination: false\n      }))\n      dispatch(branchSearch({\n\n        companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        text: \"\", sort: true, status: true, isPagination: false\n      }))\n    }\n  }, [companyId])\n\n\n\n  useEffect(() => {\n    if ((companyId || userInfoglobal?.userType !== \"admin\") && (branchId || userInfoglobal?.userType !== \"companBranch\" || userInfoglobal?.userType === \"employee\")) {\n      fetchEmployeListData()\n\n    }\n  }, [companyId, branchId, departmentId, designationId])\n  useEffect(() => {\n    fetchTimeSlotFunc()\n  }, [branchId,])\n\n  const fetchEmployeListData = () => {\n    const reqPayload = {\n      text: \"\",\n      status: true,\n      sort: true,\n      isTL: \"\",\n      isHR: \"\",\n      isPagination: false,\n      departmentId: '',\n      designationId: '',\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n    };\n\n    dispatch(employeSearch(reqPayload));\n  };\n  const fetchTimeSlotFunc = () => {\n    dispatch(timeSlotSearch({\n      directorId: '',\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      text: \"\",\n      sort: true,\n      status: \"\",\n      isPagination: false,\n    }))\n  }\n  if (!isOpen) return null;\n  return (\n    <Modal\n      visible={isOpen}\n      onCancel={() => {\n        onClose();\n        reset()\n      }}\n\n      className=\"antmodalclassName\"\n      footer={null}\n      title=\"Apply Attendence\"\n      width={600}\n      height={400}\n    >\n      <div>\n        <form autoComplete=\"off\" onSubmit={handleSubmit(onFormSubmit)} className=\"\">\n          <div className=\"grid grid-col-1 md:grid-cols-2 gap-4\">\n            {userInfoglobal?.userType === \"admin\" && (\n              <div>\n                <label className={`${inputLabelClassName}`}>Company</label>\n                <Controller\n                  name=\"PDCompanyId\"\n                  control={control}\n                  rules={{\n                    required: \"Company is required\",\n                  }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n\n                      placeholder=\"Select Company\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                      getPopupContainer={(trigger) => trigger.parentNode}\n                    >\n                      <Select.Option value=\"\">Select Company</Select.Option>\n                      {companyListLoading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                        (companyList\n                          ?.map((element) => (\n                            <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                          )))\n                      }\n                    </Select>\n                  )}\n                />\n                {errors.PDCompanyId && <p className=\"text-red-500 text-sm\">{errors.PDCompanyId.message}</p>}\n              </div>\n            )}\n\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && (\n              <div>\n                <label className={`${inputLabelClassName}`}>Branch < span className=\"text-red-600\" >* </span></label>\n                <Controller\n                  name=\"PDBranchId\"\n                  control={control}\n                  rules={{\n                    required: \"Branch is required\",\n                  }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      onChange={(value) => {\n                        setValue(\"employee\", '')\n                        setValue(\"shift\", '')\n                        field.onChange(value);\n                      }}\n                      className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"} `}\n                      dropdownStyle={{ zIndex: 2000 }}\n                      placeholder=\"Select Branch\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                      getPopupContainer={() => document.body}\n                    >\n                      <Select.Option value=\"\">Select Branch</Select.Option>\n                      {branchListloading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                        (sortByPropertyAlphabetically(branchList, 'fullName')\n                          ?.map((element) => (\n                            <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                          )))\n                      }\n                    </Select>\n                  )}\n                />\n                {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n              </div>\n            )}\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Employee < span className=\"text-red-600\" >* </span></label>\n              <Controller\n                name=\"employee\"\n                control={control}\n                rules={{ required: \"Employee is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    onChange={(value) => {\n                      const selectedEmployee = employeList.find(emp => emp._id === value);\n                      setValue('employee', value);\n                      setValue(\"shift\", selectedEmployee?.shiftTimeSlot?._id || '');\n                    }}\n\n                    dropdownStyle={{ zIndex: 2000 }}\n                    getPopupContainer={() => document.body}\n                    // options={sortByPropertyAlphabetically(employeList,'fullName')?.map((employee) => ({\n                    //   value: employee?._id,\n                    //   label: employee?.fullName,\n                    // }))}\n                    classNamePrefix=\"react-select\"\n                    className={`${inputAntdSelectClassName} ${errors.employee ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Employee\"\n                  >\n                    <Select.Option value=\"\">Select Employee</Select.Option>\n                    {branchListloading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(employeList, 'fullName')\n                        ?.map((element) => (\n                          <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                        )))\n                    }\n                  </Select>\n                )}\n              />\n              {errors.employee && <p className=\"text-red-500 text-sm\">{errors.employee.message}</p>}\n            </div>\n\n            {/* <div>\n              <label className={`${inputLabelClassName}`}>Date < span className=\"text-red-600\" >* </span></label>\n              <Controller\n                name=\"date\"\n                control={control}\n                rules={{ required: \"Date is required\" }}\n                render={({ field }) => (\n                  <CustomDatePicker field={field} errors={errors}\n                    disabledDate={(current) => {\n                      const today = moment();\n                      return current && (\n                        current.isAfter(today, 'day') ||\n                        !current.isSame(today, 'month')\n                      );\n                    }}\n                  />\n                )}\n              />\n              {errors.date && <p className=\"text-red-500 text-sm\">Date is required</p>}\n            </div> */}\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Check-in Time <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"checkInTime\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    field={field}\n                    showTime={true}\n                    format=\"DD/MM/YYYY HH:mm\"\n                    errors={errors}\n                    disabledDate={(current) => {\n                      const today = moment();\n                      const currentDate = today.date(); // Day of month: 1, 2, 3, ...\n                      const isFirstThreeDays = currentDate <= 3;\n                    \n                      const startOfPrevMonth = today.clone().subtract(1, 'month').startOf('month');\n                      const endOfPrevMonth = today.clone().subtract(1, 'month').endOf('month');\n                    \n                      const isFromPrevMonth = current.isSame(startOfPrevMonth, 'month');\n                      const isFromCurrentMonth = current.isSame(today, 'month');\n                      const isAfterToday = current.isAfter(today, 'day');\n                    \n                    \n                      if (isFirstThreeDays) {\n                        return (\n                          isAfterToday ||\n                          (!isFromPrevMonth && !isFromCurrentMonth)\n                        );\n                      }\n                    \n                     \n                      return (\n                        isAfterToday ||\n                        !isFromCurrentMonth\n                      );\n                    }}\n                  />\n                )}\n              />\n              {errors.checkInTime && (\n                <p className=\"text-red-500 text-sm\">Check-in time is required</p>\n              )}\n            </div>\n\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Check-out Time <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"checkOutTime\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <CustomDatePicker\n                  field={field}\n                  showTime={true}\n                  format=\"DD/MM/YYYY HH:mm\"\n                  errors={errors}\n                  disabledDate={(current) => {\n                    const selectedDate = watch('checkInTime'); // should be a dayjs object or parse it\n                    if (!selectedDate) return true; // Disable all if no date selected\n                \n                    const selected = dayjs(selectedDate).startOf('day');\n                    const oneExyytaDay = selected.add(1, 'day');\n                \n                    return (\n                      !current.isSame(selected, 'day') &&\n                      !current.isSame(oneExyytaDay, 'day')\n                    );\n                  }}\n                />\n                )}\n              />\n              {errors.checkOutTime && (\n                <p className=\"text-red-500 text-sm\">Check-out time is required</p>\n              )}\n            </div>\n            <div className=\"\">\n              {/* Select Shift */}\n              <label className={`${inputLabelClassName}`}>\n                Select Shift <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"shift\"\n                control={control}\n                rules={{ required: \"Shift is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.shift ? '' : 'border-gray-300'}`}\n                    placeholder=\"Select Shift\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    getPopupContainer={() => document.body}\n                    dropdownStyle={{ zIndex: 2000 }}\n\n                  >\n                    <Option value=\"\">Select Shift</Option>\n                    {timeSlotsListData?.map((type) =>\n                      <Option key={type?._id} value={type?._id}>\n                        {type?.shiftName}\n                      </Option>\n                    )}\n                  </Select>\n                )}\n              />\n\n              {errors.shift && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.shift.message}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className={`${inputLabelClassName}`}>Reason < span className=\"text-red-600\" >* </span></label>\n              <input\n                type=\"text\"\n                {...register('reason', { required: true })}\n                className={`${inputClassName} ${errors.reason ? \"border-[1px] \" : \"border-gray-300\"}`}\n                rows=\"3\"\n              />\n              {errors.reason && <p className=\"text-red-500 text-sm\">Reason is required </p>}\n            </div>\n          </div>\n          <div className=\"flex justify-end space-x-2 mt-4\">\n            <button\n              type=\"submit\"\n              disabled={atentdanceLoading}\n              className={`px-4 py-2 text-sm font-medium text-white ${atentdanceLoading ? \"bg-gray-400\" : 'bg-header hover:bg-[#063156]'} rounded-md `}\n            >\n              {atentdanceLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </Modal>\n\n\n  );\n};\n\nexport default ManualAttendanceModal;\n","import React, { useEffect } from 'react';\nimport { Controller, useForm, useWatch } from 'react-hook-form';\nimport moment from 'moment';\nimport { employeSearch } from '../../employeManagement/employeFeatures/_employe_reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName, inputLabelClassNameReactSelect } from '../../../constents/global';\nimport { companySearch } from '../../company/companyManagement/companyFeatures/_company_reducers';\nimport { deptSearch } from '../../department/departmentFeatures/_department_reducers';\nimport { branchSearch } from '../../branch/branchManagement/branchFeatures/_branch_reducers';\nimport { attendancegCreate, getattendancegDetails, updateattendanceg } from './AttendanceFeatures/_attendance_reducers';\nimport { useNavigate } from 'react-router-dom';\nimport ReactSelect from \"react-select\";\nimport Swal from 'sweetalert2';\nimport CustomDatePicker from '../../../global_layouts/DatePicker/CustomDatePicker';\nimport dayjs from 'dayjs';\nimport { Modal, Select, TimePicker } from 'antd';\nimport Loader from '../../../global_layouts/Loader';\nimport ListLoader from '../../../global_layouts/ListLoader';\n\nconst UpdateManualAttendanceModal = ({ isOpen, onClose, fetchattendanceListData, updateId }) => {\n\n\n\n  const { register, handleSubmit,watch , control, setValue, formState: { errors } } = useForm({\n    defaultValues: {\n      employeeName: '',\n      date: '',\n      checkInTime: '',\n      checkOutTime: null,\n      reason: '',\n      errors: {},\n    }\n  });\n  const { loading: atentdanceLoading } = useSelector(\n    (state) => state.attendance\n  );\n  const navigate = useNavigate();\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n\n  const departmentId = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n    defaultValue: \"\",\n  });\n  const designationId = useWatch({\n    control,\n    name: \"PDDesignationId\",\n    defaultValue: \"\",\n  });\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const dispatch = useDispatch();\n  const { branchList, branchListLoading } = useSelector(\n    (state) => state.branch\n  );\n  const { companyList, companyListLoading } = useSelector((state) => state.company);\n  const { employeList } = useSelector(\n    (state) => state.employe\n  );\n  const { attendancegDetailsData } = useSelector(\n    (state) => state.attendance\n  );\n\n  useEffect(() => {\n    if (attendancegDetailsData) {\n\n\n      setValue('companyId', attendancegDetailsData?.companyId)\n      setValue('PDBranchId', attendancegDetailsData?.branchId)\n      setValue('directorId', attendancegDetailsData?.directorId)\n      setValue('date', dayjs(attendancegDetailsData?.attendanceDate))\n      setValue('checkInTime',attendancegDetailsData?.checkInTime ?  dayjs(attendancegDetailsData?.checkInTime) : null)\n      setValue('checkOutTime', attendancegDetailsData?.checkOutTime ? dayjs(attendancegDetailsData?.checkOutTime) : null)\n      const selectedEmployee = employeList?.find(employee => employee._id === attendancegDetailsData?.employeId);\n      if (selectedEmployee) {\n        setValue('employee', {\n          value: selectedEmployee._id,\n          label: selectedEmployee.fullName,\n        });\n      }\n    }\n  }, [attendancegDetailsData])\n\n  const onFormSubmit = (data) => {\n    const reqData = {\n      _id: updateId,\n      employeId: attendancegDetailsData?.employeId,\n      companyId: attendancegDetailsData?.companyId,\n      branchId: attendancegDetailsData?.branchId,\n      directorId: attendancegDetailsData?.directorId,\n      attendanceDate: dayjs(data.checkInTime).format('YYYY-MM-DD'),\n     checkInTime: data?.checkInTime ? data?.checkInTime : null,\n    checkOutTime: data.checkOutTime ? data?.checkOutTime : null,\n      method: \"hr_portal\",\n      reason: data?.reason,\n      employeeName: data?.employeeName\n    };\n\n    dispatch(updateattendanceg(reqData)).then((response) => {\n      if (!response.error) {\n        // Show success alert using SweetAlert2\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Attendance record has been created successfully.',\n          confirmButtonText: 'OK',\n          customClass: {\n            confirmButton: 'bg-header text-white hover:bg-[#063156]',\n          },\n        });\n\n        // Call the function to fetch attendance data and close the modal\n        fetchattendanceListData();\n        onClose();\n      }\n      // else {\n\n      //   // If there's an error, show an error alert (optional)\n      //   Swal.fire({\n      //     icon: 'error',\n      //     title: 'Error!',\n      //     text: 'There was an issue with the API call. Please try again.',\n      //     confirmButtonText: 'OK',\n      //     customClass: {\n      //       confirmButton: 'bg-[#FF0000] text-white hover:bg-[#d9534f]',\n      //     },\n      //   });\n      // }\n    });\n  };\n\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(companySearch({ text: \"\", sort: true, status: true, isPagination: false }))\n    }\n\n\n\n  }, [])\n\n  useEffect(() => {\n    if (userInfoglobal?.userType !== \"admin\" || companyId) {\n      setValue(\"PDDepartmentId\", \"\");\n      setValue(\"PDDesignationId\", \"\");\n      setValue(\"PDBranchId\", \"\");\n      dispatch(deptSearch({\n        companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        text: \"\", sort: true, status: true, isPagination: false\n      }))\n      dispatch(branchSearch({\n        companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        text: \"\", sort: true, status: true, isPagination: false\n      }))\n    }\n  }, [companyId])\n\n\n\n  useEffect(() => {\n    if ((companyId || userInfoglobal?.userType !== \"admin\") && (branchId || userInfoglobal?.userType !== \"companBranch\" || userInfoglobal?.userType === \"employee\")) {\n      fetchEmployeListData()\n    }\n  }, [companyId, branchId, departmentId, designationId])\n\n  const fetchEmployeListData = () => {\n    const reqPayload = {\n      text: \"\",\n      status: true,\n      sort: true,\n      isTL: \"\",\n      isHR: \"\",\n      isPagination: false,\n      departmentId: '',\n      designationId: '',\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n    };\n    dispatch(employeSearch(reqPayload)).then((response) => {\n      !response.error && dispatch(getattendancegDetails({ _id: updateId }))\n    });\n  };\n  if (!isOpen) return null;\n  return (\n      <Modal\n          visible={isOpen}\n          onCancel={() => {\n            onClose();\n            \n          }}\n          footer={null}\n           className=\"antmodalclassName\"\n          title=\"Manual Attendence\"\n          width={600}\n          height={400}\n        >\n    \n        <div>\n          <form autoComplete=\"off\" onSubmit={handleSubmit(onFormSubmit)} className=\"\">\n            <div className=\"grid grid-col-1 md:grid-cols-2 gap-4\">\n              {userInfoglobal?.userType === \"admin\" && (\n                <div>\n                  <label className={`${inputLabelClassName}`}>Company < span className=\"text-red-600\" >* </span></label>\n                  {/* <select\n                {...register(\"PDCompanyId\", { required: \"Company is required\" })}\n                className={`${inputClassName} ${errors.PDCompanyId ? \"border-[1px] \" : \"border-gray-300\"}`}\n              >\n                <option value=\"\">Select Company</option>\n                {companyList?.map((type) => (\n                  <option key={type?._id} value={type?._id}>\n                    {type?.fullName}\n                  </option>\n                ))}\n              </select> */}\n                  <Controller\n                    name=\"PDCompanyId\"\n                    control={control}\n                    rules={{\n                      required: \"Company is required\",\n                    }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n\n                        placeholder=\"Select Company\"\n                        showSearch\n\n                      >\n                        <Select.Option value=\"\">Select Company</Select.Option>\n                        {companyListLoading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                          (companyList\n                            ?.map((element) => (\n                              <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                            )))\n                        }\n                      </Select>\n                    )}\n                  />\n                  {errors.PDCompanyId && <p className=\"text-red-500 text-sm\">{errors.PDCompanyId.message}</p>}\n                </div>\n              )}\n\n              {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && (\n                <div>\n                  <label className={`${inputLabelClassName}`}>Branch < span className=\"text-red-600\" >* </span></label>\n                  {/* <select\n                {...register(\"PDBranchId\", { required: \"Branch is required\" })}\n                className={`${inputClassName} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n              >\n                <option value=\"\">Select Branch</option>\n                {branchList?.map((type) => (\n                  <option key={type?._id} value={type?._id}>\n                    {type?.fullName}\n                  </option>\n                ))}\n              </select> */}\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    rules={{\n                      required: \"Branch is required\",\n                    }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"} z-[99999]`}\n\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        getPopupContainer={(trigger) => trigger.parentNode}\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchListLoading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                          (branchList\n                            ?.map((element) => (\n                              <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                            )))\n                        }\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n                </div>\n              )}\n\n              <div className=\"w-full\">\n                <label className={`${inputLabelClassName}`}>Employee < span className=\"text-red-600\" >* </span></label>\n                <Controller\n                  name=\"employee\"\n                  control={control}\n                  rules={{ required: \"Employee is required\" }}\n                  render={({ field }) => (\n                    <ReactSelect\n                      {...field}\n                      options={employeList?.map((employee) => ({\n                        value: employee?._id,\n                        label: employee?.fullName,\n                      }))}\n                      isDisabled={true}\n                      classNamePrefix=\"react-select\"\n                      className={`${inputLabelClassNameReactSelect} ${errors.employee ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      placeholder=\"Select Employee\"\n                    />\n                  )}\n                />\n                {errors.employee && <p className=\"text-red-500 text-sm\">{errors.employee.message}</p>}\n              </div>\n\n              <div>\n              <label className={`${inputLabelClassName}`}>\n                Check-in Time <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"checkInTime\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    field={field}\n                    showTime={true}\n                    format=\"DD/MM/YYYY HH:mm\"\n                    errors={errors}\n                   disabledDate={(current) => {\n                                        const today = moment();\n                                        const currentDate = today.date(); // Day of month: 1, 2, 3, ...\n                                        const isFirstThreeDays = currentDate <= 3;\n                                      \n                                        const startOfPrevMonth = today.clone().subtract(1, 'month').startOf('month');\n                                        const endOfPrevMonth = today.clone().subtract(1, 'month').endOf('month');\n                                      \n                                        const isFromPrevMonth = current.isSame(startOfPrevMonth, 'month');\n                                        const isFromCurrentMonth = current.isSame(today, 'month');\n                                        const isAfterToday = current.isAfter(today, 'day');\n                                      \n                                      \n                                        if (isFirstThreeDays) {\n                                          return (\n                                            isAfterToday ||\n                                            (!isFromPrevMonth && !isFromCurrentMonth)\n                                          );\n                                        }\n                                      \n                                       \n                                        return (\n                                          isAfterToday ||\n                                          !isFromCurrentMonth\n                                        );\n                                      }}\n                  />\n                )}\n              />\n              {errors.checkInTime && (\n                <p className=\"text-red-500 text-sm\">Check-in time is required</p>\n              )}\n            </div>\n\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Check-out Time <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"checkOutTime\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <CustomDatePicker\n                  field={field}\n                  showTime={true}\n                  format=\"DD/MM/YYYY HH:mm\"\n                  errors={errors}\n                  disabledDate={(current) => {\n                    const selectedDate = watch('checkInTime'); // should be a dayjs object or parse it\n                    if (!selectedDate) return true; // Disable all if no date selected\n                \n                    const selected = dayjs(selectedDate).startOf('day');\n                    const oneExyytaDay = selected.add(1, 'day');\n                \n                    return (\n                      !current.isSame(selected, 'day') &&\n                      !current.isSame(oneExyytaDay, 'day')\n                    );\n                  }}\n                />\n                )}\n              />\n              {errors.checkOutTime && (\n                <p className=\"text-red-500 text-sm\">Check-out time is required</p>\n              )}\n            </div>\n            </div>\n\n            <div className=\"flex justify-end space-x-2 mt-4\">\n              <button\n                type=\"submit\"\n                disabled={atentdanceLoading}\n                className={`px-4 py-2 text-sm font-medium text-white ${atentdanceLoading ? \"bg-gray-400\" : 'bg-header hover:bg-[#063156]'} rounded-md `}\n              >\n                {atentdanceLoading ? <Loader /> : 'Submit'}\n              </button>\n            </div>\n          </form>\n        </div>\n   \n</Modal>\n  );\n};\n\nexport default UpdateManualAttendanceModal;\n"],"names":["_empDetailModalData$c","_empDetailModalData$c2","_empDetailModalData$c3","_empDetailModalData$c4","_empDetailModalData$c5","_empDetailModalData$c6","_empDetailModalData$c7","_empDetailModalData$c8","_empDetailModalData$c9","_empDetailModalData$c0","_empDetailModalData$c1","_empDetailModalData$c10","_empDetailModalData$c11","_empDetailModalData$c12","_empDetailModalData$c13","_empDetailModalData$c14","register","handleSubmit","control","formState","errors","setValue","useForm","dispatch","useNavigate","useDispatch","attendanceList","totalattendancegCount","loading","useSelector","state","attendance","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","canCreate","canRead","canUpdate","canDelete","usePermissions","currentPage","setCurrentPage","useState","filterText","setFilterText","debouncedFilterText","setDebouncedFilterText","isManualModalOpen","setIsManualModalOpen","isManualUpdateModalOpen","setIsManualUpdateModalOpen","updateId","setUpdateId","companyList","company","employeList","laoding","employeelistLoading","employe","branchList","branchListloading","branch","CompanyId","useWatch","name","defaultValue","BranchId","employeeId","Status","startDate","dayjs","endDate","isVerified","handleEmployeeFocus","employeSearch","companyId","userType","_id","branchId","includes","departmentId","directorId","text","sort","status","isPagination","isBranch","isDirector","empDetailModalData","setEmpDetailModalData","empCheckInDetailModalOpen","setEmpCheckinDetailModalOpen","checkIn","setCheckIn","handleEmployeeCheckInModal","element","checkInOrCheckOut","useEffect","timer","setTimeout","clearTimeout","searchText","setSearchText","filters","join","isFirstRender","setisFirstRender","fetchattendanceListData","reqData","pageSize","reqPayload","shift","workType","isPresentDay","format","employeId","getattendancegList","branchSearch","companySearch","_jsxs","GlobalLayout","onChange","e","children","className","_jsx","Controller","rules","required","render","_ref","field","Select","_objectSpread","inputAntdSelectClassNameFilter","PDPlan","placeholder","disabled","showSearch","filterOption","input","option","String","toLowerCase","Option","value","map","fullName","PDCompanyId","message","_ref2","ListLoader","type","PDBranchId","_ref3","_sortByPropertyAlphab","allowClear","onFocus","val","sortByPropertyAlphabetically","_ref4","_ref5","mode","_ref6","CustomDatePicker","report","size","_ref7","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","index","profileImage","alt","src","process","employeName","moment","attendanceDate","checkInTime","FaEye","checkOutTime","convertMinutesToHoursAndMinutes","workedHRS","pendingHRS","overtimeHRS","isWFHapplied","updatedBy","id","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","attendanceStatus","data","error","confirmButtonText","catch","handleApprove","MdDoneAll","Dropdown","menu","items","key","label","showSwal","reason","CgComment","FaPenToSquare","deleteattendanceg","Number","handleDelete","RiDeleteBin5Line","filter","Boolean","trigger","PiDotsThreeOutlineVerticalBold","Modal","open","onCancel","footer","AiOutlineTags","checkInLocation","address","checkOutLocation","IoPersonSharp","disatnceInMeter","latitude","longitude","GoogleMap","mapContainerStyle","width","height","center","lat","lng","zoom","Marker","position","CustomPagination","totalCount","page","ManualAttendanceModal","isOpen","onClose","UpdateManualAttendanceModal","watch","reset","defaultValues","employeeName","date","timeSlotsListData","timeSlots","designationId","companyListLoading","atentdanceLoading","deptSearch","fetchEmployeListData","fetchTimeSlotFunc","isTL","isHR","timeSlotSearch","visible","autoComplete","onSubmit","console","log","employee","method","attendancegCreate","response","customClass","confirmButton","inputLabelClassName","inputAntdSelectClassName","getPopupContainer","parentNode","dropdownStyle","zIndex","document","body","_sortByPropertyAlphab2","_selectedEmployee$shi","selectedEmployee","find","emp","shiftTimeSlot","classNamePrefix","showTime","disabledDate","current","today","isFirstThreeDays","startOfPrevMonth","clone","subtract","startOf","isFromPrevMonth","endOf","isSame","isFromCurrentMonth","isAfterToday","isAfter","selectedDate","selected","oneExyytaDay","add","shiftName","inputClassName","rows","Loader","branchListLoading","attendancegDetailsData","getattendancegDetails","updateattendanceg","ReactSelect","options","isDisabled","inputLabelClassNameReactSelect"],"sourceRoot":""}