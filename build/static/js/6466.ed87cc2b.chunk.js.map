{"version":3,"file":"static/js/6466.ed87cc2b.chunk.js","mappings":"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","sources":["global_layouts/Loader/Loader.js","pages/global/other/officeAddressManagement/OfficeAddressList.js"],"sourcesContent":["import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n","import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { encrypt } from \"../../../../config/Encryption\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport Loader from \"../../../../global_layouts/Loader/Loader\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { domainName, inputAntdSelectClassNameFilter, inputClassName, inputClassNameSearch, inputLabelClassName, sortByPropertyAlphabetically } from \"../../../../constents/global\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { deleteofficeAddress, getofficeAddressList } from \"./officeAddressFeature/_office_address_reducers\";\nimport { Select, Tooltip } from \"antd\";\nimport usePermissions from \"../../../../config/usePermissions\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport dayjs from \"dayjs\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\n\nfunction OfficeAddressList() {\n  const {\n    register,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { officeAddressListData, totalofficeAddressListCount, loading } = useSelector(\n    (state) => state.officeAddress\n  );\n  const [searchText, setSearchText] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList, loading: branchSearchLoading } = useSelector(\n    (state) => state.branch\n  );\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const status = useWatch({\n    control,\n    name: 'status',\n    defaultValue: ''\n  })\n  const limit = 10;\n  useEffect(() => {\n    if (CompanyId) {\n      setValue(\"PDBranchId\", \"\");\n    }\n  }, [CompanyId])\n\n  \n  const filters = [CompanyId, BranchId, status, searchText].join(\"-\");\n  const [isFirstRender ,setisFirstRender] = useState(false)\n  \n  useEffect(() => {\n    if (!isFirstRender) {\n      setisFirstRender(state=>true);\n      return;\n    }\n    if (currentPage === 1) {\n      getofficeAddressRequest();\n    } else {\n      setCurrentPage(1);\n    }\n  }, [filters])\n\n  useEffect(() => {\n    getofficeAddressRequest();\n  }, [currentPage]);\n\n  const getofficeAddressRequest = () => {\n    const data = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqData: {\n        directorId: \"\",\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            :\n            userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        \"text\": searchText,\n        \"sort\": true,\n        status: status === \"true\" ? true : status === \"false\" ? false : \"\",\n        \"isPagination\": true,\n      }\n    };\n    dispatch(getofficeAddressList(data));\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteofficeAddress(reqData)).then((data) => {\n          if (!data?.error) {\n            // getofficeAddressRequest()\n\n\n            if (currentPage > 1 && officeAddressListData?.length == 1) {\n              setCurrentPage(Number(currentPage - 1));\n\n            } else {\n              getofficeAddressRequest();\n            }\n          }\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId])\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  const onChange = (e) => {\n\n    setSearchText(e);\n  };\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n  return (\n    <GlobalLayout onChange={onChange}>\n\n      <>\n        <div className=\"\">\n          <div className=\"sm:flex justify-between items-center md:space-y-0 space-y-2 py-1\">\n            <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-3 sm:gap-3 gap-1\">\n              {userInfoglobal?.userType === \"admin\" && <div className=\"\">\n\n                <select\n                  {...register(\"PDCompanyId\", {\n                    required: \"company is required\",\n                  })}\n                  className={` ${inputClassNameSearch} ${errors.PDCompanyId\n                    ? \"border-[1px] \"\n                    : \"border-gray-300\"\n                    }`}\n                >\n                  <option className=\"\" value=\"\">\n                    Select Comapany\n                  </option>\n                  {companyList?.map((type) => (\n                    <option value={type?._id}>{type?.fullName}</option>\n                  ))}\n                </select>\n                {errors.PDCompanyId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDCompanyId.message}\n                  </p>\n                )}\n              </div>}\n              {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") &&\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    rules={{ required: \"Branch is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`w-full ${inputAntdSelectClassNameFilter} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                        placeholder=\"Select Branch\"\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchSearchLoading ? (\n                          <Select.Option disabled>\n                            <ListLoader />\n                          </Select.Option>\n                        ) : (\n                          sortByPropertyAlphabetically(branchList)?.map((type) => (\n                            <Select.Option key={type?._id} value={type?._id}>\n                              {type?.fullName}\n                            </Select.Option>\n                          ))\n                        )}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n                </div>\n              }\n\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.status\n                      ? \"border-[1px] \"\n                      : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Select Status\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    <Select.Option value=\"true\"> Active </Select.Option>\n                    <Select.Option value=\"false\"> InActive </Select.Option>\n                  </Select>\n                )}\n              />\n\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n\n              <button\n                onClick={() => {\n                  setValue(\"status\", \"\");\n                  setValue(\"PDBranchId\", '');\n                  setValue(\"PdDepartmentId\", \"\");\n                  setValue(\"PdCompanyId\", \"\");\n                }}\n                className=\"bg-header py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n\n              {(canCreate && canRead) &&\n                <Tooltip placement=\"topLeft\"  title='Add Office Address'>\n                  <button\n                    onClick={() => {\n                      navigate(\"/admin/office-address/create\");\n                    }}\n                    className=\"bg-header px-2 py-1.5 rounded-md whitespace-nowrap flex justify-center items-center space-x-2 text-white\"\n                  >\n                    <FaPlus />\n                    <span className=\"text-[12px]\">Add Invoice</span>\n                  </button>\n                </Tooltip>}\n\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n          {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n            <thead className=\"\">\n              <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n                <th className=\"p-2 whitespace-nowrap\">Name</th>\n                <th className=\"p-2 whitespace-nowrap\">Layout Type</th>\n                <th className=\"p-2 whitespace-nowrap\">Created At</th>\n                <th className=\"p-2 whitespace-nowrap\">Created By</th>\n                <th className=\"p-2 whitespace-nowrap\">status</th>\n                {(canUpdate || canDelete) && <th className=\"p-2 whitespace-nowrap w-[10%]\">Action</th>}\n              </tr>\n            </thead>\n            {loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {officeAddressListData && officeAddressListData?.length > 0 ? (\n                  officeAddressListData?.map((element, index) => (\n                    <tr\n                      className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                    >\n                      <td className=\"whitespace-nowrap p-2\">\n                        {index + 1 + ((currentPage - 1) * limit)}\n                      </td>\n                      <td className=\"whitespace-nowrap p-2\">{element?.firmName}</td>\n                      <td className=\"whitespace-nowrap p-2\">{element?.type}</td>\n                    \n\n\n                    \n                      <td className=\"whitespace-nowrap p-2\">\n                        {dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') ?? \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap p-2\">{element?.createdBy ?? '-'}</td>\n\n                      <td className=\"whitespace-nowrap border-none p-2 \">\n                        <span\n                          className={`${element?.status\n                            ? \"bg-[#E0FFBE] border-green-500\"\n                            : \"bg-red-200 border-red-500\"\n                            } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                        >\n                          {element?.status ? \"Active\" : \"Inactive\" ?? \"-\"}\n                        </span>\n                      </td>\n                      {(canUpdate || canDelete) && <td className=\"whitespace-nowrap p-2\">\n                        <span className=\"py-1.5 flex justify-start items-center space-x-2.5\">\n                          {canUpdate && <button\n                            onClick={() => {\n                              navigate(\n                                `/admin/office-address/edit/${encrypt(element?._id)}`\n                              );\n                            }}\n                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                            type=\"button\"\n                          >\n                            <FaPenToSquare\n                              className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                              size={16}\n                            />\n                          </button>}\n                          {canDelete && <button\n                            onClick={() => handleDelete(element?._id)}\n                            className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                            type=\"button\"\n                          >\n                            <RiDeleteBin5Line\n                              className=\"text-red-600 hover:text-red-500\"\n                              size={16}\n                            />\n                          </button>}\n                        </span>\n                      </td>}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={7}\n                      className=\"px-6 py-2 whitespace-nowrap font-[600] text-center text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>}\n        </div>\n        {officeAddressListData?.length > 0 &&\n          <CustomPagination\n            totalCount={totalofficeAddressListCount}\n            pageSize={limit}\n            currentPage={currentPage}\n            onChange={onPaginationChange}\n          />}\n      </>\n\n    </GlobalLayout>\n  );\n}\nexport default OfficeAddressList;\n"],"names":["_jsx","className","children","Spin","size","register","control","formState","errors","setValue","useForm","navigate","useNavigate","dispatch","useDispatch","officeAddressListData","totalofficeAddressListCount","loading","useSelector","state","officeAddress","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","companyList","company","branchList","branchSearchLoading","branch","CompanyId","useWatch","name","defaultValue","BranchId","status","useEffect","filters","join","isFirstRender","setisFirstRender","getofficeAddressRequest","data","pageSize","reqData","directorId","companyId","userType","_id","branchId","getofficeAddressList","branchSearch","text","sort","isPagination","companySearch","canCreate","canRead","canUpdate","canDelete","usePermissions","GlobalLayout","onChange","e","_jsxs","_Fragment","_objectSpread","required","inputClassNameSearch","PDCompanyId","value","map","type","fullName","message","Controller","rules","render","_ref","_sortByPropertyAlphab","field","Select","inputAntdSelectClassNameFilter","PDBranchId","placeholder","Option","disabled","ListLoader","sortByPropertyAlphabetically","_ref2","showSearch","filterOption","input","option","String","toLowerCase","includes","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","element","index","_dayjs$format","_element$createdBy","_Inactive","firmName","dayjs","createdAt","format","createdBy","encrypt","FaPenToSquare","id","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteofficeAddress","error","Number","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","page"],"sourceRoot":""}