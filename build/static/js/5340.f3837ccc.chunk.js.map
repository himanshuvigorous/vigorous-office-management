{"version":3,"file":"static/js/5340.f3837ccc.chunk.js","mappings":"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","sources":["pages/financeManagement/cashbook/CreateCashbook.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { customDayjs, domainName, inputAntdSelectClassName, inputClassName, inputDisabledClassName, inputerrorClassNameAutoComplete, inputLabelClassName, inputLabelClassNameReactSelect } from \"../../../constents/global\";\nimport { AutoComplete, Input, Select } from \"antd\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { countrySearch } from \"../../global/address/country/CountryFeatures/_country_reducers\";\nimport { stateSearch } from \"../../global/address/state/featureStates/_state_reducers\";\nimport { citySearch } from \"../../global/address/city/CityFeatures/_city_reducers\";\nimport ReactSelect from \"react-select\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport { expenseTypeSearch } from \"../../global/other/ExpenseHead/expenseTypeFeature/_expenseType_reducers\";\nimport { fileUploadFunc } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { createcashbook } from \"./cashbookFeature/_cashbook_reducers\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport dayjs from \"dayjs\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport { FaRegFile, FaTimes } from \"react-icons/fa\";\n\n\nconst CreateCashbook = () => {\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    watch,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { companyList, companyListLoading } = useSelector((state) => state.company);\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { employeList } = useSelector((state) => state.employe);\n  const { countryListData } = useSelector((state) => state.country);\n  const { stateListData } = useSelector((state) => state.states);\n  const { cityListData } = useSelector((state) => state.city);\n  const { expenseTypeList } = useSelector((state) => state.expenceHead);\n  const CompanyId = useWatch({ control, name: \"PDCompanyId\", defaultValue: \"\" });\n  const BranchId = useWatch({ control, name: \"PDBranchId\", defaultValue: \"\" });\n\n  const [isPreview, setIsPreview] = useState(false);\n  const [formData, setFormData] = useState({\n    attachment: []\n  });\n\n  const { loading: cashbookLoading } = useSelector(\n    (state) => state.cashbook\n  );\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      companyId: userInfoglobal?.userType === \"admin\" ? data?.PDCompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      directorId: userInfoglobal?.userType === \"companyDirector\" ? userInfoglobal?._id : userInfoglobal?.directorId,\n      branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ? data?.PDBranchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      \"employeId\": userInfoglobal?.userType !== \"employe\" ? data?.employee?.value : userInfoglobal?.userType === \"employe\" ? userInfoglobal?._id : null,\n      \"expenseTypeId\": data?.expencehead?.value,\n      \"expenseFor\": 'Employe',\n      \"amount\": + data?.amount,\n      \"naration\": data?.naration,\n      // \"attachment\": data?.fileUploadLink,\n      \"GSTamount\": 0,\n      \"totalAmount\": + data?.amount,\n       date: customDayjs(data?.date),\n      \n      status: \"Approved\",\n      attachment: formData?.attachment,\n    };\n    dispatch(createcashbook(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId])\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  // const handleFileChange = (file) => {\n  //   dispatch(\n  //     fileUploadFunc({\n  //       filePath: file,\n  //       isVideo: false,\n  //       isMultiple: false,\n  //     })\n  //   ).then((data) => {\n  //     if (!data.error) {\n  //       setValue('fileUploadLink', data?.payload?.data)\n  //     }\n  //   });\n  // };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setFormData(prev => ({\n          ...prev,\n          attachment: [...prev.attachment, res.payload?.data]\n        }));\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setFormData(prev => {\n      const updatedAttachments = prev.attachment.filter((_, i) => i !== index);\n      return { ...prev, attachment: updatedAttachments };\n    });\n  };\n\n  useEffect(() => {\n    setValue('totalAmount', Number(watch('amount')) + Number(watch('gstAmount')))\n  }, [watch('amount'), watch('gstAmount')])\n\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-4 gap-2 md:my-1 md:mt-4\">\n            {userInfoglobal?.userType === \"admin\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Company <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                control={control}\n                name=\"PDCompanyId\"\n                rules={{ required: \"Company is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    className={`${inputAntdSelectClassName} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Company</Select.Option>\n                    {companyListLoading ? <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option> : (companyList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n              {errors.PDCompanyId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDCompanyId.message}\n                </p>\n              )}\n            </div>}\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Branch <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                control={control}\n                name=\"PDBranchId\"\n                rules={{ required: \"Branch is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    className={`${inputAntdSelectClassName} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchListloading ? <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option> : (branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n\n              {errors.PDBranchId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDBranchId.message}\n                </p>\n              )}\n            </div>}\n\n            {/* <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Expence For<span className=\"text-red-600\">*</span>\n              </label>\n              <select\n                {...register(\"expenseFor\",)}\n                className={`${inputClassName}  ${errors.expenseFor\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  } `}\n              >\n                <option value=''>\n                  select Type\n                </option>\n                <option value='head'>\n                  Expence Head\n                </option>\n                <option value='employe'>\n                  Employee\n                </option>\n              </select>\n              {errors.expenseFor && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.expenseFor.message}\n                </p>\n              )}\n            </div> */}\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Expence Head  <span className=\"text-red-600\">*</span></label>\n              <Controller\n                name=\"expencehead\"\n                control={control}\n                rules={{ required: \"Expence Head is required\" }}\n                render={({ field }) => (\n                  <ReactSelect\n                    onFocus={() => {\n                      const reqPayload = {\n                        directorId: \"\",\n                        companyId: userInfoglobal?.userType === \"admin\"\n                          ? CompanyId\n                          : userInfoglobal?.userType === \"company\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.companyId,\n                        branchId: userInfoglobal?.userType === \"company\" ||\n                          userInfoglobal?.userType === \"admin\" ||\n                          userInfoglobal?.userType === \"companyDirector\"\n                          ? BranchId\n                          : userInfoglobal?.userType === \"companyBranch\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.branchId,\n                        text: \"\",\n                        sort: true,\n                        status: \"\",\n                        isPagination: false,\n                      }\n\n                      dispatch(expenseTypeSearch(reqPayload));\n                    }} // API call triggers only when focused\n                    {...field}\n                    options={expenseTypeList?.map((expence) => ({\n                      value: expence?._id,\n                      label: expence?.name,\n                    }))}\n                    classNamePrefix=\"react-select\"\n                    className={`${inputLabelClassNameReactSelect} ${errors.expencehead ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Expence Head\"\n                  />\n                )}\n              />\n              {errors.expencehead && <p className=\"text-red-500 text-sm\">{errors.expencehead.message}</p>}\n            </div>\n            {userInfoglobal?.userType !== \"employe\" && <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Employee  <span className=\"text-red-600\">*</span></label>\n              <Controller\n                name=\"employee\"\n                control={control}\n                rules={{ required: \"Employee is required\" }}\n                render={({ field }) => (\n                  <ReactSelect\n                    {...field}\n                    onFocus={() => {\n                      const reqPayload = {\n                        text: \"\",\n                        status: true,\n                        sort: true,\n                        isTL: \"\",\n                        isHR: \"\",\n                        isPagination: false,\n                        departmentId: '',\n                        designationId: '',\n                        companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n                        branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n                      };\n\n                      dispatch(employeSearch(reqPayload));\n                    }}\n                    options={employeList?.map((employee) => ({\n                      value: employee?._id,\n                      label: employee?.fullName,\n                    }))}\n                    classNamePrefix=\"react-select\"\n                    className={`${inputLabelClassNameReactSelect} ${errors.employee ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Employee\"\n                  />\n                )}\n              />\n              {errors.employee && <p className=\"text-red-500 text-sm\">{errors.employee.message}</p>}\n            </div>}\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Amount <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"number\"\n                 step=\"0.01\"\n                {...register(\"amount\", {\n                  required: \"Amount is required\",\n\n                })}\n                className={` ${inputClassName} ${errors.amount ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Amount\"\n              />\n              {errors.amount && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.amount.message}\n                </p>\n              )}\n            </div>\n            {/* <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Gst Amount\n              </label>\n              <input\n                type=\"number\"\n                {...register(\"gstAmount\")}\n                className={` ${inputClassName} ${errors.gstAmount ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Gst Amount\"\n              />\n              {errors.gstAmount && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.gstAmount.message}\n                </p>\n              )}\n            </div> */}\n            {/* <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Total Amount\n              </label>\n              <input\n                type=\"number\"\n                disabled\n                {...register(\"totalAmount\")}\n                className={` ${inputDisabledClassName} ${errors.totalAmount ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Total Amount\"\n              />\n              {errors.totalAmount && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.totalAmount.message}\n                </p>\n              )}\n            </div> */}\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Naration <span className=\"text-red-600\">*</span>\n              </label>\n              <textarea\n\n                {...register(\"naration\", {\n                  required: \"Naration is required\",\n\n                })}\n                className={` ${inputClassName} ${errors.naration ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Naration\"\n              ></textarea>\n              {errors.naration && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.naration.message}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className={`${inputLabelClassName}`}>Bill Date</label>\n              <Controller\n                name=\"date\"\n                control={control}\n                render={({ field }) => {\n                  return (\n                    <CustomDatePicker\n                      field={field}\n                      errors={errors}\n                      disabledDate={(current) => {\n                        if (!current) return true;\n\n                        const today = dayjs().startOf('day');\n                        const currentDate = current.startOf('day');\n                        const dayOfMonth = today.date();\n\n                        if (dayOfMonth <= 5) {\n                          // --- Last 5 days of previous month ---\n                          const prevMonth = today.subtract(1, 'month');\n                          const endOfPrevMonth = prevMonth.endOf('month').startOf('day');\n                          const startOfLast5PrevMonth = prevMonth\n                            .date(endOfPrevMonth.date() - 4)\n                            .startOf('day');\n\n                          const isInLast5PrevMonth =\n                            (currentDate.isAfter(startOfLast5PrevMonth) || currentDate.isSame(startOfLast5PrevMonth)) &&\n                            (currentDate.isBefore(endOfPrevMonth) || currentDate.isSame(endOfPrevMonth));\n\n                          // --- Current month: 1st to today ---\n                          const startOfCurrentMonth = today.startOf('month');\n                          const isFromStartToToday =\n                            (currentDate.isAfter(startOfCurrentMonth) || currentDate.isSame(startOfCurrentMonth)) &&\n                            (currentDate.isBefore(today) || currentDate.isSame(today));\n\n                          return !(isInLast5PrevMonth || isFromStartToToday);\n                        } else {\n                          // After 5th of month: allow only past dates in current month\n                          const startOfCurrentMonth = today.startOf('month');\n\n                          const isInCurrentMonth =\n                            (currentDate.isAfter(startOfCurrentMonth) || currentDate.isSame(startOfCurrentMonth)) &&\n                            (currentDate.isBefore(today) || currentDate.isSame(today));\n\n                          return !isInCurrentMonth;\n                        }\n                      }}\n                    />\n                  );\n                }}\n              />\n\n\n\n\n              {errors.date && <p className=\"text-red-500 text-sm\">Date is required</p>}\n            </div>\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Documents\n              </label>\n              {!isPreview ? (\n                <div className=\"space-y-4\">\n                  <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                  <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-600 bg-white cursor-pointer\">\n                    <FaRegFile className=\"mr-2\" /> Add Documents\n                  </label>\n\n                  <div className=\"space-y-2\">\n                    {formData.attachment.map((file, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                        <a\n                          href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                          className=\"flex items-center space-x-2\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <FaRegFile className=\"text-gray-500\" />\n                          <span className=\"text-sm text-gray-600\">{file}</span>\n                        </a>\n                        <button\n                          type=\"button\"\n                          onClick={() => handleRemoveFile(index)}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <FaTimes />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  {/* Attachments preview logic */}\n                </div>\n              )}\n            </div>\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={cashbookLoading}\n              className={`${cashbookLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 mt-3 rounded`}\n            >\n              {cashbookLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default CreateCashbook;"],"names":["CreateCashbook","register","handleSubmit","control","watch","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","companyList","companyListLoading","useSelector","state","company","branchList","branchListloading","branch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","employeList","employe","countryListData","country","stateListData","states","cityListData","city","expenseTypeList","expenceHead","CompanyId","useWatch","name","defaultValue","BranchId","isPreview","setIsPreview","useState","formData","setFormData","attachment","loading","cashbookLoading","cashbook","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","companySearch","Number","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","_data$employee","_data$expencehead","finalPayload","PDCompanyId","directorId","branchId","PDBranchId","employee","value","expencehead","amount","naration","date","customDayjs","createcashbook","then","error","inputLabelClassName","Controller","rules","required","render","_ref","field","Select","_objectSpread","inputAntdSelectClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","disabled","ListLoader","map","type","fullName","message","_ref2","_ref3","ReactSelect","onFocus","reqPayload","expenseTypeSearch","options","expence","label","classNamePrefix","inputLabelClassNameReactSelect","placeholder","_ref4","isTL","isHR","departmentId","designationId","employeSearch","step","inputClassName","_ref5","CustomDatePicker","disabledDate","current","today","dayjs","startOf","currentDate","prevMonth","subtract","endOfPrevMonth","endOf","startOfLast5PrevMonth","isInLast5PrevMonth","isAfter","isSame","isBefore","startOfCurrentMonth","isFromStartToToday","onChange","e","reqData","filePath","target","files","isVideo","isMultiple","fileUploadFunc","res","_res$payload","payload","prev","_res$payload2","id","htmlFor","FaRegFile","file","index","href","process","rel","onClick","updatedAttachments","filter","_","i","handleRemoveFile","FaTimes","Loader"],"sourceRoot":""}