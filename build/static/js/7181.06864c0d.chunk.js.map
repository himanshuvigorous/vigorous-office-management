{"version":3,"file":"static/js/7181.06864c0d.chunk.js","mappings":"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","sources":["pages/hr/companyprefixsetting/CompanyPrefixSetting.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport {\n  domainName,\n  formButtonClassName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputDisabledClassName,\n  inputLabelClassName,\n} from \"../../../constents/global\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport getUserIds from \"../../../constents/getUserIds\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { Select } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport {\n  getCompanyPrefixDetails,\n  updateCompanyPrefix,\n} from \"./companyPrefixSettingsFeatures/_company_prefix_setting_reducer\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport CommonImageViewer from \"../../../global_layouts/ImageViewrModal/CommonImageViewer\";\nimport { fileUploadFunc } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport Swal from \"sweetalert2\";\n\nconst CompanyPrefixSetting = () => {\n   \n  const fileInputRefs = useRef();\n  const lastFetchedCompanyId = useRef(null);\n  const [uploadedLogo, setUploadedLogo] = useState(null);\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n    setValue,\n    getValues,\n    reset,\n  } = useForm();\n  const dispatch = useDispatch();\n  const { companyList } = useSelector((state) => state.company);\n  const { companyPrefixData, loading: companyPrefixLoading } = useSelector((state) => state.companyPrefix);\n  const [editable, setEditable] = useState(false);\n\n  const { userType } = getUserIds();\n\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const resolvedCompanyId =\n    userInfoglobal?.userType === \"admin\"\n      ? getValues(\"companyId\")\n      : userInfoglobal?.userType === \"company\"\n        ? userInfoglobal?._id\n        : userInfoglobal?.companyId;\n\n  const handleImageDelete = () => {\n    if (fileInputRefs.current) {\n      fileInputRefs.current.value = \"\";\n    }\n    setUploadedLogo('');\n  };\n\n  const handleFileChange = (file) => {\n    if (!file) return;\n\n\n    const selectedFile = file;\n\n    // Create a preview of the file\n    const fileReader = new FileReader();\n    let filePreviewUrl = \"\";\n\n    fileReader.onload = (e) => {\n      filePreviewUrl = e.target.result;\n      const isPdf = file.type === \"application/pdf\";\n\n      // Show SweetAlert to confirm upload\n      Swal.fire({\n        title: \"Preview your file\",\n        html: `\n            <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n              <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n              ${isPdf\n            ? `<p style=\"font-size: 16px; color: #074173;\">${file.name}</p>`\n            : `<img id=\"filePreview\" src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">` // Display image preview for non-PDF files\n          }\n              <br>\n            </div>\n          `,\n        showCancelButton: true,\n        confirmButtonText: \"Confirm!\",\n        cancelButtonText: \"Cancel\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          // Use the updated selectedFile (which could be the original or changed file)\n          dispatch(\n            fileUploadFunc({\n              filePath: selectedFile,\n              isVideo: false,\n              isMultiple: false,\n            })\n          ).then((res) => {\n            if (!res.error) {\n\n              setUploadedLogo(res?.payload?.data);\n              Swal.fire(\"Success\", \"File uploaded successfully\", \"success\");\n            }\n          });\n        } else {\n          // Handle the cancel case\n\n        }\n      });\n    };\n\n    // Read the file to generate the preview\n    fileReader.readAsDataURL(file);\n  };\n\n\n  const fetchCompanyPrefixData = () => {\n    if (lastFetchedCompanyId.current === resolvedCompanyId) return; // avoid refetching same\n    lastFetchedCompanyId.current = resolvedCompanyId;\n\n   if(userType === \"company\"){\n    dispatch(getCompanyPrefixDetails({ companyId: resolvedCompanyId }));\n   }\n  };\n\n  useEffect(() => {\n    if (userType === \"admin\") {\n      dispatch(companySearch({ isPagination: false, text: \"\", sort: true, status: true }));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (\n      resolvedCompanyId &&\n      (userInfoglobal?.userType === \"company\" ||\n        userInfoglobal?.userType === \"admin\" ||\n        userInfoglobal?.userType === \"companyDirector\") &&\n      !editable\n    ) {\n      fetchCompanyPrefixData();\n    }\n  }, [resolvedCompanyId, editable]);\n\n  useEffect(() => {\n    setValue(\"companyId\", companyPrefixData?.companyId || \"\");\n    setValue(\"branchPrefix\", companyPrefixData?.branchUserNamePrefix || \"\");\n    setValue(\"DirectorUserPrefix\", companyPrefixData?.directorUserNamePrefix || \"\");\n    setValue(\"tagLine\", companyPrefixData?.tagline || \"\");\n    setValue(\"JWTTokenExprTime\", companyPrefixData?.JWTTokenExprTime || \"\");\n    setValue(\"smtpHost\", companyPrefixData?.smtpHost || \"\");\n    setValue(\"smtpPort\", companyPrefixData?.smtpPort || \"\");\n    setValue(\"smtpSecure\", companyPrefixData?.smtpSecure == true ? true : false );\n    setValue(\"smtpUser\", companyPrefixData?.smtpUser || \"\");\n    setValue(\"smtpPassword\", companyPrefixData?.smtpPassword || \"\");\n    setUploadedLogo(companyPrefixData?.logo || '');\n  }, [companyPrefixData]);\n\n  const onSubmit = (data) => {\n    const reqPayload = {\n      companyId: userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : data?.companyId,\n      directorUserNamePrefix: data?.DirectorUserPrefix,\n      branchUserNamePrefix: data?.branchPrefix,\n      tagline: data?.tagLine,\n      logo: uploadedLogo || '',\n      JWTTokenExprTime: data?.JWTTokenExprTime,\n      smtpHost: data?.smtpHost ?? \"\",\n      smtpPort: + data?.smtpPort ?? \"\",\n      smtpSecure: (data?.smtpSecure == 'true' || data?.smtpSecure == true) ? true : false,\n      smtpUser: data?.smtpUser ?? \"\",\n      smtpPassword: data?.smtpPassword ?? \"\",\n\n    };\n    dispatch(updateCompanyPrefix(reqPayload)).then((res) => {\n      if (!res.error) fetchCompanyPrefixData();\n    });\n  };\n\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n  if (userInfoglobal?.userType !== \"company\") {\n    return (\n      <GlobalLayout>\n        <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n          <p className=\"text-center font-semibold\">\n            You are not an authorized user. This page is viewable for Company only.\n          </p>\n        </div>\n      </GlobalLayout>\n    )\n  }\n\n  return (\n    <GlobalLayout>\n      {canRead && (\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"flex justify-between items-center !capitalize\">\n            {canUpdate && (\n              <button onClick={() => setEditable(!editable)} type=\"button\" className={formButtonClassName}>\n                {editable ? \"Cancel\" : \"Edit\"}\n              </button>\n            )}\n            {canUpdate && (\n              <button\n                type=\"submit\"\n                disabled={companyPrefixLoading || !editable}\n                className={`${companyPrefixLoading || !editable ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded`}\n              >\n                {companyPrefixLoading ? <Loader /> : 'Submit'}\n              </button>\n            )}\n          </div>\n\n          <div className=\"border border-header mt-2 rounded-lg\">\n            <div className=\"bg-header text-white py-2 px-4 rounded-t-lg\">Prefix Settings</div>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 p-2\">\n              {(userType === \"admin\" || userType === \"companyDirector\") && (\n                <div>\n                  <label className={inputLabelClassName}>\n                    Company <span className=\"text-red-600\">*</span>\n                  </label>\n                  <select\n                    {...register(\"companyId\", { required: \"Company is required\" })}\n                    className={`${inputClassName} ${errors.companyId ? \"border-[1px]\" : \"border-gray-300\"}`}\n                  >\n                    <option value=\"\">Select Company</option>\n                    {companyList?.map((type) => (\n                      <option key={type?._id} value={type?._id}>\n                        {type?.fullName} ({type?.userName})\n                      </option>\n                    ))}\n                  </select>\n                  {errors.companyId && <p className=\"text-red-500 text-sm\">{errors.companyId.message}</p>}\n                </div>\n              )}\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Logout Time\n                </label>\n                <Controller\n                  name=\"JWTTokenExprTime\"\n                  control={control}\n                  disabled={!editable}\n\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      placeholder=\"Select  Logout Time\"\n                    >\n                      <Select.Option value=\"\">Select Logout Time</Select.Option>\n                      <Select.Option value=\"30m\">30 minutes</Select.Option>\n                      <Select.Option value=\"1h\">1 hour</Select.Option>\n                      <Select.Option value=\"6h\">6 hours</Select.Option>\n                      <Select.Option value=\"12h\">12 hours</Select.Option>\n                      <Select.Option value=\"24h\">1 day</Select.Option>\n                      <Select.Option value=\"3d\">3 days</Select.Option>\n                      <Select.Option value=\"7d\">7 days</Select.Option>\n                      <Select.Option value=\"30d\">1 month (30 days)</Select.Option>\n                      <Select.Option value=\"60d\">2 months (60 days)</Select.Option>\n                      <Select.Option value=\"90d\">3 months (90 days)</Select.Option>\n                      <Select.Option value=\"120d\">4 months (120 days)</Select.Option>\n                      <Select.Option value=\"240d\">8 months (240 days)</Select.Option>\n                      <Select.Option value=\"365d\">1 year</Select.Option>\n\n                    </Select>\n                  )}\n                />\n\n                {errors.JWTTokenExprTime && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.JWTTokenExprTime.message}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <label className={inputLabelClassName}>Branch Username Prefix</label>\n                <input\n                  type=\"text\"\n                  disabled={!editable}\n                  {...register(\"branchPrefix\")}\n                  className={`${!editable ? inputDisabledClassName : inputClassName} ${errors.branchPrefix ? \"border-[1px]\" : \"border-gray-300\"}`}\n                  placeholder=\"Branch Username Prefix\"\n                />\n              </div>\n\n              <div>\n                <label className={inputLabelClassName}>Director Username Prefix</label>\n                <input\n                  type=\"text\"\n                  disabled={!editable}\n                  {...register(\"DirectorUserPrefix\")}\n                  className={`${!editable ? inputDisabledClassName : inputClassName} ${errors.DirectorUserPrefix ? \"border-[1px]\" : \"border-gray-300\"}`}\n                  placeholder=\"Director Username Prefix\"\n                />\n              </div>\n\n              <div>\n                <label className={inputLabelClassName}>Tagline</label>\n                <input\n                  type=\"text\"\n                  disabled={!editable}\n                  {...register(\"tagLine\")}\n                  className={`${!editable ? inputDisabledClassName : inputClassName} ${errors.tagLine ? \"border-[1px]\" : \"border-gray-300\"}`}\n                  placeholder=\"Tagline\"\n                />\n              </div>\n              <div>\n                <label className={inputLabelClassName}>Smtp Host</label>\n                <input\n                  type=\"text\"\n                  disabled={!editable}\n                  {...register(\"smtpHost\")}\n                  className={`${!editable ? inputDisabledClassName : inputClassName} ${errors.smtpHost ? \"border-[1px]\" : \"border-gray-300\"}`}\n                  placeholder=\"smtp Host\"\n                />\n              </div>\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  SMTP Port\n                </label>\n\n                <Controller\n                  name=\"smtpPort\"\n                  control={control}\n                  disabled={!editable}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassName} ${errors.smtpPort ? \"border-[1px]\" : \"border-gray-300\"}`}\n                      placeholder=\"Select SMTP Port\"\n                    >\n                      <Select.Option value=\"\">Select SMTP Port</Select.Option>\n                      <Select.Option value={587}>587 (TLS - STARTTLS)</Select.Option>\n                      <Select.Option value={465}>465 (SSL)</Select.Option>\n                    </Select>\n                  )}\n                />\n\n                {errors.smtpPort && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.smtpPort.message}\n                  </p>\n                )}\n              </div>\n\n              {/* <div>\n                <label className={inputLabelClassName}>smtpPort</label>\n                <input\n                  type=\"number\"\n                  disabled={!editable}\n                  {...register(\"smtpPort\")}\n                  className={`${!editable ? inputDisabledClassName : inputClassName} ${errors.smtpPort ? \"border-[1px]\" : \"border-gray-300\"}`}\n                  placeholder=\"smtpPort\"\n                />\n              </div> */}\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Is SMTP Secure\n                </label>\n                <Controller\n                  name=\"smtpSecure\"\n                  control={control}\n                  disabled={!editable}\n\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassName} ${errors.smtpSecure ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      placeholder=\"Select  Is SMTP Secure\"\n                    >\n                      <Select.Option value=\"\">Select Is SMTP Secure\"</Select.Option>\n                      <Select.Option value={true}>True</Select.Option>\n                      <Select.Option value={false}>False</Select.Option>\n\n                    </Select>\n                  )}\n                />\n\n                {errors.smtpSecure && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.smtpSecure.message}\n                  </p>\n                )}\n              </div>\n              <div>\n                <label className={inputLabelClassName}>smtp User</label>\n                <input\n                  type=\"text\"\n                  disabled={!editable}\n                  {...register(\"smtpUser\")}\n                  className={`${!editable ? inputDisabledClassName : inputClassName} ${errors.smtpUser ? \"border-[1px]\" : \"border-gray-300\"}`}\n                  placeholder=\"smtp User\"\n                />\n              </div>\n              <div>\n                <label className={inputLabelClassName}>smtp Password</label>\n                <input\n                  type=\"text\"\n                  disabled={!editable}\n                  {...register(\"smtpPassword\")}\n                  className={`${!editable ? inputDisabledClassName : inputClassName} ${errors.smtpPassword ? \"border-[1px]\" : \"border-gray-300\"}`}\n                  placeholder=\"smtp Password\"\n                />\n              </div>\n\n              {/* <div className=\"flex items-center gap-2\">\n                <div>\n                  \n                  <input\n                    type=\"file\"\n                    accept=\".pdf,image/*\"\n                    ref={fileInputRefs}\n                    className=\"hidden\"\n                    disabled={!editable}\n                    onChange={(e) => handleFileChange(e.target.files[0])}\n                  />\n                  <label\n                    htmlFor=\"documentUpload\"\n                    className={`${!editable ? 'bg-gray-400' : 'bg-header'} text-white mt-2 py-1.5 px-3 text-sm rounded cursor-pointer`}\n                    onClick={() => fileInputRefs.current?.click()}\n                  >\n                    Upload\n                  </label>\n                </div>\n\n                {uploadedLogo && (\n                  <div className=\"relative\">\n                    <CommonImageViewer src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public${uploadedLogo}`} />\n                    <button\n                     disabled={!editable}\n                      className={`absolute -top-1 -right-2  text-white rounded-full w-5 h-5 flex items-center justify-center text-xs ${editable ? 'bg-red-600' : 'bg-gray-300'}`}\n                      onClick={handleImageDelete}\n                      type=\"button\"\n                    >\n                      ✕\n                    </button>\n                  </div>\n                )}\n              </div> */}\n            </div>\n          </div>\n        </form>\n      )}\n    </GlobalLayout>\n  );\n};\n\nexport default CompanyPrefixSetting;\n"],"names":["CompanyPrefixSetting","useRef","lastFetchedCompanyId","uploadedLogo","setUploadedLogo","useState","register","handleSubmit","formState","errors","control","setValue","getValues","reset","useForm","dispatch","useDispatch","companyList","useSelector","state","company","companyPrefixData","loading","companyPrefixLoading","companyPrefix","editable","setEditable","userType","getUserIds","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","resolvedCompanyId","_id","companyId","fetchCompanyPrefixData","current","getCompanyPrefixDetails","useEffect","companySearch","isPagination","text","sort","status","branchUserNamePrefix","directorUserNamePrefix","tagline","JWTTokenExprTime","smtpHost","smtpPort","smtpSecure","smtpUser","smtpPassword","logo","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","_data$smtpHost","_data$smtpPort","_data$smtpUser","_data$smtpPassword","reqPayload","DirectorUserPrefix","branchPrefix","tagLine","updateCompanyPrefix","then","res","error","onClick","type","formButtonClassName","disabled","Loader","inputLabelClassName","_objectSpread","required","inputClassName","value","map","fullName","userName","message","Controller","name","render","_ref","field","Select","inputAntdSelectClassName","PDPlan","placeholder","Option","inputDisabledClassName","_ref2","_ref3"],"sourceRoot":""}