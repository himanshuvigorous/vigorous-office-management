{"version":3,"file":"static/js/5229.7d2a84a7.chunk.js","mappings":"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","sources":["pages/PreSalesManagement/LeadsManagement/LeadsReports.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  Card,\n  Row,\n  Col,\n  Select,\n  DatePicker,\n  Table,\n  Tag,\n  Space,\n  Statistic,\n  Spin,\n  Empty,\n  Grid,\n  Button,\n  Dropdown,\n  Menu\n} from 'antd';\nimport {\n  BarChartOutlined,\n  PieChartOutlined,\n  LineChartOutlined,\n  FilterOutlined,\n  ReloadOutlined,\n  EyeOutlined,\n  EyeInvisibleOutlined,\n  AreaChartOutlined,\n  DotChartOutlined\n} from '@ant-design/icons';\nimport { Bar, Pie, Line, Doughnut } from 'react-chartjs-2';\nimport { Chart as ChartJS, registerables } from 'chart.js';\nimport { LeadManagementReport } from './LeadmanagementFeature/_LeadmanagementFeature_reducers';\nimport GlobalLayout from '../../../global_layouts/GlobalLayout/GlobalLayout';\nimport { domainName, inputAntdSelectClassNameFilter } from '../../../constents/global';\nimport dayjs from 'dayjs';\nimport weekOfYear from 'dayjs/plugin/weekOfYear';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { branchSearch } from '../../branch/branchManagement/branchFeatures/_branch_reducers';\nimport moment from 'moment';\nimport { encrypt } from '../../../config/Encryption';\n\ndayjs.extend(weekOfYear);\ndayjs.extend(customParseFormat);\nChartJS.register(...registerables);\n\nconst { useBreakpoint } = Grid;\nconst { Option } = Select;\nconst { RangePicker } = DatePicker;\n\n// Vibrant color palette\nconst statusColors = {\n  Qualified: '#3A86FF',  // Bright blue\n  ProposalSent: '#FFBE0B', // Vibrant yellow\n  Closed: '#FF006E',    // Pink\n  Working: '#FB5607',   // Orange\n  Converted: '#8338EC'  // Purple\n};\n\nconst sourceColors = {\n  'Social Media': '#00BBF9',  // Sky blue\n  'Organic': '#00F5D4',       // Teal\n  'Compaign': '#F15BB5',      // Hot pink\n  'Call': '#9B5DE5'           // Light purple\n};\n\n// Chart color variants with transparency\nconst getColorVariants = (baseColor) => ({\n  main: baseColor,\n  light: `${baseColor}80`,\n  lighter: `${baseColor}30`\n});\n\nconst chartTypes = {\n  weeklyStatus: ['pie', 'doughnut', 'bar'],\n  monthlyStatus: ['bar', 'line', 'stacked'],\n  sourceDistribution: ['bar', 'line', 'stacked']\n};\n\nconst LeadsReports = () => {\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const { LeadmanagementReportdata, loading } = useSelector((state) => state.LeadmanagementFeature);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const screens = useBreakpoint();\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const [branchId, setBranchId] = useState('');\n\n  const today = moment();\n  const startOfMonth = today.clone().startOf('month');\n  const weekOfMonth = today.diff(startOfMonth, 'weeks') + 1;\n  const normalizedWeek = weekOfMonth <= 0 ? 1 : weekOfMonth;\n\n  // State for filters\n  const [filters, setFilters] = useState({\n    weekFilter: {\n      weekDay: normalizedWeek,\n      month: new Date().getMonth() + 1,\n      year: new Date().getFullYear()\n    },\n    monthFilter: {\n      month: new Date().getMonth() + 1,\n      year: new Date().getFullYear()\n    },\n    sourceMonthFilter: {\n      month: new Date().getMonth() + 1,\n      year: new Date().getFullYear()\n    },\n    listFilter: {\n      assignedToId: \"\",\n      leadCategoryId: \"\",\n      leadSubCategoryId: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      text: \"\",\n      status: \"\",\n      limit: 10,\n      isPagination: true,\n      sort: { createdAt: -1 }\n    }\n  });\n\n  // State for chart visibility and types\n  const [chartVisibility, setChartVisibility] = useState({\n    weeklyStatus: true,\n    monthlyStatus: true,\n    sourceDistribution: true\n  });\n\n  const [chartType, setChartType] = useState({\n    weeklyStatus: 'pie',\n    monthlyStatus: 'bar',\n    sourceDistribution: 'bar'\n  });\n\n  useEffect(() => {\n    handleReportCallingFunc();\n  }, [filters, branchId]);\n\n  const handleReportCallingFunc = () => {\n    dispatch(LeadManagementReport({\n      companyId: userInfoglobal?.userType === \"company\"\n        ? userInfoglobal?._id\n        : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" ? branchId : userInfoglobal?.userType === \"companyBranch\"\n        ? userInfoglobal?._id\n        : userInfoglobal?.branchId,\n      ...filters\n    }));\n  };\n\n  const handleFilterChange = (filterType, key, value) => {\n    setFilters(prev => ({\n      ...prev,\n      [filterType]: {\n        ...prev[filterType],\n        [key]: value\n      }\n    }));\n  };\n\n  const handleBranchChange = (value) => {\n    setBranchId(value);\n  };\n\n  useEffect(() => {\n    dispatch(\n      branchSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.companyId,\n      })\n    )\n  }, []);\n\n  const toggleChart = (chart) => {\n    setChartVisibility(prev => ({\n      ...prev,\n      [chart]: !prev[chart]\n    }));\n  };\n\n  const changeChartType = (chart, type) => {\n    setChartType(prev => ({\n      ...prev,\n      [chart]: type\n    }));\n  };\n\n  // Chart data preparation\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\n\nconst weeklyStatusData = {\n  labels: LeadmanagementReportdata?.weeklyStats?.map(item => item._id.status) || [],\n  datasets: [\n    {\n      data: LeadmanagementReportdata?.weeklyStats?.map(item => item.leadsCount) || [],\n      backgroundColor: LeadmanagementReportdata?.weeklyStats?.map(() => getRandomColor()) || [],\n      borderColor: '#fff',\n      borderWidth: 2,\n      hoverBorderWidth: 3\n    }\n  ]\n};\n\n\n  const monthlyStatusData = {\n    labels: LeadmanagementReportdata?.monthlyStats?.map(item => item._id.status) || [],\n    datasets: [\n      {\n        label: 'Leads',\n        data: LeadmanagementReportdata?.monthlyStats?.map(item => item.leadsCount) || [],\n        backgroundColor: getColorVariants(statusColors.Qualified).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      {\n        label: 'Followups',\n        data: LeadmanagementReportdata?.monthlyStats?.map(item => item.followupsCount) || [],\n        backgroundColor: getColorVariants(statusColors.ProposalSent).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      {\n        label: 'Transfers',\n        data: LeadmanagementReportdata?.monthlyStats?.map(item => item.transfersCount) || [],\n        backgroundColor: getColorVariants(statusColors.Working).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const stackedMonthlyStatusData = {\n    labels: LeadmanagementReportdata?.monthlyStats?.map(item => item._id.status) || [],\n    datasets: [\n      {\n        label: 'Leads',\n        data: LeadmanagementReportdata?.monthlyStats?.map(item => item.leadsCount) || [],\n        backgroundColor: getColorVariants(statusColors.Qualified).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      {\n        label: 'Followups',\n        data: LeadmanagementReportdata?.monthlyStats?.map(item => item.followupsCount) || [],\n        backgroundColor: getColorVariants(statusColors.ProposalSent).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      {\n        label: 'Transfers',\n        data: LeadmanagementReportdata?.monthlyStats?.map(item => item.transfersCount) || [],\n        backgroundColor: getColorVariants(statusColors.Working).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const sourceDistributionData = {\n    labels: LeadmanagementReportdata?.sourceStats?.map(item => item._id.source) || [],\n    datasets: [\n      {\n        label: 'Leads',\n        data: LeadmanagementReportdata?.sourceStats?.map(item => item.leadsCount) || [],\n        backgroundColor: getColorVariants(sourceColors['Social Media']).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      {\n        label: 'Followups',\n        data: LeadmanagementReportdata?.sourceStats?.map(item => item.followupsCount) || [],\n        backgroundColor: getColorVariants(sourceColors['Organic']).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      {\n        label: 'Transfers',\n        data: LeadmanagementReportdata?.sourceStats?.map(item => item.transfersCount) || [],\n        backgroundColor: getColorVariants(sourceColors['Compaign']).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      }\n    ]\n  };\n\n  const stackedSourceDistributionData = {\n    labels: LeadmanagementReportdata?.sourceStats?.map(item => item._id.source) || [],\n    datasets: [\n      {\n        label: 'Leads',\n        data: LeadmanagementReportdata?.sourceStats?.map(item => item.leadsCount) || [],\n        backgroundColor: getColorVariants(sourceColors['Social Media']).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      {\n        label: 'Followups',\n        data: LeadmanagementReportdata?.sourceStats?.map(item => item.followupsCount) || [],\n        backgroundColor: getColorVariants(sourceColors['Organic']).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      },\n      {\n        label: 'Transfers',\n        data: LeadmanagementReportdata?.sourceStats?.map(item => item.transfersCount) || [],\n        backgroundColor: getColorVariants(sourceColors['Compaign']).main,\n        borderColor: '#fff',\n        borderWidth: 1\n      }\n    ]\n  };\n\n  // Common chart options\n  const baseChartOptions = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: screens.xs ? 'bottom' : 'right',\n        labels: {\n          padding: 20,\n          usePointStyle: true,\n          pointStyle: 'circle',\n          font: {\n            size: screens.xs ? 10 : 12\n          }\n        }\n      },\n      tooltip: {\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleFont: {\n          size: 14,\n          weight: 'bold'\n        },\n        bodyFont: {\n          size: 12\n        },\n        padding: 12,\n        cornerRadius: 8,\n        displayColors: true,\n        callbacks: {\n          label: function (context) {\n            return `${context.dataset.label || ''}: ${context.raw}`;\n          }\n        }\n      }\n    }\n  };\n\n  const barChartOptions = {\n    ...baseChartOptions,\n    scales: {\n      x: {\n        grid: {\n          display: false\n        },\n        ticks: {\n          font: {\n            size: screens.xs ? 10 : 12\n          }\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0,0,0,0.05)'\n        },\n        ticks: {\n          font: {\n            size: screens.xs ? 10 : 12\n          }\n        }\n      }\n    }\n  };\n\n  const stackedBarChartOptions = {\n    ...barChartOptions,\n    scales: {\n      x: {\n        stacked: true,\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        stacked: true,\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0,0,0,0.05)'\n        }\n      }\n    }\n  };\n\n  const lineChartOptions = {\n    ...baseChartOptions,\n    scales: {\n      x: {\n        grid: {\n          display: false\n        }\n      },\n      y: {\n        beginAtZero: true,\n        grid: {\n          color: 'rgba(0,0,0,0.05)'\n        }\n      }\n    },\n    elements: {\n      line: {\n        tension: 0.3,\n        borderWidth: 3\n      },\n      point: {\n        radius: 5,\n        hoverRadius: 7\n      }\n    }\n  };\n\n  // Render appropriate chart based on type\n  const renderChart = (type, data, options, stackedData, stackedOptions) => {\n    switch (type) {\n      case 'pie':\n        return <Pie data={data} options={options} />;\n      case 'doughnut':\n        return <Doughnut data={data} options={options} />;\n      case 'bar':\n        return <Bar data={data} options={options} />;\n      case 'line':\n        return <Line data={data} options={options} />;\n      case 'stacked':\n        return <Bar data={stackedData} options={stackedOptions} />;\n      default:\n        return <Bar data={data} options={options} />;\n    }\n  };\n\n  // Columns for leads table\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      onCell: () => ({\n        style: { whiteSpace: 'nowrap' },\n      }),\n      key: 'name',\n      render: (text, record) => (\n        <a\n          onClick={() => navigate(`/admin/lead-management/view/${encrypt(record._id)}`)}\n          style={{ color: '#3A86FF', fontWeight: 500 }}\n        >\n          {text}\n        </a>\n      ),\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      onCell: () => ({\n        style: { whiteSpace: 'nowrap' },\n      }),\n      key: 'email',\n      render: (email) => <span style={{ color: '#666' }}>{email}</span>,\n    },\n    {\n      title: 'Mobile',\n      dataIndex: 'mobile',\n      onCell: () => ({\n        style: { whiteSpace: 'nowrap' },\n      }),\n      key: 'mobile',\n      render: (mobile) => (\n        <span style={{ color: '#666' }}>{`${mobile.code} ${mobile.number}`}</span>\n      ),\n    },\n    {\n      title: 'Source',\n      dataIndex: 'source',\n      onCell: () => ({\n        style: { whiteSpace: 'nowrap' },\n      }),\n      key: 'source',\n      render: (source) => (\n        <Tag\n          color={sourceColors[source] || '#888'}\n          style={{\n            color: '#fff',\n            fontWeight: 600,\n            borderRadius: 12,\n            padding: '0 10px'\n          }}\n        >\n          {source}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Status',\n      dataIndex: 'status',\n      key: 'status',\n      render: (status) => (\n        <Tag\n          color={statusColors[status] || '#888'}\n          style={{\n            color: '#fff',\n            fontWeight: 600,\n            borderRadius: 12,\n            padding: '0 10px'\n          }}\n        >\n          {status}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Created At',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      onCell: () => ({\n        style: { whiteSpace: 'nowrap' },\n      }),\n      render: (date) => (\n        <span style={{ color: '#666' }}>\n          {dayjs(date).format('DD MMM YYYY, hh:mm A')}\n        </span>\n      ),\n    },\n    {\n      title: 'Followups',\n      dataIndex: 'followupsCount',\n      key: 'followupsCount',\n      render: (count) => (\n        <span style={{\n          color: count > 0 ? '#3A86FF' : '#666',\n          fontWeight: count > 0 ? 600 : 400\n        }}>\n          {count}\n        </span>\n      ),\n    },\n    {\n      title: 'Last Followup',\n      dataIndex: 'lastFollowupDate',\n      key: 'lastFollowupDate',\n      onCell: () => ({\n        style: { whiteSpace: 'nowrap' },\n      }),\n      render: (date) => (\n        <span style={{ color: '#666' }}>\n          {date ? dayjs(date).format('DD MMM YYYY') : 'N/A'}\n        </span>\n      ),\n    },\n  ];\n\n  // Summary statistics\n  const totalLeads = LeadmanagementReportdata?.leadList?.length || 0;\n  const totalFollowups = LeadmanagementReportdata?.leadList?.reduce((sum, lead) => sum + lead.followupsCount, 0) || 0;\n  const convertedLeads = LeadmanagementReportdata?.leadList?.filter(lead => lead.status === 'Converted').length || 0;\n  const conversionRate = totalLeads > 0 ? ((convertedLeads / totalLeads) * 100).toFixed(2) : 0;\n\n  // Chart container style\n  const chartContainerStyle = {\n    height: screens.xs ? '250px' : '350px',\n    position: 'relative',\n    margin: screens.xs ? '0 -10px' : '0'\n  };\n\n  const chartTypeMenu = (chart) => (\n    <Menu onClick={({ key }) => changeChartType(chart, key)}>\n      {chartTypes[chart].map(type => (\n        <Menu.Item key={type}>\n          {type.charAt(0).toUpperCase() + type.slice(1)} Chart\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  return (\n    <GlobalLayout isBreadCrump={false}>\n      <div style={{\n        padding: screens.xs ? '10px' : '24px',\n       \n      }}>\n\n        <Card\n          type=\"inner\"\n          title={\n            <span style={{\n              fontSize: '16px',\n              fontWeight: 500,\n              color: '#2c3e50'\n            }}>\n              Filters\n            </span>\n          }\n          style={{\n            marginBottom: 24,\n            borderRadius: '8px',\n            border: '1px solid #e0e0e0',\n            backgroundColor: '#f8f9fa',\n          }}\n          headStyle={{\n\n            borderBottom: '1px solid #e0e0e0',\n            padding: screens.xs ? '12px 16px' : '16px 24px'\n          }}\n          bodyStyle={{ padding: screens.xs ? '12px' : '16px' }}\n        >\n\n          <div className='flex gap-2 items-center'>\n            {userInfoglobal?.userType === \"company\" && (\n\n              <Select\n                placeholder=\"Select Branch\"\n                style={{ width: '100%' }}\n                className={inputAntdSelectClassNameFilter}\n                onChange={handleBranchChange}\n                value={branchId}\n                suffixIcon={<span style={{ color: '#3A86FF' }}>▼</span>}\n              >\n                <Option value=\"\">All Branches</Option>\n                {branchList?.map((item) => (\n                  <Option key={item._id} value={item._id}>{item.fullName}</Option>\n                ))}\n              </Select>\n\n            )}\n            <Select\n              placeholder=\"Select Week\"\n              className={inputAntdSelectClassNameFilter}\n              style={{ width: '100%' }}\n              onChange={(value) => handleFilterChange('weekFilter', 'weekDay', value)}\n              value={filters.weekFilter.weekDay}\n              suffixIcon={<span style={{ color: '#3A86FF' }}>▼</span>}\n            >\n              {Array.from({ length: 5 }, (_, i) => (\n                <Option key={i + 1} value={i + 1}>Week {i + 1}</Option>\n              ))}\n            </Select>\n\n            <Select\n              placeholder=\"Select Year\"\n              className={inputAntdSelectClassNameFilter}\n              style={{ width: '100%' }}\n              onChange={(value) => {\n                handleFilterChange('weekFilter', 'year', value);\n                handleFilterChange('monthFilter', 'year', value);\n                handleFilterChange('sourceMonthFilter', 'year', value);\n              }}\n              value={filters.weekFilter.year}\n              suffixIcon={<span style={{ color: '#3A86FF' }}>▼</span>}\n            >\n              {[2023, 2024, 2025, 2026].map(year => (\n                <Option key={year} value={year}>{year}</Option>\n              ))}\n            </Select>\n\n            <Select\n              placeholder=\"Select Month\"\n              className={inputAntdSelectClassNameFilter}\n              style={{ width: '100%' }}\n              onChange={(value) => {\n                handleFilterChange('weekFilter', 'month', value);\n                handleFilterChange('monthFilter', 'month', value);\n                handleFilterChange('sourceMonthFilter', 'month', value);\n              }}\n              value={filters.monthFilter.month}\n              suffixIcon={<span style={{ color: '#3A86FF' }}>▼</span>}\n            >\n              {Array.from({ length: 12 }, (_, i) => (\n                <Option key={i + 1} value={i + 1}>\n                  {dayjs().month(i).format('MMMM')}\n                </Option>\n              ))}\n            </Select>\n\n          </div>\n        </Card>\n        <Row gutter={16} style={{ marginBottom: 24 }}>\n          {[\n            {\n              title: 'Total Leads',\n              value: totalLeads,\n              icon: <BarChartOutlined style={{ color: '#3A86FF' }} />,\n              color: '#3A86FF',\n              trend: 'up'\n            },\n            {\n              title: 'Total Followups',\n              value: totalFollowups,\n              icon: <LineChartOutlined style={{ color: '#FFBE0B' }} />,\n              color: '#FFBE0B',\n              trend: 'up'\n            },\n            {\n              title: 'Converted Leads',\n              value: convertedLeads,\n              icon: <PieChartOutlined style={{ color: '#8338EC' }} />,\n              color: '#8338EC',\n              trend: convertedLeads > 0 ? 'up' : 'down'\n            },\n            {\n              title: 'Conversion Rate',\n              value: conversionRate,\n              suffix: '%',\n              icon: <AreaChartOutlined style={{ color: '#FF006E' }} />,\n              color: '#FF006E',\n              trend: conversionRate > 0 ? 'up' : 'down'\n            }\n          ].map((stat, index) => (\n            <Col xs={24} sm={12} md={6} key={index}>\n              <Card\n                bordered={false}\n                style={{\n                  background: '#fff',\n                  borderRadius: '8px',\n                  boxShadow: '0 2px 8px rgba(0,0,0,0.05)',\n                  borderLeft: `4px solid ${stat.color}`,\n                  marginBottom: '16px'\n                }}\n                bodyStyle={{ padding: '16px' }}\n              >\n                <Statistic\n                  title={\n                    <span style={{\n                      color: '#7f8c8d',\n                      fontSize: '14px',\n                      fontWeight: 500\n                    }}>\n                      {stat.title}\n                    </span>\n                  }\n                  value={stat.value}\n                  suffix={stat.suffix}\n                  prefix={\n                    <div style={{\n                      display: 'inline-flex',\n                      alignItems: 'center',\n                      marginRight: '8px'\n                    }}>\n                      {stat.icon}\n                      {stat.trend === 'up' ? (\n                        <span style={{\n                          color: '#2ecc71',\n                          marginLeft: '4px',\n                          fontSize: '12px'\n                        }}>↑</span>\n                      ) : (\n                        <span style={{\n                          color: '#e74c3c',\n                          marginLeft: '4px',\n                          fontSize: '12px'\n                        }}>↓</span>\n                      )}\n                    </div>\n                  }\n                  valueStyle={{\n                    color: stat.color,\n                    fontWeight: 600,\n                    fontSize: '24px'\n                  }}\n                />\n              </Card>\n            </Col>\n          ))}\n        </Row>\n\n        {loading ? (\n          <div style={{\n            textAlign: 'center',\n            padding: '50px',\n            background: '#fff',\n            borderRadius: '8px',\n            marginBottom: '24px'\n          }}>\n            <Spin size=\"large\" tip=\"Loading reports...\" />\n          </div>\n        ) : (\n          <>\n            {/* Charts Section */}\n            <Row gutter={[16, 16]}>\n              {chartVisibility.weeklyStatus && (\n                <Col xs={24} md={12}>\n                  <Card\n                    title={\n                      <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      }}>\n                        <span style={{ fontWeight: 500 }}>Weekly Lead Status</span>\n                        <Space>\n                          <Dropdown\n                            overlay={chartTypeMenu('weeklyStatus')}\n                            placement=\"bottomRight\"\n                          >\n                            <Button\n                              size=\"small\"\n                              icon={<DotChartOutlined />}\n                              style={{ border: 'none' }}\n                            />\n                          </Dropdown>\n                          <Button\n                            size=\"small\"\n                            icon={<EyeInvisibleOutlined />}\n                            onClick={() => toggleChart('weeklyStatus')}\n                            style={{ border: 'none' }}\n                          />\n                        </Space>\n                      </div>\n                    }\n                    bordered={false}\n                    style={{\n                      borderRadius: '8px',\n                      boxShadow: '0 2px 8px rgba(0,0,0,0.05)',\n                      background: '#fff'\n                    }}\n                    bodyStyle={{ padding: screens.xs ? '12px' : '16px' }}\n                  >\n                    {LeadmanagementReportdata?.weeklyStats?.length ? (\n                      <div style={chartContainerStyle}>\n                        {renderChart(\n                          chartType.weeklyStatus,\n                          weeklyStatusData,\n                          baseChartOptions\n                        )}\n                      </div>\n                    ) : (\n                      <Empty\n                        description=\"No weekly data available\"\n                        imageStyle={{ height: 80 }}\n                      />\n                    )}\n                  </Card>\n                </Col>\n              )}\n\n              {chartVisibility.monthlyStatus && (\n                <Col xs={24} md={12}>\n                  <Card\n                    title={\n                      <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      }}>\n                        <span style={{ fontWeight: 500 }}>Monthly Lead Status</span>\n                        <Space>\n                          <Dropdown\n                            overlay={chartTypeMenu('monthlyStatus')}\n                            placement=\"bottomRight\"\n                          >\n                            <Button\n                              size=\"small\"\n                              icon={<DotChartOutlined />}\n                              style={{ border: 'none' }}\n                            />\n                          </Dropdown>\n                          <Button\n                            size=\"small\"\n                            icon={<EyeInvisibleOutlined />}\n                            onClick={() => toggleChart('monthlyStatus')}\n                            style={{ border: 'none' }}\n                          />\n                        </Space>\n                      </div>\n                    }\n                    bordered={false}\n                    style={{\n                      borderRadius: '8px',\n                      boxShadow: '0 2px 8px rgba(0,0,0,0.05)',\n                      background: '#fff'\n                    }}\n                    bodyStyle={{ padding: screens.xs ? '12px' : '16px' }}\n                  >\n                    {LeadmanagementReportdata?.monthlyStats?.length ? (\n                      <div style={chartContainerStyle}>\n                        {renderChart(\n                          chartType.monthlyStatus,\n                          monthlyStatusData,\n                          chartType.monthlyStatus === 'stacked' ? stackedBarChartOptions :\n                            chartType.monthlyStatus === 'line' ? lineChartOptions : barChartOptions,\n                          stackedMonthlyStatusData,\n                          stackedBarChartOptions\n                        )}\n                      </div>\n                    ) : (\n                      <Empty\n                        description=\"No monthly data available\"\n                        imageStyle={{ height: 80 }}\n                      />\n                    )}\n                  </Card>\n                </Col>\n              )}\n\n              {chartVisibility.sourceDistribution && (\n                <Col xs={24}>\n                  <Card\n                    title={\n                      <div style={{\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                        alignItems: 'center'\n                      }}>\n                        <span style={{ fontWeight: 500 }}>Lead Source Distribution</span>\n                        <Space>\n                          <Dropdown\n                            overlay={chartTypeMenu('sourceDistribution')}\n                            placement=\"bottomRight\"\n                          >\n                            <Button\n                              size=\"small\"\n                              icon={<DotChartOutlined />}\n                              style={{ border: 'none' }}\n                            />\n                          </Dropdown>\n                          <Button\n                            size=\"small\"\n                            icon={<EyeInvisibleOutlined />}\n                            onClick={() => toggleChart('sourceDistribution')}\n                            style={{ border: 'none' }}\n                          />\n                        </Space>\n                      </div>\n                    }\n                    bordered={false}\n                    style={{\n                      borderRadius: '8px',\n                      boxShadow: '0 2px 8px rgba(0,0,0,0.05)',\n                      background: '#fff'\n                    }}\n                    bodyStyle={{ padding: screens.xs ? '12px' : '16px' }}\n                  >\n                    {LeadmanagementReportdata?.sourceStats?.length ? (\n                      <div style={chartContainerStyle}>\n                        {renderChart(\n                          chartType.sourceDistribution,\n                          sourceDistributionData,\n                          chartType.sourceDistribution === 'stacked' ? stackedBarChartOptions :\n                            chartType.sourceDistribution === 'line' ? lineChartOptions : barChartOptions,\n                          stackedSourceDistributionData,\n                          stackedBarChartOptions\n                        )}\n                      </div>\n                    ) : (\n                      <Empty\n                        description=\"No source data available\"\n                        imageStyle={{ height: 80 }}\n                      />\n                    )}\n                  </Card>\n                </Col>\n              )}\n            </Row>\n\n            {/* Hidden charts toggle */}\n            <div style={{\n              textAlign: 'center',\n              margin: '16px 0',\n              display: 'flex',\n              justifyContent: 'center',\n              flexWrap: 'wrap',\n              gap: '8px'\n            }}>\n              {!chartVisibility.weeklyStatus && (\n                <Button\n                  type=\"text\"\n                  icon={<EyeOutlined />}\n                  onClick={() => toggleChart('weeklyStatus')}\n                  style={{\n                    color: '#3A86FF',\n                    fontWeight: 500\n                  }}\n                >\n                  Show Weekly Status\n                </Button>\n              )}\n              {!chartVisibility.monthlyStatus && (\n                <Button\n                  type=\"text\"\n                  icon={<EyeOutlined />}\n                  onClick={() => toggleChart('monthlyStatus')}\n                  style={{\n                    color: '#FFBE0B',\n                    fontWeight: 500\n                  }}\n                >\n                  Show Monthly Status\n                </Button>\n              )}\n              {!chartVisibility.sourceDistribution && (\n                <Button\n                  type=\"text\"\n                  icon={<EyeOutlined />}\n                  onClick={() => toggleChart('sourceDistribution')}\n                  style={{\n                    color: '#8338EC',\n                    fontWeight: 500\n                  }}\n                >\n                  Show Source Distribution\n                </Button>\n              )}\n            </div>\n\n            {/* Leads Table */}\n            <Card\n              title={\n                <span style={{\n                  fontSize: '16px',\n                  fontWeight: 500,\n                  color: '#2c3e50'\n                }}>\n                  Recent Leads\n                </span>\n              }\n              style={{\n                marginTop: 24,\n                borderRadius: '8px',\n                boxShadow: '0 2px 8px rgba(0,0,0,0.05)',\n                border: 'none'\n              }}\n\n              headStyle={{\n                backgroundColor: '#f8f9fa',\n                borderBottom: '1px solid #e0e0e0',\n                padding: screens.xs ? '12px 16px' : '16px 24px'\n              }}\n              bodyStyle={{ padding: screens.xs ? '0' : '0 16px' }}\n            >\n              <Table\n                columns={columns}\n                dataSource={LeadmanagementReportdata?.leadList?.slice(0, 10) || []}\n                rowKey=\"_id\"\n                pagination={false}\n                scroll={{ x: true }}\n                locale={{\n                  emptyText: (\n                    <Empty\n                      description=\"No leads found\"\n                      imageStyle={{ height: 60 }}\n                      style={{ padding: '40px 0' }}\n                    />\n                  )\n                }}\n                style={{\n                  borderRadius: '8px'\n                }}\n              />\n            </Card>\n          </>\n        )}\n\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default LeadsReports;"],"names":["dayjs","weekOfYear","customParseFormat","ChartJS","register","registerables","useBreakpoint","Grid","Option","Select","RangePicker","DatePicker","statusColors","Qualified","ProposalSent","Closed","Working","Converted","sourceColors","getColorVariants","baseColor","main","light","concat","lighter","chartTypes","weeklyStatus","monthlyStatus","sourceDistribution","LeadsReports","_LeadmanagementReport","_LeadmanagementReport2","_LeadmanagementReport3","_LeadmanagementReport4","_LeadmanagementReport5","_LeadmanagementReport6","_LeadmanagementReport7","_LeadmanagementReport8","_LeadmanagementReport9","_LeadmanagementReport0","_LeadmanagementReport1","_LeadmanagementReport10","_LeadmanagementReport11","_LeadmanagementReport12","_LeadmanagementReport13","_LeadmanagementReport14","_LeadmanagementReport15","_LeadmanagementReport16","_LeadmanagementReport17","_LeadmanagementReport18","_LeadmanagementReport19","_LeadmanagementReport20","_LeadmanagementReport21","_LeadmanagementReport22","_LeadmanagementReport23","_LeadmanagementReport24","branchList","branchListloading","useSelector","state","branch","LeadmanagementReportdata","loading","LeadmanagementFeature","dispatch","useDispatch","navigate","useNavigate","screens","userInfoglobal","JSON","parse","localStorage","getItem","domainName","branchId","setBranchId","useState","today","moment","startOfMonth","clone","startOf","weekOfMonth","diff","normalizedWeek","filters","setFilters","weekFilter","weekDay","month","Date","getMonth","year","getFullYear","monthFilter","sourceMonthFilter","listFilter","assignedToId","leadCategoryId","leadSubCategoryId","startDate","endDate","text","status","limit","isPagination","sort","createdAt","chartVisibility","setChartVisibility","chartType","setChartType","useEffect","handleReportCallingFunc","LeadManagementReport","_objectSpread","companyId","userType","_id","handleFilterChange","filterType","key","value","prev","branchSearch","toggleChart","chart","weeklyStatusData","labels","weeklyStats","map","item","datasets","data","leadsCount","backgroundColor","getRandomColor","color","i","Math","floor","random","borderColor","borderWidth","hoverBorderWidth","monthlyStatusData","monthlyStats","label","followupsCount","transfersCount","stackedMonthlyStatusData","sourceDistributionData","sourceStats","source","stackedSourceDistributionData","baseChartOptions","responsive","maintainAspectRatio","plugins","legend","position","xs","padding","usePointStyle","pointStyle","font","size","tooltip","titleFont","weight","bodyFont","cornerRadius","displayColors","callbacks","context","dataset","raw","barChartOptions","scales","x","grid","display","ticks","y","beginAtZero","stackedBarChartOptions","stacked","lineChartOptions","elements","line","tension","point","radius","hoverRadius","renderChart","type","options","stackedData","stackedOptions","_jsx","Pie","Doughnut","Bar","Line","columns","title","dataIndex","onCell","style","whiteSpace","render","record","onClick","encrypt","fontWeight","children","email","mobile","code","number","Tag","borderRadius","date","format","count","totalLeads","leadList","length","totalFollowups","reduce","sum","lead","convertedLeads","filter","conversionRate","toFixed","chartContainerStyle","height","margin","chartTypeMenu","Menu","_ref","changeChartType","_jsxs","Item","charAt","toUpperCase","slice","GlobalLayout","isBreadCrump","Card","fontSize","marginBottom","border","headStyle","borderBottom","bodyStyle","className","placeholder","width","inputAntdSelectClassNameFilter","onChange","suffixIcon","fullName","Array","from","_","Row","gutter","icon","BarChartOutlined","trend","LineChartOutlined","PieChartOutlined","suffix","AreaChartOutlined","stat","index","Col","sm","md","bordered","background","boxShadow","borderLeft","Statistic","prefix","alignItems","marginRight","marginLeft","valueStyle","textAlign","Spin","tip","_Fragment","justifyContent","Space","Dropdown","overlay","placement","Button","DotChartOutlined","EyeInvisibleOutlined","Empty","description","imageStyle","flexWrap","gap","EyeOutlined","marginTop","Table","dataSource","rowKey","pagination","scroll","locale","emptyText"],"sourceRoot":""}