{"version":3,"file":"static/js/2375.d4d444f5.chunk.js","mappings":"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","sources":["pages/global/other/policy/PolicyList.js","global_layouts/Loader/Loader.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { encrypt } from \"../../../../config/Encryption\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport Loader from \"../../../../global_layouts/Loader/Loader\";\nimport { deletePolicyFunc, getpolicyList } from \"./policyFeatures/policy_reducers\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { domainName, inputAntdSelectClassNameFilter, inputClassNameSearch, } from \"../../../../constents/global\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { CgEyeAlt } from \"react-icons/cg\";\nimport { Select, Tooltip } from \"antd\";\nimport getUserIds from \"../../../../constents/getUserIds\";\nimport { HiOutlineFilter } from \"react-icons/hi\";\n\n\nfunction PolicyList() {\n  const { register, control, formState: { errors } } = useForm();\n  const { userCompanyId, userBranchId, userType } = getUserIds();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { commonEmailData, totalcommonEmailCount, loading } = useSelector((state) => state.emailTemplate);\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector(\n    (state) => state.branch\n  );\n  const [searchText, setSearchText] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: userCompanyId,\n  });\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: userBranchId,\n  });\n  const limit = 10;\n\n  useEffect(() => {\n    getCommonEmailRequest();\n  }, [currentPage, branchId, companyId, status, searchText]);\n\n\n  const getCommonEmailRequest = () => {\n    const data = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqData: {\n        directorId: \"\",\n        companyId: companyId || \"\",\n        branchId: branchId || \"\",\n        \"text\": searchText,\n        \"sort\": true,\n        \"status\": status,\n        \"isPagination\": true,\n      }\n    };\n    dispatch(getpolicyList(data));\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deletePolicyFunc(reqData)).then((data) => {\n          getCommonEmailRequest()\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    if (\n      companyId ||\n      userType === \"company\" ||\n      userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination:false,\n          companyId: companyId\n        })\n      );\n    }\n  }, [companyId])\n  useEffect(() => {\n    if (userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState(null); // State to store the selected template data\n\n  // Function to open the modal with the template details\n  const openModal = (template) => {\n    setSelectedTemplate(template);\n    setModalOpen(true);\n  };\n\n  // Function to close the modal\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedTemplate(null);\n  };\n\n  const onChange = (e) => {\n    \n    setSearchText(e);\n  };\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <div className=\"\">\n            <div className=\"flex justify-between items-center md:space-y-0 space-y-2 py-1\">\n              <div className=\"flex items-center space-x-2\">\n                {userType === \"admin\" &&\n                  <div className='flex justify-center items-center space-x-2 bg-white p-2 text-[14px] rounded-md'>\n                    <HiOutlineFilter />\n                    <select\n                      {...register(\"PDCompanyId\")}\n                      className=\"bg-white focus:outline-none\"\n                    >\n                      <option className=\"\" value=\"\">Select Comapany</option>\n                      {companyList?.map((type) => (\n                        <option value={type?._id}>{type?.fullName}</option>\n                      ))}\n                    </select>\n                  </div>}\n                {(userType === \"admin\" || userType === \"company\" || userType === \"companyDirector\") &&\n                  <div className=\"\">\n                    <Controller\n                      name=\"PDBranchId\"\n                      control={control}\n                      rules={{ required: \"Branch is required\" }}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          className={`${inputClassNameSearch} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                          placeholder=\"Select Branch\"\n                        >\n                          <Select.Option value=\"\">Select Branch</Select.Option>\n                          {branchList?.map((type) => (\n                            <Select.Option key={type?._id} value={type?._id}>\n                              {type?.fullName}\n                            </Select.Option>\n                          ))}\n                        </Select>\n                      )}\n                    />\n                    {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n                  </div>}\n                <Select\n                  className={` ${inputAntdSelectClassNameFilter} `}\n                  value={status}\n                  onChange={(e) => {\n                    setStatus(e);\n                  }}\n                  placeholder=\"Select Status\"\n                  showSearch\n                >\n                  <Select.Option value=\"\">Select Status</Select.Option>\n                  <Select.Option value={true}>{\"Active\"}</Select.Option>\n                  <Select.Option value={false}>{\"InActive\"}</Select.Option>\n                </Select>\n              </div>\n              <button\n                onClick={() => {\n                  navigate(\"/admin/policy/create\");\n                }}\n                className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n              >\n                <FaPlus />\n                <span className=\"text-[12px]\">Add Policy</span>\n              </button>\n            </div>\n          </div>\n          {!loading ?\n            <div className=\"w-full\">\n              <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n                <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n                  <thead>\n                    <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                      <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n                      <th className=\"p-2 whitespace-nowrap\">Title</th>\n                      <th className=\"p-2 whitespace-nowrap\">Status</th>\n                      <th className=\"p-2 whitespace-nowrap w-[10%]\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {commonEmailData && commonEmailData?.length > 0 ? (\n                      commonEmailData?.map((element, index) => (\n                        <React.Fragment key={element._id}>\n                          <tr\n                            className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"} text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                          >\n                            <td className=\"whitespace-nowrap p-2\">\n                              {index + 1 + (currentPage - 1) * limit}\n                            </td>\n                            <td className=\"whitespace-nowrap p-2\">{element?.title}</td>\n                            <td className=\"whitespace-nowrap border-none p-2 \">\n                              <span\n                                className={`${element?.status ? \"bg-[#E0FFBE] border-green-500\" : \"bg-red-200 border-red-500\"} border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                              >\n                                {element?.status ? \"Active\" : \"Inactive\"}\n                              </span>\n                            </td>\n                            <td className=\"whitespace-nowrap p-2\">\n                              <span className=\"py-1.5 flex justify-start items-center space-x-2.5\">\n                                <Tooltip placement=\"topLeft\"  title='Edit'>\n                                  <button\n                                    onClick={() => {\n                                      navigate(`/admin/policy/edit/${encrypt(element?._id)}`);\n                                    }}\n                                    className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                    type=\"button\"\n                                  >\n                                    <FaPenToSquare className=\"hover:text-[#337ab7] text-[#3c8dbc]\" size={16} />\n                                  </button>\n                                </Tooltip>\n                                <Tooltip placement=\"topLeft\"  title='View Details'>\n                                  <button\n                                    onClick={() => openModal(element)}\n                                    className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                    type=\"button\"\n                                  >\n                                    <CgEyeAlt className=\"text-cyan-600 hover:text-cyan-500\" size={16} />\n                                  </button>\n                                </Tooltip>\n                                <Tooltip placement=\"topLeft\"  title='Delete'>\n                                  <button\n                                    onClick={() => handleDelete(element?._id)}\n                                    className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                    type=\"button\"\n                                  >\n                                    <RiDeleteBin5Line className=\"text-red-600 hover:text-red-500\" size={16} />\n                                  </button>\n                                </Tooltip>\n                              </span>\n                            </td>\n\n                          </tr>\n                        </React.Fragment>\n                      ))\n                    ) : (\n                      <tr className=\"bg-white bg-opacity-5\">\n                        <td colSpan={6} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">\n                          Record Not Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n              {commonEmailData?.length > 0 &&\n                <CustomPagination\n                  totalCount={totalcommonEmailCount}\n                  pageSize={limit}\n                  currentPage={currentPage}\n                  onChange={onPaginationChange}\n                />}\n            </div>\n            : <Loader />}\n          {modalOpen && selectedTemplate && (\n            <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1501]\" onClick={closeModal}>\n              <div className=\"animate-slideInFromTop bg-white rounded-lg px-6 pt-6 pb-3 w-[800px] max-h-[70vh] overflow-y-hidden\" onClick={(e) => e.stopPropagation()}>\n                <div className=\"mt-4\">\n                  <div dangerouslySetInnerHTML={{ __html: selectedTemplate?.content }}></div>\n                </div>\n                <div className=\"mt-4 flex justify-end\">\n                  <button\n                    onClick={closeModal}\n                    className=\"px-4 py-2 text-white bg-header rounded-md\"\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </GlobalLayout>\n  );\n}\nexport default PolicyList;\n","import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n"],"names":["register","control","formState","errors","useForm","userCompanyId","userBranchId","userType","getUserIds","navigate","useNavigate","dispatch","useDispatch","commonEmailData","totalcommonEmailCount","loading","useSelector","state","emailTemplate","currentPage","setCurrentPage","JSON","parse","localStorage","getItem","concat","domainName","useState","companyList","company","branchList","branch","searchText","setSearchText","status","setStatus","companyId","useWatch","name","defaultValue","branchId","useEffect","getCommonEmailRequest","data","pageSize","reqData","directorId","getpolicyList","branchSearch","text","sort","isPagination","companySearch","modalOpen","setModalOpen","selectedTemplate","setSelectedTemplate","closeModal","_jsx","GlobalLayout","onChange","e","children","Loader","_jsxs","_Fragment","className","HiOutlineFilter","_objectSpread","value","map","type","_id","fullName","Controller","rules","required","render","_ref","field","Select","inputClassNameSearch","PDBranchId","placeholder","Option","message","inputAntdSelectClassNameFilter","showSearch","onClick","FaPlus","length","element","index","React","title","Tooltip","placement","encrypt","FaPenToSquare","size","CgEyeAlt","id","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deletePolicyFunc","handleDelete","RiDeleteBin5Line","colSpan","CustomPagination","totalCount","page","stopPropagation","dangerouslySetInnerHTML","__html","content","Spin"],"sourceRoot":""}