{"version":3,"file":"static/js/3506.dd5f4081.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/client_growthrevenue_report/ClientGrowthRevenueReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { clientGrowthRevenueReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\n\nfunction ClientGrowthRevenueReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const {\n    clientGrowthRevenueReportList,\n    clientGrowthRevenueReportFunc_loading,\n    clientGrowthRevenueReportCount,\n  } = useSelector((state) => state.reports);\n\n  const amountFrom = useWatch({ control, name: \"amountFrom\", defaultValue: '' });\n  const amountTo = useWatch({ control, name: \"amountTo\", defaultValue: '' });\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList, groupSearchLoading } = useSelector((state) => state.clientGroup);\n  const { clientList } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const startDate = useWatch({ control, name: \"startDate\", defaultValue: dayjs().subtract(1, \"month\"), });\n  const endDate = useWatch({ control, name: \"endDate\", defaultValue: dayjs(), });\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n        organizationId: PDOrganizationType,\n        organizationIds: [],\n        departmentId: \"\",\n        departmentIds: [],\n        \"amountFrom\": amountFrom ? Number(amountFrom) : '',\n        \"amountTo\": amountTo ? Number(amountTo) : '',\n        \"clientId\": \"\",\n        \"clientIds\": [],\n        industryId: PDindustrytype,\n        industryIds: [],\n        groupId: groupName,\n        groupIds: [],\n        dueAmount: \"\",\n        startDate: startDate\n          ? dayjs(startDate).format(\"YYYY-MM-DD\")\n          : '',\n        endDate: endDate\n          ? dayjs(endDate).format(\"YYYY-MM-DD\")\n          : '',\n\n\n      },\n    };\n  };\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(clientGrowthRevenueReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n\n  const handleDepartmentModal = (element) => {\n    setDepartmentModalOpen(true);\n    setDepartmentModalData(element);\n  };\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Client Revenue Report\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Group Name\", key: \"groupName\", width: 25 },\n      { header: \"Client Name\", key: \"clientName\", width: 30 },\n      { header: \"Total Amount\", key: \"totalTaskAmount\", width: 20 },\n      { header: \"Invoice Raised\", key: \"totalInvoiceAmount\", width: 20 },\n      { header: \"Amount Received\", key: \"totalReceiptAmount\", width: 20 },\n      { header: \"Due Amount\", key: \"dueAmount\", width: 20 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.clientGrowthRevenueReportFunc(requestPayLoadReturn(false));\n    if (!response?.data?.docs) return;\n\n    const apiData = response.data.docs.map((data, index) => ({\n      sno: index + 1,\n      groupName: data?.groupName || \"-\",\n      clientName: data?.fullName || \"-\",\n      totalTaskAmount: data?.totalTaskAmount || 0,\n      totalInvoiceAmount: data?.totalInvoiceAmount || 0,\n      totalReceiptAmount: data?.totalReceiptAmount || 0,\n      dueAmount: data?.dueAmount || 0,\n    }));\n\n    apiData.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"G1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"ClientRevenueReport.xlsx\";\n      link.click();\n    });\n  };\n\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n    const headers = [\n      \"S.No.\",\n      \"Group Name\",\n      \"Client Name\",\n      \"Total Amount\",\n      \"Invoice Raised\",\n      \"Amount Received\",\n      \"Due Amount\",\n    ];\n    const response = await reportsServices?.clientGrowthRevenueReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!clientGrowthRevenueReportList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        data?.groupName || \"-\",\n        data?.fullName || \"-\",\n        data?.totalTaskAmount || 0,\n        data?.totalInvoiceAmount || 0,\n        data?.totalReceiptAmount || 0,\n        data?.dueAmount || 0,\n\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`Client_Revenue_Report.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1 2xl:flex justify-between items-center\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport`}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            {/* <Controller\n              control={control}\n              name=\"PDOrganizationType\"\n              rules={{ required: \"Organization is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={\"\"}\n                  className={`inputAntdSelectClassNameFilterReport `}\n                  showSearch\n                  onFocus={() => handleFocusOrgType()}\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">\n                    Select Organization Type\n                  </Select.Option>\n                  {orgSearchloading ? (\n                    <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>\n                  ) : (\n                    orgTypeList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.name}\n                      </Select.Option>\n                    ))\n                  )}\n                </Select>\n              )}\n            /> */}\n            {/* \n            <Controller\n              control={control}\n              name=\"PDindustrytype\"\n              rules={{ required: \"Industry type is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={\"\"}\n                  onFocus={() => {\n                    handleFocusIndustry();\n                  }}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                  className={`inputAntdSelectClassNameFilterReport `}\n                >\n                  <Select.Option value=\"\"> Select Industry Type</Select.Option>\n                  {indusSearchloading ? (\n                    <Select.Option disabled>\n                      <Loader />\n                    </Select.Option>\n                  ) : (\n                    industryListData?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.name}\n                      </Select.Option>\n                    ))\n                  )}\n                </Select>\n              )}\n            /> */}\n\n            <div className=\"\">\n              <Controller\n                name=\"groupName\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Group\"\n                    onFocus={() => {\n                      dispatch(\n                        clientGrpSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                          groupId: \"\",\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Group</Select.Option>\n                    {groupSearchLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(clientGroupList)?.map((element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName} ({element?.groupName})\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"amountFrom\"\n                control={control}\n                render={({ field }) => (\n                  <input\n                    type=\"number\"\n                    value={field?.value}\n                    onChange={(val) => field.onChange(val)}\n                    className={`inputAntdMultiSelectClassNameFilterReport`}\n                    placeholder=\"Enter Amount From \"\n                  />\n\n\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"amountTo\"\n                control={control}\n                render={({ field }) => (\n                  <input\n                    type=\"number\"\n                    value={field?.value}\n                    onChange={(val) => field.onChange(val)}\n                    className={`inputAntdMultiSelectClassNameFilterReport`}\n                    placeholder=\"Enter Amount To \"\n                  />\n\n\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"startDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs().subtract(1, \"month\")}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"endDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs()}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"groupName\", \"\");\n                setValue(\"amountFrom\", \"\");\n                setValue(\"amountTo\", \"\");\n                setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n                setValue(\"endDate\", dayjs());\n                handleSubmit()\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          >\n\n          </Collapse>\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1  justify-between items-center\">\n            <div className=\"flex items-center py-1 gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Group Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Client Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Total Amount </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Invoice raised </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">Amount Recieved </th>\n\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Due Amount\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Created By\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Departments\n                </th> */}\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th> */}\n              </tr>\n            </thead>\n            {clientGrowthRevenueReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {clientGrowthRevenueReportList &&\n                  clientGrowthRevenueReportList?.length > 0 ? (\n                  clientGrowthRevenueReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.groupName}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.fullName}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.totalTaskAmount || 0}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.totalInvoiceAmount || 0}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {Number(element?.totalReceiptAmount).toFixed(2) || 0}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.dueAmount || 0}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.createdBy}\n                      </td> */}\n                      {/* <td className=\"tableData \">\n                        {(\n                          <div className=\"flex justify-center items-center gap-1\">\n                            <span>{element?.departmentData?.length}</span>\n                            <span className=\"flex justify-center items-center cursor-pointer\">\n                              <FaEye\n                                onClick={() => handleDepartmentModal(element)}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              />\n                            </span>\n                          </div>\n                        ) || \"-\"}\n                      </td> */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n          <Modal\n            className=\"antmodalclassName !w-[60%] !h-[50%]\"\n            title=\"Departments\"\n            open={departmentModalOpen}\n            onCancel={() => setDepartmentModalOpen(false)}\n            footer={null}\n          >\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                    S.No.\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Department Name\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Created At\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Created By\n                  </th>\n                </tr>\n              </thead>\n              {clientGrowthRevenueReportFunc_loading ? (\n                <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={15}\n                    className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr>\n              ) : (\n                <tbody>\n                  {departmentModalData?.departmentData &&\n                    departmentModalData?.departmentData.length > 0 ? (\n                    departmentModalData?.departmentData?.map(\n                      (element, index) => (\n                        <tr\n                          className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                            } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                        >\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {index + 1 + (currentPage - 1) * pageSize}\n                          </td>\n\n                          {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.name}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.email || \"-\"}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.mobile?.code || \"-\"}{\" \"}\n                            {element?.mobile?.number || \"-\"}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {dayjs(element?.createdAt).format(\n                              \"DD-MM-YYYY hh:mm a\"\n                            )}\n                          </td>\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.createdBy}\n                          </td>\n                          {/* <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                        <div onClick={()=>{handleDepartmentModal(element)}} className=\"flex justify-center items-center rounded-md h-10 w-10 border-2 border-cyan-500\">\n                          {element?.departmentData?.length || 0}\n                        </div>\n                      </td> */}\n                        </tr>\n                      )\n                    )\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={15}\n                        className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              )}\n            </table>\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={clientGrowthRevenueReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default ClientGrowthRevenueReport;\n"],"names":["_departmentModalData$","control","formState","errors","setValue","watch","useForm","pageSize","setPageSize","useState","dispatch","useDispatch","clientGrowthRevenueReportList","clientGrowthRevenueReportFunc_loading","clientGrowthRevenueReportCount","useSelector","state","reports","amountFrom","useWatch","name","defaultValue","amountTo","departmentListData","loading","depLoading","department","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","groupSearchLoading","clientGroup","clientList","client","employeList","employe","startDate","dayjs","subtract","endDate","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","BranchId","Status","PDOrganizationType","PDindustrytype","groupName","useEffect","timer","setTimeout","clearTimeout","generateFinancialYears","financialYears","year","push","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","status","organizationId","organizationIds","departmentId","departmentIds","Number","industryId","industryIds","groupId","groupIds","dueAmount","format","fetchClientServiceTaskReport","clientGrowthRevenueReportFunc","departmentModalOpen","setDepartmentModalOpen","branchSearch","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","element","fullName","PDBranchId","message","_ref2","_sortByPropertyAlphab","onFocus","clientGrpSearch","onChange","disabled","ListLoader","sortByPropertyAlphabetically","_ref3","type","val","_ref4","_ref5","CustomDatePicker","report","size","_ref6","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref7","isActive","MdKeyboardArrowDown","style","color","transform","transition","htmlFor","id","pazeSizeReport","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","body","data","docs","index","totalTaskAmount","totalInvoiceAmount","totalReceiptAmount","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","sno","clientName","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","toFixed","Modal","title","open","onCancel","footer","departmentData","_element$mobile","_element$mobile2","email","mobile","code","number","createdAt","createdBy","CustomPagination","totalCount","page"],"sourceRoot":""}