{"version":3,"file":"static/js/59.f818dacd.chunk.js","mappings":"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","sources":["pages/Project management/ProjectManagement/Projectmanagement.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\n\nimport { FaAngleDown, FaPenToSquare, FaPlus } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { HiOutlineFilter } from \"react-icons/hi\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { encrypt } from \"../../../config/Encryption\";\nimport { domainName, inputAntdSelectClassNameFilter, inputClassNameSearch, ProjectmanagementStatus, sortByPropertyAlphabetically } from \"../../../constents/global\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport { Dropdown, Modal, Select, Tooltip } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport dayjs from \"dayjs\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport { deleteprojectmanagementFunc, getprojectmanagementListFunc, statusprojectmanagementFunc } from \"./ProjectManagementFeatures/_ProjectManagement_reducers\";\nimport { TbHistoryToggle } from \"react-icons/tb\";\nimport {\n  FaPlayCircle,\n  FaPauseCircle,\n  FaCheckCircle,\n  FaTools,\n  FaTruck,\n  FaStopCircle,\n} from \"react-icons/fa\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\nimport { GrTransaction } from \"react-icons/gr\";\n\n\n\n\n\n\n\n\n\nfunction ProjectManagement() {\n  const { register, setValue, control, formState: { errors }, } = useForm();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { projectmanagementList, totalprojectManagementCount, loading } = useSelector((state) => state.projectManagement);\n  const [searchText, setSearchText] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList, loading: branchSearchLoading } = useSelector((state) => state.branch);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const status = useWatch({\n    control,\n    name: 'status',\n    defaultValue: ''\n  });\n  const limit = 10;\n\n  const filters = [CompanyId, BranchId, status, searchText].join(\"-\");\n  const [isFirstRender, setisFirstRender] = useState(false)\n  const [statusLogsModalVisible, setStatusLogsModalVisible] = useState(false);\n  const [currentProjectLogs, setCurrentProjectLogs] = useState([]);\n\n  const showStatusLogs = (logs) => {\n    setCurrentProjectLogs(logs);\n    setStatusLogsModalVisible(true);\n  };\n\n  useEffect(() => {\n    if (!isFirstRender) {\n      setisFirstRender(state => true);\n      return;\n    }\n    if (currentPage === 1) {\n      fetchprojectManagement();\n    } else {\n      setCurrentPage(1);\n    }\n  }, [filters])\n\n\n  useEffect(() => {\n    fetchprojectManagement();\n  }, [currentPage]);\n\n  const fetchprojectManagement = async () => {\n    const reqData = {\n      page: currentPage,\n      limit: limit,\n      reqPayload: {\n        directorId: \"\",\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        text: searchText,\n        sort: true,\n        status: status,\n        isPagination: true,\n      },\n    };\n    await dispatch(getprojectmanagementListFunc(reqData));\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteprojectmanagementFunc(reqData)).then((data) => {\n          // fetchprojectManagement();\n\n          if (currentPage > 1 && projectmanagementList?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n\n          } else {\n            fetchprojectManagement();\n          }\n        });\n      }\n    });\n  };\n\n  const onChange = (e) => {\n\n    setSearchText(e);\n  };\n\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId])\nconst handleStatusChange = async (projectId, newStatus) => {\n  let reqData = {\n    _id: projectId,\n    status: newStatus\n  };\n\n  if ([\"Completed\", \"Delivered\", \"ForceClosed\"].includes(newStatus)) {\n    const { value: formValues } = await Swal.fire({\n      title: `Enter remarks and date for ${newStatus} status`,\n      html:\n        `<input id=\"swal-input1\" class=\"swal2-input\" placeholder=\"Enter remarks...\">` +\n        `<input id=\"swal-input2\" type=\"date\" class=\"swal2-input\">`,\n      focusConfirm: false,\n      showCancelButton: true,\n      preConfirm: () => {\n        const remark = document.getElementById('swal-input1').value;\n        const date = document.getElementById('swal-input2').value;\n\n        if (!remark || !date) {\n          Swal.showValidationMessage('Both fields are required');\n        }\n\n        return { remark, date };\n      }\n    });\n\n    if (!formValues) return; // User cancelled\n\n    reqData = {\n      ...reqData,\n      remark: formValues.remark,\n      date: new Date(formValues.date).toISOString()\n    };\n  }\n\n  try {\n    await dispatch(statusprojectmanagementFunc(reqData));\n    fetchprojectManagement();\n  } catch (error) {\n    console.error(\"Error updating status:\", error);\n  }\n};\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"\">\n        <div class=\"sm:flex justify-between items-center py-1 lg:space-y-0 space-y-2 overflow-y-auto\">\n          <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-2 sm:gap-3 gap-1.5\">\n            {userInfoglobal?.userType === \"admin\" && (\n              <div className=\"\">\n                <select\n                  {...register(\"PDCompanyId\", {\n                    required: \"company is required\",\n                  })}\n                  className={` ${inputClassNameSearch} ${errors.PDCompanyId ? \"border-[1px] \" : \"border-gray-300\"\n                    }`}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                >\n                  <option className=\"\" value=\"\">\n                    Select Comapany\n                  </option>\n                  {companyList?.map((type) => (\n                    <option value={type?._id}>{type?.fullName}</option>\n                  ))}\n                </select>\n                {errors.PDCompanyId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDCompanyId.message}\n                  </p>\n                )}\n              </div>\n            )}\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    rules={{ required: \"Branch is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`${inputAntdSelectClassNameFilter} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children).toLowerCase().includes(input.toLowerCase())\n                        }\n                        placeholder=\"Select Branch\"\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchSearchLoading ? (\n                          <Select.Option disabled>\n                            <ListLoader />\n                          </Select.Option>\n                        ) : (\n                          sortByPropertyAlphabetically(branchList)?.map((type) => (\n                            <Select.Option key={type?._id} value={type?._id}>\n                              {type?.fullName}\n                            </Select.Option>\n                          ))\n                        )}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n                </div>\n              )}\n            <Controller\n              name=\"status\"\n              control={control}\n              rules={{}}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.status\n                    ? \"border-[1px] \"\n                    : \"border-gray-300\"\n                    }`}\n                  placeholder=\"Select Status\"\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">Select Status</Select.Option>\n                  {ProjectmanagementStatus?.map(data=>\n                    <Select.Option key={data} value={data}> {data} </Select.Option>\n\n                  )}\n                \n                </Select>\n              )}\n            />\n          </div>\n          <div className=\"flex justify-end items-center gap-2 \">\n            <button\n              onClick={() => {\n                setValue(\"status\", \"\");\n                setValue(\"PDBranchId\", '');\n                setValue(\"PdDepartmentId\", \"\");\n                setValue(\"PdCompanyId\", \"\");\n              }}\n              className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n\n            {canCreate &&\n              <Tooltip placement=\"topLeft\" title=''>\n                <button\n                  onClick={() => {\n                    navigate(\"/admin/project-management/create\");\n                  }}\n                  className=\"bg-header px-2 py-1.5 rounded-md flex whitespace-nowrap justify-center items-center space-x-2 text-white\"\n                >\n                  <FaPlus />\n                  <span className=\"text-[12px]\">Add New Project</span>\n                </button>\n              </Tooltip>}\n          </div>\n        </div>\n      </div>\n     <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          {canRead && (<table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead className=\"\">\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 w-[5%]\">S.No.</th>\n                <th className=\"border-none p-2 w-[15%]\">Project Code</th>\n                <th className=\"border-none p-2 w-[20%]\">Title</th>\n                <th className=\"border-none p-2 w-[15%]\">Customer</th>\n                <th className=\"border-none p-2 w-[10%]\">Start Date</th>\n                <th className=\"border-none p-2 w-[15%]\">Status</th>\n                <th className=\"border-none p-2 w-[10%]\">Team Lead</th>\n                {(canUpdate || canDelete) && <th className=\"border-none p-2 w-[10%]\">Action</th>}\n              </tr>\n            </thead>\n            {loading ? (\n              <tr className=\"bg-white bg-opacity-5\">\n                <td colSpan={8} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {projectmanagementList && projectmanagementList?.length > 0 ? (\n                  projectmanagementList?.map((element, index) => (\n                    <tr\n                      className={`${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"} border-b-[1px] border-[#DDDDDD] text-[#374151] text-[14px]`}\n                      key={element._id}\n                    >\n                      <td className=\"p-2 text-center\">{index + 1 + (currentPage - 1) * limit}</td>\n                      <td className=\"p-2\">{element?.projectCode ?? \"-\"}</td>\n                      <td className=\"p-2\">{element?.title ?? \"-\"}</td>\n                      <td className=\"p-2\">{element?.customerName ?? \"-\"}</td>\n                      <td className=\"p-2\">\n                        {element?.startDate ? dayjs(element.startDate).format('DD-MM-YYYY') : \"-\"}\n                      </td>\n                      <td className=\"p-2\">\n                        <div className=\"flex flex-col gap-1\">\n                          <span\n                            className={`${element?.status === \"NotStarted\"\n                              ? \"bg-yellow-100 border-yellow-500\"\n                              : element?.status === \"Working\"\n                                ? \"bg-blue-100 border-blue-500\"\n                                : element?.status === \"OnHold\"\n                                  ? \"bg-orange-100 border-orange-500\"\n                                  : element?.status === \"Completed\"\n                                    ? \"bg-green-100 border-green-500\"\n                                    : element?.status === \"Maintenance\"\n                                      ? \"bg-purple-100 border-purple-500\"\n                                      : element?.status === \"Delivered\"\n                                        ? \"bg-teal-100 border-teal-500\"\n                                        : element?.status === \"ForceClosed\"\n                                          ? \"bg-red-100 border-red-500\"\n                                          : \"bg-gray-100 border-gray-500\"\n                              } border-[1px] px-2 py-1 rounded-lg text-black text-[12px] inline-block`}\n                          >\n                            {element?.status ?? \"-\"}\n                          </span>\n\n\n                        </div>\n                      </td>\n                      <td className=\"p-2\">{element?.teamLeadName ?? \"-\"}</td>\n                      {(canUpdate || canDelete) && (\n                        <td className=\"p-2\">\n                          <div className=\"flex items-center space-x-2\">\n                            <button\n                              onClick={() => navigate(`/admin/project-invoicing/${encrypt(JSON.stringify(element))}`)}\n                              className=\"p-1 text-xs rounded-md bg-transparent border border-muted\"\n                              title=\"View Status History\"\n                            >\n                              <GrTransaction className=\"hover:text-[#337ab7] text-[#3c8dbc]\" size={16} />\n                            </button>\n                            <button\n                              onClick={() => showStatusLogs(element.statusLogs)}\n                              className=\"p-1 text-xs rounded-md bg-transparent border border-muted\"\n                              title=\"View Status History\"\n                            >\n                              <TbHistoryToggle className=\"hover:text-[#337ab7] text-[#3c8dbc]\" size={16} />\n                            </button>\n\n                            {canUpdate && (\n                              <button\n                                onClick={() => navigate(`/admin/project-management/edit/${encrypt(element._id)}`)}\n                                className=\"p-1 text-xs rounded-md bg-transparent border border-muted\"\n                                title=\"Edit\"\n                              >\n                                <FaPenToSquare className=\"hover:text-[#337ab7] text-[#3c8dbc]\" size={16} />\n                              </button>\n                            )}\n\n                            {canDelete && (\n                              <button\n                                onClick={() => handleDelete(element._id)}\n                                className=\"p-1 rounded-md bg-transparent border border-muted\"\n                                title=\"Delete\"\n                              >\n                                <RiDeleteBin5Line className=\"text-red-600 hover:text-red-500\" size={16} />\n                              </button>\n                            )}\n\n                            <Dropdown\n                              menu={{\n                                items: [\n                                  element?.status !== \"Working\" && {\n                                    key: \"Working\",\n                                    label: (\n                                      <span className=\"flex items-center text-green-600 hover:text-green-500\">\n                                        <FaPlayCircle className=\"mr-2\" size={16} />\n                                        Start Working\n                                      </span>\n                                    ),\n                                    onClick: () => handleStatusChange(element?._id, \"Working\"), // Explicit onClick\n                                  },\n                                  element?.status !== \"OnHold\" && {\n                                    key: \"OnHold\",\n                                    label: (\n                                      <span className=\"flex items-center text-amber-600 hover:text-amber-500\">\n                                        <FaPauseCircle className=\"mr-2\" size={16} />\n                                        Put On Hold\n                                      </span>\n                                    ),\n                                    onClick: () => handleStatusChange(element?._id, \"OnHold\"),\n                                  },\n                                  element?.status !== \"Completed\" && {\n                                    key: \"Completed\",\n                                    label: (\n                                      <span className=\"flex items-center text-blue-600 hover:text-blue-500\">\n                                        <FaCheckCircle className=\"mr-2\" size={16} />\n                                        Mark Completed\n                                      </span>\n                                    ),\n                                    onClick: () => handleStatusChange(element?._id, \"Completed\"),\n                                  },\n                                  element?.status !== \"Maintenance\" && {\n                                    key: \"Maintenance\",\n                                    label: (\n                                      <span className=\"flex items-center text-purple-600 hover:text-purple-500\">\n                                        <FaTools className=\"mr-2\" size={16} />\n                                        Needs Maintenance\n                                      </span>\n                                    ),\n                                    onClick: () => handleStatusChange(element?._id, \"Maintenance\"),\n                                  },\n                                  element?.status !== \"Delivered\" && {\n                                    key: \"Delivered\",\n                                    label: (\n                                      <span className=\"flex items-center text-cyan-600 hover:text-cyan-500\">\n                                        <FaTruck className=\"mr-2\" size={16} />\n                                        Mark Delivered\n                                      </span>\n                                    ),\n                                    onClick: () => handleStatusChange(element?._id, \"Delivered\"),\n                                  },\n                                  element?.status !== \"ForceClosed\" && {\n                                    key: \"ForceClosed\",\n                                    danger: true,\n                                    label: (\n                                      <span className=\"flex items-center text-red-600 hover:text-red-500\">\n                                        <FaStopCircle className=\"mr-2\" size={16} />\n                                        Force Close\n                                      </span>\n                                    ),\n                                    onClick: () => handleStatusChange(element?._id, \"ForceClosed\"),\n                                  },\n                                ].filter(Boolean), // Remove falsy values\n                              }}\n                              trigger={[\"click\"]}\n                            >\n                              <button\n                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                type=\"button\"\n                              >\n                                <PiDotsThreeOutlineVerticalBold\n                                  className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                  size={16}\n                                />\n                              </button>\n                            </Dropdown>\n\n                          </div>\n                        </td>\n                      )}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td colSpan={8} className=\"px-6 py-2 whitespace-nowrap font-[600] text-center text-sm text-gray-500\">\n                      data Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n        )}\n      </div>\n      <Modal\n        title=\"Project Status History\"\n        visible={statusLogsModalVisible}\n        onCancel={() => setStatusLogsModalVisible(false)}\n        footer={null}\n        width={800}\n        className=\"antmodalclassName\"\n\n      >\n        <div className=\"max-h-[60vh] overflow-y-auto\">\n          <div className=\"timeline-container\">\n            {currentProjectLogs?.map((log, index) => (\n              <div key={index} className=\"mb-6\">\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"flex items-center\">\n                    <div className={`w-3 h-3 rounded-full ${log.status === \"NotStarted\" ? \"bg-yellow-500\" :\n                      log.status === \"Working\" ? \"bg-blue-500\" :\n                        log.status === \"OnHold\" ? \"bg-orange-500\" :\n                          log.status === \"Completed\" ? \"bg-green-500\" :\n                            log.status === \"Maintenance\" ? \"bg-purple-500\" :\n                              log.status === \"Delivered\" ? \"bg-teal-500\" :\n                                log.status === \"ForceClosed\" ? \"bg-red-500\" :\n                                  \"bg-gray-500\"\n                      }`}></div>\n                    <div className=\"ml-3\">\n                      <div className=\"font-medium\">{log.status}</div>\n                      <div className=\"text-sm text-gray-500\">\n                        {dayjs(log.date).format('DD-MM-YYYY HH:mm')}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"text-sm text-gray-500\">\n                    by {log.userName} ({log.userType})\n                  </div>\n                </div>\n                {log.remark && (\n                  <div className=\"ml-6 mt-2 p-3 bg-gray-50 rounded text-sm\">\n                    {log.remark}\n                  </div>\n                )}\n                {index < currentProjectLogs.length - 1 && (\n                  <div className=\"ml-[5px] mt-2 h-4 border-l-2 border-dashed border-gray-300\"></div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      </Modal>\n      {projectmanagementList?.length > 0 &&\n        <CustomPagination\n          totalCount={totalprojectManagementCount}\n          pageSize={limit}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />}\n    </GlobalLayout>\n  );\n}\nexport default ProjectManagement;\n"],"names":["register","setValue","control","formState","errors","useForm","navigate","useNavigate","dispatch","useDispatch","projectmanagementList","totalprojectManagementCount","loading","useSelector","state","projectManagement","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","companyList","company","branchList","branchSearchLoading","branch","CompanyId","useWatch","name","defaultValue","BranchId","status","filters","join","isFirstRender","setisFirstRender","statusLogsModalVisible","setStatusLogsModalVisible","currentProjectLogs","setCurrentProjectLogs","useEffect","fetchprojectManagement","async","reqData","page","limit","reqPayload","directorId","companyId","userType","_id","branchId","text","sort","isPagination","getprojectmanagementListFunc","canCreate","canRead","canUpdate","canDelete","usePermissions","branchSearch","handleStatusChange","projectId","newStatus","includes","value","formValues","Swal","title","html","focusConfirm","showCancelButton","preConfirm","remark","document","getElementById","date","_objectSpread","Date","toISOString","statusprojectmanagementFunc","error","console","_jsxs","GlobalLayout","onChange","e","children","_jsx","className","class","required","inputClassNameSearch","PDCompanyId","showSearch","filterOption","input","option","String","toLowerCase","map","type","fullName","message","Controller","rules","render","_ref","_sortByPropertyAlphab","field","Select","inputAntdSelectClassNameFilter","PDBranchId","placeholder","Option","disabled","ListLoader","sortByPropertyAlphabetically","_ref2","ProjectmanagementStatus","data","onClick","Tooltip","placement","FaPlus","colSpan","Loader2","length","element","index","_element$projectCode","_element$title","_element$customerName","_element$status","_element$teamLeadName","projectCode","customerName","startDate","dayjs","format","teamLeadName","encrypt","stringify","GrTransaction","size","showStatusLogs","logs","statusLogs","TbHistoryToggle","FaPenToSquare","id","icon","cancelButtonText","then","result","isConfirmed","deleteprojectmanagementFunc","Number","handleDelete","RiDeleteBin5Line","Dropdown","menu","items","key","label","FaPlayCircle","FaPauseCircle","FaCheckCircle","FaTools","FaTruck","danger","FaStopCircle","filter","Boolean","trigger","PiDotsThreeOutlineVerticalBold","Modal","visible","onCancel","footer","width","log","userName","CustomPagination","totalCount","pageSize"],"sourceRoot":""}