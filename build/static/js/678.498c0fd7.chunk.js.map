{"version":3,"file":"static/js/678.498c0fd7.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/digitalSignReports/DigitalSignatureReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  inputAntdSelectClassName,\n  inputAntdSelectClassNameFilter,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Select, Tooltip } from \"antd\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { digitalSignReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport { Option } from \"antd/es/mentions\";\nimport { designationSearch } from \"../../../designation/designationFeatures/_designation_reducers\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport { clientSearch, getClientList } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport * as ExcelJS from 'exceljs';\nimport jsPDF from \"jspdf\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\n\n\nfunction DigitalSignatureReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { digitalSignReportList, totalDigitalSignReportCount, digitalSignReportFunc_loading } = useSelector(\n    (state) => state.reports\n  );\n\n  const { clientList, totalCompanyCount, loading } = useSelector(\n    (state) => state.client\n  );\n\n  const { employeList } = useSelector((state) => state.employe);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const pageSize = 10;\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n  const { designationList } = useSelector((state) => state.designation);\n  const { departmentListData } = useSelector((state) => state.department);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const ClientList = useWatch({\n    control,\n    name: \"clientList\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const workType = useWatch({\n    control,\n    name: \"workType\",\n    defaultValue: \"\",\n  });\n  const shift = useWatch({\n    control,\n    name: \"shift\",\n    defaultValue: \"\",\n  });\n  const daterange = useWatch({\n    control,\n    name: \"daterange\",\n    defaultValue: \"\",\n  });\n  const employeeId = useWatch({\n    control,\n    name: \"employeeId\",\n    defaultValue: \"\",\n  });\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n  });\n  const isTL = useWatch({\n    control,\n    name: \"isTL\",\n  });\n  const isHR = useWatch({\n    control,\n    name: \"isHR\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n  });\n\n  const designation = useWatch({\n    control,\n    name: \"designation\",\n  });\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n  useEffect(() => {\n    if (CompanyId) {\n      setValue(\"PDBranchId\", \"\");\n    }\n  }, [CompanyId]);\n\n  const handleDepartmentChange = (event) => {\n    setValue(\"PDDepartmentId\", event);\n    setValue(\"PDDesignationId\", \"\");\n    dispatch(\n      designationSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        departmentId: event,\n        companyId: CompanyId,\n      })\n    );\n  };\n\n  const handleFocusDepartment = () => {\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: CompanyId,\n        branchId: BranchId,\n      })\n    );\n  };\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    fetchDigitalSignData(debouncedFilterText);\n  }, [\n    currentPage,\n    debouncedFilterText,\n    CompanyId,\n    BranchId,\n    searchText,\n    Status,\n    workType,\n    shift,\n    daterange,\n    employeeId,\n    startDate,\n    isTL,\n    isHR,\n    designation,\n    department,\n    ClientList,\n  ]);\n\n  const fetchDigitalSignData = (debouncedFilterText) => {\n    let reqData = {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        //     \"companyId\": \"\",\n        // \"directorId\": \"\",\n        // \"branchId\": \"\",\n        // \"clientId\":\"\",\n        // \"text\" : \"\",\n        // \"sort\": true,\n        // \"status\": \"\",\n        // \"isPagination\": true\n        text: \"\",\n        status: Status === \"Active\" ? true : Status === \"InActive\" ? false : \"\",\n        sort: true,\n        isPagination: true,\n        directorId: \"\",\n        departmentId: department,\n        designationId: designation,\n\n        clientId: ClientList,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n      },\n    };\n    dispatch(digitalSignReportFunc(reqData));\n  };\n\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true, isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId]);\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  const onChange = (e) => {\n    ;\n    setSearchText(e);\n  };\n\n  useEffect(() => {\n    fetchClientListData();\n  }, []);\n\n  const fetchClientListData = () => {\n    let reqData = {\n\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n\n      directorId: \"\",\n      organizationId: \"\",\n      industryId: \"\",\n\n      text: \"\",\n      sort: true,\n      status: true,\n      isPagination: false,\n\n    };\n    dispatch(clientSearch(reqData));\n  };\n\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('API Data');\n    const apiData = digitalSignReportList?.map((element) => {\n      return {\n        name: element?.name,\n        startDate: dayjs(element?.startDate).format(\"YYYY-MM-DD\"),\n        expiryDate: dayjs(element?.expiryDate).format(\"YYYY-MM-DD\"),\n\n\n\n\n\n        status: element?.status ? \"Active\" : \"Inactive\" ?? \"-\"\n      }\n    })\n\n\n    worksheet.columns = [\n      { header: 'Client Name', key: 'name', width: 50 },\n      { header: 'Start Date', key: 'startDate', width: 50 },\n\n      { header: 'Expiry Date', key: 'expiryDate', width: 30 },\n\n\n\n      { header: 'status', key: 'status', width: 50 },\n    ];\n        const headerRow = worksheet.getRow(1);\n        headerRow.eachCell((cell) => {\n            cell.fill = {\n                type: 'pattern',\n                pattern: 'solid',\n                fgColor: { argb: 'FFB6D7A8' }, // Light green\n            };\n            cell.font = { bold: true };\n            cell.alignment = { vertical: 'middle', horizontal: 'center' };\n            cell.border = {\n                top: { style: 'thin' },\n                left: { style: 'thin' },\n                bottom: { style: 'thin' },\n                right: { style: 'thin' },\n            };\n        });\n\n         worksheet.autoFilter = {\n            from: 'A1',\n            to: 'I1',\n        };\n\n\n\n    apiData.forEach(item => {\n      worksheet.addRow(item);\n    });\n\n\n    workbook.xlsx.writeBuffer().then(buffer => {\n      const blob = new Blob([buffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'api_data.xlsx';\n      link.click();\n    });\n  };\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <div className=\"grid grid-cols-1 justify-between items-center space-y-1.5\">\n            <div className=\"grid 2xl:grid-cols-5 lg:grid-cols-4 sm:grid-cols-3 grid-cols-1 gap-2 flex-wrap text-[14px] rounded-md\">\n              {userInfoglobal?.userType === \"admin\" && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDCompanyId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Select Company\"\n                        showSearch\n                      >\n                        <Select.Option value=\"\">Select Company</Select.Option>\n                        {companyList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDCompanyId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDCompanyId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n              {(userInfoglobal?.userType === \"admin\" ||\n                userInfoglobal?.userType === \"company\" ||\n                userInfoglobal?.userType === \"companyDirector\") && (\n                  <div className=\"\">\n                    <Controller\n                      name=\"PDBranchId\"\n                      control={control}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                            }`}\n                          placeholder=\"Select Branch\"\n                           showSearch\n                          filterOption={(input, option) =>\n                            String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                        >\n                          <Select.Option value=\"\">Select Branch</Select.Option>\n                          {branchList?.map((element) => (\n                            <Select.Option value={element?._id}>\n                              {\" \"}\n                              {element?.fullName}{\" \"}\n                            </Select.Option>\n                          ))}\n                        </Select>\n                      )}\n                    />\n                    {errors.PDBranchId && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.PDBranchId.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n              <div className=\"\">\n                <Controller\n                  name=\"clientList\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select client\"\n                       showSearch\n                          filterOption={(input, option) =>\n                            String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Select.Option value=\"\">Select Client </Select.Option>\n                      {clientList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.fullName}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>\n              {/* <div>\n                                <Controller\n                                    name=\"status\"\n                                    control={control}\n                                    rules={{}}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                                                }`}\n                                            placeholder=\"Select Status\"\n                                            showSearch\n                                        >\n                                            <Select.Option value=\"\">Select Status</Select.Option>\n\n                                            <Select.Option value=\"Present\"> Present </Select.Option>\n                                            <Select.Option value=\"firstHalf\">\n                                                {\" \"}\n                                                First Half{\" \"}\n                                            </Select.Option>\n                                            <Select.Option value=\"secondHalf\">\n                                                {\" \"}\n                                                Second Half{\" \"}\n                                            </Select.Option>\n                                        </Select>\n                                    )}\n                                />\n                            </div> */}\n              <div>\n                <Controller\n                  name=\"status\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${errors.shift ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select Status\"\n                    >\n                      <Select.Option value=\"\">Select Status</Select.Option>\n                      {[\"Active\", \"InActive\"]?.map((type) => (\n                        <Select.Option key={type} value={type}>\n                          {type}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>\n              {/* <div>\n                                <Controller\n                                    name=\"workType\"\n                                    control={control}\n\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={`${inputAntdSelectClassNameFilter} ${errors.workType ? '' : 'border-gray-300'}`}\n                                            placeholder=\"Select Work Type\"\n                                        >\n                                            <Select.Option value=\"\">Select Work Type</Select.Option>\n                                            {[\n                                                { key: \"work_from_office\", value: \"Work From Office\" },\n                                                { key: \"work_from_home\", value: \"Work From Home\" },\n                                                { key: \"hybrid\", value: \"Hybrid\" },\n                                                { key: \"remote\", value: \"Remote\" }\n                                            ]?.map((type) => (\n                                                <Select.Option key={type.key} value={type.key}>\n                                                    {type.value}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    )}\n                                />\n                            </div> */}\n              {/* <div>\n                                <Controller\n                                    name=\"daterange\"\n                                    control={control}\n\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={`${inputAntdSelectClassNameFilter} ${errors.daterange ? '' : 'border-gray-300'}`}\n                                            placeholder=\"Select Date Range\"\n                                        >\n                                            <Select.Option value=\"\">Select Date Range</Select.Option>\n                                            {[\n                                                { key: \"thisWeek\", value: \"This Week\" },\n                                                { key: \"lastWeek\", value: \"Last Week\" },\n                                                { key: \"lastMonth\", value: \"Last Month\" },\n                                                { key: \"last3Months\", value: \"Last 3 Months\" },\n                                                { key: \"last6Months\", value: \"last 6 Months\" },\n                                                { key: \"lastYear\", value: \"Last Year\" }\n                                            ]?.map((type) => (\n                                                <Select.Option key={type.key} value={type.key}>\n                                                    {type.value}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    )}\n                                />\n                            </div> */}\n              <div>\n                {/* <Controller\n                    name=\"startDate\"\n                    control={control}\n        \n                    render={({ field }) => (\n                      <CustomDatePicker defaultValue={dayjs().subtract(1, 'month')} size={\"middle\"} field={field} errors={errors} />\n                    )}\n                  /> */}\n              </div>\n\n              {/* <div>\n                  <Controller\n                    name=\"endDate\"\n                    control={control}\n        \n                    render={({ field }) => (\n                      <CustomDatePicker defaultValue={dayjs()} size={\"middle\"} field={field} errors={errors} />\n                    )}\n                  />\n                </div> */}\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  setValue(\"PDBranchId\", \"\");\n                  setValue(\"PdCompanyId\", \"\");\n                  setValue(\"isTL\", \"\");\n                  setValue(\"isHR\", \"\");\n                  setValue(\"designation\", \"\");\n                  setValue(\"PDDepartment\", \"\");\n                  setValue(\"clientList\", '')\n                  setValue(\"status\", \"\");\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Reset</span>\n\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap w-[10%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Client Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Start Date\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap\">User Name</th> */}\n                {/* <th className=\"border-none p-2 whitespace-nowrap\">\n                  Office Email\n                </th> */}\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Expiry Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  createdAt\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  createdBy\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Status\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap\">\n                  Department\n                </th> */}\n                {/* <th className=\"border-none p-2 whitespace-nowrap\">\n                  Designation\n                </th> */}\n                {/* <th className=\"border-none p-2 whitespace-nowrap\">\n                  <div className=\"flex gap-1\">Role Key</div>\n                </th> */}\n              </tr>\n            </thead>\n            {digitalSignReportFunc_loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {digitalSignReportList && digitalSignReportList?.length > 0 ? (\n                  digitalSignReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n         \n                      <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                        {index + 1}\n                      </td>\n\n                      <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                        {element?.name || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                        {dayjs(element?.startDate).format(\"DD-MM-YYYY\") || \"-\"}\n                      </td>\n                      {/* <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                      {element?.userName || \"-\"}\n                    </td> */}\n\n                      {/* <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                      {element?.officeEmail || \"-\"}\n                    </td> */}\n                      <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                        {dayjs(element?.expiryDate).format(\"DD-MM-YYYY\") || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                        {dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                        {element?.createdBy || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                        <span\n                          className={`${element?.status\n                            ? \"bg-[#E0FFBE] border-green-500\"\n                            : \"bg-red-200 border-red-500\"\n                            } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                        >\n                          {element?.status ? \"Active\" : \"Inactive\" ?? \"-\"}\n                        </span>\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                      {element?.departmentData?.name || \"-\"}\n                    </td> */}\n                      {/* <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                      {element?.designationData?.name || \"-\"}\n                    </td> */}\n                      {/* <td className=\"whitespace-nowrap border-none px-2 py-3\">\n                      {element?.designationData?.roleKey || \"-\"}\n                    </td> */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>\n        <CustomPagination\n          totalCount={totalDigitalSignReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default DigitalSignatureReport;\n"],"names":["control","formState","errors","setValue","useForm","dispatch","useNavigate","useDispatch","digitalSignReportList","totalDigitalSignReportCount","digitalSignReportFunc_loading","useSelector","state","reports","clientList","totalCompanyCount","loading","client","employeList","employe","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","companyList","company","branchList","branch","designationList","designation","departmentListData","department","CompanyId","useWatch","name","defaultValue","ClientList","BranchId","Status","workType","shift","daterange","employeeId","startDate","isTL","isHR","useEffect","timer","setTimeout","clearTimeout","fetchDigitalSignData","reqData","pageSize","reqPayload","text","status","sort","isPagination","directorId","departmentId","designationId","clientId","companyId","userType","_id","branchId","digitalSignReportFunc","branchSearch","companySearch","fetchClientListData","organizationId","industryId","clientSearch","_jsx","GlobalLayout","onChange","e","children","_jsxs","className","Controller","render","_ref","field","Select","_objectSpread","inputAntdSelectClassNameFilter","PDPlan","placeholder","showSearch","Option","value","map","element","fullName","PDCompanyId","message","_ref2","filterOption","input","option","String","toLowerCase","includes","PDBranchId","_ref3","_ref4","_ref5","type","onClick","async","workbook","ExcelJS","worksheet","addWorksheet","apiData","_Inactive","dayjs","format","expiryDate","columns","header","key","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","horizontal","border","top","style","left","bottom","right","autoFilter","from","to","forEach","item","addRow","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","length","index","_Inactive2","createdAt","createdBy","CustomPagination","totalCount","page"],"sourceRoot":""}