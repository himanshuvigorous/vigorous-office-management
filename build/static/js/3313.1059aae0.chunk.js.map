{"version":3,"file":"static/js/3313.1059aae0.chunk.js","mappings":"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","sources":["pages/global/other/resignation/CreateResignation.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport { domainName, inputAntdSelectClassName, inputAntdSelectClassNameFilter, inputClassName, inputLabelClassName, inputLabelClassNameReactSelect, sortByPropertyAlphabetically } from \"../../../../constents/global\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { DatePicker, Select } from \"antd\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport moment from \"moment\";\nimport { createResignFunc } from \"./resignationFeatures/resignation_reducers\";\nimport dayjs from \"dayjs\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { FaRegFile, FaTimes } from \"react-icons/fa\";\nimport { fileUploadFunc } from \"../fileManagement/FileManagementFeatures/_file_management_reducers\";\n\n\nconst CreateResignation = () => {\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    attachment: []\n  });\n\n  const { companyList, companyListLoading } = useSelector((state) => state.company);\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const { employeList, loading: employeListLoading } = useSelector((state) => state.employe);\n  const [isPreview, setIsPreview] = useState(false);\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { loading: reginationLoading } = useSelector((state) => state.resignation);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n\n   const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n\n  // useEffect(() => {\n  //   dispatch(employeSearch());\n  // }, [dispatch]);\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setFormData(prev => ({\n          ...prev,\n          attachment: [...prev.attachment, res.payload?.data]\n        }));\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setFormData(prev => {\n      const updatedAttachments = prev.attachment.filter((_, i) => i !== index);\n      return { ...prev, attachment: updatedAttachments };\n    });\n  };\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      companyId: userInfoglobal?.userType === \"admin\" ? data?.PDCompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      directorId: '',\n      branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      employeId: data?.employee,\n      title: data?.title,\n      description: data?.description,\n      applyDate: dayjs(data?.applyDate).format(\"YYYY-MM-DD\"),\n      type: \"resignation\",\n      attachment: formData?.attachment,\n    };\n    dispatch(createResignFunc(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId])\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2\">\n            {userInfoglobal?.userType === \"admin\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Company <span className=\"text-red-600\">*</span>\n              </label>\n              {/* <select\n                {...register(\"PDCompanyId\", {\n                  required: \"company is required\",\n                })}\n                className={` ${inputClassName} ${errors.PDCompanyId\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n              >\n                <option className=\"\" value=\"\">\n                  Select Comapany\n                </option>\n                {companyList?.map((type) => (\n                  <option value={type?._id}>{type?.fullName}</option>\n                ))}\n                  \n              </select> */}\n\n              <Controller\n                control={control}\n                name=\"PDCompanyId\"\n                rules={{ required: \"Company is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    // onFocus={() => {\n                    //   dispatch(\n                    //     companySearch({\n                    //       text: \"\",\n                    //       sort: true,\n                    //       status: true,\n                    //       isPagination: false,\n                    //     })\n                    //   );\n                    // }}\n                    className={`${inputAntdSelectClassName} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Company</Select.Option>\n                    {companyListLoading ? <Select.Option disabled><ListLoader /></Select.Option> : (companyList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n              {errors.PDCompanyId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDCompanyId.message}\n                </p>\n              )}\n            </div>}\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Branch <span className=\"text-red-600\">*</span>\n              </label>\n              {/* <select\n                {...register(\"PDBranchId\", {\n                  required: \"Branch is required\",\n                })}\n                className={` ${inputClassName} ${errors.PDBranchId\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n              >\n                <option className=\"\" value=\"\">\n                  Select Branch\n                </option>\n                {branchList?.map((type) => (\n                  <option value={type?._id}>{type?.fullName}</option>\n                ))}\n              </select> */}\n\n              <Controller\n                control={control}\n                name=\"PDBranchId\"\n                rules={{ required: \"Branch is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    onChange={(value) => {\n                      setValue(\"employee\", '')\n                      field.onChange(value);\n                    }}\n                    defaultValue={\"\"}\n                    // onFocus={() => {\n                    //   dispatch(\n                    //     companySearch({\n                    //       text: \"\",\n                    //       sort: true,\n                    //       status: true,\n                    //       isPagination: false,\n                    //     })\n                    //   );\n                    // }}\n                    className={`${inputAntdSelectClassName} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchListloading ? <Select.Option disabled><ListLoader /></Select.Option> : (sortByPropertyAlphabetically(branchList, 'fullName')?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n              {errors.PDBranchId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDBranchId.message}\n                </p>\n              )}\n            </div>\n            }\n\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>\n                Employee Name <span className=\"text-red-600\">*</span>\n              </label>\n\n              <Controller\n                name=\"employee\"\n                control={control}\n                rules={{ required: \"Employee is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.employee ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Employee\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      const reqPayload = {\n                        text: \"\",\n                        status: true,\n                        sort: true,\n                        isTL: \"\",\n                        isHR: \"\",\n                        isPagination: false,\n                        departmentId: \"\",\n                        designationId: \"\",\n                        companyId: userInfoglobal?.userType === \"admin\" ? userInfoglobal?.PDCompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n                        directorId: \"\",\n                        branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ? branchId: userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n                      };\n                      dispatch(employeSearch(reqPayload));\n                    }}\n                  >\n                    <Select.Option value=\"\">Select Employee</Select.Option>\n                    {employeListLoading ? <Select.Option disabled><ListLoader /></Select.Option> : (sortByPropertyAlphabetically(employeList, 'fullName')?.map((employee) => (\n                      <Select.Option key={employee?._id} value={employee?._id}>\n                        {employee?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n              {errors.employee && (\n                <p className=\"text-red-500 text-sm\">{errors.employee.message}</p>\n              )}\n            </div>\n\n\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 my-2\">\n\n            {/* <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Title <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"title\", {\n                  required: \"Title is required\",\n                })}\n                className={`${inputClassName} ${errors.title ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Title\"\n              />\n              {errors.title && (\n                <p className=\"text-red-500 text-sm\">{errors.title.message}</p>\n              )}\n            </div> */}\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Description <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"description\", {\n                  required: \"Description is required\",\n                })}\n                className={`${inputClassName} ${errors.description ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Description\"\n              />\n              {errors.description && (\n                <p className=\"text-red-500 text-sm\">{errors.description.message}</p>\n              )}\n            </div>\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Apply Date <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"applyDate\"\n                rules={{ required: 'Date is Required' }}\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker field={field} errors={errors} disabledDate={(current) => {\n                    return current && current.isBefore(moment().endOf('day'), 'day');\n                  }} />\n                )}\n              />\n              {errors.applyDate && (\n                <p className=\"text-red-500 text-sm\">Apply Date is required</p>\n              )}\n            </div>\n\n\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2 md:mt-0 mt-2\">\n\n\n          </div>\n\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>\n              Documents\n            </label>\n            {!isPreview ? (\n              <div className=\"space-y-4\">\n                <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-600 bg-white cursor-pointer\">\n                  <FaRegFile className=\"mr-2\" /> Add Documents\n                </label>\n\n                <div className=\"space-y-2\">\n                  {formData.attachment.map((file, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                      <a\n                        href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                        className=\"flex items-center space-x-2\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <FaRegFile className=\"text-gray-500\" />\n                        <span className=\"text-sm text-gray-600\">{file}</span>\n                      </a>\n                      <button\n                        type=\"button\"\n                        onClick={() => handleRemoveFile(index)}\n                        className=\"text-red-500 hover:text-red-700\"\n                      >\n                        <FaTimes />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"space-y-2\">\n                {/* Attachments preview logic */}\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex justify-end \">\n            <button\n              type=\"submit\"\n              disabled={reginationLoading}\n              className={`${reginationLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded mt-3`}\n            >\n              {reginationLoading ? <Loader /> : 'Submit'}\n            </button>\n\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default CreateResignation;\n"],"names":["CreateResignation","register","handleSubmit","control","setValue","formState","errors","useForm","dispatch","useDispatch","navigate","useNavigate","formData","setFormData","useState","attachment","companyList","companyListLoading","useSelector","state","company","branchList","branchListloading","branch","employeList","loading","employeListLoading","employe","isPreview","setIsPreview","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","reginationLoading","resignation","CompanyId","useWatch","name","defaultValue","branchId","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","companySearch","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","PDCompanyId","directorId","employeId","employee","title","description","applyDate","dayjs","format","type","createResignFunc","then","error","inputLabelClassName","Controller","rules","required","render","_ref","field","Select","_objectSpread","inputAntdSelectClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","disabled","ListLoader","map","fullName","message","_ref2","_sortByPropertyAlphab","onChange","sortByPropertyAlphabetically","PDBranchId","_ref3","_sortByPropertyAlphab2","placeholder","onFocus","reqPayload","isTL","isHR","departmentId","designationId","employeSearch","inputClassName","_ref4","CustomDatePicker","disabledDate","current","isBefore","moment","endOf","e","reqData","filePath","target","files","isVideo","isMultiple","fileUploadFunc","res","_res$payload","payload","prev","_res$payload2","id","htmlFor","FaRegFile","file","index","href","process","rel","onClick","updatedAttachments","filter","_","i","handleRemoveFile","FaTimes","Loader"],"sourceRoot":""}