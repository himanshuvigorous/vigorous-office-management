{"version":3,"file":"static/js/3119.ed59267d.chunk.js","mappings":"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","sources":["pages/reportsManager/finance_report/finance_payment_report/FinancePaymentReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertIntoAmount,\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  optionLabelForBankSlect,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { financePaymentReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\n\nimport { DatePicker, Space } from 'antd';\nimport { useSearchParams } from \"react-router-dom\";\nconst { RangePicker } = DatePicker;\n\n\nfunction FinancePaymentReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const { RangePicker } = DatePicker;\n  const onOk = value => {\n\n  };\n\n  const [pageSize, setPageSize] = useState(10);\n\n\n\n  const dispatch = useDispatch();\n  const {\n    financePaymentReportList,\n    financePaymentReportFunc_loading,\n    financePaymentCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList, groupSearchLoading } = useSelector((state) => state.clientGroup);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const urlDate = searchParams.get('date')\n  const { clientList, loading: clientListLoading } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n\n  const client = useWatch({\n    control,\n    name: \"client\",\n    defaultValue: \"\",\n  });\n\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n\n  const amountTo = useWatch({\n    control,\n    name: \"amountTo\",\n    defaultValue: '',\n  });\n\n\n  const amountFrom = useWatch({\n    control,\n    name: \"amountFrom\",\n    defaultValue: '',\n  });\n\n  const time = useWatch({\n    control,\n    name: \"time\",\n    defaultValue: urlDate ? [dayjs(), dayjs()] : [],\n  });\n\n\n  useEffect(() => {\n    if (urlDate == 'today') {\n      const startOfDay = dayjs()\n      const endOfDay = dayjs();\n      setValue('time', [startOfDay, endOfDay]);\n\n    }\n\n  }, [urlDate])\n\n\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n        organizationId: PDOrganizationType,\n        organizationIds: [],\n        departmentId: department,\n        departmentIds: [],\n        \"amountFrom\": amountFrom ? Number(amountFrom) : '',\n        \"amountTo\": amountTo ? Number(amountTo) : '',\n\n        industryId: PDindustrytype,\n        industryIds: [],\n        groupIds: groupName ? [groupName] : [],\n        startDate: time?.length > 0 ? dayjs(time[0]).format(\"YYYY-MM-DD\") : '',\n        endDate: time?.length > 0 ? dayjs(time[1]).format(\"YYYY-MM-DD\") : '',\n\n        clientIds: client ? [client] : [],\n\n      },\n    };\n  };\n\n\n\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(financePaymentReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n\n  const handleDepartmentModal = (element) => {\n    setDepartmentModalOpen(true);\n    setDepartmentModalData(element);\n  };\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"paymentReport\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Entry Date\", key: \"entryDate\", width: 30 },\n      { header: \"Payment Date\", key: \"payment\", width: 30 },\n\n      { header: \"Group Name\", key: \"groupName\", width: 25 },\n      { header: \"Client Name\", key: \"clientName\", width: 30 },\n      { header: \"Amount\", key: \"amount\", width: 30 },\n\n      { header: \"Mode of Receipt\", key: \"modeOFreceipt\", width: 20 },\n      { header: \"Payment Recipient\", key: \"bankName\", width: 20 },\n\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.financePaymentReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n\n\n    if (!financePaymentReportList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n\n      return {\n        sno: index + 1,\n        entryDate: dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        payment: (dayjs(data?.date).format('DD-MM-YYYY hh:mm a')) || \"-\",\n        groupName: data?.groupName || \"-\",\n        clientName: data?.clientName || \"-\",\n        amount: data?.amount || \"-\",\n        modeOFreceipt: data?.paymentMode || \"-\",\n        bankName: (data?.paymentMode == 'bank' ? data?.bankData?.bankName : (data?.paymentMode == 'cash') ? data?.employeName : '') || \"-\",\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"paymentReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n    const headers = [\n      \"S.No.\",\n      \"Entry Date\",\n      \"Payment Date\",\n      \"Group Name\",\n      \"Client Name\",\n      \"Amount\",\n      \"Mode of Receipt\",\n      \"Payment Recipient\"\n    ]\n    const response = await reportsServices?.financePaymentReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!financePaymentReportList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        (dayjs(data?.date).format('DD-MM-YYYY hh:mm a')) || \"-\",\n        data?.groupName || \"-\",\n        data?.clientName || \"-\",\n        data?.amount || \"-\",\n        data?.paymentMode || \"-\",\n        (data?.paymentMode == 'bank' ? data?.bankData?.bankName : (data?.paymentMode == 'cash') ? data?.employeName : '') || \"-\",\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`paymentReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] gap-2 sm:space-y-0 space-y-1 2xl:flex justify-between items-center\">\n          <div className=\"sm:flex grid grid-cols-1 gap-2 sm:flex-wrap text-[14px]\">\n            <div className=\"\">\n              <Controller\n                name=\"groupName\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Group\"\n                    onFocus={() => {\n                      dispatch(\n                        clientGrpSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                          groupId: \"\",\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Group</Select.Option>\n                    {groupSearchLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(clientGroupList)?.map((element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName} ({element?.groupName})\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"client\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        clientSearch({\n                          companyId:\n                            userInfoglobal?.userType === \"company\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.companyId,\n                          branchId:\n                            userInfoglobal?.userType === \"company\" ||\n                              userInfoglobal?.userType === \"admin\" ||\n                              userInfoglobal?.userType === \"companyDirector\"\n                              ? watch(\"PDBranchId\")\n                              : userInfoglobal?.userType === \"companyBranch\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.branchId,\n                          groupId: groupName,\n                          directorId: \"\",\n                          organizationId: \"\",\n                          industryId: \"\",\n                          // departmentId: department,\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select client\"\n                  >\n                    {clientListLoading ?\n                      <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(clientList)?.map((element, index) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName}\n                        </Select.Option>\n                      )))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"amountFrom\"\n                control={control}\n                render={({ field }) => (\n                  <input\n                    type=\"number\"\n                    value={field?.value}\n                    onChange={(val) => field.onChange(val)}\n                    className={`inputAntdMultiSelectClassNameFilterReport`}\n                    placeholder=\"Enter amountFrom \"\n                  />\n\n\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"amountTo\"\n                control={control}\n                render={({ field }) => (\n                  <input\n                    type=\"number\"\n                    value={field?.value}\n                    onChange={(val) => field.onChange(val)}\n                    className={`inputAntdMultiSelectClassNameFilterReport`}\n                    placeholder=\"Enter amountTo \"\n                  />\n\n\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"time\"\n                control={control}\n                render={({ field }) => (\n                  <RangePicker\n                    {...field}\n                    value={field.value}\n                    onChange={(value) => field.onChange(value)}\n                    format=\"YYYY-MM-DD\"\n                    onOk={onOk}\n                    getPopupContainer={() => document.body}\n                    popupClassName=\"vertical-range-calendar\"\n                    className=\"custom-range-picker\"\n\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"PDOrganizationType\", \"\");\n                setValue(\"PDindustrytype\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"groupName\", \"\");\n                setValue('time', '')\n                setValue('client', '')\n\n                setValue('amountFrom', '')\n                setValue('amountTo', '')\n\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          >\n\n          </Collapse>\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1 justify-between items-center\">\n            <div className=\"flex py-1 items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Entry Date\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Payment Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Payment Type </th>\n                 <th className=\"border-none p-2 whitespace-nowrap \">Nature of Payment </th>\n\n\n\n\n                <th className=\"border-none p-2 whitespace-nowrap \">Amount </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Payment Mode\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Payment By\n                </th>\n\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th> */}\n              </tr>\n            </thead>\n            {financePaymentReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {financePaymentReportList &&\n                  financePaymentReportList?.length > 0 ? (\n                  financePaymentReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n                      <td className=\"whitespace-nowrap   border-none p-2\">\n                        {dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || '-'}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.date).format('DD-MM-YYYY') || '-'}\n                      </td>\n\n                      <td className=\"whitespace-nowrap capitalize  border-none p-2\">\n                        {element?.type ? element?.type ===\"purchase\" ?element?.purchaseData?.purchaseType ===\"Other\" ? \"Expense\" : element?.purchaseData?.purchaseType  : element?.type: (element?.typeOf|| \"-\")}\n                      </td>\n\n                      <td className=\"whitespace-nowrap capitalize border-none p-2\">\n                        {element?.type === \"purchase\"  ? (element?.purchaseData?.expenseHeadName || \"-\") : ''}\n                        {(element?.type !== \"purchase\" && element?.typeOf === \"advance\")  ? (`Advance Payment To ${element?.advanceEmployeName}` || \"\") : ''}\n                        {(element?.type !== \"cashbook\" && element?.typeOf === \"payment\" && element?.type !== \"purchase\" )  ? (`Cashbook Settlement of ${element?.advanceEmployeName}` || \"\") : ''}\n                          {(element?.type !== \"cashbook\" && element?.typeOf !== \"payment\" && element?.type !== \"purchase\" && element?.typeOf === \"clientExpanse\" )  ? (`Client Expense for ${element?.clientName}` || \"\") : ''}\n                      </td>\n\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {convertIntoAmount(element?.amount) || '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.paymentMode || (element?.bankData ? \"bank\" :\"-\")}\n                      </td>\n                      <td className=\" max-w-[250px] min-w-[250px]  border-none p-2\">\n                        {(element?.paymentMode == 'bank' ? optionLabelForBankSlect(element?.bankData) : (element?.paymentMode == 'cash') ? element?.employeName : '') || (optionLabelForBankSlect(element?.bankData)||\"-\")}\n                      </td>\n\n\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.createdBy}\n                      </td> */}\n                      {/* <td className=\"tableData \">\n                        {(\n                          <div className=\"flex justify-center items-center gap-1\">\n                            <span>{element?.departmentData?.length}</span>\n                            <span className=\"flex justify-center items-center cursor-pointer\">\n                              <FaEye\n                                onClick={() => handleDepartmentModal(element)}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              />\n                            </span>\n                          </div>\n                        ) || \"-\"}\n                      </td> */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n\n        </div>\n        <CustomPagination\n          totalCount={financePaymentCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default FinancePaymentReport;\n"],"names":["RangePicker","DatePicker","control","formState","errors","setValue","watch","useForm","onOk","value","pageSize","setPageSize","useState","dispatch","useDispatch","financePaymentReportList","financePaymentReportFunc_loading","financePaymentCount","useSelector","state","reports","departmentListData","loading","depLoading","department","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","groupSearchLoading","clientGroup","searchParams","setSearchParams","useSearchParams","urlDate","get","clientList","clientListLoading","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","PDOrganizationType","PDindustrytype","groupName","amountTo","amountFrom","time","dayjs","useEffect","startOfDay","endOfDay","timer","setTimeout","clearTimeout","generateFinancialYears","financialYears","year","push","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","status","organizationId","organizationIds","departmentId","departmentIds","Number","industryId","industryIds","groupIds","startDate","format","endDate","clientIds","fetchClientServiceTaskReport","financePaymentReportFunc","departmentModalOpen","setDepartmentModalOpen","branchSearch","subtract","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","_sortByPropertyAlphab","field","Select","_objectSpread","showSearch","placeholder","onFocus","clientGrpSearch","includes","groupId","onChange","filterOption","input","option","String","toLowerCase","Option","disabled","ListLoader","sortByPropertyAlphabetically","map","element","fullName","_ref2","_sortByPropertyAlphab2","clientSearch","index","_ref3","type","val","_ref4","_ref5","getPopupContainer","document","body","popupClassName","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref6","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","htmlFor","id","pazeSizeReport","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","data","docs","_data$bankData2","createdAt","date","clientName","amount","paymentMode","bankData","bankName","employeName","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$bankData","sno","entryDate","payment","modeOFreceipt","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","_element$purchaseData","_element$purchaseData2","_element$purchaseData3","purchaseData","purchaseType","typeOf","expenseHeadName","advanceEmployeName","convertIntoAmount","optionLabelForBankSlect","CustomPagination","totalCount","page"],"sourceRoot":""}