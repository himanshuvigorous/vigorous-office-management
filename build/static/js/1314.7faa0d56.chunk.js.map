{"version":3,"file":"static/js/1314.7faa0d56.chunk.js","mappings":"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","sources":["pages/dashboard/EditNotification.js","pages/dashboard/Calendar.js","pages/dashboard/HrDashBoard.js","pages/dashboard/AddNotification.js","pages/dashboard/NoticeBoard.js","pages/global/other/todolistManagement/UpdateTodoList.js","pages/global/other/todolistManagement/TodoList.js","pages/dashboard/Calendar2.js","pages/global/other/todolistManagement/CreateTodoList.js","pages/client/clientManagement/ContactPerson.js","pages/hr/attendance/UpdateManualAttendanceModal .js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { IoClose } from \"react-icons/io5\";\nimport { FaTimes } from 'react-icons/fa';\n\n\nconst EditNotification = ({ content, setContent, closeEditModal, updateNotification, isNoticeOpen }) => {\n    const modalRef = useRef(null);\n\n    const handleClickOutside = (event) => {\n        if (modalRef.current && !modalRef.current.contains(event.target)) {\n            closeEditModal();\n        }\n    };\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n\n    const handleSave = () => {\n        if (content.trim()) {\n            updateNotification();\n        }\n    };\n\n    return (\n        <>\n            <div\n                className={`fixed inset-0 z-[999999999999] bg-gray-900 bg-opacity-50 flex items-start top-0 mt-0 justify-center transition-opacity duration-300 ${isNoticeOpen ? \"animate-[smoothSlideDown_0.5s_ease-in-out]\" : \"\"\n                    }`}\n            >\n                <div ref={modalRef} className=\"animate-slideInFromTop bg-[#F2F2F2] modalShadow rounded-[12px] shadow-lg w-11/12 max-w-md relative top-[100px] transition-transform duration-700 linear\">\n                    <div className=\"flex items-center justify-between border-b py-4 px-6\">\n                        <div className=\"text-sm font-normal\">Edit Notification</div>\n                        <button onClick={closeEditModal} className=\"text-gray-400 hover:text-gray-700\">\n                            <FaTimes size={15} />\n                        </button>\n                    </div>\n                    <div className=\"text-gray-700 p-3 space-y-1\">\n                        <div className=\"text-sm text-black\">Content</div>\n                        <textarea\n                            className=\"border w-full h-[58px] p-2\"\n                            value={content}\n                            onChange={(e) => setContent(e.target.value)}\n                        />\n                    </div>\n                    <div className=\"flex justify-end items-center px-3 pt-0 pb-4\">\n                        <button onClick={handleSave} className=\"bg-header text-white px-[22px] py-[11px] rounded text-[14px] mr-2\">\n                            Save\n                        </button>\n                        <button onClick={closeEditModal} className=\"bg-[#d41c1c] text-white px-[22px] py-[11px] rounded text-[14px] mr-2\">\n                            close\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default EditNotification;","import React, { useState, useEffect, useRef } from 'react';\nimport { ImArrowUpRight2 } from \"react-icons/im\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\nimport dayjs from 'dayjs';\nimport { Modal, Card, Tag, Divider, Empty, Avatar, Space, Typography } from 'antd';\nimport {\n  CalendarOutlined,\n  TeamOutlined,\n  EnvironmentOutlined,\n  TrophyOutlined,\n  UserOutlined\n} from '@ant-design/icons';\n\nconst { Text } = Typography;\n\nconst Calendar = ({ combinedData, currentDate, prevMonth, nextMonth, companyDashboardData }) => {\n  const [selectedDate, setSelectedDate] = useState('');\n  const getDaysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\n  const getFirstDayOfMonth = (month, year) => new Date(year, month, 1).getDay();\n  const year = currentDate?.getFullYear();\n  const month = currentDate?.getMonth();\n  const daysInMonth = getDaysInMonth(month, year);\n  const firstDayOfMonth = getFirstDayOfMonth(month, year);\n\n  const prevMonthDays = getDaysInMonth(month - 1, year);\n  const prevMonthVisibleDays = Array.from({ length: firstDayOfMonth }, (_, i) => prevMonthDays - firstDayOfMonth + i + 1);\n  const currentMonthDays = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n  const nextMonthVisibleDays = Array.from({ length: 42 - (prevMonthVisibleDays.length + currentMonthDays.length) }, (_, i) => i + 1);\n\n\n\n\n  const handleDateClick = (day) => {\n    const date = dayjs(`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`).format('YYYY-MM-DD');\n    setSelectedDate(date);\n  };\n\n\n\n  return (\n    <div className=\"w-full h-full relative bg-[#FFFFFF] rounded-xl px-3 py-2.5\">\n      <p className=\"text-left text-[20px] font-[500] text-header\"> Calendar</p>\n      <div className=\"flex justify-between items-center pr-4 mb-2\">\n        <div className=\"xl:text-[16px] font-[400] text-sm text-black\">{currentDate?.toLocaleString('default', { month: 'long' })} {year}</div>\n        <div className=\"flex gap-1\">\n          <button onClick={prevMonth} className=\"p-1 rounded bg-gray-200\"><FaAngleLeft /></button>\n          <button onClick={nextMonth} className=\"p-1 rounded bg-gray-200\"><FaAngleRight /></button>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-7 gap-1\">\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\n          <div key={day} className=\"text-left font-[400] text-[12px] text-[#87888A]\">\n            {day}\n          </div>\n        ))}\n\n        {prevMonthVisibleDays.map(day => (\n          <div key={`prev-${day}`} className=\"h-8 w-8 p-1 flex items-center justify-center text-[12px] text-[#C3C4C4]\">\n            {day}\n          </div>\n        ))}\n\n        {currentMonthDays.map(day => {\n          const date = dayjs(`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`).format('YYYY-MM-DD');\n          return (\n            <div key={day} className={`h-auto w-[38px] p-1 flex items-center ${combinedData.some(item => item.date === date) && \"bg-header text-white\"} justify-center text-[13px] rounded `} onClick={() => handleDateClick(day)}>\n              <span >{day}</span>\n            </div>\n          );\n        })}\n\n        {nextMonthVisibleDays.map(day => (\n          <div key={`next-${day}`} className=\"h-auto w-[38px] p-1 flex items-center justify-center text-[12px] text-[#C3C4C4]\">\n            {day}\n          </div>\n        ))}\n      </div>\n      <Modal\n        title={`Events & Holidays - ${selectedDate}`}\n        open={!!selectedDate}\n        onCancel={() => setSelectedDate('')}\n        footer={null}\n        width={800}\n\n        style={{ padding: '16px 24px' }}\n        className=\"events-holidays-modal antmodalclassName\"\n      >\n        {combinedData?.find(data => data?.date === selectedDate) ? (\n          <div className=\"modal-content-container\">\n            {/* Events Section */}\n            <div className=\"section-container\">\n              <Divider orientation=\"left\" className=\"section-divider\">\n                <Space>\n                  <CalendarOutlined style={{ color: '#1890ff' }} />\n                  <Text strong style={{ fontSize: '16px' }}>Events</Text>\n                </Space>\n              </Divider>\n\n              {combinedData.find(data => data.date === selectedDate)?.events?.length > 0 ? (\n                <div className=\"events-grid\">\n                  {combinedData.find(data => data.date === selectedDate).events.map((event) => (\n                    <Card\n                      key={event.id}\n                      className=\"event-card\"\n                      hoverable\n                      size=\"small\"\n                    >\n                      <div className=\"card-content\">\n                        <div className=\"main-content\">\n                          <Text strong className=\"event-title\">{event.title}</Text>\n                          {event.description && (\n                            <Text type=\"secondary\" className=\"event-description\">\n                              {event.description}\n                            </Text>\n                          )}\n                          {event.location && (\n                            <div className=\"event-location\">\n                              <EnvironmentOutlined />\n                              <Text type=\"secondary\">{event.location}</Text>\n                            </div>\n                          )}\n                        </div>\n\n                        {event.attendees?.length > 0 && (\n                          <div className=\"attendees-section\">\n                            <Divider dashed className=\"attendees-divider\" />\n                            <Text type=\"secondary\" className=\"attendees-title\">\n                              <TeamOutlined /> Attendees ({event.attendees.length})\n                            </Text>\n                            <div className=\"attendees-list\">\n                              {event.attendees.map(attendee => (\n                                <div key={attendee.email} className=\"attendee-item\">\n                                  <Avatar\n                                    size=\"small\"\n                                    icon={<UserOutlined />}\n                                    className={`attendee-avatar ${attendee.status}`}\n                                  />\n                                  <Text className=\"attendee-name\">{attendee.name}</Text>\n                                  <Tag\n                                    size=\"small\"\n                                    color={attendee.status === 'confirmed' ? 'green' : 'orange'}\n                                    className=\"status-tag\"\n                                  >\n                                    {attendee.status}\n                                  </Tag>\n                                </div>\n                              ))}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </Card>\n                  ))}\n                </div>\n              ) : (\n                <Empty\n                  image={Empty.PRESENTED_IMAGE_SIMPLE}\n                  description=\"No events scheduled for this day\"\n                  className=\"empty-state\"\n                />\n              )}\n            </div>\n\n            {/* Holidays Section */}\n            <div className=\"section-container\">\n              <Divider orientation=\"left\" className=\"section-divider\">\n                <Space>\n                  <TrophyOutlined style={{ color: '#faad14' }} />\n                  <Text strong style={{ fontSize: '16px' }}>Holidays</Text>\n                </Space>\n              </Divider>\n\n              {combinedData.find(data => data.date === selectedDate)?.holidays?.length > 0 ? (\n                <div className=\"holidays-grid\">\n                  {combinedData.find(data => data.date === selectedDate).holidays.map((holiday) => (\n                    <Card\n                      key={holiday.id}\n                      className=\"holiday-card\"\n                      size=\"small\"\n                    >\n                      <Space>\n                        <Avatar icon={<TrophyOutlined />} style={{ backgroundColor: '#faad14' }} />\n                        <div>\n                          <Text strong>{holiday.name}</Text>\n                          {holiday.description && (\n                            <div>\n                              <Text type=\"secondary\">{holiday.description}</Text>\n                            </div>\n                          )}\n                        </div>\n                      </Space>\n                    </Card>\n                  ))}\n                </div>\n              ) : (\n                <Empty\n                  image={Empty.PRESENTED_IMAGE_SIMPLE}\n                  description=\"No holidays on this day\"\n                  className=\"empty-state\"\n                />\n              )}\n            </div>\n          </div>\n        ) : (\n          <Empty description=\"No data available for this date\" className=\"empty-state\" />\n        )}\n      </Modal>\n\n      <style jsx global>{`\n  .events-holidays-modal {\n    border-radius: 8px;\n  }\n\n  .ant-modal-content {\n    background-color: #f9f9f9;\n  }\n\n  .modal-content-container {\n    padding: 16px 24px;\n    display: flex;\n    flex-direction: column;\n    gap: 24px;\n    background-color: #f9f9f9;\n  }\n\n  .section-divider {\n    margin: 8px 0 16px 0;\n  }\n\n  .events-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n    gap: 16px;\n  }\n\n  .holidays-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n    gap: 12px;\n  }\n\n  .event-card {\n    border-radius: 8px;\n    border: 1px solid #f0f0f0;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.09);\n  }\n\n  .event-card:hover {\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.09);\n  }\n\n  .holiday-card {\n    border-radius: 8px;\n    border-left: 3px solid #faad14;\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.09);\n  }\n\n  .card-content {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n  }\n\n  .event-title {\n    font-size: 15px;\n    display: block;\n    margin-bottom: 4px;\n  }\n\n  .event-description {\n    font-size: 13px;\n    display: block;\n  }\n\n  .event-location {\n    display: flex;\n    align-items: center;\n    gap: 6px;\n    margin-top: 6px;\n    font-size: 13px;\n  }\n\n  .attendees-section {\n    margin-top: 8px;\n  }\n\n  .attendees-divider {\n    margin: 8px 0;\n  }\n\n  .attendees-title {\n    font-size: 12px;\n    display: block;\n    margin-bottom: 6px;\n  }\n\n  .attendees-list {\n    display: flex;\n    flex-direction: column;\n    gap: 6px;\n  }\n\n  .attendee-item {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n  }\n\n  .attendee-avatar {\n    background-color: #1890ff;\n  }\n\n  .attendee-avatar.confirmed {\n    background-color: #52c41a;\n  }\n\n  .attendee-avatar.declined {\n    background-color: #ff4d4f;\n  }\n\n  .attendee-name {\n    font-size: 13px;\n    flex-grow: 1;\n  }\n\n  .status-tag {\n    font-size: 11px;\n    padding: 0 6px;\n    margin-left: auto;\n  }\n\n  .empty-state {\n    padding: 16px 0;\n  }\n\n  /* Responsive Design */\n  @media (max-width: 768px) {\n    .events-grid, .holidays-grid {\n      grid-template-columns: 1fr;\n      gap: 12px;\n    }\n\n    .modal-content-container {\n      padding: 16px;\n    }\n\n    .section-divider {\n      font-size: 14px;\n    }\n\n    .event-title, .attendees-title {\n      font-size: 14px;\n    }\n\n    .event-description, .attendee-name, .status-tag {\n      font-size: 12px;\n    }\n\n    .attendee-item {\n      flex-direction: column;\n      align-items: flex-start;\n    }\n  }\n\n  @media (max-width: 480px) {\n    .event-title {\n      font-size: 13px;\n    }\n\n    .event-description {\n      font-size: 12px;\n    }\n\n    .attendee-name {\n      font-size: 11px;\n    }\n  }\n`}</style>\n\n      <div className=\"w-full grid grid-cols-2 md:grid-cols-2 2xl:grid-cols-3 gap-4 py-2 pr-3\">\n\n        <div className=\"w-full  border-[1px] rounded-lg px-2 py-[2px]\">\n          <div className=\"flex justify-start gap-1 items-center\">\n            <span className={`lg:w-3 lg:h-3 w-[10px] h-[10px] rounded flex-none bg-green-500`}></span>\n            <span className=\"lg:text-[12px] text-[10px] font-[400]\">Events</span>\n          </div>\n          <div className=\"ml-auto text-sm font-bold\">{companyDashboardData?.calender?.eventData?.length ?? companyDashboardData?.eventData?.length ?? 0}</div>\n        </div>\n        <div className=\"w-full  border-[1px] rounded-lg px-2 py-[2px]\">\n          <div className=\"flex  justify-start gap-1 items-center\">\n            <span className={`lg:w-3 lg:h-3 w-[10px] h-[10px] rounded flex-none bg-yellow-500`}></span>\n            <span className=\"lg:text-[12px] text-[10px] font-[400]\">Holidays</span>\n          </div>\n          <div className=\"ml-auto text-sm font-bold\">{companyDashboardData?.calender?.holidayData?.length ?? companyDashboardData?.holidayData?.length ?? 0}</div>\n        </div>\n      </div>\n\n\n    </div>\n  );\n};\n\nexport default Calendar;\n","import NoticeBoard from \"./NoticeBoard\";\nimport UserDetails from \"./UserDetails\";\n// import Calendar from 'react-calendar';\nimport { ImArrowUpRight, ImArrowUpRight2 } from \"react-icons/im\";\nimport Calendar from \"./Calendar\";\nimport {\n  MdArrowOutward,\n  MdOutlineCoPresent,\n  MdOutlineMan,\n  MdOutlineSecurity,\n  MdPayment,\n  MdTune,\n} from \"react-icons/md\";\nimport { Empty, Popconfirm, Tooltip } from \"antd\";\nimport { updateLeaveRequestStatus } from \"../hr/leaveRequestManagment/LeaveRequestModule/LeaveRequestFeatures/_leave_request_reducers\";\nimport {\n  attendanceStatus,\n  deleteattendanceg,\n} from \"../hr/attendance/AttendanceFeatures/_attendance_reducers\";\nimport { domainName } from \"../../constents/global\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { hrDashboardFunc } from \"../../redux/_reducers/_dashboard_reducers\";\nimport GlobalLayout from \"../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { FaCalendarAlt, FaEdit } from \"react-icons/fa\";\nimport {\n  FaHandPeace,\n  FaHireAHelper,\n  FaMoneyBillWave,\n  FaUser,\n} from \"react-icons/fa6\";\nimport { RiComputerLine, RiUserSearchFill } from \"react-icons/ri\";\nimport { IoIosMan, IoMdMan } from \"react-icons/io\";\nimport dayjs from \"dayjs\";\nimport ContactPerson from \"../client/clientManagement/ContactPerson\";\nimport { TbPigMoney } from \"react-icons/tb\";\nimport { AiOutlineInteraction } from \"react-icons/ai\";\nimport moment from \"moment\";\nimport { IoCheckmark } from \"react-icons/io5\";\nimport { RxCross2 } from \"react-icons/rx\";\nimport { useNavigate } from \"react-router-dom\";\nimport { encrypt } from \"../../config/Encryption\";\nimport { statuscashbook } from \"../financeManagement/cashbook/cashbookFeature/_cashbook_reducers\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"swiper/css\";\nimport \"swiper/css/navigation\";\nimport \"swiper/css/pagination\";\nimport { dynamicSidebarSearch } from \"../DyanmicSidebar/DyanmicSidebarFeatures/_dyanmicSidebar_reducers\";\nimport Calendar2 from \"./Calendar2\";\nimport UpdateManualAttendanceModal from \"../hr/attendance/UpdateManualAttendanceModal \";\nimport TodoList from \"../global/other/todolistManagement/TodoList\";\nfunction HrDashBoard() {\n  const { sidebarListData } = useSelector((state) => state.dynamicSidebar);\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { hrDashboardData } = useSelector((state) => state?.dashboard);\n  const dispatch = useDispatch();\n  const [leaveRequest, setLeaveRequest] = useState([]);\n  const [attendanceRequest, setAttendanceRequest] = useState([]);\n  const [openJobPost, setOpenJobPost] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchHrDashboard();\n    dispatch(\n      dynamicSidebarSearch({\n        companyId:\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        isPagination: false,\n      })\n    );\n  }, []);\n  const [combinedData, setCombinedData] = useState([]);\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [startdateCalender, setStartDateCalender] = useState(\n    moment().startOf(\"month\")\n  );\n  const [pendingAprrovals, setPendingAprrovals] = useState([]);\n  useEffect(() => {\n    document.body.classList.add(\"overflow-hidden\");\n    return () => {\n      document.body.classList.remove(\"overflow-hidden\");\n    };\n  }, []);\n  const [endDateCalender, setEndDateCalender] = useState(\n    moment().endOf(\"month\")\n  );\n  const [userDetailsData, setuserDetailsdata] = useState({\n    leaveData: [],\n    birthdaydata: [],\n    inActiveUserToday: [],\n    inActiveEmployeeToday: [],\n    wfhRequestData: []\n  });\n  useEffect(() => {\n    if (hrDashboardData) {\n      const leaveData = hrDashboardData?.todayOnLeave;\n      const birthdaydata = hrDashboardData?.todayBirthday;\n      const inActiveUserToday = hrDashboardData?.inActiveUserToday;\n      const inActiveEmployeeToday = hrDashboardData?.inActiveEmployeToday;\n      const wfhRequestData = hrDashboardData?.todayWFHEmployes\n      setuserDetailsdata({\n        leaveData,\n        birthdaydata,\n        inActiveUserToday,\n        inActiveEmployeeToday,\n        wfhRequestData\n      });\n    }\n  }, [hrDashboardData]);\n\n  const groupByDateForEvent = (events) => {\n    const grouped = {};\n\n    events.forEach((event) => {\n      const formattedDate = moment(event.startDate).format(\"YYYY-MM-DD\");\n\n      if (!grouped[formattedDate]) {\n        grouped[formattedDate] = [];\n      }\n      grouped[formattedDate].push(event);\n    });\n\n    return grouped;\n  };\n  const groupByDateForHoliday = (events) => {\n    const grouped = {};\n\n    events.forEach((event) => {\n      const formattedDate = moment(event.date).format(\"YYYY-MM-DD\");\n\n      if (!grouped[formattedDate]) {\n        grouped[formattedDate] = [];\n      }\n      grouped[formattedDate].push(event);\n    });\n\n    return grouped;\n  };\n  useEffect(() => {\n    if (hrDashboardData) {\n      const eventdata = hrDashboardData?.eventData;\n      const groupedEvents = groupByDateForEvent(eventdata);\n\n      const holidayData = hrDashboardData?.holidayData;\n      const groupedHolidayData = groupByDateForHoliday(holidayData);\n\n      const combined = [];\n\n      Object.keys(groupedEvents).forEach((date) => {\n        const eventDataForDate = groupedEvents[date];\n        const holidayDataForDate = groupedHolidayData[date];\n\n        combined.push({\n          date,\n          events: eventDataForDate || [],\n          holidays: holidayDataForDate || [],\n        });\n      });\n\n      Object.keys(groupedHolidayData).forEach((date) => {\n        if (!groupedEvents[date]) {\n          const holidayDataForDate = groupedHolidayData[date];\n          combined.push({\n            date,\n            events: [],\n            holidays: holidayDataForDate || [],\n          });\n        }\n      });\n      setCombinedData(combined);\n    }\n  }, [hrDashboardData]);\n\n  useEffect(() => {\n    if (hrDashboardData) {\n      let array = [];\n      let AttendanceArray = [];\n      let jobPostArray = [];\n\n      hrDashboardData?.branchEmployeLeavePending?.forEach((item) => {\n        item?.LeavePendingReqData?.map((leaveItem) => {\n          array.push({ employeename: item?.fullName, ...leaveItem });\n        });\n      });\n      hrDashboardData?.branchEmployeAttendance?.forEach((item) => {\n        item?.checkInEmployeList?.map((leaveItem) => {\n          AttendanceArray.push({ ...leaveItem });\n        });\n      });\n      hrDashboardData?.branchRecruitment?.forEach((item) => {\n        item?.jobopeningsData?.forEach((jobItem) => {\n          jobItem?.jobPosts?.forEach((jobPostItem) => {\n            jobPostArray.push(jobPostItem);\n          });\n        });\n      });\n      setLeaveRequest(array);\n      setAttendanceRequest(AttendanceArray);\n      setOpenJobPost(jobPostArray);\n    }\n  }, [hrDashboardData]);\n\n\n  const fetchHrDashboard = () => {\n    dispatch(\n      hrDashboardFunc({\n        companyId:\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        // branchId: '67a5ca1e769fadae3069e42d',\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? \"\"\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: \"\",\n        designationId: \"\",\n        employeId: \"\",\n        attendanceLimit: \"\",\n        employeLimit: \"\",\n      })\n    );\n  };\n\n\n\n  const formattedLeaveRequest = hrDashboardData?.pendingLeaveReq ? hrDashboardData?.pendingLeaveReq.map((data) => ({\n    img: data?.employeProfileImage,\n    fullName: data?.employename,\n    checkInTime: data?.startDate,\n    checkOutTime: data?.endDate,\n    status: data?.status,\n    type: data?.type,\n    subType: data?.subType,\n    formatType: \"leave\",\n    _id: data._id,\n  })) : [];\n\n\n  const [selectedAttendence, setSelectedAttendence] = useState()\n  const [attendenceModal, setAttendenceModal] = useState(false);\n\n\n\n  const handleAttendenceEdit = (approval) => {\n    setSelectedAttendence(approval)\n    setAttendenceModal(true)\n  }\n\n\n  console.log(selectedAttendence)\n\n  const QUICK_ACTIONS = [\n    {\n      name: \"Pay Roll\",\n      icons: FaMoneyBillWave,\n      path: `/admin/payroll-list/${encrypt(\n        sidebarListData?.find((data) => data?.slug == \"payroll-list\")?._id\n      )}`,\n    },\n    {\n      name: \"Interviews\",\n      icons: MdPayment,\n      path: `/admin/interview/${encrypt(\n        sidebarListData?.find((data) => data?.slug == \"interview\")?._id\n      )}`,\n    },\n    {\n      name: \"Employees\",\n      icons: IoMdMan,\n      path: `/admin/employe/${encrypt(\n        sidebarListData?.find((data) => data?.slug == \"employe\")?._id\n      )}`,\n    },\n    {\n      name: \"Events\",\n      icons: RiComputerLine,\n      path: `/admin/event-calander/${encrypt(\n        sidebarListData?.find((data) => data?.slug == \"event-calander\")?._id\n      )}`,\n    },\n    {\n      name: \"Holiday\",\n      icons: FaHandPeace,\n      path: `/admin/holiday-calander/${encrypt(\n        sidebarListData?.find((data) => data?.slug == \"holiday-calander\")?._id\n      )}`,\n    },\n    {\n      name: \"Resignation\",\n      icons: AiOutlineInteraction,\n      path: `/admin/resignation/${encrypt(\n        sidebarListData?.find((data) => data?.slug == \"resignationt\")?._id\n      )}`,\n    },\n  ];\n\n  const handleQuickActions = (path) => {\n    navigate(path);\n  };\n\n  const prevMonth = () => {\n    const newDate = new Date(currentDate.setMonth(currentDate.getMonth() - 1));\n    setCurrentDate((date) => newDate);\n    const startDate = new Date(newDate.getFullYear(), newDate.getMonth(), 1);\n    const endDate = new Date(newDate.getFullYear(), newDate.getMonth() + 1, 0);\n    setStartDateCalender(moment(startDate));\n    setEndDateCalender(moment(endDate));\n    fetchHrDashboard();\n  };\n  const nextMonth = () => {\n    const newdate = new Date(currentDate.setMonth(currentDate.getMonth() + 1));\n    setCurrentDate((date) => newdate);\n    const startDate = new Date(newdate.getFullYear(), newdate.getMonth(), 1);\n    const endDate = new Date(newdate.getFullYear(), newdate.getMonth() + 1, 0);\n\n    setStartDateCalender(moment(startDate));\n    setEndDateCalender(moment(endDate));\n    fetchHrDashboard();\n  };\n  let leaveList = userDetailsData?.leaveData?.map((item) => {\n    return {\n      imgUrl: item?.employeProfileImage\n        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${item?.employeProfileImage}`\n        : \"/images/avatar.jpg\",\n      name:\n        item?.employename && item.employename.includes(\" \")\n          ? item.employename.split(\" \")[0]\n          : item?.employename,\n      tooltip: item?.employename,\n      data: item\n    };\n  });\n  let todayWfhRequstData = userDetailsData?.wfhRequestData?.map((item) => {\n    return {\n      imgUrl: item?.profileImage\n        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${item?.profileImage}`\n        : \"/images/avatar.jpg\",\n      name:\n        item?.fullName && item.fullName.includes(\" \")\n          ? item.fullName.split(\" \")[0]\n          : item?.fullName,\n      tooltip: item?.fullName,\n      hasAttendanceMarked: item?.hasAttendanceMarked,\n      data: item,\n    };\n  })\n  let birthdaydata = userDetailsData?.birthdaydata?.map((item) => {\n    return {\n      imgUrl: item?.profileImage\n        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${item?.profileImage}`\n        : \"/images/avatar.jpg\",\n      name:\n        item?.fullName && item.fullName.includes(\" \")\n          ? item.fullName.split(\" \")[0]\n          : item?.fullName,\n      tooltip: item?.fullName,\n    };\n  });\n  let inActiveUserToday = userDetailsData?.inActiveUserToday?.map((item) => {\n    return {\n      imgUrl: item?.profileImage\n        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${item?.profileImage}`\n        : \"/images/avatar.jpg\",\n      name:\n        item?.fullName && item.fullName.includes(\" \")\n          ? item.fullName.split(\" \")[0]\n          : item?.fullName,\n      tooltip: item?.fullName,\n    };\n  });\n\n\n  let inActiveEmployeeToday = userDetailsData?.inActiveEmployeeToday?.map((item) => {\n    return {\n      imgUrl: item?.profileImage\n        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${item?.profileImage}`\n        : \"/images/avatar.jpg\",\n      name:\n        item?.fullName && item.fullName.includes(\" \")\n          ? item.fullName.split(\" \")[0]\n          : item?.fullName,\n      tooltip: item?.fullName,\n    };\n  });\n\n  const handleApproval = (e) => {\n    if (e.formatType === \"attendance\") {\n      dispatch(\n        attendanceStatus({\n          _id: e?._id,\n        })\n      ).then((data) => {\n        !data?.error && fetchHrDashboard();\n      });\n    }\n    if (e.formatType === \"leave\") {\n      dispatch(\n        updateLeaveRequestStatus({\n          _id: e?._id,\n          status: \"Approved\",\n        })\n      ).then((data) => {\n        !data?.error && fetchHrDashboard();\n      });\n    }\n    if (e.formatType === \"cashbook\") {\n      dispatch(\n        statuscashbook({\n          _id: e?._id,\n          status: \"Approved\",\n        })\n      ).then((data) => {\n        !data?.error && fetchHrDashboard();\n      });\n    }\n  };\n\n  const handleRequestRejection = (e) => {\n    ;\n    if (e.formatType === \"leave\") {\n      dispatch(\n        updateLeaveRequestStatus({\n          _id: e._id,\n          status: \"Rejected\",\n        })\n      ).then((data) => {\n        fetchHrDashboard();\n      });\n    }\n\n    if (e.formatType === \"attendance\") {\n      dispatch(\n        deleteattendanceg({\n          _id: e?._id,\n        })\n      ).then((data) => {\n        !data?.error && fetchHrDashboard();\n      });\n    }\n    if (e.formatType === \"cashbook\") {\n      dispatch(\n        statuscashbook({\n          _id: e?._id,\n          status: \"Reject\",\n        })\n      ).then((data) => {\n        !data?.error && fetchHrDashboard();\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"block xl:flex xl:gap-5 space-y-3 xl:space-y-0 px-2 xl:h-[calc(100vh-100px)] h-[calc(95vh-90px)] \">\n\n        <div className=\"xl::w-[70%] w-full xl:h-[calc(100vh-100px)] h-full  hide-scrollbar-y\">\n          <div className=\"w-full xl:hidden block\">\n            <UserDetails\n              leaveList={leaveList}\n              birthdaydata={birthdaydata}\n              inActiveUserToday={inActiveUserToday}\n              inActiveEmployeeToday={inActiveEmployeeToday}\n              todayWfhRequstData={todayWfhRequstData}\n            />\n          </div>\n          <div className=\"grid  w-full lg:grid-cols-4 gap-2 grid-cols-2\">\n            <div className=\"w-full p-3 md:h-32 rounded-xl bg-[#e3d8ff]\">\n              <div className=\"flex flex-col gap-2\">\n                <div className=\"flex  items-center justify-between\">\n                  <IoIosMan size={24} />\n                  <div onClick={() => {\n                    handleQuickActions(`/admin/leave-request-list/${encrypt(\n                      sidebarListData?.find(\n                        (data) => data?.slug == \"employe\"\n                      )?._id\n                    )}`)\n                  }} className=\"h-5 rounded-full bg-white w-5 flex justify-center items-center\">\n                    <MdArrowOutward />\n                  </div>\n                </div>\n\n                <div className=\"font-semibold md:text-[15px] text-[12px]\">\n                  Active Employees\n                </div>\n                <div className=\"font-bold md:text-[30px] text-[15px] w-full flex justify-end\">\n                  {hrDashboardData?.employeData?.activeEmploye ?? 0}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"w-full p-3 md:h-32 rounded-xl bg-[#c0f0d2]\">\n              <div className=\"flex flex-col gap-2\">\n                <div className=\"flex  items-center justify-between\">\n                  <FaCalendarAlt size={24} />\n                  <div onClick={() => {\n                    handleQuickActions(`/admin/leave-request-list/${encrypt(\n                      sidebarListData?.find(\n                        (data) => data?.slug == \"leave-request-list\"\n                      )?._id\n                    )}`)\n                  }} className=\"h-5 rounded-full bg-white w-5 flex justify-center items-center\">\n                    <MdArrowOutward />\n                  </div>\n                </div>\n\n                <div className=\"font-semibold md:text-[15px] text-[12px]\">\n                  On Leave\n                </div>\n                <div className=\"font-bold md:text-[30px] text-[15px] w-full flex justify-end\">\n                  {hrDashboardData?.employeesOnLeaveCount ?? 0}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"w-full p-3 md:h-32 rounded-xl bg-[#edbeae]\">\n              <div className=\"flex flex-col gap-2\">\n                <div className=\"flex  items-center justify-between\">\n                  <MdOutlineCoPresent size={24} />\n                  <div onClick={() => {\n                    handleQuickActions(`/admin/all-employee-attendance/${encrypt(\n                      sidebarListData?.find(\n                        (data) => data?.slug == \"leave-request-list\"\n                      )?._id\n                    )}`)\n                  }} className=\"h-5 rounded-full bg-white w-5 flex justify-center items-center\">\n                    <MdArrowOutward />\n                  </div>\n                </div>\n\n                <div className=\"font-semibold md:text-[15px] text-[12px]\">\n                  Present\n                </div>\n                <div className=\"font-bold md:text-[30px] text-[15px] w-full flex justify-end\">\n                  {hrDashboardData?.todayAttendanceSummary?.statusCounts?.present ?? 0}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"w-full p-3 md:h-32 rounded-xl bg-[#bed3fe]\">\n              <div className=\"flex flex-col gap-2\">\n                <div className=\"flex  items-center justify-between\">\n                  <RiUserSearchFill size={24} />\n                  <div onClick={() => {\n                    handleQuickActions(`/admin/all-employee-attendance/${encrypt(\n                      sidebarListData?.find(\n                        (data) => data?.slug == \"leave-request-list\"\n                      )?._id\n                    )}`)\n                  }} className=\"h-5 rounded-full bg-white w-5 flex justify-center items-center\">\n                    <MdArrowOutward />\n                  </div>\n                </div>\n\n                <div className=\"font-semibold md:text-[15px] text-[12px]\">\n                  Absent\n                </div>\n                <div className=\"font-bold md:text-[30px] text-[15px] w-full flex justify-end\">\n                  {hrDashboardData?.todayAttendanceSummary?.statusCounts?.absent ?? 0}\n\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <TodoList />\n\n          <div className=\"grid grid-cols-1  pt-3 md:grid-cols-[0.7fr_1.3fr] gap-6 w-full   \">\n            <div className=\"md:min-w-[350px] min-w-full\">\n              {\" \"}\n              {/* <Calendar\n                combinedData={combinedData}\n                currentDate={currentDate}\n                prevMonth={prevMonth}\n                nextMonth={nextMonth}\n                companyDashboardData={hrDashboardData}\n              /> */}\n              <Calendar2\n                combinedData={combinedData}\n                currentDate={currentDate}\n                prevMonth={prevMonth}\n                nextMonth={nextMonth}\n                companyDashboardData={hrDashboardData}\n              />\n            </div>\n\n            <div className=\"flex w-full overflow-y-auto  mt-2 bg-white p-2.5 rounded-xl flex-col gap-2\">\n              <div className=\"flex w-full justify-between\">\n                <span className=\"text-header font-semibold text-[20px]\">\n                  Leave Request{\" \"}\n                </span>\n                <div\n                  onClick={() => {\n                    handleQuickActions(\n                      `/admin/leave-request-list/${encrypt(\n                        sidebarListData?.find(\n                          (data) => data?.slug == \"leave-request-list\"\n                        )?._id\n                      )}`\n                    );\n                  }}\n                  className=\"h-5 rounded-full bg-[#bed3fe] w-5 flex justify-center items-center\"\n                >\n                  <MdArrowOutward />\n                </div>{\" \"}\n              </div>\n              <div className=\"w-full flex flex-col  gap-2   rounded-lg\">\n                <div className=\" overflow-x-auto\">\n\n\n\n                  <table className=\" w-full   divide-y divide-gray-200\">\n                    <thead className=\"bg-gray-50 w-full\">\n                      <tr>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Employee\n                        </th>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Type\n                        </th>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Details\n                        </th>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Time\n                        </th>\n                        <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Actions\n                        </th>\n                      </tr>\n                    </thead>\n                    <tbody className=\"bg-white divide-y w-full  divide-gray-200\">\n                      {formattedLeaveRequest?.length > 0 ? (\n                        formattedLeaveRequest.map((approval) => (\n                          <tr key={approval._id} className=\"hover:bg-gray-50\">\n                            <td className=\"px-4 py-3 whitespace-nowrap\">\n                              <div className=\"flex items-center\">\n                                <img\n                                  src={\n                                    approval.img\n                                      ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${approval.img}`\n                                      : \"/images/images/avatar.jpg\"\n                                  }\n                                  className=\"w-8 h-8 rounded-full mr-2 ring-1 ring-amber-300\"\n                                  alt={approval.fullName}\n                                />\n                                <span className=\"text-sm font-medium text-gray-900\">\n                                  {approval.fullName}\n                                </span>\n                              </div>\n                            </td>\n                            <td className=\"px-4 py-3 whitespace-nowrap\">\n                              <span\n                                className={`text-xs ${approval?.formatType === \"attendance\"\n                                  ? \"bg-blue-100 text-blue-800\"\n                                  : approval?.formatType === \"leave\"\n                                    ? \"bg-cyan-100 text-blue-800\"\n                                    : approval?.formatType === \"cashbook\"\n                                      ? \"bg-rose-100 text-blue-800\"\n                                      : \"bg-gray-100 text-blue-800\"\n                                  } px-2 py-1 rounded shadow-sm shadow-black`}\n                              >\n                                {approval.formatType}\n                              </span>\n                            </td>\n                            <td className=\"px-4 py-3 whitespace-nowrap\">\n                              <span className=\"text-sm text-gray-500\">\n                                {approval.formatType === \"attendance\" &&\n                                  approval.shift}\n                                {approval.formatType === \"leave\" &&\n                                  `${approval.type} (${approval.subType})`}\n                                {approval.formatType === \"cashbook\" &&\n                                  `₹ ${approval.amount}`}\n                              </span>\n                            </td>\n                            <td className=\"px-4 py-3 whitespace-nowrap\">\n                              <div className=\"flex flex-col\">\n                                <span\n                                  className={`text-xs ${approval.formatType === \"attendance\"\n                                    ? \"text-green-600\"\n                                    : \"text-red-500\"\n                                    }`}\n                                >\n                                  {approval.checkInTime ? dayjs(approval.checkInTime).format(\n                                    \"YYYY-MM-DD HH:mm\"\n                                  ) : '-'}\n                                </span>\n                                {approval.formatType === \"attendance\" && (\n                                  <span className=\"text-xs text-red-500\">\n                                    {approval.checkOutTime ? dayjs(approval.checkOutTime).format(\n                                      \"YYYY-MM-DD HH:mm\"\n                                    ) : '-'}\n                                  </span>\n                                )}\n                              </div>\n                            </td>\n                            <td className=\"px-4 py-3 whitespace-nowrap\">\n                              <div className=\"flex space-x-2\">\n                                <Popconfirm\n                                  title={`${approval?.formatType === \"attendance\"\n                                    ? \"Attendance\"\n                                    : approval?.formatType === \"leave\"\n                                      ? \"Leave\"\n                                      : approval?.formatType === \"cashbook\"\n                                        ? \"Cashbook\"\n                                        : \"\"\n                                    }`}\n                                  description={`Are you sure to Approve this ${approval?.formatType === \"attendance\"\n                                    ? \"Attendance\"\n                                    : approval?.formatType === \"leave\"\n                                      ? \"Leave\"\n                                      : approval?.formatType === \"cashbook\"\n                                        ? \"Cashbook\"\n                                        : \"\"\n                                    }`}\n                                  onConfirm={() => handleApproval(approval)}\n                                  //onCancel={cancel}\n                                  okText=\"Yes\"\n                                  cancelText=\"No\"\n                                >\n\n                                  <button\n                                    // onClick={() => handleApproval(approval)}\n                                    className=\"p-1 rounded-full bg-green-100 text-green-600 hover:bg-green-200\"\n                                  >\n                                    <IoCheckmark size={16} />\n                                  </button>\n\n                                </Popconfirm>\n\n                                <Popconfirm\n                                  title={`${approval?.formatType === \"attendance\"\n                                    ? \"Attendance\"\n                                    : approval?.formatType === \"leave\"\n                                      ? \"Leave\"\n                                      : approval?.formatType === \"cashbook\"\n                                        ? \"Cashbook\"\n                                        : \"\"\n                                    }`}\n                                  description={`Are you sure to Delete this ${approval?.formatType === \"attendance\"\n                                    ? \"Attendance\"\n                                    : approval?.formatType === \"leave\"\n                                      ? \"Leave\"\n                                      : approval?.formatType === \"cashbook\"\n                                        ? \"Cashbook\"\n                                        : \"\"\n                                    }`}\n                                  onConfirm={() =>\n                                    handleRequestRejection(approval)\n                                  }\n                                  okText=\"Yes\"\n                                  cancelText=\"No\"\n                                >\n                                  <button className=\"p-1 rounded-full bg-red-100 text-red-600 hover:bg-red-200\">\n                                    <RxCross2 size={16} />\n                                  </button>\n                                </Popconfirm>\n\n\n\n                              </div>\n                            </td>\n                          </tr>\n                        ))\n                      ) : (\n\n                        <tr >\n                          <td colSpan={5}>\n                            <div className=\"flex  justify-center items-center h-full w-full\">\n                              <Empty />\n                            </div>\n                          </td>\n                        </tr>\n\n                      )}\n                    </tbody>\n                  </table>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                </div>\n              </div>\n            </div>\n\n          </div>\n\n          <div className=\"w-full xl:space-y-5 space-y-3  md:grid-cols-3 grid grid-cols-1 gap-5\">\n            <div className=\"flex w-full  h-[218px] mt-4 bg-white p-2.5 rounded-xl flex-col gap-2\">\n              <div className=\"flex w-full justify-between\">\n                <span className=\"text-[#F37199] font-semibold text-[20px]\">\n                  Hiring Application{\" \"}\n                </span>\n                <div\n                  onClick={() => {\n                    handleQuickActions(\n                      `/admin/application/${encrypt(\n                        sidebarListData?.find(\n                          (data) => data?.slug == \"application\"\n                        )?._id\n                      )}`\n                    );\n                  }}\n                  className=\"h-5 rounded-full bg-[#bed3fe] w-5 flex justify-center items-center\"\n                >\n                  <MdArrowOutward />\n                </div>{\" \"}\n              </div>\n              <div className=\"w-full flex flex-col gap-2 h-[90%] overflow-x-auto  rounded-lg\">\n                {hrDashboardData?.appliedApplication?.length > 0 ? hrDashboardData?.appliedApplication?.map((event) => {\n                  return (\n                    <div\n                      key={event?._id}\n                      className=\"grid grid-cols-[0.5fr_1.5fr_1fr] gap-2  justify-between border-b p-2 rounded-xl shadow-sm shadow-black items-center\"\n                    >\n                      <div className=\"flex   justify-start items-center rounded-xl px-2 \">\n                        {event.profileImage ? (\n                          <img\n                            alt=\"\"\n                            className=\"min-w-10 min-h-10  w-10 h-10 rounded-full\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${event.profileImage}`}\n                          />\n                        ) : (\n                          <div className=\"min-w-9 min-h-9  w-9 h-9 rounded-full bg-gray-500 flex items-center justify-center\">\n                            <FaUser className=\"w-4 h-4 text-white\" />\n                          </div>\n                        )}\n                      </div>\n\n                      <div className=\"flex flex-col w-full  justify-start items-center\">\n                        <span className=\"truncate text-[12px] text-overflow:ellipsis   text-start w-full\">\n                          {event?.fullName}\n                        </span>\n                        <span className=\"text-[10px] w-full  text-start\">\n                          {event?.address?.state}\n                        </span>\n                      </div>\n\n                      <div className=\"w-full p-1 bg-[#FFF5FD] rounded-lg  text-[13px] text-center truncate text-overflow:ellipsis\">\n                        {event?.designationName}\n                      </div>\n                    </div>\n                  );\n                }) : <div className=\"flex justify-center items-center h-full w-full\">\n                  <Empty />\n                </div>}\n              </div>\n            </div>\n            <div className=\"w-full flex flex-col gap-2\">\n              <div className=\"md:text-[22px] text-[16px]\">Hiring Updates</div>\n              <div className=\"w-full bg-white rounded-xl flex justify-between p-[15px]\">\n                <span className=\"text-[13px] font-semibold\">\n                  {\" \"}\n                  Shortlisted Candidates\n                </span>\n                <div className=\" flex min-h-6 min-w-6 text-[12px] rounded-full bg-[#d6f379] justify-center items-center\">\n                  {hrDashboardData?.applicationData?.shortlistedApplication || 0}\n                </div>\n              </div>\n              <div className=\"w-full  bg-white rounded-xl flex justify-between p-[15px]\">\n                <span className=\"text-[13px] font-semibold\">\n                  {\" \"}\n                  UpComming Interviews\n                </span>\n                <div className=\" flex  min-h-6 min-w-6 text-[12px] rounded-full bg-[#edbeae]  justify-center items-center\">\n                  {hrDashboardData?.upcommingInterview || 0}\n                </div>\n              </div>\n              <div className=\"w-full bg-white rounded-xl flex justify-between p-[15px]\">\n                <span className=\"text-[13px] font-semibold\">\n                  Rejected Applications\n                </span>\n                <div className=\" flex min-h-6 min-w-6 text-[12px] rounded-full bg-red-300 justify-center items-center\">\n                  {hrDashboardData?.applicationData?.rejectedApplication || 0}\n                </div>\n              </div>\n            </div>\n\n            {/*Quick Response*/}\n            <div className=\"w-full rounded-xl h-56 flex flex-col p-4 gap-2 bg-white\">\n              <div className=\"text-[18px]\">Quick Actions</div>\n              <div className=\"grid pt-2 overflow-auto 2xl:grid-cols-3 gap-2 grid-cols-2\">\n                {QUICK_ACTIONS?.map((element, index) => {\n                  const IconComponent = element.icons;\n                  return (\n                    <div\n                      key={index}\n                      className=\"w-full bg-[#f6f4f0] rounded-lg justify-center items-center p-2 flex flex-col\"\n                      onClick={() => {\n                        handleQuickActions(element?.path);\n                      }}\n                    >\n                      <div>\n                        <IconComponent size={20} />\n                      </div>\n                      <span className=\"text-[11px]\">{element?.name}</span>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n\n\n          <div className=\"flex w-full  mt-6 bg-white p-2.5 rounded-xl flex-col gap-2\">\n            <div className=\"flex w-full justify-between\">\n              <span className=\"text-header font-semibold text-[20px]\">\n                Pending Attendance{\" \"}\n              </span>\n              <div\n                onClick={() => {\n                  handleQuickActions(\n                    `/admin/all-employee-attendance/${encrypt(\n                      sidebarListData?.find(\n                        (data) => data?.slug == \"all-employee-attendance\"\n                      )?._id\n                    )}`\n                  );\n                }}\n                className=\"h-5 rounded-full bg-[#bed3fe] w-5 flex justify-center items-center\"\n              >\n                <MdArrowOutward />\n              </div>{\" \"}\n            </div>\n            <div className=\"w-full flex flex-col  gap-2   rounded-lg\">\n              <div className=\" overflow-x-auto\">\n\n\n\n                <table className=\" w-full   divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50 w-full\">\n                    <tr>\n\n\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Employee\n                      </th>\n\n                      {/* <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Details\n                        </th> */}\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        check In Time\n                      </th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        check Out Time\n                      </th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Actions\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y w-full  divide-gray-200\">\n                    {hrDashboardData?.pendingAttendance?.length > 0 ? (\n                      hrDashboardData?.pendingAttendance?.map((approval) => (\n                        <tr key={approval._id} className=\"hover:bg-gray-50\">\n                          <td className=\"px-4 py-3 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              <img\n                                src={\n                                  approval.img\n                                    ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${approval.employeProfileImage}`\n                                    : \"/images/images/avatar.jpg\"\n                                }\n                                className=\"w-8 h-8 rounded-full mr-2 ring-1 ring-amber-300\"\n                                alt={approval.employename}\n                              />\n                              <span className=\"text-sm font-medium text-gray-900\">\n                                {approval.employename}\n                              </span>\n                            </div>\n                          </td>\n\n\n\n                          <td className=\"px-4 py-3 whitespace-nowrap\">\n                            <div className=\"flex flex-col\">\n\n\n                              <span className=\"text-xs text-green-500\">\n                                {approval.checkInTime ? dayjs(approval.checkInTime).format(\n                                  \"YYYY-MM-DD HH:mm\"\n                                ) : '-'}\n                              </span>\n\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">\n                            <div className=\"flex flex-col\">\n\n\n                              <span className=\"text-xs text-red-500\">\n                                {approval.checkOutTime ? dayjs(approval.checkOutTime).format(\n                                  \"YYYY-MM-DD HH:mm\"\n                                ) : '-'}\n                              </span>\n\n                            </div>\n                          </td>\n                          <td className=\"px-4 py-3 whitespace-nowrap\">\n                            <div className=\"flex space-x-2\">\n                              <Popconfirm\n                                title={`${approval?.formatType === \"attendance\"\n                                  ? \"Attendance\"\n                                  : approval?.formatType === \"leave\"\n                                    ? \"Leave\"\n                                    : approval?.formatType === \"cashbook\"\n                                      ? \"Cashbook\"\n                                      : \"\"\n                                  }`}\n                                description={`Are you sure to Approve this ${approval?.formatType === \"attendance\"\n                                  ? \"Attendance\"\n                                  : approval?.formatType === \"leave\"\n                                    ? \"Leave\"\n                                    : approval?.formatType === \"cashbook\"\n                                      ? \"Cashbook\"\n                                      : \"\"\n                                  }`}\n                                onConfirm={() => handleApproval(approval)}\n                                //onCancel={cancel}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                              >\n\n                                <button\n                                  // onClick={() => handleApproval(approval)}\n                                  className=\"p-1 rounded-full bg-green-100 text-green-600 hover:bg-green-200\"\n                                >\n                                  <IoCheckmark size={16} />\n                                </button>\n\n                              </Popconfirm>\n\n                              <Popconfirm\n                                title={`${approval?.formatType === \"attendance\"\n                                  ? \"Attendance\"\n                                  : approval?.formatType === \"leave\"\n                                    ? \"Leave\"\n                                    : approval?.formatType === \"cashbook\"\n                                      ? \"Cashbook\"\n                                      : \"\"\n                                  }`}\n                                description={`Are you sure to Delete this ${approval?.formatType === \"attendance\"\n                                  ? \"Attendance\"\n                                  : approval?.formatType === \"leave\"\n                                    ? \"Leave\"\n                                    : approval?.formatType === \"cashbook\"\n                                      ? \"Cashbook\"\n                                      : \"\"\n                                  }`}\n                                onConfirm={() =>\n                                  handleRequestRejection(approval)\n                                }\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                              >\n                                <button className=\"p-1 rounded-full bg-red-100 text-gray-600 hover:bg-red-200\">\n                                  <RxCross2 size={16} />\n                                </button>\n                              </Popconfirm>\n\n                              <Popconfirm\n                                title={`edit`}\n                                onConfirm={() =>\n                                  handleAttendenceEdit(approval)\n                                }\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                              >\n                                <button className=\"p-1 rounded-full bg-red-100 text-red-600 hover:bg-red-200\">\n                                  <FaEdit size={16} />\n                                </button>\n                              </Popconfirm>\n                            </div>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n\n                      <tr >\n                        <td colSpan={5}>\n                          <div className=\"flex  justify-center items-center h-full w-full\">\n                            <Empty />\n                          </div>\n                        </td>\n                      </tr>\n\n                    )}\n                  </tbody>\n                </table>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n              </div>\n            </div>\n          </div>\n\n\n\n\n          <div className=\"flex w-full mt-7 overflow-x-auto bg-white p-2.5 rounded-xl flex-col gap-2\">\n            <div className=\"flex w-full overflow-x-auto justify-between\">\n              <span className=\"text-header font-semibold text-[20px]\">\n                Visitor List{\" \"}\n              </span>\n              <div\n                onClick={() => {\n                  handleQuickActions(\n                    `/admin/leave-request-list/${encrypt(\n                      sidebarListData?.find(\n                        (data) => data?.slug == \"leave-request-list\"\n                      )?._id\n                    )}`\n                  );\n                }}\n                className=\"h-5 rounded-full bg-[#bed3fe] w-5 flex justify-center items-center\"\n              >\n                <MdArrowOutward />\n              </div>{\" \"}\n            </div>\n            <div className=\"w-full flex flex-col h-[295px] gap-2 overflow-y-auto  rounded-lg\">\n              <div className=\"  overflow-x-auto\">\n\n\n\n                <table className=\" w-full  divide-y divide-gray-200\">\n                  <thead className=\"bg-gray-50 w-full\">\n                    <tr>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Name\n                      </th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Check In Time\n                      </th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Check Out Time\n                      </th>\n                      <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                        Reason\n                      </th>\n                      {/* <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                          Actions\n                        </th> */}\n                    </tr>\n                  </thead>\n                  <tbody className=\"bg-white divide-y w-full  divide-gray-200\">\n                    {hrDashboardData?.visitorlist?.length > 0 ? (\n                      hrDashboardData?.visitorlist?.map((approval) => (\n                        <tr key={approval?._id} className=\"hover:bg-gray-50\">\n                          <td className=\"px-4 text-xs py-3 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              {approval?.name || \"-\"}\n                            </div>\n                          </td>\n                          <td className=\"px-4 text-xs py-3 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              {approval?.checkInTime ? dayjs(approval?.checkInTime).format('DD-MM-YYYY hh:mm a') : \"-\"}\n                            </div>\n                          </td>\n                          <td className=\"px-4 text-xs py-3 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              {approval?.checkOutTime ? dayjs(approval?.checkOutTime).format('DD-MM-YYYY hh:mm a') : \"-\"}\n                            </div>\n                          </td>\n                          <td className=\"px-4 text-xs py-3 whitespace-nowrap\">\n                            <div className=\"flex items-center\">\n                              {approval?.reason || \"-\"}\n                            </div>\n                          </td>\n\n\n                        </tr>\n                      ))\n                    ) : (\n                      <tr>\n                        <td\n                          colSpan=\"5\"\n                          className=\"px-4 py-6 text-center text-sm text-gray-500\"\n                        >\n                          No Visitors found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n\n              </div>\n            </div>\n          </div>\n          <div className=\"xl:hidden mt-4 block w-full\">\n            <NoticeBoard />\n          </div>\n        </div>\n\n        <div className=\"xl:w-[30%] w-full xl:h-[calc(100vh-100px)] pb-5 hide-scrollbar-y \">\n          <div className=\"w-full hidden xl:block space-y-3\">\n            <UserDetails\n              leaveList={leaveList}\n              birthdaydata={birthdaydata}\n              inActiveUserToday={inActiveUserToday}\n              inActiveEmployeeToday={inActiveEmployeeToday}\n              todayWfhRequstData={todayWfhRequstData}\n            />\n            <div className=\"xl:block hidden w-full\">\n              <NoticeBoard />\n            </div>\n          </div>\n        </div>\n\n        {attendenceModal && <UpdateManualAttendanceModal isOpen={attendenceModal} onClose={() => setAttendenceModal(false)} fetchattendanceListData={fetchHrDashboard} updateId={selectedAttendence?._id} />}\n\n\n      </div>\n\n\n    </>\n  );\n}\n\nexport default HrDashBoard;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { IoClose } from \"react-icons/io5\";\nimport { useDispatch } from \"react-redux\";\nimport { domainName } from \"../../constents/global\";\nimport { createNoticeBoard } from \"../../redux/_reducers/_noticeBoard_reducers\";\n\nconst AddNotification = ({ closeNoticeModal, isNoticeOpen ,fetchNoticeboard }) => {\n  const [newNotification, setNewNotification] = useState(\"\");\n  const modalRef = useRef(null);\n  const dispatch = useDispatch();\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const handleCreate = () => {\n    if (newNotification.trim()) {\n      dispatch(\n        createNoticeBoard({\n          companyId: userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n          directorId: \"\",\n          branchId:userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id: userInfoglobal?.roleKey === \"hr\" ? userInfoglobal?.branchId:'',\n          message: newNotification,\n        })\n      ).then((data)=>{\n        if(!data?.error){\n            fetchNoticeboard()\n            closeNoticeModal();\n        }\n      })\n    }\n  };\n\n  const handleClickOutside = (event) => {\n    if (modalRef.current && !modalRef.current.contains(event.target)) {\n      closeNoticeModal();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <>\n      <div\n        className={`fixed inset-0 z-[999999999999] bg-gray-900 bg-opacity-50 flex items-start top-0 mt-0 justify-center transition-opacity duration-300 ${\n          isNoticeOpen ? \"animate-[smoothSlideDown_0.5s_ease-in-out]\" : \"\"\n        }`}\n      >\n        <div\n          ref={modalRef}\n          className=\"animate-slideInFromTop bg-[#F2F2F2] modalShadow rounded-[12px] shadow-lg w-11/12 max-w-md relative top-[100px] transition-transform duration-700 linear\"\n        >\n          <div className=\"flex items-center justify-between border-b py-4 px-6\">\n            <div className=\"text-sm font-normal\">Add News</div>\n            <button\n              onClick={closeNoticeModal}\n              className=\"text-gray-400 hover:text-gray-700\"\n            >\n              <IoClose />\n            </button>\n          </div>\n          <div className=\"text-gray-700 p-6\">\n            <div className=\"text-sm text-black\">Title</div>\n            <textarea\n              className=\"border w-full h-[58px] p-2\"\n              value={newNotification}\n              onChange={(e) => setNewNotification(e.target.value)}\n              placeholder=\"Enter notification text\"\n            />\n          </div>\n\n          <div className=\"flex justify-end items-center p-6 pt-0\">\n            <button\n              onClick={handleCreate}\n              className=\"bg-header text-white px-[22px] py-[11px] rounded text-[14px] mr-2\"\n            >\n              Create\n            </button>\n            <button\n              onClick={closeNoticeModal}\n              className=\"bg-[#d41c1c] text-white px-[22px] py-[11px] rounded text-[14px] mr-2\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AddNotification;\n","import React, { useEffect, useState } from \"react\";\nimport { FaPenToSquare, FaPlus } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport AddNotification from \"./AddNotification\";\nimport EditNotification from \"./EditNotification\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoticeBoard, listNoticeBoard, updateNoticeBoard } from \"../../redux/_reducers/_noticeBoard_reducers\";\nimport { domainName, userTypeglobal } from \"../../constents/global\";\nimport { Empty } from \"antd\";\n\nconst NoticeBoard = () => {\n  const [isNoticeOpen, setIsNoticeOpen] = useState(false);\n  const [isEditOpen, setIsEditOpen] = useState(false);\n  const dispatch = useDispatch();\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const deleteNotice =(noticeId)=>{\n    dispatch(deleteNoticeBoard({\n        _id: noticeId\n    })).then((data)=>{\n        if(!data?.error){\n            fetchNoticeboard()\n        }\n    })\n  }\n  useEffect(() => {\n    fetchNoticeboard();\n  }, []);\n  const fetchNoticeboard = () => {\n    dispatch(\n      listNoticeBoard({\n        companyId:\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n            ? \"\"\n            : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n            isPagination:false\n      })\n    );\n  };\n  const { listNoticeBoardData } = useSelector((state) => state.noticeBoard);\n  const [editContent, setEditContent] = useState(\"\");\n  const [editId, setEditId] = useState(null);\n\n  const openNoticeModal = () => setIsNoticeOpen(true);\n  const closeNoticeModal = () => setIsNoticeOpen(false);\n\n  const openEditModal = (data, content) => {\n    setEditId(data);\n    setEditContent(content);\n    setIsEditOpen(true);\n  };\n\n  const closeEditModal = () => setIsEditOpen(false);\n\n  const updateNotification = (data, updatedContent) => {\n    dispatch(updateNoticeBoard({\n        \"_id\": data?._id,\n        \"companyId\": data?.companyId ?? \"\",\n        \"directorId\": \"\",\n        \"branchId\": data?.branchId ?? \"\",\n        \"message\": updatedContent\n    })).then((data)=>{\n        if(!data?.error){\n            fetchNoticeboard()\n            closeEditModal();\n        }\n    })\n    \n  };\n//   useEffect(() => {\n//     if (listNoticeBoardData?.docs) {\n//       const data = listNoticeBoardData.docs.map((item) => {\n//         return {\n//           id: item._id,\n//           content: item.message,\n//         };\n//       });\n//       setNotifications(data);\n//     }\n//   }, [listNoticeBoardData]);\n\n  return (\n    <>\n      {isNoticeOpen && (\n        <AddNotification\n          closeNoticeModal={closeNoticeModal}\n          isNoticeOpen={isNoticeOpen}\n          fetchNoticeboard={fetchNoticeboard}\n        />\n      )}\n      {isEditOpen && (\n        <EditNotification\n          content={editContent}\n          setContent={setEditContent}\n          closeEditModal={closeEditModal}\n          updateNotification={() => updateNotification(editId, editContent)}\n        />\n      )}\n\n      <div className=\"w-full  h-auto !xl:h-full bg-[#ffff] overflow-x-hidden overflow-y-auto rounded-md py-[10px] px-3 space-y-3\">\n        <div className=\"w-full flex justify-between items-center\">\n          <div className=\"md:text-[18px] text-[16px] font-[500] text-header\">\n            Notice Board\n          </div>\n          {(userInfoglobal?.userType !=='employee' || userInfoglobal?.roleKey=='hr')&&<div\n            onClick={openNoticeModal}\n            className=\"bg-header py-1 text-[14px] px-2.5 rounded-md flex justify-between items-center space-x-2 text-white cursor-pointer\"\n          >\n            <FaPlus />\n            <span>Add</span>\n          </div>}\n        </div>\n\n        <div className=\"group  \">\n          <div className=\"space-y-2 w-full  h-full \">\n            {listNoticeBoardData?.docs?.length > 0 ? listNoticeBoardData?.docs?.map((notification) => (\n              <div\n                key={notification?._id}\n                className=\"w-full bg-[#D4D4D4]/40 p-2 rounded-md\"\n              >\n                <span className=\"3xl:text-xs xl:text-[13px] text-[12px]\">{notification?.message}</span>\n                <div className=\"flex justify-end items-center space-x-1.5\">\n                  <div className=\"3xl:text-xs xl:text-[10px] text-[14px]\">created by - {notification?.createdBy} </div>\n                 {(userInfoglobal?.userType !=='employee' || userInfoglobal?.roleKey=='hr')&& <button\n                    className=\"p-1.5 text-xs rounded-md bg-white border border-muted\"\n                    onClick={() =>\n                      openEditModal(notification, notification?.message)\n                    }\n                    type=\"button\"\n                  >\n                    <FaPenToSquare size={14} className=\"text-header\" />\n                  </button>}\n                  {(userInfoglobal?.userType !=='employee' || userInfoglobal?.roleKey=='hr')&&<button\n                    className=\"p-1.5 rounded-md bg-white border  text-red-500 hover:text-red-600 hover:border-red-600\"\n                    type=\"button\"\n                  >\n                    <RiDeleteBin5Line onClick={()=>deleteNotice(notification?._id)} className=\"text-red-500\" size={14} />\n                  </button> }\n                </div>\n              </div>\n            )) :<div className=\"flex justify-center items-center h-full w-full\">\n                    <Empty />\n                  </div> }\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default NoticeBoard;\n","import { useForm } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { CreateTodoListAction, updateTodoList } from \"./TodoTypeFeatures/_TodoType_reducers\";\nimport { Modal } from \"antd\";\nimport { useEffect } from \"react\";\n\n\nconst UpdateTodoList = ({isOpen,parentData, handleClose ,fetchList }) => {\n  const { loading: AssetTypeloading } = useSelector(\n    (state) => state.AssetType\n  );\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n    reset\n  } = useForm();\n  const dispatch = useDispatch();\n\n\n  useEffect(()=>{\nif(parentData){\n  setValue(\"title\",parentData?.title)\n  setValue(\"message\",parentData?.message)\n}\n  },[parentData])\n\n  \n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id:parentData?._id,\n      \"title\": data?.title,\n      \"message\": data?.message,\n    };\n    dispatch(updateTodoList(finalPayload)).then((data) => {\n      if (!data.error) {\n        fetchList()\n        reset()\n        handleClose()\n      }\n    });\n  };\n\n\n  return (\n    <Modal\n      visible={isOpen}\n      onCancel={() => {\n        handleClose()\n        reset()\n      }}\n      footer={null}\n      title=\"Create To Do\"\n      width={600}\n      height={400}\n      className=\"antmodalclassName\"\n    >\n\n\n      <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n\n\n          {/* Leave Type Name */}\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>Title <span className=\"text-red-600\">*</span></label>\n            <input\n              type=\"text\"\n              {...register(\"title\", {\n                required: \"Title  is required\",\n              })}\n              className={`${inputClassName} ${errors.title ? \"border-[1px] \" : \"border-gray-300\"}`}\n              placeholder=\"Enter Title \"\n            />\n            {errors.title && (\n              <p className=\"text-red-500 text-sm\">{errors.title.message}</p>\n            )}\n          </div>\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>Message <span className=\"text-red-600\">*</span></label>\n            <input\n              type=\"text\"\n              {...register(\"message\", {\n                required: \"Message is required\",\n              })}\n              className={`${inputClassName} ${errors.message ? \"border-[1px] \" : \"border-gray-300\"}`}\n              placeholder=\"Enter Message\"\n            />\n            {errors.message && (\n              <p className=\"text-red-500 text-sm\">{errors.message.message}</p>\n            )}\n          </div>\n\n        </div>\n\n        {/* Submit Button */}\n        <div className=\"flex justify-end\">\n          <button\n            type=\"submit\"\n            disabled={AssetTypeloading}\n            className={`${AssetTypeloading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 mt-3 rounded`}\n          >\n            {AssetTypeloading ? <Loader /> : 'Submit'}\n          </button>\n        </div>\n      </form>\n    </Modal>\n\n  );\n};\n\nexport default UpdateTodoList;\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaPenToSquare, FaPlus } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { FaCheck } from \"react-icons/fa\";\nimport Swal from \"sweetalert2\";\nimport { useForm } from \"react-hook-form\";\nimport { Tooltip } from \"antd\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { deleteTodoData, getTodoList, statusTodoList } from \"./TodoTypeFeatures/_TodoType_reducers\";\nimport CreateTodoList from \"./CreateTodoList\";\nimport UpdateTodoList from \"./UpdateTodoList\";\n\n// 🎨 Enhanced Todo Item Card\nconst TodoItem = ({ todo, onEdit, onDelete, onToggleComplete }) => {\n  const handleCheckboxChange = () => {\n    const newStatus = todo.status === \"completed\" ? \"pending\" : \"completed\";\n    onToggleComplete(todo._id, newStatus);\n  };\n\n  return (\n    <div\n      className={`group rounded-xl p-1 mb-1 bg-white border transition-all duration-300 hover:shadow-lg ${\n        todo.status === \"completed\" \n          ? \"border-green-100 bg-green-50/30\" \n          : \"border-gray-100 hover:border-blue-100\"\n      }`}\n    >\n      <div className=\"flex relative items-start gap-3\">\n        {/* Enhanced Checkbox */}\n        <button\n          onClick={handleCheckboxChange}\n          className={`mt-0.5 flex-shrink-0 w-5 h-5 rounded-full border-2 flex items-center justify-center transition-all duration-200 ${\n            todo.status === \"completed\" \n              ? \"bg-green-500 border-green-500 text-white shadow-sm\" \n              : \"border-gray-300 hover:border-green-400 hover:bg-green-50 group-hover:border-green-400\"\n          }`}\n        >\n          {todo.status === \"completed\" && <FaCheck size={10} />}\n        </button>\n\n        {/* Content */}\n        <div className=\"flex-1 min-w-0\">\n          <h4 className={`font-semibold text-gray-900 text-sm leading-tight ${\n            todo.status === \"completed\" ? \"line-through text-gray-500\" : \"\"\n          }`}>\n            {todo.title}\n          </h4>\n          {todo.message && (\n            <p className={`text-gray-600 text-xs mt-2 leading-relaxed ${\n              todo.status === \"completed\" ? \"line-through text-gray-400\" : \"\"\n            }`}>\n              {todo.message}\n            </p>\n          )}\n        </div>\n\n        {/* Actions */}\n        <div className=\"flex absolute top-2 right-2 items-center gap-1 opacity-0 group-hover:opacity-100 transition-opacity duration-200\">\n          <Tooltip title=\"Edit\">\n            <button\n              onClick={() => onEdit(todo)}\n              className=\"text-gray-400 hover:text-blue-600 p-2 rounded-lg transition-all duration-200 hover:bg-blue-50\"\n            >\n              <FaPenToSquare size={14} />\n            </button>\n          </Tooltip>\n\n          <Tooltip title=\"Delete\">\n            <button\n              onClick={() => onDelete(todo?._id)}\n              className=\"text-gray-400 hover:text-red-500 p-2 rounded-lg transition-all duration-200 hover:bg-red-50\"\n            >\n              <RiDeleteBin5Line size={14} />\n            </button>\n          </Tooltip>\n        </div>\n      </div>\n\n      {/* Status Badge */}\n      <div className=\"flex justify-between items-center mt-3\">\n\n        \n        {/* Hover actions for mobile */}\n        <div className=\"flex md:hidden items-center gap-1\">\n          <button\n            onClick={() => onEdit(todo)}\n            className=\"text-gray-400 hover:text-blue-600 p-1 rounded transition\"\n          >\n            <FaPenToSquare size={14} />\n          </button>\n          <button\n            onClick={() => onDelete(todo?._id)}\n            className=\"text-gray-400 hover:text-red-500 p-1 rounded transition\"\n          >\n            <RiDeleteBin5Line size={14} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// 🧭 Todo Section (Column)\nconst TodoSection = ({ title, status, todos, onEdit, onDelete, onToggleComplete }) => {\n  const filteredTodos = todos.filter(todo => todo.status === status);\n\n  return (\n    <div className=\"flex-1 min-w-[320px] bg-gray-50/50 rounded-xl border border-gray-100 p-2\">\n      {/* Section Header */}\n      <div className=\"flex items-center justify-between mb-2 pb-1.5 border-b border-gray-200\">\n        <div className=\"flex items-center gap-2\">\n          <h3 className=\"font-semibold text-gray-800 text-sm\">{title}</h3>\n          <span className=\"bg-gray-200 text-gray-700 px-2 py-1 rounded-full text-xs font-medium min-w-[20px] text-center\">\n            {filteredTodos.length}\n          </span>\n        </div>\n      </div>\n\n      {/* Todo Cards */}\n      <div className=\"space-y-3 max-h-[600px] overflow-y-auto pr-2\">\n        {filteredTodos.length > 0 ? (\n          filteredTodos.map((todo) => (\n            <TodoItem\n              key={todo._id}\n              todo={todo}\n              onEdit={onEdit}\n              onDelete={onDelete}\n              onToggleComplete={onToggleComplete}\n            />\n          ))\n        ) : (\n          <div className=\"text-center text-gray-400 py-8 text-sm\">\n            <div className=\"text-gray-300 mb-2\">📝</div>\n            No tasks found\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\n// 🧠 Main TodoList Component\nfunction TodoList() {\n  const { register, control, formState: { errors }, setValue } = useForm();\n  const dispatch = useDispatch();\n  const { TodoListData, loading } = useSelector((state) => state.todoList);\n\n  const [createModal, setCreateModal] = useState({ data: null, isOpen: false });\n  const [updateToDoList, setupdateToDoList] = useState({ data: null, isOpen: false });\n\n  useEffect(() => {\n    getToDoListListRequest();\n  }, []);\n\n  const getToDoListListRequest = () => {\n    const data = {\n      currentPage: null,\n      pageSize: null,\n      reqData: {\n        text: \"\",\n        status: \"\",\n        sort: true,\n        isPagination: false,\n      },\n    };\n    dispatch(getTodoList(data));\n  };\n\n  const handleDelete = (id) => {\n    let reqData = { _id: id };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteTodoData(reqData)).then((data) => {\n          if (!data?.error) {\n            getToDoListListRequest();\n          }\n        });\n      }\n    });\n  };\n\n  const handleToggleComplete = (_id, newStatus) => {\n    dispatch(statusTodoList({ _id, status: newStatus })).then(() => {\n      getToDoListListRequest();\n    });\n  };\n\n  return (\n    <div className=\"p-2 bg-white rounded-xl\">\n      {/* Header */}\n      <div className=\"flex justify-between items-center mb-1.5 pb-1.5 border-b border-gray-200\">\n        <div>\n          <h2 className=\"text-sm font-bold text-gray-900\">Todo List</h2>\n          <p className=\"text-sm text-gray-500 mt-1\">Manage your tasks efficiently</p>\n        </div>\n\n        <button\n          onClick={() => setCreateModal({ data: null, isOpen: true })}\n          className=\"bg-blue-600 px-4 py-1.5 rounded-full flex items-center gap-2 text-white hover:bg-blue-700 transition-all duration-200 shadow-sm hover:shadow-md text-sm font-medium\"\n        >\n          <FaPlus size={14} />\n          <span>Add Todo</span>\n        </button>\n      </div>\n\n      {/* Todo Board */}\n      {loading ? (\n        <div className=\"flex justify-center items-center h-40\">\n          <Loader2 />\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2  gap-3\">\n          <TodoSection\n            title=\"Pending Tasks\"\n            status=\"pending\"\n            todos={TodoListData || []}\n            onEdit={(todo) => setupdateToDoList({ data: todo, isOpen: true })}\n            onDelete={handleDelete}\n            onToggleComplete={handleToggleComplete}\n          />\n     \n          \n          <TodoSection\n            title=\"Completed\"\n            status=\"completed\"\n            todos={TodoListData || []}\n            onEdit={(todo) => setupdateToDoList({ data: todo, isOpen: true })}\n            onDelete={handleDelete}\n            onToggleComplete={handleToggleComplete}\n          />\n        </div>\n      )}\n\n      {/* Modals */}\n      <CreateTodoList\n        isOpen={createModal?.isOpen}\n        handleClose={() => setCreateModal({ data: null, isOpen: false })}\n        fetchList={getToDoListListRequest}\n      />\n\n      <UpdateTodoList\n        isOpen={updateToDoList?.isOpen}\n        parentData={updateToDoList?.data}\n        handleClose={() => setupdateToDoList({ data: null, isOpen: false })}\n        fetchList={getToDoListListRequest}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;","// import React, { useState, useEffect, useRef } from 'react';\n// import { ImArrowUpRight2 } from \"react-icons/im\";\n// import { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\n// import dayjs from 'dayjs';\n// import { Modal, Card, Tag, Divider, Empty, Avatar, Space, Typography, Badge, Tooltip, Button } from 'antd';\n// import {\n//   CalendarOutlined,\n//   TeamOutlined,\n//   EnvironmentOutlined,\n//   TrophyOutlined,\n//   UserOutlined,\n//   CloseOutlined,\n//   PlusOutlined\n// } from '@ant-design/icons';\n\n// const { Text, Title } = Typography;\n\n// const Calendar2 = ({ combinedData, currentDate, prevMonth, nextMonth, companyDashboardData, onAddEvent }) => {\n\n//   const [selectedDate, setSelectedDate] = useState('');\n//   const [hoveredDate, setHoveredDate] = useState(null);\n//   const [isScrolling, setIsScrolling] = useState(false);\n//   const modalRef = useRef(null);\n//   const calendarRef = useRef(null);\n\n//   // Get calendar date calculations\n//   const year = currentDate?.getFullYear();\n//   const month = currentDate?.getMonth();\n//   const daysInMonth = new Date(year, month + 1, 0).getDate();\n//   const firstDayOfMonth = new Date(year, month, 1).getDay();\n//   const prevMonthDays = new Date(year, month, 0).getDate();\n  \n//   // Calculate days to display\n//   const prevMonthVisibleDays = Array.from({ length: firstDayOfMonth }, (_, i) => prevMonthDays - firstDayOfMonth + i + 1);\n//   const currentMonthDays = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n//   const nextMonthVisibleDays = Array.from({ length: 42 - (prevMonthVisibleDays.length + currentMonthDays.length) }, (_, i) => i + 1);\n\n//   // Handle date selection\n//   const handleDateClick = (day, isCurrentMonth = true) => {\n//     if (!isCurrentMonth) return;\n    \n//     const date = dayjs(`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`).format('YYYY-MM-DD');\n//     setSelectedDate(date);\n//   };\n\n\n//   useEffect(() => {\n//     const handleClickOutside = (event) => {\n//       if (modalRef.current && !modalRef.current.contains(event.target)) {\n//         setSelectedDate('');\n//       }\n//     };\n\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => document.removeEventListener('mousedown', handleClickOutside);\n//   }, []);\n\n\n//   useEffect(() => {\n//     if (selectedDate) {\n//       document.body.style.overflow = 'hidden';\n//     } else {\n//       document.body.style.overflow = 'auto';\n//     }\n//     return () => {\n//       document.body.style.overflow = 'auto';\n//     };\n//   }, [selectedDate]);\n\n\n//   const hasEvents = (day) => {\n//     const date = dayjs(`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`).format('YYYY-MM-DD');\n//     return combinedData.some(item => item.date === date);\n//   };\n\n\n//   // const eventCount = companyDashboardData?.calender?.eventData?.length ?? companyDashboardData?.eventData?.length ?? 0;\n//   // const holidayCount = companyDashboardData?.calender?.holidayData?.length ?? companyDashboardData?.holidayData?.length ?? 0;\n// const formattedMonth = String(month + 1).padStart(2, '0');\n// const formattedYear = String(year);\n\n// // Flatten data source\n// // const calendarData = companyDashboardData?.calender || companyDashboardData || {};\n//   const eventCount = (companyDashboardData?.eventData || []).filter(event => {\n//   const eventDate = dayjs(event.startDate);\n//   return eventDate.format('YYYY') === formattedYear && eventDate.format('MM') === formattedMonth;\n// }).length;\n\n// // Filter holidays for the current month\n// const holidayCount = (companyDashboardData?.holidayData || []).filter(holiday => {\n//   const holidayDate = dayjs(holiday.date);\n//   return holidayDate.format('YYYY') === formattedYear && holidayDate.format('MM') === formattedMonth;\n// }).length;\n\n//   return (\n//     <div className=\"w-full h-full relative bg-white rounded-xl p-4 shadow-sm\" ref={calendarRef}>\n\n//       <div className=\"flex justify-between items-center mb-4\">\n//         <Title level={4} className=\"!text-header !mb-0\">Calendar</Title>\n//         <div className=\"flex items-center gap-2\">\n//           <Text className=\"text-base font-medium text-gray-800\">\n//             {currentDate?.toLocaleString('default', { month: 'long' })} {year}\n//           </Text>\n//           <div className=\"flex gap-1\">\n//             <Tooltip placement=\"topLeft\"  title=\"Previous month\">\n//               <Button \n//                 shape=\"circle\" \n//                 icon={<FaAngleLeft size={14} />} \n//                 onClick={prevMonth} \n//                 size=\"small\"\n//                 className=\"flex items-center justify-center\"\n//               />\n//             </Tooltip>\n//             <Tooltip placement=\"topLeft\"  title=\"Next month\">\n//               <Button \n//                 shape=\"circle\" \n//                 icon={<FaAngleRight size={14} />} \n//                 onClick={nextMonth} \n//                 size=\"small\"\n//                 className=\"flex items-center justify-center\"\n//               />\n//             </Tooltip>\n//           </div>\n//         </div>\n//       </div>\n\n \n//       <div className=\"grid grid-cols-7 gap-1 mb-4\">\n\n//         {['S', 'M', 'T', 'W', 'T', 'F', 'S'].map(day => (\n//           <div key={day} className=\"text-center font-medium text-sm text-gray-500 py-1\">\n//             {day}\n//           </div>\n//         ))}\n\n\n//         {prevMonthVisibleDays.map(day => (\n//           <div \n//             key={`prev-${day}`} \n//             className=\"h-10 w-10 flex items-center justify-center text-sm text-gray-300 cursor-default\"\n//           >\n//             {day}\n//           </div>\n//         ))}\n\n  \n//         {currentMonthDays.map(day => {\n//           const date = dayjs(`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`).format('YYYY-MM-DD');\n//           const isToday = date === dayjs().format('YYYY-MM-DD');\n//           const hasData = combinedData.some(item => item.date === date);\n          \n//           return (\n//             <Tooltip placement=\"topLeft\"  \n//               key={day} \n//               title={hasData ? `${combinedData.find(d => d.date === date)?.events?.length || 0} events, ${combinedData.find(d => d.date === date)?.holidays?.length || 0} holidays` : null}\n//             >\n//               <div \n//                 className={`relative h-8 w-8 mx-auto flex items-center justify-center text-sm rounded-full transition-all duration-200\n//                   ${isToday ? 'border-2 border-blue-500' : ''}\n//                   ${hasData ? 'bg-blue-50 text-blue-600 font-medium' : 'text-gray-700'}\n//                   ${hoveredDate === date ? 'scale-110 shadow-md' : 'hover:bg-gray-100 cursor-pointer'}\n//                 `}\n//                 onClick={() => handleDateClick(day)}\n//                 onMouseEnter={() => setHoveredDate(date)}\n//                 onMouseLeave={() => setHoveredDate(null)}\n//               >\n//                 {day}\n//                 {hasData && (\n//                   <div className=\"absolute -bottom-1 flex gap-1\">\n//                     {combinedData.find(d => d.date === date)?.events?.length > 0 && (\n//                       <span className=\"w-1 h-1 rounded-full bg-blue-500\"></span>\n//                     )}\n//                     {combinedData.find(d => d.date === date)?.holidays?.length > 0 && (\n//                       <span className=\"w-1 h-1 rounded-full bg-yellow-500\"></span>\n//                     )}\n//                   </div>\n//                 )}\n//               </div>\n//             </Tooltip>\n//           );\n//         })}\n\n//         {/* Next month days */}\n//         {nextMonthVisibleDays.map(day => (\n//           <div \n//             key={`next-${day}`} \n//             className=\"h-10 w-10 flex items-center justify-center text-sm text-gray-300 cursor-default\"\n//           >\n//             {day}\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Stats Section */}\n//       <div className=\"grid grid-cols-2 gap-3 mt-4\">\n//         <div className=\"bg-blue-50 rounded-lg p-3 flex items-center justify-between\">\n//           <div className=\"flex items-center gap-2\">\n//             <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\n//             <Text className=\"text-sm\">Events</Text>\n//           </div>\n//           <Text strong className=\"text-sm\">{eventCount}</Text>\n//         </div>\n//         <div className=\"bg-yellow-50 rounded-sm p-3 flex items-center justify-between\">\n//           <div className=\"flex items-center gap-2\">\n//             <div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>\n//             <Text className=\"text-sm\">Holidays</Text>\n//           </div>\n//           <Text strong className=\"text-sm\">{holidayCount}</Text>\n//         </div>\n//       </div>\n\n//       {/* Event/Holiday Modal */}\n//       <Modal\n//         title={null}\n//         open={!!selectedDate}\n//         onCancel={() => setSelectedDate('')}\n//         footer={null}\n//         width={800}\n//         closeIcon={<CloseOutlined className=\"text-gray-500\" />}\n//         className=\"calendar-modal\"\n//         bodyStyle={{ padding: 0 }}\n//       >\n//         <div ref={modalRef} className=\"p-6\">\n//           <div className=\"flex justify-between items-center mb-6\">\n//             <Title level={4} className=\"!mb-0\">\n//               {dayjs(selectedDate).format('MMMM D, YYYY')}\n//             </Title>\n            \n//           </div>\n\n//           {combinedData?.find(data => data?.date === selectedDate) ? (\n//             <div className=\"space-y-6\">\n//               {/* Events Section */}\n//               <div>\n//                 <Divider orientation=\"left\" className=\"!text-base !font-medium !mb-4\">\n//                   <Space>\n//                     <CalendarOutlined style={{ color: '#1890ff' }} />\n//                     <Text>Events</Text>\n//                     <Badge \n//                       count={combinedData.find(data => data.date === selectedDate)?.events?.length || 0} \n//                       color=\"#1890ff\" \n//                       className=\"ml-2\" \n//                     />\n//                   </Space>\n//                 </Divider>\n\n//                 {combinedData.find(data => data.date === selectedDate)?.events?.length > 0 ? (\n//                   <div className=\"grid grid-cols-1 gap-3\">\n//                     {combinedData.find(data => data.date === selectedDate).events.map((event) => (\n//                       <Card\n//                         key={event.id}\n//                         className=\"hover:shadow-md transition-shadow\"\n//                         size=\"small\"\n//                       >\n//                         <div className=\"space-y-2\">\n//                           <div className=\"flex justify-between items-start\">\n//                             <Text strong className=\"text-base\">{event.title}</Text>\n//                             {event.time && (\n//                               <Tag color=\"blue\">{event.time}</Tag>\n//                             )}\n//                           </div>\n                          \n//                           {event.description && (\n//                             <Text type=\"secondary\" className=\"block\">\n//                               {event.description}\n//                             </Text>\n//                           )}\n                          \n//                           {event.location && (\n//                             <div className=\"flex items-center text-sm text-gray-600\">\n//                               <EnvironmentOutlined className=\"mr-1\" />\n//                               <Text>{event.location}</Text>\n//                             </div>\n//                           )}\n                          \n//                           {event.attendees?.length > 0 && (\n//                             <>\n//                               <Divider dashed className=\"!my-2\" />\n//                               <div className=\"space-y-2\">\n//                                 <Text type=\"secondary\" className=\"flex items-center text-sm\">\n//                                   <TeamOutlined className=\"mr-1\" />\n//                                   Attendees ({event.attendees.length})\n//                                 </Text>\n//                                 <div className=\"flex flex-wrap gap-2\">\n//                                   {event.attendees.map(attendee => (\n//                                     <Tooltip placement=\"topLeft\"  \n//                                       key={attendee.email} \n//                                       title={`${attendee.name} (${attendee.status})`}\n//                                     >\n//                                       <Badge \n//                                         dot \n//                                         color={attendee.status === 'confirmed' ? 'green' : 'orange'}\n//                                         offset={[-5, 5]}\n//                                       >\n//                                         <Avatar \n//                                           size=\"small\" \n//                                           src={attendee.avatar} \n//                                           icon={<UserOutlined />}\n//                                           className=\"cursor-pointer\"\n//                                         />\n//                                       </Badge>\n//                                     </Tooltip>\n//                                   ))}\n//                                 </div>\n//                               </div>\n//                             </>\n//                           )}\n//                         </div>\n//                       </Card>\n//                     ))}\n//                   </div>\n//                 ) : (\n//                   <Empty\n//                     image={Empty.PRESENTED_IMAGE_SIMPLE}\n//                     description=\"No events scheduled\"\n//                     className=\"py-8\"\n//                   />\n//                 )}\n//               </div>\n\n//               {/* Holidays Section */}\n//               <div>\n//                 <Divider orientation=\"left\" className=\"!text-base !font-medium !mb-4\">\n//                   <Space>\n//                     <TrophyOutlined style={{ color: '#faad14' }} />\n//                     <Text>Holidays</Text>\n//                     <Badge \n//                       count={combinedData.find(data => data.date === selectedDate)?.holidays?.length || 0} \n//                       color=\"#faad14\" \n//                       className=\"ml-2\" \n//                     />\n//                   </Space>\n//                 </Divider>\n\n//                 {combinedData.find(data => data.date === selectedDate)?.holidays?.length > 0 ? (\n//                   <div className=\"grid grid-cols-1 gap-3\">\n//                     {combinedData.find(data => data.date === selectedDate).holidays.map((holiday) => (\n//                       <Card\n//                         key={holiday.id}\n//                         className=\"border-l-4 border-yellow-400 hover:shadow-md transition-shadow\"\n//                         size=\"small\"\n//                       >\n//                         <div className=\"flex items-start gap-3\">\n//                           <Avatar \n//                             icon={<TrophyOutlined />} \n//                             style={{ backgroundColor: '#faad14' }} \n//                             className=\"mt-1\"\n//                           />\n//                           <div>\n//                             <Text strong className=\"block\">{holiday.name}</Text>\n//                             {holiday.description && (\n//                               <Text type=\"secondary\" className=\"text-sm\">\n//                                 {holiday.description}\n//                               </Text>\n//                             )}\n//                           </div>\n//                         </div>\n//                       </Card>\n//                     ))}\n//                   </div>\n//                 ) : (\n//                   <Empty\n//                     image={Empty.PRESENTED_IMAGE_SIMPLE}\n//                     description=\"No holidays\"\n//                     className=\"py-8\"\n//                   />\n//                 )}\n//               </div>\n//             </div>\n//           ) : (\n//             <Empty\n//               description={\n//                 <div className=\"space-y-4 py-8\">\n//                   <Text className=\"block\">No events or holidays on this day</Text>\n                 \n//                 </div>\n//               }\n//             />\n//           )}\n//         </div>\n//       </Modal>\n\n//       {/* Custom Styles */}\n//       <style jsx global>{`\n//         .calendar-modal .ant-modal-content {\n//           border-radius: 12px;\n//           overflow: hidden;\n//         }\n        \n//         .calendar-modal .ant-modal-header {\n//           border-bottom: none;\n//           padding-bottom: 0;\n//         }\n        \n//         .calendar-modal .ant-modal-body {\n//           padding: 0;\n//         }\n        \n//         .calendar-modal .ant-card {\n//           border-radius: 8px;\n//         }\n        \n//         .calendar-modal .ant-card-small > .ant-card-body {\n//           padding: 12px 16px;\n//         }\n        \n//         @media (max-width: 768px) {\n//           .calendar-modal {\n//             width: 95% !important;\n//             max-width: 100%;\n//           }\n//         }\n//       `}</style>\n//     </div>\n//   );\n// };\n\n// export default Calendar2;\n\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { ImArrowUpRight2 } from \"react-icons/im\";\nimport { FaAngleLeft, FaAngleRight } from \"react-icons/fa6\";\nimport dayjs from 'dayjs';\nimport { Modal, Card, Tag, Divider, Empty, Avatar, Space, Typography, Badge, Tooltip, Button } from 'antd';\nimport {\n  CalendarOutlined,\n  TeamOutlined,\n  EnvironmentOutlined,\n  TrophyOutlined,\n  UserOutlined,\n  CloseOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\n\nconst { Text, Title } = Typography;\n\nconst Calendar2 = ({ combinedData, currentDate, prevMonth, nextMonth, companyDashboardData, onAddEvent }) => {\n  const [selectedDate, setSelectedDate] = useState('');\n  const [hoveredDate, setHoveredDate] = useState(null);\n  const [isScrolling, setIsScrolling] = useState(false);\n  const modalRef = useRef(null);\n  const calendarRef = useRef(null);\n\n  // Array to mark specific Saturdays (1-5) as off days\n  const offSaturdays = [2, 4]; // This can be made dynamic later\n\n  // Get calendar date calculations\n  const year = currentDate?.getFullYear();\n  const month = currentDate?.getMonth();\n  const daysInMonth = new Date(year, month + 1, 0).getDate();\n  const firstDayOfMonth = new Date(year, month, 1).getDay();\n  const prevMonthDays = new Date(year, month, 0).getDate();\n  \n  // Calculate days to display\n  const prevMonthVisibleDays = Array.from({ length: firstDayOfMonth }, (_, i) => prevMonthDays - firstDayOfMonth + i + 1);\n  const currentMonthDays = Array.from({ length: daysInMonth }, (_, i) => i + 1);\n  const nextMonthVisibleDays = Array.from({ length: 42 - (prevMonthVisibleDays.length + currentMonthDays.length) }, (_, i) => i + 1);\n\n  // Check if a date is a Sunday\n  const isSunday = (day) => {\n    const date = new Date(year, month, day);\n    return date.getDay() === 0;\n  };\n\n  // Check if a date is a Saturday marked as off day\n  const isOffSaturday = (day) => {\n    const date = new Date(year, month, day);\n    // if (date.getDay() === 6) { // Saturday\n    //   const weekOfMonth = Math.ceil(day / 7);\n    //   return offSaturdays.includes(weekOfMonth);\n    // }\n    return false;\n  };\n\n  // Handle date selection\n  const handleDateClick = (day, isCurrentMonth = true) => {\n    if (!isCurrentMonth) return;\n    \n    const date = dayjs(`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`).format('YYYY-MM-DD');\n    setSelectedDate(date);\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (modalRef.current && !modalRef.current.contains(event.target)) {\n        setSelectedDate('');\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  useEffect(() => {\n    if (selectedDate) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = 'auto';\n    }\n    return () => {\n      document.body.style.overflow = 'auto';\n    };\n  }, [selectedDate]);\n\n  const hasEvents = (day) => {\n    const date = dayjs(`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`).format('YYYY-MM-DD');\n    return combinedData.some(item => item.date === date);\n  };\n\n  const formattedMonth = String(month + 1).padStart(2, '0');\n  const formattedYear = String(year);\n\n  const eventCount = (companyDashboardData?.eventData || []).filter(event => {\n    const eventDate = dayjs(event.startDate);\n    return eventDate.format('YYYY') === formattedYear && eventDate.format('MM') === formattedMonth;\n  }).length;\n\n  const holidayCount = (companyDashboardData?.holidayData || []).filter(holiday => {\n    const holidayDate = dayjs(holiday.date);\n    return holidayDate.format('YYYY') === formattedYear && holidayDate.format('MM') === formattedMonth;\n  }).length;\n\n  return (\n    <div className=\"w-full h-full relative bg-white rounded-xl p-4 shadow-sm\" ref={calendarRef}>\n      <div className=\"flex justify-between items-center mb-4\">\n        <Title level={4} className=\"!text-header !mb-0\">Calendar</Title>\n        <div className=\"flex items-center gap-2\">\n          <Text className=\"text-base font-medium text-gray-800\">\n            {currentDate?.toLocaleString('default', { month: 'long' })} {year}\n          </Text>\n          <div className=\"flex gap-1\">\n            <Tooltip placement=\"topLeft\" title=\"Previous month\">\n              <Button \n                shape=\"circle\" \n                icon={<FaAngleLeft size={14} />} \n                onClick={prevMonth} \n                size=\"small\"\n                className=\"flex items-center justify-center\"\n              />\n            </Tooltip>\n            <Tooltip placement=\"topLeft\" title=\"Next month\">\n              <Button \n                shape=\"circle\" \n                icon={<FaAngleRight size={14} />} \n                onClick={nextMonth} \n                size=\"small\"\n                className=\"flex items-center justify-center\"\n              />\n            </Tooltip>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-7 gap-1 mb-4\">\n        {['S', 'M', 'T', 'W', 'T', 'F', 'S'].map(day => (\n          <div key={day} className=\"text-center font-medium text-sm text-gray-500 py-1\">\n            {day}\n          </div>\n        ))}\n\n        {prevMonthVisibleDays.map(day => (\n          <div \n            key={`prev-${day}`} \n            className=\"h-10 w-10 flex items-center justify-center text-sm text-gray-300 cursor-default\"\n          >\n            {day}\n          </div>\n        ))}\n\n        {currentMonthDays.map(day => {\n          const date = dayjs(`${year}-${String(month + 1).padStart(2, '0')}-${String(day).padStart(2, '0')}`).format('YYYY-MM-DD');\n          const isToday = date === dayjs().format('YYYY-MM-DD');\n          const hasData = combinedData.some(item => item.date === date);\n          const sunday = isSunday(day);\n          const offSaturday = isOffSaturday(day);\n          \n          return (\n            <Tooltip \n              placement=\"topLeft\"  \n              key={day} \n              title={\n                sunday ? \"Sunday\" : \n                offSaturday ? \"Off Saturday\" : \n                hasData ? `${combinedData.find(d => d.date === date)?.events?.length || 0} events, ${combinedData.find(d => d.date === date)?.holidays?.length || 0} holidays` : null\n              }\n            >\n              <div \n                className={`relative h-8 w-8 mx-auto flex items-center justify-center text-sm rounded-full transition-all duration-200\n                  ${isToday ? 'border-2 border-blue-500' : ''}\n                  ${hasData ? 'bg-blue-50 text-blue-600 font-medium' : ''}\n                  ${sunday ? 'bg-red-50 text-red-500' : ''}\n                  ${offSaturday ? 'bg-orange-50 text-orange-500' : ''}\n                  ${!hasData && !sunday && !offSaturday ? 'text-gray-700' : ''}\n                  ${hoveredDate === date ? 'scale-110 shadow-md' : 'hover:bg-gray-100 cursor-pointer'}\n                `}\n                onClick={() => handleDateClick(day)}\n                onMouseEnter={() => setHoveredDate(date)}\n                onMouseLeave={() => setHoveredDate(null)}\n              >\n                {day}\n                {/* {hasData && (\n                  <div className=\"absolute -bottom-1 flex gap-1\">\n                    {combinedData.find(d => d.date === date)?.events?.length > 0 && (\n                      <span className=\"w-1 h-1 rounded-full bg-blue-500\"></span>\n                    )}\n                    {combinedData.find(d => d.date === date)?.holidays?.length > 0 && (\n                      <span className=\"w-1 h-1 rounded-full bg-yellow-500\"></span>\n                    )}\n                  </div>\n                )}\n                {(sunday || offSaturday) && !hasData && (\n                  <div className=\"absolute -bottom-1 flex gap-1\">\n                    <span className={`w-1 h-1 rounded-full ${sunday ? 'bg-red-500' : 'bg-orange-500'}`}></span>\n                  </div>\n                )} */}\n              </div>\n            </Tooltip>\n          );\n        })}\n\n        {nextMonthVisibleDays.map(day => (\n          <div \n            key={`next-${day}`} \n            className=\"h-10 w-10 flex items-center justify-center text-sm text-gray-300 cursor-default\"\n          >\n            {day}\n          </div>\n        ))}\n      </div>\n\n      {/* Stats Section */}\n      <div className=\"grid grid-cols-2 gap-3 mt-4\">\n        <div className=\"bg-blue-50 rounded-lg p-3 flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-blue-500\"></div>\n            <Text className=\"text-sm\">Events</Text>\n          </div>\n          <Text strong className=\"text-sm\">{eventCount}</Text>\n        </div>\n        <div className=\"bg-yellow-50 rounded-sm p-3 flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <div className=\"w-3 h-3 rounded-full bg-yellow-500\"></div>\n            <Text className=\"text-sm\">Holidays</Text>\n          </div>\n          <Text strong className=\"text-sm\">{holidayCount}</Text>\n        </div>\n      </div>\n\n      {/* Legend Section */}\n      {/* <div className=\"mt-4 flex flex-wrap gap-2\">\n        <div className=\"flex items-center gap-1 text-xs\">\n          <span className=\"w-3 h-3 rounded-full bg-red-500\"></span>\n          <span>Sunday</span>\n        </div>\n        <div className=\"flex items-center gap-1 text-xs\">\n          <span className=\"w-3 h-3 rounded-full bg-orange-500\"></span>\n          <span>Off Saturday</span>\n        </div>\n        <div className=\"flex items-center gap-1 text-xs\">\n          <span className=\"w-3 h-3 rounded-full bg-blue-500\"></span>\n          <span>Event</span>\n        </div>\n        <div className=\"flex items-center gap-1 text-xs\">\n          <span className=\"w-3 h-3 rounded-full bg-yellow-500\"></span>\n          <span>Holiday</span>\n        </div>\n      </div> */}\n\n      {/* Event/Holiday Modal */}\n        {/* Event/Holiday Modal */}\n        <Modal\n        title={null}\n        open={!!selectedDate}\n        onCancel={() => setSelectedDate('')}\n        footer={null}\n        width={800}\n        closeIcon={<CloseOutlined className=\"text-gray-500\" />}\n        className=\"calendar-modal\"\n        bodyStyle={{ padding: 0 }}\n      >\n        <div ref={modalRef} className=\"p-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <Title level={4} className=\"!mb-0\">\n              {dayjs(selectedDate).format('MMMM D, YYYY')}\n            </Title>\n            \n          </div>\n\n          {combinedData?.find(data => data?.date === selectedDate) ? (\n            <div className=\"space-y-6\">\n              {/* Events Section */}\n              <div>\n                <Divider orientation=\"left\" className=\"!text-base !font-medium !mb-4\">\n                  <Space>\n                    <CalendarOutlined style={{ color: '#1890ff' }} />\n                    <Text>Events</Text>\n                    <Badge \n                      count={combinedData.find(data => data.date === selectedDate)?.events?.length || 0} \n                      color=\"#1890ff\" \n                      className=\"ml-2\" \n                    />\n                  </Space>\n                </Divider>\n\n                {combinedData.find(data => data.date === selectedDate)?.events?.length > 0 ? (\n                  <div className=\"grid grid-cols-1 gap-3\">\n                    {combinedData.find(data => data.date === selectedDate).events.map((event) => (\n                      <Card\n                        key={event.id}\n                        className=\"hover:shadow-md transition-shadow\"\n                        size=\"small\"\n                      >\n                        <div className=\"space-y-2\">\n                          <div className=\"flex justify-between items-start\">\n                            <Text strong className=\"text-base\">{event.title}</Text>\n                            {event.time && (\n                              <Tag color=\"blue\">{event.time}</Tag>\n                            )}\n                          </div>\n                          \n                          {event.description && (\n                            <Text type=\"secondary\" className=\"block\">\n                              {event.description}\n                            </Text>\n                          )}\n                          \n                          {event.location && (\n                            <div className=\"flex items-center text-sm text-gray-600\">\n                              <EnvironmentOutlined className=\"mr-1\" />\n                              <Text>{event.location}</Text>\n                            </div>\n                          )}\n                          \n                          {event.attendees?.length > 0 && (\n                            <>\n                              <Divider dashed className=\"!my-2\" />\n                              <div className=\"space-y-2\">\n                                <Text type=\"secondary\" className=\"flex items-center text-sm\">\n                                  <TeamOutlined className=\"mr-1\" />\n                                  Attendees ({event.attendees.length})\n                                </Text>\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {event.attendees.map(attendee => (\n                                    <Tooltip placement=\"topLeft\"  \n                                      key={attendee.email} \n                                      title={`${attendee.name} (${attendee.status})`}\n                                    >\n                                      <Badge \n                                        dot \n                                        color={attendee.status === 'confirmed' ? 'green' : 'orange'}\n                                        offset={[-5, 5]}\n                                      >\n                                        <Avatar \n                                          size=\"small\" \n                                          src={attendee.avatar} \n                                          icon={<UserOutlined />}\n                                          className=\"cursor-pointer\"\n                                        />\n                                      </Badge>\n                                    </Tooltip>\n                                  ))}\n                                </div>\n                              </div>\n                            </>\n                          )}\n                        </div>\n                      </Card>\n                    ))}\n                  </div>\n                ) : (\n                  <Empty\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\n                    description=\"No events scheduled\"\n                    className=\"py-8\"\n                  />\n                )}\n              </div>\n\n              {/* Holidays Section */}\n              <div>\n                <Divider orientation=\"left\" className=\"!text-base !font-medium !mb-4\">\n                  <Space>\n                    <TrophyOutlined style={{ color: '#faad14' }} />\n                    <Text>Holidays</Text>\n                    <Badge \n                      count={combinedData.find(data => data.date === selectedDate)?.holidays?.length || 0} \n                      color=\"#faad14\" \n                      className=\"ml-2\" \n                    />\n                  </Space>\n                </Divider>\n\n                {combinedData.find(data => data.date === selectedDate)?.holidays?.length > 0 ? (\n                  <div className=\"grid grid-cols-1 gap-3\">\n                    {combinedData.find(data => data.date === selectedDate).holidays.map((holiday) => (\n                      <Card\n                        key={holiday.id}\n                        className=\"border-l-4 border-yellow-400 hover:shadow-md transition-shadow\"\n                        size=\"small\"\n                      >\n                        <div className=\"flex items-start gap-3\">\n                          <Avatar \n                            icon={<TrophyOutlined />} \n                            style={{ backgroundColor: '#faad14' }} \n                            className=\"mt-1\"\n                          />\n                          <div>\n                            <Text strong className=\"block\">{holiday.name}</Text>\n                            {holiday.description && (\n                              <Text type=\"secondary\" className=\"text-sm\">\n                                {holiday.description}\n                              </Text>\n                            )}\n                          </div>\n                        </div>\n                      </Card>\n                    ))}\n                  </div>\n                ) : (\n                  <Empty\n                    image={Empty.PRESENTED_IMAGE_SIMPLE}\n                    description=\"No holidays\"\n                    className=\"py-8\"\n                  />\n                )}\n              </div>\n            </div>\n          ) : (\n            <Empty\n              description={\n                <div className=\"space-y-4 py-8\">\n                  <Text className=\"block\">No events or holidays on this day</Text>\n                 \n                </div>\n              }\n            />\n          )}\n        </div>\n      </Modal>\n\n      {/* Custom Styles */}\n      <style jsx global>{`\n        .calendar-modal .ant-modal-content {\n          border-radius: 12px;\n          overflow: hidden;\n        }\n        \n        .calendar-modal .ant-modal-header {\n          border-bottom: none;\n          padding-bottom: 0;\n        }\n        \n        .calendar-modal .ant-modal-body {\n          padding: 0;\n        }\n        \n        .calendar-modal .ant-card {\n          border-radius: 8px;\n        }\n        \n        .calendar-modal .ant-card-small > .ant-card-body {\n          padding: 12px 16px;\n        }\n        \n        @media (max-width: 768px) {\n          .calendar-modal {\n            width: 95% !important;\n            max-width: 100%;\n          }\n        }\n      `}</style>\n      {/* ... (keep the existing modal code unchanged) ... */}\n    </div>\n  );\n};\n\nexport default Calendar2;","import { useForm } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { CreateTodoListAction } from \"./TodoTypeFeatures/_TodoType_reducers\";\nimport { Modal } from \"antd\";\n\n\nconst CreateTodoList = ({isOpen, handleClose ,fetchList }) => {\n  const { loading: AssetTypeloading } = useSelector(\n    (state) => state.AssetType\n  );\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n    reset\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      \"title\": data?.title,\n      \"message\": data?.message,\n    };\n    dispatch(CreateTodoListAction(finalPayload)).then((data) => {\n      if (!data.error) {\n        fetchList()\n        reset()\n        handleClose()\n      }\n    });\n  };\n\n\n  return (\n    <Modal\n      visible={isOpen}\n      onCancel={() => {\n        handleClose()\n        reset()\n      }}\n      footer={null}\n      title=\"Create To Do\"\n      width={600}\n      height={400}\n      className=\"antmodalclassName\"\n    >\n\n\n      <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n\n\n          {/* Leave Type Name */}\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>Title <span className=\"text-red-600\">*</span></label>\n            <input\n              type=\"text\"\n              {...register(\"title\", {\n                required: \"Title  is required\",\n              })}\n              className={`${inputClassName} ${errors.title ? \"border-[1px] \" : \"border-gray-300\"}`}\n              placeholder=\"Enter Title \"\n            />\n            {errors.title && (\n              <p className=\"text-red-500 text-sm\">{errors.title.message}</p>\n            )}\n          </div>\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>Message <span className=\"text-red-600\">*</span></label>\n            <input\n              type=\"text\"\n              {...register(\"message\", {\n                required: \"Message is required\",\n              })}\n              className={`${inputClassName} ${errors.message ? \"border-[1px] \" : \"border-gray-300\"}`}\n              placeholder=\"Enter Message\"\n            />\n            {errors.message && (\n              <p className=\"text-red-500 text-sm\">{errors.message.message}</p>\n            )}\n          </div>\n\n        </div>\n\n        {/* Submit Button */}\n        <div className=\"flex justify-end\">\n          <button\n            type=\"submit\"\n            disabled={AssetTypeloading}\n            className={`${AssetTypeloading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 mt-3 rounded`}\n          >\n            {AssetTypeloading ? <Loader /> : 'Submit'}\n          </button>\n        </div>\n      </form>\n    </Modal>\n\n  );\n};\n\nexport default CreateTodoList;\n","import { Controller, useForm } from \"react-hook-form\";\nimport { inputClassName, inputLabelClassName } from \"../../../constents/global\";\nimport { AutoComplete, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { countrySearch } from \"../../global/address/country/CountryFeatures/_country_reducers\";\nimport { useEffect } from \"react\";\nimport { updateClientFunc } from \"./clientFeatures/_client_reducers\";\nimport CustomMobileCodePicker from \"../../../global_layouts/MobileCode/MobileCodePicker\";\n\nfunction ContactPerson({ clientData ,fetchData }) {\n    const {\n        register,\n        handleSubmit,\n        setValue,\n        control,\n        formState: { errors },\n    } = useForm();\n    const { countryListData } = useSelector((state) => state.country);\n    const dispatch = useDispatch()\n    const onSubmit = (data) => {\n\n        const finalPayload = {\n            ...clientData?.data,\n            clientProfile: {\n                ...clientData?.data?.clientProfile,\n                \"contactInfo\": {\n                    \"name\": data?.name,\n                    \"email\": data?.email,\n                    \"mobile\": {\n                        \"code\": data?.code,\n                        \"number\": data?.number\n                    },\n                    \"designation\": data?.designation\n                }\n            }\n\n        }\n        dispatch(updateClientFunc(finalPayload)).then((res)=>{\n            if(!res?.error){\n                fetchData()\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (clientData?.data?.clientProfile?.contactInfo) {\n            setValue(\"name\", clientData?.data?.clientProfile?.contactInfo?.name)\n            setValue(\"email\", clientData?.data?.clientProfile?.contactInfo?.email)\n            setValue(\"code\", clientData?.data?.clientProfile?.contactInfo?.mobile?.code)\n            setValue(\"number\", clientData?.data?.clientProfile?.contactInfo?.mobile?.number)\n            setValue(\"designation\", clientData?.data?.clientProfile?.contactInfo?.designation)\n        }\n    }, [clientData])\n\n    return (\n        <form autoComplete=\"off\" className=\"\" onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 md:my-2\">\n                <div className=\"\">\n                    <label className={`${inputLabelClassName}`}>\n                        Name <span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        {...register(\"name\", {\n                            required: \"Name is required\",\n                        })}\n                        className={`placeholder: ${inputClassName} ${errors.name\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        placeholder=\"Enter Name\"\n                    />\n                    {errors.name && (\n                        <p className=\"text-red-500 text-sm\">\n                            {errors.name.message}\n                        </p>\n                    )}\n                </div>\n                <div className=\"\">\n                    <label className={`${inputLabelClassName}`}>\n                        Email <span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        {...register(\"email\", {\n                            required: \"Email is required\",\n                            pattern: {\n                                value:\n                                    /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                message: \"Please enter a valid email address\",\n                            },\n                        })}\n                        className={` ${inputClassName} ${errors.email ? \"border-[1px] \" : \"border-gray-300\"\n                            }`}\n                        placeholder=\"Enter Email\"\n                    />\n                    {errors.email && (\n                        <p className=\"text-red-500 text-sm\">\n                            {errors.email.message}\n                        </p>\n                    )}\n                </div>\n                <div className=\"\">\n                    <label className={`${inputLabelClassName}`}>\n                        designation <span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                        type=\"designation\"\n                        {...register(\"designation\", {\n                            required: \"designation is required\",\n                        })}\n                        className={` ${inputClassName} ${errors.designation ? \"border-[1px] \" : \"border-gray-300\"\n                            }`}\n                        placeholder=\"Enter designation\"\n                    />\n                    {errors.designation && (\n                        <p className=\"text-red-500 text-sm\">\n                            {errors.designation.message}\n                        </p>\n                    )}\n                </div>\n                <div className=\"flex gap-3\">\n                    <div className=\"w-[150px]\">\n                        <label className={`${inputLabelClassName}`}>\n                            code<span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                            control={control}\n                            name=\"code\"\n                            rules={{ required: \"code is required\" }}\n                            render={({ field }) => (\n                                <CustomMobileCodePicker\n                                field={field}\n                                  errors={errors} \n                                />\n                            )}\n                        />\n                        {errors[`code`] && (\n                            <p className=\"text-red-500 text-sm\">\n                                {errors[`code`].message}\n                            </p>\n                        )}\n                    </div>\n                    <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                            Mobile No<span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                            type=\"number\"\n                            {...register(`number`, {\n                                required: \"Mobile No is required\",\n                                minLength: {\n                                    value: 10,\n                                    message: \"Must be exactly 10 digits\",\n                                },\n                                maxLength: {\n                                    value: 10,\n                                    message: \"Must be exactly 10 digits\",\n                                },\n                            })}\n                            className={` ${inputClassName} ${errors[`number`]\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                            placeholder=\"Enter Mobile No\"\n                            maxLength={10}\n                            onInput={(e) => {\n                                if (e.target.value.length > 10) {\n                                    e.target.value = e.target.value.slice(0, 10);\n                                }\n                            }}\n                        />\n                        {errors[`number`] && (\n                            <p className=\"text-red-500 text-sm\">\n                                {errors[`number`].message}\n                            </p>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex justify-end \">\n                <button\n                    type=\"submit\"\n                    className=\"bg-header text-white p-2 px-4 rounded mt-4\"\n                >\n                    Submit\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport default ContactPerson\n","import React, { useEffect } from 'react';\nimport { Controller, useForm, useWatch } from 'react-hook-form';\nimport moment from 'moment';\nimport { employeSearch } from '../../employeManagement/employeFeatures/_employe_reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName, inputLabelClassNameReactSelect } from '../../../constents/global';\nimport { companySearch } from '../../company/companyManagement/companyFeatures/_company_reducers';\nimport { deptSearch } from '../../department/departmentFeatures/_department_reducers';\nimport { branchSearch } from '../../branch/branchManagement/branchFeatures/_branch_reducers';\nimport { attendancegCreate, getattendancegDetails, updateattendanceg } from './AttendanceFeatures/_attendance_reducers';\nimport { useNavigate } from 'react-router-dom';\nimport ReactSelect from \"react-select\";\nimport Swal from 'sweetalert2';\nimport CustomDatePicker from '../../../global_layouts/DatePicker/CustomDatePicker';\nimport dayjs from 'dayjs';\nimport { Modal, Select, TimePicker } from 'antd';\nimport Loader from '../../../global_layouts/Loader';\nimport ListLoader from '../../../global_layouts/ListLoader';\n\nconst UpdateManualAttendanceModal = ({ isOpen, onClose, fetchattendanceListData, updateId }) => {\n\n\n\n  const { register, handleSubmit,watch , control, setValue, formState: { errors } } = useForm({\n    defaultValues: {\n      employeeName: '',\n      date: '',\n      checkInTime: '',\n      checkOutTime: null,\n      reason: '',\n      errors: {},\n    }\n  });\n  const { loading: atentdanceLoading } = useSelector(\n    (state) => state.attendance\n  );\n  const navigate = useNavigate();\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n\n  const departmentId = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n    defaultValue: \"\",\n  });\n  const designationId = useWatch({\n    control,\n    name: \"PDDesignationId\",\n    defaultValue: \"\",\n  });\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const dispatch = useDispatch();\n  const { branchList, branchListLoading } = useSelector(\n    (state) => state.branch\n  );\n  const { companyList, companyListLoading } = useSelector((state) => state.company);\n  const { employeList } = useSelector(\n    (state) => state.employe\n  );\n  const { attendancegDetailsData } = useSelector(\n    (state) => state.attendance\n  );\n\n  useEffect(() => {\n    if (attendancegDetailsData) {\n\n\n      setValue('companyId', attendancegDetailsData?.companyId)\n      setValue('PDBranchId', attendancegDetailsData?.branchId)\n      setValue('directorId', attendancegDetailsData?.directorId)\n      setValue('date', dayjs(attendancegDetailsData?.attendanceDate))\n      setValue('checkInTime',attendancegDetailsData?.checkInTime ?  dayjs(attendancegDetailsData?.checkInTime) : null)\n      setValue('checkOutTime', attendancegDetailsData?.checkOutTime ? dayjs(attendancegDetailsData?.checkOutTime) : null)\n      const selectedEmployee = employeList?.find(employee => employee._id === attendancegDetailsData?.employeId);\n      if (selectedEmployee) {\n        setValue('employee', {\n          value: selectedEmployee._id,\n          label: selectedEmployee.fullName,\n        });\n      }\n    }\n  }, [attendancegDetailsData])\n\n  const onFormSubmit = (data) => {\n    const reqData = {\n      _id: updateId,\n      employeId: attendancegDetailsData?.employeId,\n      companyId: attendancegDetailsData?.companyId,\n      branchId: attendancegDetailsData?.branchId,\n      directorId: attendancegDetailsData?.directorId,\n      attendanceDate: dayjs(data.checkInTime).format('YYYY-MM-DD'),\n     checkInTime: data?.checkInTime ? data?.checkInTime : null,\n    checkOutTime: data.checkOutTime ? data?.checkOutTime : null,\n      method: \"hr_portal\",\n      reason: data?.reason,\n      employeeName: data?.employeeName\n    };\n\n    dispatch(updateattendanceg(reqData)).then((response) => {\n      if (!response.error) {\n        // Show success alert using SweetAlert2\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Attendance record has been created successfully.',\n          confirmButtonText: 'OK',\n          customClass: {\n            confirmButton: 'bg-header text-white hover:bg-[#063156]',\n          },\n        });\n\n        // Call the function to fetch attendance data and close the modal\n        fetchattendanceListData();\n        onClose();\n      }\n      // else {\n\n      //   // If there's an error, show an error alert (optional)\n      //   Swal.fire({\n      //     icon: 'error',\n      //     title: 'Error!',\n      //     text: 'There was an issue with the API call. Please try again.',\n      //     confirmButtonText: 'OK',\n      //     customClass: {\n      //       confirmButton: 'bg-[#FF0000] text-white hover:bg-[#d9534f]',\n      //     },\n      //   });\n      // }\n    });\n  };\n\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(companySearch({ text: \"\", sort: true, status: true, isPagination: false }))\n    }\n\n\n\n  }, [])\n\n  useEffect(() => {\n    if (userInfoglobal?.userType !== \"admin\" || companyId) {\n      setValue(\"PDDepartmentId\", \"\");\n      setValue(\"PDDesignationId\", \"\");\n      setValue(\"PDBranchId\", \"\");\n      dispatch(deptSearch({\n        companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        text: \"\", sort: true, status: true, isPagination: false\n      }))\n      dispatch(branchSearch({\n        companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        text: \"\", sort: true, status: true, isPagination: false\n      }))\n    }\n  }, [companyId])\n\n\n\n  useEffect(() => {\n    if ((companyId || userInfoglobal?.userType !== \"admin\") && (branchId || userInfoglobal?.userType !== \"companBranch\" || userInfoglobal?.userType === \"employee\")) {\n      fetchEmployeListData()\n    }\n  }, [companyId, branchId, departmentId, designationId])\n\n  const fetchEmployeListData = () => {\n    const reqPayload = {\n      text: \"\",\n      status: true,\n      sort: true,\n      isTL: \"\",\n      isHR: \"\",\n      isPagination: false,\n      departmentId: '',\n      designationId: '',\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n    };\n    dispatch(employeSearch(reqPayload)).then((response) => {\n      !response.error && dispatch(getattendancegDetails({ _id: updateId }))\n    });\n  };\n  if (!isOpen) return null;\n  return (\n      <Modal\n          visible={isOpen}\n          onCancel={() => {\n            onClose();\n            \n          }}\n          footer={null}\n           className=\"antmodalclassName\"\n          title=\"Manual Attendence\"\n          width={600}\n          height={400}\n        >\n    \n        <div>\n          <form autoComplete=\"off\" onSubmit={handleSubmit(onFormSubmit)} className=\"\">\n            <div className=\"grid grid-col-1 md:grid-cols-2 gap-4\">\n              {userInfoglobal?.userType === \"admin\" && (\n                <div>\n                  <label className={`${inputLabelClassName}`}>Company < span className=\"text-red-600\" >* </span></label>\n                  {/* <select\n                {...register(\"PDCompanyId\", { required: \"Company is required\" })}\n                className={`${inputClassName} ${errors.PDCompanyId ? \"border-[1px] \" : \"border-gray-300\"}`}\n              >\n                <option value=\"\">Select Company</option>\n                {companyList?.map((type) => (\n                  <option key={type?._id} value={type?._id}>\n                    {type?.fullName}\n                  </option>\n                ))}\n              </select> */}\n                  <Controller\n                    name=\"PDCompanyId\"\n                    control={control}\n                    rules={{\n                      required: \"Company is required\",\n                    }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n\n                        placeholder=\"Select Company\"\n                        showSearch\n\n                      >\n                        <Select.Option value=\"\">Select Company</Select.Option>\n                        {companyListLoading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                          (companyList\n                            ?.map((element) => (\n                              <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                            )))\n                        }\n                      </Select>\n                    )}\n                  />\n                  {errors.PDCompanyId && <p className=\"text-red-500 text-sm\">{errors.PDCompanyId.message}</p>}\n                </div>\n              )}\n\n              {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && (\n                <div>\n                  <label className={`${inputLabelClassName}`}>Branch < span className=\"text-red-600\" >* </span></label>\n                  {/* <select\n                {...register(\"PDBranchId\", { required: \"Branch is required\" })}\n                className={`${inputClassName} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n              >\n                <option value=\"\">Select Branch</option>\n                {branchList?.map((type) => (\n                  <option key={type?._id} value={type?._id}>\n                    {type?.fullName}\n                  </option>\n                ))}\n              </select> */}\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    rules={{\n                      required: \"Branch is required\",\n                    }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"} z-[99999]`}\n\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        getPopupContainer={(trigger) => trigger.parentNode}\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchListLoading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                          (branchList\n                            ?.map((element) => (\n                              <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                            )))\n                        }\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n                </div>\n              )}\n\n              <div className=\"w-full\">\n                <label className={`${inputLabelClassName}`}>Employee < span className=\"text-red-600\" >* </span></label>\n                <Controller\n                  name=\"employee\"\n                  control={control}\n                  rules={{ required: \"Employee is required\" }}\n                  render={({ field }) => (\n                    <ReactSelect\n                      {...field}\n                      options={employeList?.map((employee) => ({\n                        value: employee?._id,\n                        label: employee?.fullName,\n                      }))}\n                      isDisabled={true}\n                      classNamePrefix=\"react-select\"\n                      className={`${inputLabelClassNameReactSelect} ${errors.employee ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      placeholder=\"Select Employee\"\n                    />\n                  )}\n                />\n                {errors.employee && <p className=\"text-red-500 text-sm\">{errors.employee.message}</p>}\n              </div>\n\n              <div>\n              <label className={`${inputLabelClassName}`}>\n                Check-in Time <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"checkInTime\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    field={field}\n                    showTime={true}\n                    format=\"DD/MM/YYYY HH:mm\"\n                    errors={errors}\n                   disabledDate={(current) => {\n                                        const today = moment();\n                                        const currentDate = today.date(); // Day of month: 1, 2, 3, ...\n                                        const isFirstThreeDays = currentDate <= 3;\n                                      \n                                        const startOfPrevMonth = today.clone().subtract(1, 'month').startOf('month');\n                                        const endOfPrevMonth = today.clone().subtract(1, 'month').endOf('month');\n                                      \n                                        const isFromPrevMonth = current.isSame(startOfPrevMonth, 'month');\n                                        const isFromCurrentMonth = current.isSame(today, 'month');\n                                        const isAfterToday = current.isAfter(today, 'day');\n                                      \n                                      \n                                        if (isFirstThreeDays) {\n                                          return (\n                                            isAfterToday ||\n                                            (!isFromPrevMonth && !isFromCurrentMonth)\n                                          );\n                                        }\n                                      \n                                       \n                                        return (\n                                          isAfterToday ||\n                                          !isFromCurrentMonth\n                                        );\n                                      }}\n                  />\n                )}\n              />\n              {errors.checkInTime && (\n                <p className=\"text-red-500 text-sm\">Check-in time is required</p>\n              )}\n            </div>\n\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Check-out Time <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"checkOutTime\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <CustomDatePicker\n                  field={field}\n                  showTime={true}\n                  format=\"DD/MM/YYYY HH:mm\"\n                  errors={errors}\n                  disabledDate={(current) => {\n                    const selectedDate = watch('checkInTime'); // should be a dayjs object or parse it\n                    if (!selectedDate) return true; // Disable all if no date selected\n                \n                    const selected = dayjs(selectedDate).startOf('day');\n                    const oneExyytaDay = selected.add(1, 'day');\n                \n                    return (\n                      !current.isSame(selected, 'day') &&\n                      !current.isSame(oneExyytaDay, 'day')\n                    );\n                  }}\n                />\n                )}\n              />\n              {errors.checkOutTime && (\n                <p className=\"text-red-500 text-sm\">Check-out time is required</p>\n              )}\n            </div>\n            </div>\n\n            <div className=\"flex justify-end space-x-2 mt-4\">\n              <button\n                type=\"submit\"\n                disabled={atentdanceLoading}\n                className={`px-4 py-2 text-sm font-medium text-white ${atentdanceLoading ? \"bg-gray-400\" : 'bg-header hover:bg-[#063156]'} rounded-md `}\n              >\n                {atentdanceLoading ? <Loader /> : 'Submit'}\n              </button>\n            </div>\n          </form>\n        </div>\n   \n</Modal>\n  );\n};\n\nexport default UpdateManualAttendanceModal;\n"],"names":["_ref","content","setContent","closeEditModal","updateNotification","isNoticeOpen","modalRef","useRef","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","_jsx","_Fragment","children","className","concat","_jsxs","ref","onClick","FaTimes","size","value","onChange","e","handleSave","trim","Text","Typography","_combinedData$find","_combinedData$find$ev","_combinedData$find2","_combinedData$find2$h","_ref2","_companyDashboardData","_companyDashboardData2","_companyDashboardData3","_companyDashboardData4","_ref3","_companyDashboardData5","_companyDashboardData6","_companyDashboardData7","_companyDashboardData8","combinedData","currentDate","prevMonth","nextMonth","companyDashboardData","selectedDate","setSelectedDate","useState","getDaysInMonth","month","year","Date","getDate","getFullYear","getMonth","daysInMonth","firstDayOfMonth","getFirstDayOfMonth","getDay","prevMonthDays","prevMonthVisibleDays","Array","from","length","_","i","currentMonthDays","nextMonthVisibleDays","toLocaleString","FaAngleLeft","FaAngleRight","map","day","date","dayjs","String","padStart","format","some","item","handleDateClick","Modal","title","open","onCancel","footer","width","style","padding","find","data","Divider","orientation","Space","CalendarOutlined","color","strong","fontSize","events","_event$attendees","Card","hoverable","description","type","location","EnvironmentOutlined","attendees","dashed","TeamOutlined","attendee","Avatar","icon","UserOutlined","status","name","Tag","email","id","Empty","image","PRESENTED_IMAGE_SIMPLE","TrophyOutlined","holidays","holiday","backgroundColor","jsx","global","calender","eventData","holidayData","_sidebarListData$find","_sidebarListData$find2","_sidebarListData$find3","_sidebarListData$find4","_sidebarListData$find5","_sidebarListData$find6","_userDetailsData$leav","_userDetailsData$wfhR","_userDetailsData$birt","_userDetailsData$inAc","_userDetailsData$inAc2","_hrDashboardData$empl","_hrDashboardData$empl2","_hrDashboardData$empl3","_hrDashboardData$toda","_hrDashboardData$toda2","_hrDashboardData$toda3","_hrDashboardData$toda4","_hrDashboardData$toda5","_hrDashboardData$toda6","_hrDashboardData$appl","_hrDashboardData$appl2","_hrDashboardData$appl3","_hrDashboardData$appl4","_hrDashboardData$pend","_hrDashboardData$pend2","_hrDashboardData$visi","_hrDashboardData$visi2","sidebarListData","useSelector","state","dynamicSidebar","userInfoglobal","JSON","parse","localStorage","getItem","domainName","hrDashboardData","dashboard","dispatch","useDispatch","leaveRequest","setLeaveRequest","attendanceRequest","setAttendanceRequest","openJobPost","setOpenJobPost","navigate","useNavigate","fetchHrDashboard","dynamicSidebarSearch","companyId","userType","_id","isPagination","setCombinedData","setCurrentDate","startdateCalender","setStartDateCalender","moment","startOf","pendingAprrovals","setPendingAprrovals","body","classList","add","remove","endDateCalender","setEndDateCalender","endOf","userDetailsData","setuserDetailsdata","leaveData","birthdaydata","inActiveUserToday","inActiveEmployeeToday","wfhRequestData","todayOnLeave","todayBirthday","inActiveEmployeToday","todayWFHEmployes","groupedEvents","grouped","forEach","formattedDate","startDate","push","groupByDateForEvent","groupedHolidayData","groupByDateForHoliday","combined","Object","keys","eventDataForDate","holidayDataForDate","_hrDashboardData$bran","_hrDashboardData$bran2","_hrDashboardData$bran3","array","AttendanceArray","jobPostArray","branchEmployeLeavePending","_item$LeavePendingReq","LeavePendingReqData","leaveItem","_objectSpread","employeename","fullName","branchEmployeAttendance","_item$checkInEmployeL","checkInEmployeList","branchRecruitment","_item$jobopeningsData","jobopeningsData","jobItem","_jobItem$jobPosts","jobPosts","jobPostItem","hrDashboardFunc","branchId","departmentId","designationId","employeId","attendanceLimit","employeLimit","formattedLeaveRequest","pendingLeaveReq","img","employeProfileImage","employename","checkInTime","checkOutTime","endDate","subType","formatType","selectedAttendence","setSelectedAttendence","attendenceModal","setAttendenceModal","console","log","QUICK_ACTIONS","icons","FaMoneyBillWave","path","encrypt","slug","MdPayment","IoMdMan","RiComputerLine","FaHandPeace","AiOutlineInteraction","handleQuickActions","leaveList","imgUrl","process","includes","split","tooltip","todayWfhRequstData","profileImage","hasAttendanceMarked","handleApproval","attendanceStatus","then","error","updateLeaveRequestStatus","statuscashbook","handleRequestRejection","deleteattendanceg","UserDetails","IoIosMan","_sidebarListData$find7","MdArrowOutward","employeData","activeEmploye","FaCalendarAlt","_sidebarListData$find8","employeesOnLeaveCount","MdOutlineCoPresent","_sidebarListData$find9","todayAttendanceSummary","statusCounts","present","RiUserSearchFill","_sidebarListData$find0","absent","TodoList","Calendar2","newDate","setMonth","newdate","_sidebarListData$find1","approval","src","alt","shift","amount","Popconfirm","onConfirm","okText","cancelText","IoCheckmark","RxCross2","colSpan","_sidebarListData$find10","appliedApplication","_event$address","FaUser","address","designationName","applicationData","shortlistedApplication","upcommingInterview","rejectedApplication","element","index","IconComponent","_sidebarListData$find11","pendingAttendance","handleAttendenceEdit","FaEdit","_sidebarListData$find12","visitorlist","reason","NoticeBoard","UpdateManualAttendanceModal","isOpen","onClose","fetchattendanceListData","updateId","closeNoticeModal","fetchNoticeboard","newNotification","setNewNotification","IoClose","placeholder","handleCreate","createNoticeBoard","directorId","roleKey","message","_listNoticeBoardData$","_listNoticeBoardData$2","setIsNoticeOpen","isEditOpen","setIsEditOpen","listNoticeBoard","listNoticeBoardData","noticeBoard","editContent","setEditContent","editId","setEditId","AddNotification","EditNotification","updatedContent","_data$companyId","_data$branchId","updateNoticeBoard","openNoticeModal","FaPlus","docs","notification","createdBy","openEditModal","FaPenToSquare","RiDeleteBin5Line","deleteNotice","noticeId","deleteNoticeBoard","parentData","handleClose","fetchList","loading","AssetTypeloading","AssetType","register","handleSubmit","control","formState","errors","setValue","reset","useForm","visible","height","autoComplete","onSubmit","finalPayload","updateTodoList","inputLabelClassName","required","inputClassName","disabled","Loader","TodoItem","todo","onEdit","onDelete","onToggleComplete","handleCheckboxChange","newStatus","FaCheck","Tooltip","TodoSection","todos","filteredTodos","filter","TodoListData","todoList","createModal","setCreateModal","updateToDoList","setupdateToDoList","getToDoListListRequest","getTodoList","currentPage","pageSize","reqData","text","sort","handleDelete","Swal","showCancelButton","cancelButtonText","result","isConfirmed","deleteTodoData","handleToggleComplete","statusTodoList","Loader2","CreateTodoList","UpdateTodoList","Title","_combinedData$find3","_combinedData$find3$e","_combinedData$find4","_combinedData$find4$e","_combinedData$find5","_combinedData$find5$h","_combinedData$find6","_combinedData$find6$h","onAddEvent","hoveredDate","setHoveredDate","isScrolling","setIsScrolling","calendarRef","overflow","formattedMonth","formattedYear","eventCount","eventDate","holidayCount","holidayDate","level","placement","Button","shape","isToday","hasData","sunday","isSunday","offSaturday","isOffSaturday","d","arguments","undefined","onMouseEnter","onMouseLeave","closeIcon","CloseOutlined","bodyStyle","Badge","count","time","dot","offset","avatar","CreateTodoListAction","clientData","fetchData","countryListData","country","_clientData$data2","_clientData$data2$cli","_clientData$data3","_clientData$data3$cli","_clientData$data3$cli2","_clientData$data4","_clientData$data4$cli","_clientData$data4$cli2","_clientData$data5","_clientData$data5$cli","_clientData$data5$cli2","_clientData$data5$cli3","_clientData$data6","_clientData$data6$cli","_clientData$data6$cli2","_clientData$data6$cli3","_clientData$data7","_clientData$data7$cli","_clientData$data7$cli2","clientProfile","contactInfo","mobile","code","number","designation","_clientData$data","updateClientFunc","res","pattern","Controller","rules","render","field","CustomMobileCodePicker","minLength","maxLength","onInput","slice","watch","defaultValues","employeeName","atentdanceLoading","attendance","useWatch","defaultValue","branchList","branchListLoading","branch","companyList","companyListLoading","company","employeList","employe","attendancegDetailsData","attendanceDate","selectedEmployee","employee","label","companySearch","deptSearch","branchSearch","fetchEmployeListData","reqPayload","isTL","isHR","employeSearch","response","getattendancegDetails","method","updateattendanceg","confirmButtonText","customClass","confirmButton","Select","inputAntdSelectClassName","PDPlan","showSearch","Option","ListLoader","PDCompanyId","getPopupContainer","trigger","parentNode","PDBranchId","_ref4","ReactSelect","options","isDisabled","classNamePrefix","inputLabelClassNameReactSelect","_ref5","CustomDatePicker","showTime","disabledDate","today","isFirstThreeDays","startOfPrevMonth","clone","subtract","isFromPrevMonth","isSame","isFromCurrentMonth","isAfterToday","isAfter","_ref6","selected","oneExyytaDay"],"sourceRoot":""}