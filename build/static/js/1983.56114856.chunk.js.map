{"version":3,"file":"static/js/1983.56114856.chunk.js","mappings":"sgBA0CA,MAAM,YAAEA,GAAgBC,EAAAA,EAwgCxB,QAtgCA,WAAiC,IAADC,EAC9B,MAAM,QACJC,EACAC,WAAW,OAAEC,GAAQ,SACrBC,EAAQ,MACRC,IACEC,EAAAA,EAAAA,OAEE,YAAER,GAAgBC,EAAAA,EAClBQ,EAAQC,OAIPC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAEnCC,GAAWC,EAAAA,EAAAA,OACX,kBAAEC,EAAiB,sBAAEC,EAAqB,mBAAEC,IAChDC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,UAEzB,mBAAEC,EAAoBC,QAASC,IAAeL,EAAAA,EAAAA,IACjDC,GAAUA,EAAMK,YAEbC,GAAaC,EAAAA,EAAAA,IAAS,CAAExB,UAASyB,KAAM,aAAcC,aAAc,IACnEC,GAAWH,EAAAA,EAAAA,IAAS,CAAExB,UAASyB,KAAM,WAAYC,aAAc,KAE9DE,EAAqBC,IAA0BnB,EAAAA,EAAAA,UAAS,CAAC,IAE1D,aAAEoB,IAAiBd,EAAAA,EAAAA,IAAaC,GAAUA,EAAMc,WAChD,gBAAEC,EAAe,mBAAEC,IAAuBjB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMiB,cACvE,WAAEC,EAAYf,QAASgB,IAAsBpB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMoB,SAC1E,YAAEC,IAAgBtB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMsB,UAC9CC,EAAYC,IAAiB/B,EAAAA,EAAAA,UAAS,IACvCgC,EAAiBC,KAAKC,MAC1BC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAE7BC,GAAcC,KAAmBC,EAAAA,EAAAA,MAClCC,GAAUH,GAAaI,IAAI,WAC3B,iBAAEC,GAAgB,mBAAEC,KAAuBvC,EAAAA,EAAAA,IAC9CC,GAAUA,EAAMuC,WAEb,YAAEC,GAAW,iBAAEC,KAAqB1C,EAAAA,EAAAA,IACvCC,GAAUA,EAAM0C,UAEZC,GAAaC,KAAkBnD,EAAAA,EAAAA,UAAS,IACxCoD,GAAqBC,KAA0BrD,EAAAA,EAAAA,UAAS,KACzD,WAAEsD,KAAehD,EAAAA,EAAAA,IAAaC,GAAUA,EAAMgD,QAC9CC,IAAY1C,EAAAA,EAAAA,IAAS,CACzBxB,UACAyB,KAAM,cACNC,aAAc,KAEVyC,IAAW3C,EAAAA,EAAAA,IAAS,CACxBxB,UACAyB,KAAM,aACNC,aAAc,KAEV0C,IAAS5C,EAAAA,EAAAA,IAAS,CACtBxB,UACAyB,KAAM,SACNC,aAAc,KAGV2C,IAAqB7C,EAAAA,EAAAA,IAAS,CAClCxB,UACAyB,KAAM,qBACNC,aAAc,KAGV4C,IAAiB9C,EAAAA,EAAAA,IAAS,CAC9BxB,UACAyB,KAAM,iBACNC,aAAc,KAGVJ,IAAaE,EAAAA,EAAAA,IAAS,CAC1BxB,UACAyB,KAAM,aACNC,aAAc,KAGV6C,IAAY/C,EAAAA,EAAAA,IAAS,CACzBxB,UACAyB,KAAM,YACNC,aAAc,KAGV8C,IAAahD,EAAAA,EAAAA,IAAS,CAC1BxB,UACAyB,KAAM,SACNC,aAAc,KAIV+C,IAAOjD,EAAAA,EAAAA,IAAS,CACpBxB,UACAyB,KAAM,OACNC,aAAc0B,GAAU,CAACsB,MAAQA,OAAS,MAS5CC,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAQC,WAAW,KACvBd,GAAuBvB,IACtB,KAEH,MAAO,KACLsC,aAAaF,KAEd,CAACpC,KAqEJmC,EAAAA,EAAAA,WAAU,KACR,GAAY,SAATvB,GAAiB,CACpB,MAAM2B,EAAaL,MACbM,EAAWN,MACjBvE,EAAS,OAAQ,CAAC4E,EAAYC,GAE9B,GAEA,CAAC5B,KAnB4B6B,MAC7B,MAEMC,EAAiB,GACvB,IAAK,IAAIC,EAHS,KAGSA,GAFX,KAE4BA,IAC1CD,EAAeE,KAAK,GAADrC,OAAIoC,EAAI,KAAApC,OAAIoC,EAAO,KAgBnBF,GAAvB,MAmBMI,GAAuB,WAC3B,MAAO,CACLzB,YAAaA,GACbpD,SAAUA,EACV8E,WAAY,CACVC,KAAMzB,GACN0B,MAAM,EACNC,eAPkCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAQlCG,UAC+B,WAAf,OAAdnD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACZ5B,GAC6B,aAAf,OAAdxB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACA,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBqD,IACF,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgBmD,UACxBG,WAAY,GACZC,SAC+B,aAAf,OAAdvD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,WACe,WAAf,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,WACa,qBAAf,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACd3B,GAC6B,mBAAf,OAAdzB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACA,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBqD,IACF,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgBuD,SAExBC,OAAkB,QAAV9B,IAAoC,SAAVA,IAA4B,GAC9D+B,eAAgB9B,GAChB+B,gBAAiB,GACjBC,aAAc/E,GACdgF,cAAe,GACf3E,SAAUA,GAAYA,EAAW,KACjCJ,WAAYA,GAAcA,EAAa,KACvCgF,WAAYjC,GACZkC,YAAa,GACb,UAAahC,GAAa,CAACA,IAAc,GACzCiC,QAAS,GACTC,SAAUnC,GAAY,CAACA,IAAa,GACpCoC,WAAe,OAAJlC,SAAI,IAAJA,QAAI,EAAJA,GAAMkB,QAAS,EAAIjB,IAAMD,GAAK,IAAImC,OAAO,cAAgB,GACpEC,SAAa,OAAJpC,SAAI,IAAJA,QAAI,EAAJA,GAAMkB,QAAS,EAAIjB,IAAMD,GAAK,IAAImC,OAAO,cAAgB,IAIxE,GAEAjC,EAAAA,EAAAA,WAAU,KACRmC,GAA6BhD,KAC5B,CAACF,GAAaE,GAAqBtD,IACtC,MA4BMsG,GAA+BA,KACnCnG,GAASoG,EAAAA,EAAAA,IAAkB1B,IAAqB,OAG3C2B,GAAqBC,KAA0BvG,EAAAA,EAAAA,WAAS,IAS/DiE,EAAAA,EAAAA,WAAU,KAEuB,aAAf,OAAdjC,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,WACa,qBAAf,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,WAEhBnF,GACEuG,EAAAA,EAAAA,IAAa,CACX3B,KAAM,GACNC,MAAM,EACNU,QAAQ,EACRT,cAAc,EACdI,UAC+B,WAAf,OAAdnD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACZ5B,GAC6B,aAAf,OAAdxB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACA,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBqD,IACF,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgBmD,aAI9B1F,EAAS,YAAauE,MAAQyC,SAAS,EAAG,UAC1ChH,EAAS,UAAWuE,QACnB,IAEH,MAIM0C,GAAeC,UACnBP,MAiJIQ,GAAQ,CACZ,CACEC,IAAK,IACLC,OAAOC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,SAAC,oBACpCA,UAEEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+DAA8DC,SAAA,EAC3EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4DAA2DC,SAAA,EACxEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTpG,KAAK,YACLzB,QAASA,EACT8H,OAAQC,IAAA,IAAAC,EAAA,IAAC,MAAEC,GAAOF,EAAA,OAChBH,EAAAA,EAAAA,MAACM,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTP,UAAU,uCACVU,YAAU,EACVC,YAAY,eACZC,QAASA,KACP3H,GACE4H,EAAAA,EAAAA,IAAgB,CACdhD,KAAM,GACNC,MAAM,EACNU,QAAQ,EACRT,cAAc,EACdI,UAC+B,WAAf,OAAdnD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACZ5B,GAC6B,aAAf,OAAdxB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACA,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBqD,IACF,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgBmD,UACxBI,SAAU,CAAC,QAAS,UAAW,mBAAmBuC,SAAuB,OAAd9F,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACvE3B,GAC6B,mBAAf,OAAdzB,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACA,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBqD,IACF,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgBuD,SACtBQ,QAAS,OAIfgC,SAAWlI,GAAU0H,EAAMQ,SAASlI,GACpCmI,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQjB,UAAUmB,cAAcN,SAASG,EAAMG,eACvDnB,SAAA,EAEDF,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAACxI,MAAM,GAAEoH,SAAC,iBACvB1F,GACCwF,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAACC,UAAQ,EAAArB,UACrBF,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,MAGgC,QAF7BjB,GAEhBkB,EAAAA,EAAAA,IAA6BlH,UAAgB,IAAAgG,OAAA,EAA7CA,EAA+CmB,IAAKC,IAClDxB,EAAAA,EAAAA,MAACM,EAAAA,EAAOa,OAAM,CAAoBxI,MAAc,OAAP6I,QAAO,IAAPA,OAAO,EAAPA,EAASrD,IAAI4B,SAAA,CAC5C,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAASC,SAAS,KAAU,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAAS7E,UAAU,MADhB,OAAP6E,QAAO,IAAPA,OAAO,EAAPA,EAASrD,gBASzC0B,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTpG,KAAK,SACLzB,QAASA,EACT8H,OAAQwB,IAAA,IAAAC,EAAA,IAAC,MAAEtB,GAAOqB,EAAA,OAChB7B,EAAAA,EAAAA,KAACS,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTP,UAAS,uCACTU,YAAU,EACVM,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQjB,UACZmB,cACAN,SAASG,EAAMG,eAEpBR,QAASA,KACP3H,GACE6I,EAAAA,EAAAA,IAAa,CACX3D,UAC+B,aAAf,OAAdnD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACE,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBqD,IACF,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgBmD,UACtBI,SAC+B,aAAf,OAAdvD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,WACe,WAAf,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,WACa,qBAAf,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UACd1F,EAAM,cAEN,mBADc,OAAdsC,QAAc,IAAdA,OAAc,EAAdA,EAAgBoD,UAEA,OAAdpD,QAAc,IAAdA,OAAc,EAAdA,EAAgBqD,IACF,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgBuD,SACxBQ,QAAS,GACTT,WAAY,GACZG,eAAgB,GAChBI,WAAY,GAEZhB,KAAM,GACNC,MAAM,EACNU,QAAQ,EACRT,cAAc,MAIpBgD,SAAWlI,IACT0H,EAAMQ,SAASlI,IAEjB8H,YAAY,gBAAeV,SAE1BvF,GACCqF,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAACC,UAAQ,EAAArB,UAACF,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,MACM,QADaM,GACrDL,EAAAA,EAAAA,IAA6B/G,UAAW,IAAAoH,OAAA,EAAxCA,EAA0CJ,IAAI,CAACC,EAASK,KACvDhC,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAAoBxI,MAAc,OAAP6I,QAAO,IAAPA,OAAO,EAAPA,EAASrD,IAAI4B,SAC5C,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAASC,UADe,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAASrD,eAQzC0B,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTpG,KAAK,aACLzB,QAASA,EACT8H,OAAQ4B,IAAA,IAAC,MAAEzB,GAAOyB,EAAA,OAChBjC,EAAAA,EAAAA,KAAA,SACEkC,KAAK,SACLpJ,MAAY,OAAL0H,QAAK,IAALA,OAAK,EAALA,EAAO1H,MACdkI,SAAWmB,GAAQ3B,EAAMQ,SAASmB,GAClClC,UAAS,4CACTW,YAAY,6BAOpBZ,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTpG,KAAK,WACLzB,QAASA,EACT8H,OAAQ+B,IAAA,IAAC,MAAE5B,GAAO4B,EAAA,OAChBpC,EAAAA,EAAAA,KAAA,SACEkC,KAAK,SACLpJ,MAAY,OAAL0H,QAAK,IAALA,OAAK,EAALA,EAAO1H,MACdkI,SAAWmB,GAAQ3B,EAAMQ,SAASmB,GAClClC,UAAS,4CACTW,YAAY,2BAOpBZ,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTpG,KAAK,OACLzB,QAASA,EACT8H,OAAQgC,IAAA,IAAC,MAAE7B,GAAO6B,EAAA,OAChBrC,EAAAA,EAAAA,KAAC5H,GAAWsI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNF,GAAK,IACT1H,MAAO0H,EAAM1H,MACbkI,SAAWlI,GAAU0H,EAAMQ,SAASlI,GACpCqG,OAAO,aACPtG,KAAMA,EACNyJ,kBAAmBA,IAAMC,SAASC,KAClCC,eAAe,0BACfxC,UAAU,kCAMpBE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UACE0C,QAASA,KACPhK,EAAS,cAAe,IACxBA,EAAS,aAAc,IACvBA,EAAS,SAAU,IACnBA,EAAS,qBAAsB,IAC/BA,EAAS,iBAAkB,IAC3BA,EAAS,aAAc,IACvBA,EAAS,SAAU,IACnBA,EAAS,YAAa,IACtBA,EAAS,OAAQ,IACjBA,EAAS,WAAY,IACrBA,EAAS,aAAc,IACvBiH,MAEFM,UAAU,qFAAoFC,UAE9FF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,aAEhCF,EAAAA,EAAAA,KAAA,UACE0C,QAASA,KACP/C,MAEFM,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,qBAQ1C,OACEF,EAAAA,EAAAA,KAAC2C,EAAAA,EAAY,CAAC3B,SArWE4B,IAChB5H,EAAc4H,IAoWmB1C,UAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACfvE,KAAWqE,EAAAA,EAAAA,KAAC6C,EAAAA,EAAQ,CACpB5C,UAAU,kBACVJ,MAAOA,GACPiD,iBAAkB,CAAC,GACnBC,WAAYC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OACvBhD,EAAAA,EAAAA,KAACkD,EAAAA,IAAmB,CAClBC,KAAM,GACNC,MAAO,CACLC,MAAO,QACPC,UAAWL,EAAW,iBAAmB,eACzCM,WAAY,6BAKlBvD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDC,UAsB7DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UACE0C,QAASA,KAnTH9C,WAAa,IAAD4D,EAAAC,EAC9B,MAAMC,EAAM,IAAIC,EAAAA,GAAM,CACpBC,YAAa,YACbC,KAAM,OAERH,EAAII,YAAY,IAChB,MAWMC,QAAgC,OAAfC,EAAAA,QAAe,IAAfA,EAAAA,OAAe,EAAfA,EAAAA,EAAiB1E,kBACtC1B,IAAqB,KAGvB,IAAKxE,IAAsB2K,EAAU,OACrC,MAAMvB,EAAe,OAARuB,QAAQ,IAARA,GAAc,QAANP,EAARO,EAAUE,YAAI,IAAAT,GAAM,QAANC,EAAdD,EAAgBU,YAAI,IAAAT,OAAZ,EAARA,EAAsB/B,IAAI,CAACuC,EAAMjC,KAAW,IAADmC,EACtD,MAAO,CACLnC,EAAQ,EACR/E,IAAU,OAAJgH,QAAI,IAAJA,OAAI,EAAJA,EAAMG,WAAWjF,OAAO,uBAAyB,IACvDlC,IAAU,OAAJgH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,MAAMlF,OAAO,uBAAyB,KAC9C,OAAJ8E,QAAI,IAAJA,OAAI,EAAJA,EAAMK,SAAU,KACZ,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMnH,YAAa,KACf,OAAJmH,QAAI,IAAJA,OAAI,EAAJA,EAAMlH,aAAc,KAChB,OAAJkH,QAAI,IAAJA,OAAI,EAAJA,EAAMM,mBAAoB,KACtB,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,cAAe,KACC,SAAjB,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAA4B,OAAJP,QAAI,IAAJA,GAAc,QAAVE,EAAJF,EAAMQ,gBAAQ,IAAAN,OAAV,EAAJA,EAAgBO,SAAgC,SAAjB,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAA4B,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMU,YAAc,KAAO,QAGvHC,EAAAA,EAAAA,IAAUlB,EAAK,CACbmB,OAAQ,GACRC,KAAM,CA/BQ,CACd,QACA,aACA,aACA,kBACA,aACA,cACA,SACA,kBACA,sBAuBAtC,KAAMA,EACNuC,OAAQ,CAAEC,WAAY,IACtBC,OAAQ,CACNC,YAAa,EACbC,SAAU,GACVC,OAAQ,SACRC,OAAQ,QAEVC,WAAY,CACVC,UAAW,CAAC,IAAK,IAAK,KACtBC,UAAW,CAAC,EAAG,EAAG,GAClBC,UAAW,QAEbC,mBAAoB,CAClBH,UAAW,CAAC,IAAK,IAAK,QAG1B7B,EAAIiC,KAAK,6BA6PKC,IAEF3F,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,kBAEhCF,EAAAA,EAAAA,KAAA,UACE0C,QAASA,KA/YD9C,WAAa,IAADiG,EAAAC,EAChC,MAAMC,EAAW,IAAIC,EAAAA,SACfC,EAAYF,EAASG,aAAa,wBAExCD,EAAUE,QAAU,CAClB,CAAEC,OAAQ,QAAStG,IAAK,MAAOuG,MAAO,IACtC,CAAED,OAAQ,aAActG,IAAK,YAAauG,MAAO,IACjD,CAAED,OAAQ,eAAgBtG,IAAK,UAAWuG,MAAO,IACjD,CAAED,OAAQ,kBAAmBtG,IAAK,iBAAkBuG,MAAO,IAC3D,CAAED,OAAQ,aAActG,IAAK,YAAauG,MAAO,IACjD,CAAED,OAAQ,cAAetG,IAAK,aAAcuG,MAAO,IACnD,CAAED,OAAQ,SAAUtG,IAAK,SAAUuG,MAAO,IAE1C,CAAED,OAAQ,kBAAmBtG,IAAK,gBAAiBuG,MAAO,IAC1D,CAAED,OAAQ,oBAAqBtG,IAAK,WAAYuG,MAAO,KAGvCJ,EAAUK,OAAO,GACzBC,SAAUC,IAClBA,EAAKC,KAAO,CACVvE,KAAM,UACNwE,QAAS,QACTC,QAAS,CAAEC,KAAM,aAEnBJ,EAAKK,KAAO,CAAEC,MAAM,GACpBN,EAAKO,UAAY,CAAEC,SAAU,SAAUhC,WAAY,UACnDwB,EAAKS,OAAS,CACZC,IAAK,CAAE9D,MAAO,QACd+D,KAAM,CAAE/D,MAAO,QACfgE,OAAQ,CAAEhE,MAAO,QACjBiE,MAAO,CAAEjE,MAAO,WAIpB,MAAMW,QAAgC,OAAfC,EAAAA,QAAe,IAAfA,EAAAA,OAAe,EAAfA,EAAAA,EAAiB1E,kBACtC1B,IAAqB,KAIvB,IAAKxE,IAAsB2K,EAAU,OACrC,MAAMuD,EAAkB,OAARvD,QAAQ,IAARA,GAAc,QAAN8B,EAAR9B,EAAUE,YAAI,IAAA4B,GAAM,QAANC,EAAdD,EAAgB3B,YAAI,IAAA4B,OAAZ,EAARA,EAAsBpE,IAAI,CAACuC,EAAMjC,KAAW,IAADuF,EACzD,MAAO,CACLC,IAAKxF,EAAQ,EACbyF,UAAWxK,IAAU,OAAJgH,QAAI,IAAJA,OAAI,EAAJA,EAAMG,WAAWjF,OAAO,uBAAyB,IAClEuI,QAASzK,IAAU,OAAJgH,QAAI,IAAJA,OAAI,EAAJA,EAAMI,MAAMlF,OAAO,uBAAyB,IAC3DwI,gBAAoB,OAAJ1D,QAAI,IAAJA,OAAI,EAAJA,EAAMK,SAAU,IAChCxH,WAAe,OAAJmH,QAAI,IAAJA,OAAI,EAAJA,EAAMnH,YAAa,IAC9BC,YAAgB,OAAJkH,QAAI,IAAJA,OAAI,EAAJA,EAAMlH,aAAc,IAChC6K,QAAY,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAMM,mBAAoB,IAElCsD,eAAmB,OAAJ5D,QAAI,IAAJA,OAAI,EAAJA,EAAMO,cAAe,IACpCE,UAAgC,SAAjB,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAA4B,OAAJP,QAAI,IAAJA,GAAc,QAAVsD,EAAJtD,EAAMQ,gBAAQ,IAAA8C,OAAV,EAAJA,EAAgB7C,SAAiC,SAAjB,OAAJT,QAAI,IAAJA,OAAI,EAAJA,EAAMO,aAA6B,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMU,YAAc,KAAO,OAG5H,OAAP2C,QAAO,IAAPA,GAAAA,EAASQ,QAASC,IACJ9B,EAAU+B,OAAOD,GACzBxB,SAAUC,IACZA,EAAKO,UAAY,CAAEC,SAAU,SAAUhC,WAAY,QACnDwB,EAAKS,OAAS,CACZC,IAAK,CAAE9D,MAAO,QACd+D,KAAM,CAAE/D,MAAO,QACfgE,OAAQ,CAAEhE,MAAO,QACjBiE,MAAO,CAAEjE,MAAO,aAMtB6C,EAAUgC,WAAa,CACrBC,KAAM,KACNC,GAAI,MAINpC,EAASqC,KAAKC,cAAcC,KAAMC,IAChC,MAAMC,EAAO,IAAIC,KAAK,CAACF,GAAS,CAC9BrG,KAAM,sEAEFwG,EAAOnG,SAASoG,cAAc,KACpCD,EAAKE,KAAOC,IAAIC,gBAAgBN,GAChCE,EAAKK,SAAW,4BAChBL,EAAKM,WA+TOC,IAEFhJ,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,4BAKtCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uDAAsDC,SAAA,EACnEC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,+CAA8CC,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kGAAiGC,SAAA,EAC7GF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SAAC,WAI1DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,gBAGnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,kBAInDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,qBAGnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,SAAC,gBAGlDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,SAAC,iBAGlDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,+CAA8CC,SAAC,YAG7DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,SAAC,qBAGlDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,SAAC,2BASrD7G,GACC2G,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACpCF,EAAAA,EAAAA,KAAA,MACEkJ,QAAS,GACTjJ,UAAU,gEAA+DC,UAEzEF,EAAAA,EAAAA,KAACmJ,EAAAA,EAAO,SAIZnJ,EAAAA,EAAAA,KAAA,SAAAE,SACG9G,IAAsC,OAAjBA,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmB8E,QAAS,EAC/B,OAAjB9E,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBsI,IAAI,CAACC,EAASK,KAAK,IAAAoH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACpCtJ,EAAAA,EAAAA,MAAA,MACEF,UAAS,kBAAA3E,OAAoB0G,EAAQ,IAAM,EAAI,kBAAoB,WAAU,gDAC5B9B,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAC/C8B,EAAQ,GAAK7F,GAAc,GAAKpD,KAkBnCiH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAC/CjD,IAAa,OAAP0E,QAAO,IAAPA,OAAO,EAAPA,EAASyC,WAAWjF,OAAO,uBAChC,OAGJa,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,UAC1DF,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MAAO1M,IAAa,OAAP0E,QAAO,IAAPA,OAAO,EAAPA,EAAS0C,MAAMlF,OAAO,eAAiB,IAAIe,UAC/DF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,SAAEjD,IAAa,OAAP0E,QAAO,IAAPA,OAAO,EAAPA,EAAS0C,MAAMlF,OAAO,eAAiB,aAKxFa,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,UAC1DF,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,OAAc,OAAPhI,QAAO,IAAPA,OAAO,EAAPA,EAAS2C,SAAU,IAAIpE,UACrCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+BAA8BC,UAAS,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAAS2C,SAAU,aAKzEtE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,UAC1DF,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,OAAc,OAAPhI,QAAO,IAAPA,OAAO,EAAPA,EAAS7E,YAAa,IAAIoD,UACxCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,UAAS,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAAS7E,YAAa,aAKjEkD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,UAC1DF,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,OAAc,OAAPhI,QAAO,IAAPA,OAAO,EAAPA,EAAS5E,aAAc,IAAImD,UACzCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,UAAS,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAAS5E,aAAc,aAKlEiD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,UACxCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,UAC1DF,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,OAAOC,EAAAA,EAAAA,IAAyB,OAAPjI,QAAO,IAAPA,OAAO,EAAPA,EAAS4C,mBAAqB,IAAIrE,UAClEF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,UAAE0J,EAAAA,EAAAA,IAAyB,OAAPjI,QAAO,IAAPA,OAAO,EAAPA,EAAS4C,mBAAqB,aAK3FvE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,UAC1DF,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,OAAc,OAAPhI,QAAO,IAAPA,OAAO,EAAPA,EAAS6C,cAAe,IAAItE,UAC1CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,+BAA8BC,UAAS,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAAS6C,cAAe,aAK9ExE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,UAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,UAC1DF,EAAAA,EAAAA,KAAC0J,EAAAA,EAAO,CAACC,MACkB,UAAlB,OAAPhI,QAAO,IAAPA,OAAO,EAAPA,EAAS6C,aAAsB,GAAAlJ,QACjB,OAAPqG,QAAO,IAAPA,GAAiB,QAAVyH,EAAPzH,EAAS8C,gBAAQ,IAAA2E,OAAV,EAAPA,EAAmB1E,WAAY,IAAG,OAAApJ,QAAa,OAAPqG,QAAO,IAAPA,GAAiB,QAAV0H,EAAP1H,EAAS8C,gBAAQ,IAAA4E,OAAV,EAAPA,EAAmBQ,iBAAkB,IAAG,OAAAvO,QAAa,OAAPqG,QAAO,IAAPA,GAAiB,QAAV2H,EAAP3H,EAAS8C,gBAAQ,IAAA6E,OAAV,EAAPA,EAAmBQ,gBAAiB,KACpG,UAAlB,OAAPnI,QAAO,IAAPA,OAAO,EAAPA,EAAS6C,aACA,OAAP7C,QAAO,IAAPA,OAAO,EAAPA,EAASgD,YACT,IACPzE,UACCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oBAAmBC,SACP,UAAlB,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAAS6C,aAAsB,GAAAlJ,QAClB,OAAPqG,QAAO,IAAPA,GAAiB,QAAV4H,EAAP5H,EAAS8C,gBAAQ,IAAA8E,OAAV,EAAPA,EAAmB7E,WAAY,IAAG,OAAApJ,QAAa,OAAPqG,QAAO,IAAPA,GAAiB,QAAV6H,EAAP7H,EAAS8C,gBAAQ,IAAA+E,OAAV,EAAPA,EAAmBK,iBAAkB,IAAG,OAAAvO,QAAa,OAAPqG,QAAO,IAAPA,GAAiB,QAAV8H,EAAP9H,EAAS8C,gBAAQ,IAAAgF,OAAV,EAAPA,EAAmBK,gBAAiB,KACpG,UAAlB,OAAPnI,QAAO,IAAPA,OAAO,EAAPA,EAAS6C,aACA,OAAP7C,QAAO,IAAPA,OAAO,EAAPA,EAASgD,YACT,kBA6BlB3E,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCF,EAAAA,EAAAA,KAAA,MACEkJ,QAAS,GACTjJ,UAAU,gEAA+DC,SAC1E,6BASXF,EAAAA,EAAAA,KAAC+J,EAAAA,EAAK,CACJ9J,UAAU,sCACV0J,MAAM,cACNK,KAAMzK,GACN0K,SAAUA,IAAMzK,IAAuB,GACvC0K,OAAQ,KAAKhK,UAEbC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,+CAA8CC,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kGAAiGC,SAAA,EAC7GF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SAAC,WAI1DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,qBAInDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,WACnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,YAEnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,gBAGnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,oBAKtD7G,GACC2G,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACpCF,EAAAA,EAAAA,KAAA,MACEkJ,QAAS,GACTjJ,UAAU,gEAA+DC,UAEzEF,EAAAA,EAAAA,KAACmJ,EAAAA,EAAO,SAIZnJ,EAAAA,EAAAA,KAAA,SAAAE,SACsB,OAAnB/F,QAAmB,IAAnBA,GAAAA,EAAqBgQ,iBACD,OAAnBhQ,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBgQ,eAAejM,QAAS,EAC1B,OAAnB/D,QAAmB,IAAnBA,GAAmC,QAAhB7B,EAAnB6B,EAAqBgQ,sBAAc,IAAA7R,OAAhB,EAAnBA,EAAqCoJ,IACnC,CAACC,EAASK,KAAK,IAAAoI,EAAAC,EAAA,OACblK,EAAAA,EAAAA,MAAA,MACEF,UAAS,kBAAA3E,OAAoB0G,EAAQ,IAAM,EAAI,kBAAoB,WAAU,gDAC5B9B,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAC/C8B,EAAQ,GAAK7F,GAAc,GAAKpD,KAGnCiH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAC/CjD,IAAa,OAAP0E,QAAO,IAAPA,OAAO,EAAPA,EAAS0C,MAAMlF,OAAO,yBAG/Ba,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,UACxC,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAAS2I,QAAS,OAGrBnK,EAAAA,EAAAA,MAAA,MAAIF,UAAU,qCAAoCC,SAAA,EACxC,OAAPyB,QAAO,IAAPA,GAAe,QAARyI,EAAPzI,EAAS4I,cAAM,IAAAH,OAAR,EAAPA,EAAiBI,OAAQ,IAAK,KACvB,OAAP7I,QAAO,IAAPA,GAAe,QAAR0I,EAAP1I,EAAS4I,cAAM,IAAAF,OAAR,EAAPA,EAAiBI,SAAU,QAG9BzK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAC/CjD,IAAa,OAAP0E,QAAO,IAAPA,OAAO,EAAPA,EAASyC,WAAWjF,OACzB,yBAGJa,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SACxC,OAAPyB,QAAO,IAAPA,OAAO,EAAPA,EAAS+I,kBAWlB1K,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCF,EAAAA,EAAAA,KAAA,MACEkJ,QAAS,GACTjJ,UAAU,gEAA+DC,SAC1E,kCAUfF,EAAAA,EAAAA,KAAC2K,EAAAA,EAAgB,CACfC,WAAYtR,EACZP,SAAUA,EACVoD,YAAaA,GACb6E,SA54BoB6J,IAC1BzO,GAAeyO,UAg5BnB,C","sources":["pages/reportsManager/finance_report/finance_receipt_report/FinanceRecieptReport.js"],"sourcesContent":["import { Controller, set, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertIntoAmount,\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { recieptReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\n\nimport { DatePicker, Space } from \"antd\";\nimport { useSearchParams } from \"react-router-dom\";\nconst { RangePicker } = DatePicker;\n\nfunction FinanceRecieptReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const { RangePicker } = DatePicker;\n  const onOk = (value) => {\n\n  };\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const { recieptReportList, recieptReport_loading, recieptReportCount } =\n    useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n  const amountFrom = useWatch({ control, name: \"amountFrom\", defaultValue: 0 });\n  const amountTo = useWatch({ control, name: \"amountTo\", defaultValue: 0 });\n\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList, groupSearchLoading } = useSelector((state) => state.clientGroup);\n  const { clientList, loading: clientListLoading } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [searchParams, setSearchParams] = useSearchParams();\n  const urlDate = searchParams.get('filter')\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const clientName = useWatch({\n    control,\n    name: \"client\",\n    defaultValue: \"\",\n  });\n\n\n  const time = useWatch({\n    control,\n    name: \"time\",\n    defaultValue: urlDate ? [dayjs(),dayjs()]:[],\n  });\n\n\n\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n\n  useEffect(()=>{\n    if(urlDate=='today'){       \n    const startOfDay = dayjs()\n    const endOfDay = dayjs(); \n    setValue('time', [startOfDay, endOfDay]);    \n    \n    }\n\n  },[urlDate])\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n        organizationId: PDOrganizationType,\n        organizationIds: [],\n        departmentId: department,\n        departmentIds: [],\n        amountTo: amountTo ? +amountTo : null,\n        amountFrom: amountFrom ? +amountFrom : null,\n        industryId: PDindustrytype,\n        industryIds: [],\n        \"clientIds\": clientName ? [clientName] : [],\n        groupId: '',\n        groupIds: groupName ? [groupName] : [],\n        startDate: time?.length > 0 ? dayjs(time[0]).format(\"YYYY-MM-DD\") : '',\n        endDate: time?.length > 0 ? dayjs(time[1]).format(\"YYYY-MM-DD\") : '',\n\n      },\n    };\n  };\n\n  useEffect(() => {    \n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(recieptReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n\n  const handleDepartmentModal = (element) => {\n    setDepartmentModalOpen(true);\n    setDepartmentModalData(element);\n  };\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"FinanceReceiptReport\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Entry Date\", key: \"entryDate\", width: 30 },\n      { header: \"Payment Date\", key: \"payment\", width: 30 },\n      { header: \"Reciept Advance\", key: \"recieptAdvance\", width: 30 },\n      { header: \"Group Name\", key: \"groupName\", width: 25 },\n      { header: \"Client Name\", key: \"clientName\", width: 30 },\n      { header: \"Amount\", key: \"amount\", width: 30 },\n\n      { header: \"Mode of Receipt\", key: \"modeOFreceipt\", width: 20 },\n      { header: \"Payment Recipient\", key: \"bankName\", width: 20 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.recieptReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n\n    if (!recieptReportList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1,\n        entryDate: dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        payment: dayjs(data?.date).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        recieptAdvance: data?.typeOf || \"-\",\n        groupName: data?.groupName || \"-\",\n        clientName: data?.clientName || \"-\",\n        amount: data?.grandTotalAmount || \"-\",\n\n        modeOFreceipt: data?.paymentmode || \"-\",\n        bankName: (data?.paymentmode == 'bank' ? data?.bankData?.bankName : (data?.paymentmode == 'cash') ? data?.employeName : '') || \"-\",\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"FinanceReceiptReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n    const headers = [\n      \"S.No.\",\n      \"Entry Date\",\n      \"Entry Date\",\n      \"Payment Advance\",\n      \"Group Name\",\n      \"Client Name\",\n      \"Amount\",\n      \"Mode of Receipt\",\n      \"Payment Recipient\",\n    ];\n    const response = await reportsServices?.recieptReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!recieptReportList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        dayjs(data?.date).format(\"DD-MM-YYYY hh:mm a\") || \"-\",\n        data?.typeOf || \"-\",\n        data?.groupName || \"-\",\n        data?.clientName || \"-\",\n        data?.grandTotalAmount || \"-\",\n        data?.paymentmode || \"-\",\n        (data?.paymentmode == 'bank' ? data?.bankData?.bankName : data?.paymentmode == 'cash' ? data?.employeName : '') || \"-\",\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`FinanceReceiptReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n\n        <div className=\"bg-[#ececec] space-y-1 2xl:flex justify-between items-center\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n            <div className=\"\">\n              <Controller\n                name=\"groupName\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Group\"\n                    onFocus={() => {\n                      dispatch(\n                        clientGrpSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                          groupId: \"\",\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Group</Select.Option>\n                    {groupSearchLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(clientGroupList)?.map((element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName} ({element?.groupName})\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"client\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        clientSearch({\n                          companyId:\n                            userInfoglobal?.userType === \"company\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.companyId,\n                          branchId:\n                            userInfoglobal?.userType === \"company\" ||\n                              userInfoglobal?.userType === \"admin\" ||\n                              userInfoglobal?.userType === \"companyDirector\"\n                              ? watch(\"PDBranchId\")\n                              : userInfoglobal?.userType ===\n                                \"companyBranch\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.branchId,\n                          groupId: \"\",\n                          directorId: \"\",\n                          organizationId: \"\",\n                          industryId: \"\",\n                          // departmentId: department,\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select client\"\n                  >\n                    {clientListLoading ?\n                      <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(clientList)?.map((element, index) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName}\n                        </Select.Option>\n                      )))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"amountFrom\"\n                control={control}\n                render={({ field }) => (\n                  <input\n                    type=\"number\"\n                    value={field?.value}\n                    onChange={(val) => field.onChange(val)}\n                    className={`inputAntdMultiSelectClassNameFilterReport`}\n                    placeholder=\"Enter Amount From \"\n                  />\n\n\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"amountTo\"\n                control={control}\n                render={({ field }) => (\n                  <input\n                    type=\"number\"\n                    value={field?.value}\n                    onChange={(val) => field.onChange(val)}\n                    className={`inputAntdMultiSelectClassNameFilterReport`}\n                    placeholder=\"Enter Amount To \"\n                  />\n\n\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"time\"\n                control={control}\n                render={({ field }) => (\n                  <RangePicker\n                    {...field}\n                    value={field.value}\n                    onChange={(value) => field.onChange(value)}\n                    format=\"YYYY-MM-DD\"\n                    onOk={onOk}\n                    getPopupContainer={() => document.body}\n                    popupClassName=\"vertical-range-calendar\"\n                    className=\"custom-range-picker\"\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"PDOrganizationType\", \"\");\n                setValue(\"PDindustrytype\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"client\", \"\");\n                setValue(\"groupName\", \"\");\n                setValue(\"time\", \"\");\n                setValue(\"amountTo\", \"\");\n                setValue(\"amountFrom\", \"\");\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n        {!urlDate && <Collapse\n          className=\"custom-collapse\"\n          items={items}\n          defaultActiveKey={[1]}\n          expandIcon={({ isActive }) => (\n            <MdKeyboardArrowDown\n              size={20}\n              style={{\n                color: \"white\",\n                transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                transition: \"transform 0.3s ease\",\n              }}\n            />\n          )}\n        ></Collapse>}\n          <div className=\"space-y-1.5 flex justify-end items-center pt-1\">\n            {/* <div className=\"flex items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div> */}\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Entry Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Reciept Date\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Reciept/Advance\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Group Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Client Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">\n                  Amount\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Mode of Payment\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Payment Recipient\n                </th>\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th> */}\n              </tr>\n            </thead>\n            {recieptReport_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {recieptReportList && recieptReportList?.length > 0 ? (\n                  recieptReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\") ||\n                          \"-\"}\n                      </td>\n\n                      <td className=\"border-none p-2\">\n                        <div className=\"max-w-[120px] overflow-hidden text-ellipsis\">\n                          <Tooltip title={dayjs(element?.date).format(\"DD-MM-YYYY\") || \"-\"}>\n                            <span className=\"whitespace-nowrap\">{dayjs(element?.date).format(\"DD-MM-YYYY\") || \"-\"}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2\">\n                        <div className=\"max-w-[120px] overflow-hidden text-ellipsis\">\n                          <Tooltip title={element?.typeOf || \"-\"}>\n                            <span className=\"whitespace-nowrap capitalize\">{element?.typeOf || \"-\"}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2\">\n                        <div className=\"max-w-[180px] overflow-hidden text-ellipsis\">\n                          <Tooltip title={element?.groupName || \"-\"}>\n                            <span className=\"whitespace-nowrap\">{element?.groupName || \"-\"}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2\">\n                        <div className=\"max-w-[180px] overflow-hidden text-ellipsis\">\n                          <Tooltip title={element?.clientName || \"-\"}>\n                            <span className=\"whitespace-nowrap\">{element?.clientName || \"-\"}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2 text-right\">\n                        <div className=\"max-w-[120px] overflow-hidden text-ellipsis\">\n                          <Tooltip title={convertIntoAmount(element?.grandTotalAmount) || \"-\"}>\n                            <span className=\"whitespace-nowrap\">{convertIntoAmount(element?.grandTotalAmount) || \"-\"}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2\">\n                        <div className=\"max-w-[120px] overflow-hidden text-ellipsis\">\n                          <Tooltip title={element?.paymentmode || \"-\"}>\n                            <span className=\"whitespace-nowrap capitalize\">{element?.paymentmode || \"-\"}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2\">\n                        <div className=\"max-w-[250px] overflow-hidden text-ellipsis\">\n                          <Tooltip title={\n                            element?.paymentmode === 'bank' \n                              ? `${element?.bankData?.bankName || '-'} / ${element?.bankData?.bankholderName || '-'} / ${element?.bankData?.accountNumber || '-'}`\n                              : element?.paymentmode === 'cash' \n                                ? element?.employeName \n                                : '-'\n                          }>\n                            <span className=\"whitespace-nowrap\">\n                              {element?.paymentmode === 'bank' \n                                ? `${element?.bankData?.bankName || '-'} / ${element?.bankData?.bankholderName || '-'} / ${element?.bankData?.accountNumber || '-'}`\n                                : element?.paymentmode === 'cash' \n                                  ? element?.employeName \n                                  : '-'}\n                            </span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.createdBy}\n                      </td> */}\n                      {/* <td className=\"tableData \">\n                        {(\n                          <div className=\"flex justify-center items-center gap-1\">\n                            <span>{element?.departmentData?.length}</span>\n                            <span className=\"flex justify-center items-center cursor-pointer\">\n                              <FaEye\n                                onClick={() => handleDepartmentModal(element)}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              />\n                            </span>\n                          </div>\n                        ) || \"-\"}\n                      </td> */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n          <Modal\n            className=\"antmodalclassName !w-[60%] !h-[50%]\"\n            title=\"Departments\"\n            open={departmentModalOpen}\n            onCancel={() => setDepartmentModalOpen(false)}\n            footer={null}\n          >\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                    S.No.\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Department Name\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Created At\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Created By\n                  </th>\n                </tr>\n              </thead>\n              {recieptReport_loading ? (\n                <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={15}\n                    className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr>\n              ) : (\n                <tbody>\n                  {departmentModalData?.departmentData &&\n                    departmentModalData?.departmentData.length > 0 ? (\n                    departmentModalData?.departmentData?.map(\n                      (element, index) => (\n                        <tr\n                          className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                            } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                        >\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {index + 1 + (currentPage - 1) * pageSize}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {dayjs(element?.date).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.email || \"-\"}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.mobile?.code || \"-\"}{\" \"}\n                            {element?.mobile?.number || \"-\"}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {dayjs(element?.createdAt).format(\n                              \"DD-MM-YYYY hh:mm a\"\n                            )}\n                          </td>\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.createdBy}\n                          </td>\n                          {/* <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                        <div onClick={()=>{handleDepartmentModal(element)}} className=\"flex justify-center items-center rounded-md h-10 w-10 border-2 border-cyan-500\">\n                          {element?.departmentData?.length || 0}\n                        </div>\n                      </td> */}\n                        </tr>\n                      )\n                    )\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={15}\n                        className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              )}\n            </table>\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={recieptReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default FinanceRecieptReport;\n"],"names":["RangePicker","DatePicker","_departmentModalData$","control","formState","errors","setValue","watch","useForm","onOk","value","pageSize","setPageSize","useState","dispatch","useDispatch","recieptReportList","recieptReport_loading","recieptReportCount","useSelector","state","reports","departmentListData","loading","depLoading","department","amountFrom","useWatch","name","defaultValue","amountTo","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","groupSearchLoading","clientGroup","clientList","clientListLoading","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","searchParams","setSearchParams","useSearchParams","urlDate","get","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","BranchId","Status","PDOrganizationType","PDindustrytype","groupName","clientName","time","dayjs","useEffect","timer","setTimeout","clearTimeout","startOfDay","endOfDay","generateFinancialYears","financialYears","year","push","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","status","organizationId","organizationIds","departmentId","departmentIds","industryId","industryIds","groupId","groupIds","startDate","format","endDate","fetchClientServiceTaskReport","recieptReportFunc","departmentModalOpen","setDepartmentModalOpen","branchSearch","subtract","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","_sortByPropertyAlphab","field","Select","_objectSpread","showSearch","placeholder","onFocus","clientGrpSearch","includes","onChange","filterOption","input","option","String","toLowerCase","Option","disabled","ListLoader","sortByPropertyAlphabetically","map","element","fullName","_ref2","_sortByPropertyAlphab2","clientSearch","index","_ref3","type","val","_ref4","_ref5","getPopupContainer","document","body","popupClassName","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref6","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","data","docs","_data$bankData2","createdAt","date","typeOf","grandTotalAmount","paymentmode","bankData","bankName","employeName","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$bankData","sno","entryDate","payment","recieptAdvance","amount","modeOFreceipt","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","_element$bankData","_element$bankData2","_element$bankData3","_element$bankData4","_element$bankData5","_element$bankData6","Tooltip","title","convertIntoAmount","bankholderName","accountNumber","Modal","open","onCancel","footer","departmentData","_element$mobile","_element$mobile2","email","mobile","code","number","createdBy","CustomPagination","totalCount","page"],"sourceRoot":""}