{"version":3,"file":"static/js/6209.c7013b2f.chunk.js","mappings":"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","sources":["pages/global/other/termination/TerminationList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { encrypt } from \"../../../../config/Encryption\";\nimport { FaPlus } from \"react-icons/fa6\";\n\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { domainName, inputAntdSelectClassNameFilter, inputClassNameSearch, showSwal, } from \"../../../../constents/global\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { CgComment } from \"react-icons/cg\";\nimport { Modal, Select, Tooltip, Dropdown } from \"antd\";\nimport getUserIds from \"../../../../constents/getUserIds\";\n\nimport { BsPassFill } from \"react-icons/bs\";\nimport { MdBookmarkAdded, MdRemoveCircle } from \"react-icons/md\";\nimport moment from \"moment\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { getTerminationList } from \"./terminationFeatures/termination_reducers\";\nimport { deleteResignFunc, statusResignFunc } from \"../resignation/resignationFeatures/resignation_reducers\";\nimport { FaFilePdf, FaImages, FaRegFileImage } from \"react-icons/fa\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\n\nimport CommonImageViewer from \"../../../../global_layouts/ImageViewrModal/CommonImageViewer\";\nimport usePermissions from \"../../../../config/usePermissions\";\n\n\nfunction TerminationList() {\n  const { register, control, setValue, formState: { errors } } = useForm();\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n  const { userCompanyId, userBranchId, userType } = getUserIds();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { TerminationData, totalTerminationCount, loading } = useSelector((state) => state.Termination);\n  // const [status, setStatus] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n\n  const [modal, setModal] = useState({\n    isOpen: false,\n    data: {},\n    Termination: {}\n  })\n\n  \n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector(\n    (state) => state.branch\n  );\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: userCompanyId,\n  });\n \n      const [searchParams, setSearchParams] = useSearchParams();\n      const initialPage = parseInt(searchParams.get(\"page\")) || 1;\n      const initialLimit = 10;\n      const initialBranchId = searchParams.get(\"branchId\")|| \"\";\n      const initialStatus = searchParams.get(\"status\")|| \"\"; \n    \n      const [currentPage, setCurrentPage] = useState(initialPage);\n      const [limit, setLimit] = useState(initialLimit);\n      const [status, setStatus] = useState(initialStatus);\n      const [searchText, setSearchText] = useState(\"\");\n      const [branchId, setBranchId] = useState(initialBranchId);\n    \n      useEffect(() => {\n        const params = new URLSearchParams();\n        if (currentPage > 1) params.set(\"page\", currentPage);\n        if (branchId) params.set(\"branchId\", branchId);\n        if (status) params.set(\"status\", status);\n        setSearchParams(params);\n      }, [branchId, status,currentPage, searchText, ]);\n      useEffect(() => {\n        getTerminationRequest();\n      }, [branchId, status, currentPage, searchText, ]);\n    \n      const handleResetFilters = () => {\n        setCurrentPage(1);\n        setBranchId(\"\");\n        setStatus(\"\");\n        setSearchText(\"\");\n      };\n      const onChange = (e) => {\n        setSearchText(e);\n      };\n    \n      const onPaginationChange = (page) => setCurrentPage(page);\n      const handleBranchChange = (value) => {\n        setBranchId(value);\n        setCurrentPage(1);\n      };\n    \n     \n      const handleStatusChange = (value) => {\n        setStatus(value);\n        setCurrentPage(1);\n      };\n      \n        \n  \n\n\n  const getTerminationRequest = () => {\n    const data = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqData: {\n        directorId: \"\",\n        companyId: companyId || \"\",\n        branchId: branchId || \"\",\n        \"text\": searchText,\n        \"sort\": true,\n        \"status\": status,\n        \"isPagination\": true,\n        type: \"termination\"\n      }\n    };\n    dispatch(getTerminationList(data));\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteResignFunc(reqData)).then((data) => {\n          getTerminationRequest()\n            if (currentPage > 1 && TerminationData?.length==1) {\n            setCurrentPage(Number(currentPage-1));  \n             \n          }else {\n        getTerminationRequest();    \n          } \n        });\n      }\n    });\n  };\n  useEffect(() => {\n    if (\n      companyId ||\n      userType === \"company\" ||\n      userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: companyId\n        })\n      );\n    }\n  }, [companyId])\n  useEffect(() => {\n    if (userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState(null); // State to store the selected template data\n\n  // Function to open the modal with the template details\n  const openModal = (template) => {\n    setSelectedTemplate(template);\n    setModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedTemplate(null);\n  };\n\n  const handleStatusUpdate = (element, status) => {\n    Swal.fire({\n      title: 'Provide feedback & date',\n      input: 'textarea',\n      inputLabel: 'Feedback (optional)',\n      inputPlaceholder: 'Type your feedback here...',\n      showCancelButton: true,\n      confirmButtonText: `Update as ${status}`,\n      cancelButtonText: 'Cancel',\n      inputValidator: (value) => {\n        if (!value || value.trim() === '') {\n          return 'Feedback cannot be empty';\n        }\n        return null;\n      },\n      html: status === 'Approved'\n        ? `\n          <div style=\"margin-top: 1rem;\">\n            <label for=\"custom-date-picker\">Select Date:</label>\n            <input \n    type=\"date\" \n    id=\"custom-date-picker\" \n    min=\"${moment().format('YYYY-MM-DD')}\"\n    style=\"\n      width: 100%;\n      margin-top: 0.5rem;\n      padding: 4px 11px;\n      height: 40px;\n      font-size: 14px;\n      line-height: 1.5715;\n      color: rgba(0, 0, 0, 0.85);\n      background-color: #fff;\n      border: 1px solid #d9d9d9;\n      border-radius: 6px;\n      transition: all 0.3s;\n      box-sizing: border-box;\n    \"\n  />\n          </div>`\n        : '',\n      preConfirm: () => {\n        const popup = Swal.getPopup();\n        const feedback = popup.querySelector('textarea')?.value.trim();\n        const selectedDate = popup.querySelector('#custom-date-picker')?.value;\n\n        if (!feedback) {\n          Swal.showValidationMessage('Feedback is required');\n          return false;\n        }\n\n        if (!selectedDate && status === 'Approved') {\n          Swal.showValidationMessage('Please select a future date');\n          return false;\n        }\n\n        const currentDate = moment().format('YYYY-MM-DD');\n        if (selectedDate <= currentDate) {\n          Swal.showValidationMessage('The selected date must be in the future');\n          return false;\n        }\n\n        return { feedback, date: selectedDate };\n      },\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const { feedback, date } = result.value;\n        dispatch(\n          statusResignFunc({\n            _id: element?._id,\n            status: status,\n            reason: feedback,\n            approvalDate: status === 'Approved' ? date : status === 'Completed' ? element?.approvalDate : '',\n          })\n        ).then((data) => {\n          if (!data?.error) {\n            getTerminationRequest();\n            Swal.fire('Success', 'Status updated', 'success');\n          }\n        });\n      }\n    });\n  };\n\n  \n\n  const isPDF = (filename) => filename?.toLowerCase().endsWith(\".pdf\");\n  const isImage = (filename) =>\n    [\".jpg\", \".jpeg\", \".png\", \".gif\", \".webp\", \".bmp\", \".tiff\"].some(ext =>\n      filename?.toLowerCase().endsWith(ext)\n    );\n\n  return (\n    <GlobalLayout onChange={onChange}>\n\n      <Modal\n        className=\"antmodalclassName\"\n        title={`Attached Docs\tFor ${modal?.data?.employeName}`}\n        width={1000}\n        footer={false}\n        open={modal.isOpen}\n        onOk={() => setModal({ open: false, data: {} })}\n        onCancel={() => setModal({ open: false, data: {} })}\n      >\n        <table className=\"w-full max-w-full rounded-xl\">\n          <thead>          \n          </thead>\n          <tbody>\n            <tr>\n              <td className=\"whitespace-nowrap text-center p-2\">\n           \n                <div className=\"flex flex-col space-y-4\">\n                  {modal?.data?.attachment && Array.isArray(modal?.data?.attachment) ? (\n                    modal.data.attachment.map((file, fileIndex) => {\n                      const url = `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`;\n\n                      if (isImage(file)) {\n                        return (\n                          <div key={fileIndex} className=\"flex items-center gap-2\">\n                            <p className=\"font-[500] text-[12px] text-black\">({fileIndex + 1})</p>\n                            <CommonImageViewer\n                              src={url}\n                              alt={`Uploaded ${fileIndex + 1}`}\n                            />\n                          </div>\n                        );\n                      } else if (isPDF(file)) {\n                        return (\n                          <Tooltip placement=\"topLeft\"  title={`PDF Attachment ${fileIndex + 1}`} key={fileIndex}>\n                            <div className=\"flex items-center gap-2\">\n                              <p className=\"font-[500] text-[12px] text-black\">({fileIndex + 1})</p>\n                              <button\n                                onClick={() => window.open(url, \"_blank\")}\n                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted hover:border-gray-800\"\n                                type=\"button\"\n                              >\n                                <FaFilePdf className=\"text-red-600 hover:text-red-700\" size={26} />\n                              </button>\n                            </div>\n                          </Tooltip>\n                        );\n                      } else {\n                        return null;\n                      }\n                    })\n                  ) : modal?.data?.attachment ? (\n                    (() => {\n                      const file = modal.data.attachment;\n                      const url = `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`;\n\n                      if (isImage(file)) {\n                        return (\n                          <CommonImageViewer\n                            src={url}\n                            alt=\"Uploaded Image\"\n                          />\n                        );\n                      } else if (isPDF(file)) {\n                        return (\n                          <Tooltip placement=\"topLeft\"  title=\"PDF Attachment\">\n                            <button\n                              onClick={() => window.open(url, \"_blank\")}\n                              className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted hover:border-gray-800\"\n                              type=\"button\"\n                            >\n                              <FaFilePdf className=\"text-red-600 hover:text-red-700\" size={26} />\n                            </button>\n                          </Tooltip>\n                        );\n                      } else {\n                        return null;\n                      }\n                    })()\n                  ) : (\n                    <span className=\"text-gray-600 text-sm text-center\">No File Attached</span>\n                  )}\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </Modal>\n\n\n      <div className=\"\">\n        <div className=\"sm:flex justify-between items-center md:space-y-0 space-y-2 py-1\">\n          <div className=\"sm:flex items-center sm:space-x-2\">\n            {userType === \"admin\" &&\n              <div className='flex justify-center items-center space-x-2 text-[14px] rounded-md'>\n\n                {/* <select\n                      {...register(\"PDCompanyId\")}\n                      className=\"bg-white focus:outline-none\"\n                    >\n                      <option className=\"\" value=\"\">Select Comapany</option>\n                      {companyList?.map((type) => (\n                        <option value={type?._id}>{type?.fullName}</option>\n                      ))}\n                    </select> */}\n\n                <Controller\n                  control={control}\n                  name=\"PDCompanyId\"\n                  rules={{ required: \"Company is required\" }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      defaultValue={\"\"}\n                      // onFocus={() => {\n                      //   dispatch(\n                      //     companySearch({\n                      //       text: \"\",\n                      //       sort: true,\n                      //       status: true,\n                      //       isPagination: false,\n                      //     })\n                      //   );\n                      // }}\n                      className={`${inputAntdSelectClassNameFilter} `}\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Company</Select.Option>\n                      {companyList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.fullName}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>}\n            {(userType === \"admin\" || userType === \"company\" || userType === \"companyDirector\") &&\n              <div className='flex justify-center sm:mb-0 mb-1 items-center space-x-2 text-[14px] rounded-md'>\n\n                {/* <select\n                      {...register(\"PDBranchId\")}\n                      className=\"bg-white focus:outline-none\"\n                    >\n                      <option className=\"\" value=\"\">Select Branch</option>\n                      {branchList?.map((type) => (\n                        <option value={type?._id}>{type?.fullName}</option>\n                      ))}\n                    </select> */}\n             \n                    <Select\n               \n                      defaultValue={\"\"}\n                      // onFocus={() => {\n                      //   dispatch(\n                      //     companySearch({\n                      //       text: \"\",\n                      //       sort: true,\n                      //       status: true,\n                      //       isPagination: false,\n                      //     })\n                      //   );\n                      // }}\n                      value={branchId}\n                      onChange={handleBranchChange}\n                      className={`${inputAntdSelectClassNameFilter} `}\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Branch</Select.Option>\n                      {branchList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.fullName}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                 \n              </div>}\n            {/* <Select\n              className={` ${inputAntdSelectClassNameFilter} `}\n              value={status}\n              onChange={(e) => {\n                setStatus(e);\n              }}\n              placeholder=\"Select Status\"\n              showSearch\n              filterOption={(input, option) =>\n                String(option?.children).toLowerCase().includes(input.toLowerCase())\n              }\n            >\n              <Select.Option value=\"\">Select Status</Select.Option>\n              <Select.Option value='Requested'>Requested</Select.Option>\n              <Select.Option value='Approved'>Approved</Select.Option>\n              <Select.Option value='Rejected'>Rejected</Select.Option>\n              <Select.Option value='Completed'>Completed</Select.Option>\n            </Select> */}\n\n\n           \n                <Select\n                  defaultValue={\"\"}\n                  className={`${inputAntdSelectClassNameFilter} `}\n                  showSearch\n                  value={status}\n                  onChange={handleStatusChange}\n                  filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">Select Status</Select.Option>\n                  <Select.Option value='Requested'>Requested</Select.Option>\n                  <Select.Option value='Approved'>Approved</Select.Option>\n                  <Select.Option value='Rejected'>Rejected</Select.Option>\n                  <Select.Option value='Completed'>Completed</Select.Option>\n                </Select>\n          \n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n               handleResetFilters()\n              }}\n              className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n           {canCreate && <Tooltip placement=\"topLeft\"  title=\"Create Termination\">\n              <button\n                onClick={() => {\n                  navigate(\"/admin/Termination/create\");\n                }}\n                className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n              >\n                <FaPlus />\n                <span className=\"text-[12px]\">Add Termination</span>\n              </button>\n            </Tooltip>}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"w-full\">\n        <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[#ffff] font-[500] h-[40px]\">\n                <th className=\"tableHead w-[10%]\">S.No.</th>\n                <th className=\"tableHead\">Employee Name</th>\n                {/* <th className=\"tableHead\">Description</th> */}\n                <th className=\"tableHead\">Apply Date</th>\n                <th className=\"tableHead\">Notice Period(days)</th>\n                {/* <th className=\"tableHead\">Attachments</th> */}\n                <th className=\"tableHead\">Status</th>\n                {/* <th className=\"tableHead\">More</th> */}\n                <th className=\"tableHead\">Action</th>\n              </tr>\n            </thead>\n            {loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {TerminationData && TerminationData?.length > 0 ? (\n                  TerminationData?.map((element, index) => (\n                    <React.Fragment key={element._id}>\n                      <tr\n                        className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"} border-b-[1px] border-[#DDDDDD]`}\n                      >\n                        <td className=\"tableData\">\n                          {index + 1 + (currentPage - 1) * limit}\n                        </td>\n\n                        <td className=\"tableData\">{element?.employeName ?? \"-\"}</td>\n                        {/* <td className=\"whitespace p-2\">{element?.description}</td> */}\n                        <td className=\"tableData\">{moment(element?.applyDate).format(\"DD-MM-YYYY\")}</td>\n                        <td className=\"tableData\">{element?.noticePeriod}</td>\n\n                       \n\n                        <td className=\"tableData\">\n                          <span\n                            className={`border-[1px] px-2 py-1.5 rounded-lg text-[12px] text-black ${element?.status === \"Completed\"\n                              ? \"bg-[#E0FFBE] border-green-600\"\n                              : element?.status === \"Requested\"\n                                ? \"bg-blue-100 border-blue-500\"\n                                : element?.status === \"Approved\"\n                                  ? \"bg-yellow-100 border-yellow-500\"\n                                  : element?.status === \"Rejected\"\n                                    ? \"bg-red-200 border-red-500\"\n                                    : \"bg-gray-100 border-gray-300\"\n                              }`}\n                          >\n                            {element?.status}\n                          </span>\n                        </td>\n\n                    \n\n                        <td className=\"tableData\">\n                          \n                          <Dropdown\n                            menu={{\n                              items: [\n                                {\n                                  key: 'view-doc',\n                                  label: (\n                                    <span\n                                      onClick={() =>\n                                        element?.attachment?.length > 0 &&\n                                        setModal({ isOpen: true, data: element, resignation: {} })\n                                      }\n                                      className={`flex items-center ${element?.attachment?.length > 0\n                                        ? 'text-rose-700 hover:text-rose-700'\n                                        : 'text-gray-400 cursor-not-allowed'\n                                        }`}\n                                    >\n                                      <FaImages className=\"mr-2\" size={16} />\n                                      View Document\n                                    </span>\n                                  ),\n                                  disabled: !(element?.attachment?.length > 0),\n                                },\n                                {\n                                  key: 'view-comment',\n                                  label: (\n                                    <span\n                                      onClick={() =>\n                                        showSwal(element?.reason || \"Data not available\")\n                                      }\n                                      className=\"flex items-center text-blue-800 hover:text-blue-700\"\n                                    >\n                                      <CgComment className=\"mr-2\" size={16} />\n                                      View Comment\n                                    </span>\n                                  ),\n                                },\n                                {\n                                  key: 'view-desc',\n                                  label: (\n                                    <span\n                                      onClick={() =>\n                                        showSwal(element?.description || \"Data not available\")\n                                      }\n                                      className=\"flex items-center text-blue-800 hover:text-blue-700\"\n                                    >\n                                      <CgComment className=\"mr-2\" size={16} />\n                                      View Description\n                                    </span>\n                                  ),\n                                },\n                                // {\n                                //   type: 'divider',\n                                // },\n                               canUpdate && {\n                                  key: 'reject',\n                                  label: (\n                                    <span\n                                      onClick={() => ![\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status) && handleStatusUpdate(element, \"Rejected\")}\n                                      className={`flex items-center ${[\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status)\n                                        ? 'text-gray-300 cursor-not-allowed'\n                                        : 'text-red-500 hover:text-red-500'\n                                        }`}\n                                    >\n                                      <MdRemoveCircle className=\"mr-2\" size={16} />\n                                      Reject\n                                    </span>\n                                  ),\n                                  disabled: [\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status),\n                                },\n                              canUpdate &&  {\n                                  key: 'approve',\n                                  label: (\n                                    <span\n                                      onClick={() => ![\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status) && handleStatusUpdate(element, \"Approved\")}\n                                      className={`flex items-center ${[\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status)\n                                        ? 'text-gray-300 cursor-not-allowed'\n                                        : 'text-teal-500 hover:text-teal-500'\n                                        }`}\n                                    >\n                                      <BsPassFill className=\"mr-2\" size={16} />\n                                      Approve\n                                    </span>\n                                  ),\n                                  disabled: [\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status),\n                                },\n                             canUpdate &&   {\n                                  key: 'complete',\n                                  label: (\n                                    <span\n                                      onClick={() =>\n                                        ![\"Completed\", \"Rejected\", \"Requested\"].includes(element?.status) &&\n                                        handleStatusUpdate(element, \"Completed\")\n                                      }\n                                      className={`flex items-center ${[\"Completed\", \"Rejected\", \"Requested\"].includes(element?.status)\n                                        ? 'text-gray-300 cursor-not-allowed'\n                                        : 'text-green-500 hover:text-green-500'\n                                        }`}\n                                    >\n                                      <MdBookmarkAdded className=\"mr-2\" size={16} />\n                                      Complete\n                                    </span>\n                                  ),\n                                  disabled: [\"Completed\", \"Rejected\", \"Requested\"].includes(element?.status),\n                                },\n                              canUpdate &&  {\n                                  key: 'edit',\n                                  label: (\n                                    <span\n                                      onClick={() =>\n                                        ![\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status) &&\n                                        navigate(`/admin/termination/edit/${encrypt(element?._id)}`)\n                                      }\n                                      className={`flex items-center ${[\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status)\n                                        ? 'text-gray-300 cursor-not-allowed'\n                                        : 'text-[#3c8dbc] hover:text-[#337ab7]'\n                                        }`}\n                                    >\n                                      <FaPenToSquare className=\"mr-2\" size={16} />\n                                      Edit\n                                    </span>\n                                  ),\n                                  disabled: [\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status),\n                                },\n                            canDelete &&    {\n                                  key: 'delete',\n                                  label: (\n                                    <span\n                                      onClick={() =>\n                                        ![\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status) &&\n                                        handleDelete(element?._id)\n                                      }\n                                      className={`flex items-center ${[\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status)\n                                        ? 'text-gray-300 cursor-not-allowed'\n                                        : 'text-red-600 hover:text-red-500'\n                                        }`}\n                                    >\n                                      <RiDeleteBin5Line className=\"mr-2\" size={16} />\n                                      Delete\n                                    </span>\n                                  ),\n                                  disabled: [\"Completed\", \"Rejected\", \"Approved\"].includes(element?.status),\n                                },\n                              ],\n                            }}\n                            trigger={['click']}\n                          >\n                            <Tooltip placement=\"topLeft\"  title=\"More Actions\">\n                              <button\n                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                type=\"button\"\n                              >\n                                <PiDotsThreeOutlineVerticalBold\n                                  className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                  size={16}\n                                />\n                              </button>\n                            </Tooltip>\n                          </Dropdown>\n                        </td>\n                      </tr>\n                    </React.Fragment>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td colSpan={6} className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\">\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>\n        {TerminationData?.length > 0 &&\n          <CustomPagination\n            totalCount={totalTerminationCount}\n            pageSize={limit}\n            currentPage={currentPage}\n            onChange={onPaginationChange}\n          />}\n      </div>\n\n      {modalOpen && selectedTemplate && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1501]\" onClick={closeModal}>\n          <div className=\"animate-slideInFromTop bg-white rounded-lg px-6 pt-6 pb-3 w-[800px] max-h-[70vh] overflow-y-hidden\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"mt-4\">\n              <div dangerouslySetInnerHTML={{ __html: selectedTemplate?.content }}></div>\n            </div>\n            <div className=\"mt-4 flex justify-end\">\n              <button\n                onClick={closeModal}\n                className=\"px-4 py-2 text-white bg-header rounded-md\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n\n    </GlobalLayout>\n  );\n}\nexport default TerminationList;\n"],"names":["_modal$data","_modal$data2","_modal$data3","_modal$data4","register","control","setValue","formState","errors","useForm","canCreate","canRead","canUpdate","canDelete","usePermissions","userCompanyId","userBranchId","userType","getUserIds","navigate","useNavigate","dispatch","useDispatch","TerminationData","totalTerminationCount","loading","useSelector","state","Termination","modal","setModal","JSON","parse","localStorage","getItem","concat","domainName","useState","isOpen","data","companyList","company","branchList","branch","companyId","useWatch","name","defaultValue","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialBranchId","initialStatus","currentPage","setCurrentPage","limit","setLimit","status","setStatus","searchText","setSearchText","branchId","setBranchId","useEffect","params","URLSearchParams","set","getTerminationRequest","pageSize","reqData","directorId","type","getTerminationList","branchSearch","text","sort","isPagination","companySearch","modalOpen","setModalOpen","selectedTemplate","setSelectedTemplate","closeModal","handleStatusUpdate","element","Swal","title","input","inputLabel","inputPlaceholder","showCancelButton","confirmButtonText","cancelButtonText","inputValidator","value","trim","html","moment","format","preConfirm","_popup$querySelector","_popup$querySelector2","popup","feedback","querySelector","selectedDate","date","then","result","isConfirmed","statusResignFunc","_id","reason","approvalDate","error","isPDF","filename","toLowerCase","endsWith","isImage","some","ext","_jsxs","GlobalLayout","onChange","e","children","_jsx","Modal","className","employeName","width","footer","open","onOk","onCancel","attachment","Array","isArray","map","file","fileIndex","url","process","CommonImageViewer","src","alt","Tooltip","placement","onClick","window","FaFilePdf","size","Controller","rules","required","render","_ref","field","Select","_objectSpread","inputAntdSelectClassNameFilter","showSearch","filterOption","option","String","includes","Option","fullName","FaPlus","colSpan","Loader2","length","index","_element$employeName","_element$attachment2","_element$attachment3","React","applyDate","noticePeriod","Dropdown","menu","items","key","label","_element$attachment","resignation","FaImages","disabled","showSwal","CgComment","description","MdRemoveCircle","BsPassFill","MdBookmarkAdded","encrypt","FaPenToSquare","id","icon","deleteResignFunc","Number","handleDelete","RiDeleteBin5Line","trigger","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","page","stopPropagation","dangerouslySetInnerHTML","__html","content"],"sourceRoot":""}