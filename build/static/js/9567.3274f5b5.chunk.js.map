{"version":3,"file":"static/js/9567.3274f5b5.chunk.js","mappings":"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","sources":["pages/global/other/commonEmailTemplate/EditCommonEmail.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { decrypt } from \"../../../../config/Encryption\";\nimport { useEffect, useState } from \"react\";\nimport {\n  domainName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputLabelClassName,\n} from \"../../../../constents/global\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport ReactQuill from \"react-quill\";\nimport { getcommonEmailDetails, updatecommonEmail } from \"./commonEmailFeatures/_common_email_reducers\";\nimport { Select } from \"antd\";\nimport getUserIds from \"../../../../constents/getUserIds\";\nimport Loader from \"../../../../global_layouts/Loader\";\n\n\nconst EditCommonEmail = () => {\n  const { loading: commonEmailTemplate } = useSelector((state) => state.emailTemplate);\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const {\n    userCompanyId,\n    userType\n  } = getUserIds();\n\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: userCompanyId,\n  });\n\n  const { emailTemplateIdEnc } = useParams();\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const emailTemplateId = decrypt(emailTemplateIdEnc);\n  const { commonEmailDetails } = useSelector((state) => state.emailTemplate);\n\n  const [editorValue, setEditorValue] = useState(``);\n  // useEffect(() => {\n  //   dispatch(employeSearch());\n  // }, []);\n  useEffect(() => {\n    let reqData = {\n      _id: emailTemplateId,\n    };\n    dispatch(getcommonEmailDetails(reqData));\n  }, []);\n\n  useEffect(() => {\n    if (commonEmailDetails) {\n\n      setValue(\"templateName\", commonEmailDetails?.title);\n      setValue(\"status\", commonEmailDetails?.status);\n      setEditorValue(commonEmailDetails?.content);\n    }\n  }, [commonEmailDetails]);\n\n  const onSubmit = (data) => {\n\n    const finalPayload = {\n      _id: emailTemplateId,\n      companyId: userInfoglobal?.userType === \"admin\" ? data?.PDCompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      directorId: userInfoglobal?.userType === \"companyDirector\" ? userInfoglobal?._id : userInfoglobal?.directorId,\n      branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ?  commonEmailDetails?.branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      title: data?.templateName,\n      status: data?.status,\n      content: editorValue\n    };\n\n    dispatch(updatecommonEmail(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  const handleEditorChange = (value) => {\n    setEditorValue(value);\n  };\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Template Name <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"templateName\", {\n                  required: \"Template Name is required\",\n                })}\n                className={`${inputClassName} ${errors.templateName ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Template Name\"\n              />\n              {errors.templateName && (\n                <p className=\"text-red-500 text-sm\">{errors.templateName.message}</p>\n              )}\n            </div>\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Status <span className=\"text-red-600\">*</span></label>\n              <Controller\n                name=\"status\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.status ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Status\"\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n\n                    <Select.Option value={true}>Active</Select.Option>\n                    <Select.Option value={false}>In Active</Select.Option>\n                  </Select>\n                )}\n              />\n              {errors.status && <p className=\"text-red-500 text-sm\">{errors.status.message}</p>}\n            </div>\n\n          </div>\n\n          <div className=\"mt-4 col-span-2\">\n            <label className={`${inputLabelClassName}`}>Content <span className=\"text-red-600\">*</span></label>\n            <ReactQuill\n              value={editorValue}\n              onChange={handleEditorChange}\n              placeholder=\"Write the email body here\"\n              modules={{\n                toolbar: [\n                  [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                  [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                  ['bold', 'italic', 'underline', 'strike'],\n                  [{ 'align': [] }],\n                  ['link', 'image', 'video'],\n                  ['blockquote', 'code-block'],\n                  ['clean']\n                ],\n              }}\n              formats={['header', 'font', 'list', 'bold', 'italic', 'underline', 'link', 'align', 'clean']}\n            />\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={commonEmailTemplate}\n              className={`${commonEmailTemplate ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 mt-3 rounded`}\n            >\n              {commonEmailTemplate ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default EditCommonEmail;\n"],"names":["EditCommonEmail","loading","commonEmailTemplate","useSelector","state","emailTemplate","register","handleSubmit","control","setValue","formState","errors","useForm","dispatch","useDispatch","navigate","useNavigate","userCompanyId","userType","getUserIds","emailTemplateIdEnc","useWatch","name","defaultValue","useParams","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","emailTemplateId","decrypt","commonEmailDetails","editorValue","setEditorValue","useState","useEffect","reqData","_id","getcommonEmailDetails","title","status","content","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","PDCompanyId","directorId","branchId","templateName","updatecommonEmail","then","error","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","Controller","render","_ref","field","Select","inputAntdSelectClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","ReactQuill","onChange","modules","toolbar","formats","disabled","Loader"],"sourceRoot":""}