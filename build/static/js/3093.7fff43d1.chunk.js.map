{"version":3,"file":"static/js/3093.7fff43d1.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/client_billing_payment_tracking/ClientBillingPaymentTracking.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertIntoAmount,\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { clientBillingPaymentTrackingReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\n\nfunction ClientBillingPaymentTracking() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const {\n    clientBillingPaymentTrackingReportList,\n    clientBillingPaymentTrackingReportFunc_loading,\n    clientBillingPaymentTrackingCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList, groupSearchLoading } = useSelector((state) => state.clientGroup);\n  const { clientList } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n        organizationId: PDOrganizationType,\n        organizationIds: [],\n        departmentId: department,\n        departmentIds: [],\n        industryId: PDindustrytype,\n        industryIds: [],\n        groupId: groupName,\n        groupIds: [],\n      },\n    };\n  };\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(clientBillingPaymentTrackingReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n\n  const handleDepartmentModal = (element) => {\n    setDepartmentModalOpen(true);\n    setDepartmentModalData(element);\n  };\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"clientBillingPaymentTrackingReport\");\n    // Title\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Group Name\", key: \"groupName\", width: 10 },\n      { header: \"Client Name\", key: \"clientName\", width: 10 },\n      { header: \"Invoice Name \", key: \"invoiceName\", width: 10 },\n      { header: \"Sub Total\", key: \"subTotal\", width: 10 },\n      { header: \"IGST\", key: \"iGST\", width: 10 },\n      { header: \"CGST\", key: \"cGST\", width: 10 },\n      { header: \"SGST\", key: \"sGST\", width: 10 },\n      { header: \"Total Invoice Amount\", key: \"totalInvoiceAmount\", width: 10 },\n      { header: \"Recieved Amount\", key: \"recievedAmount\", width: 10 },\n      { header: \"Recieved Date\", key: \"recievedDate\", width: 10 },\n\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.clientBillingPaymentTrackingReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!response && !response?.data?.docs) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1 || \"N/A\",\n        groupName: data?.groupName || \"N/A\",\n        clientName: data?.clientName || \"N/A\",\n        invoiceName: data?.invoiceNumber || \"N/A\",\n        subTotal: data?.receiptData?.subTotalAmount || \"N/A\",\n        iGST: data?.IGST || \"N/A\",\n        cGST: data?.CGST || \"N/A\",\n        sGST: data?.SGST || \"N/A\",\n        totalInvoiceAmount: data?.receiptData?.subTotalAmount || \"N/A\",\n        recievedAmount: data?.receiptData?.grandTotalAmount || \"N/A\",\n        recievedDate: dayjs(data?.receiptData?.date).format('DD-MM-YYYY hh:mm a') || \"N/A\",\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"clientBillingPaymentTrackingReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n\n\n\n    doc.setFontSize(16);\n    doc.text(`Client  - ${departmentModalData?.fullName}`, 40, 40);\n    doc.text(`${departmentModalData?.email ?? \"-\"} / ${departmentModalData?.mobile?.code + departmentModalData?.mobile?.number}`, 40, 60);\n    const headers = [\n      \"S.No.\",\n      \"Group Name\",\n      \"Client Name\",\n      \"Invoice Name \",\n      \"Sub Total\",\n      \"IGST\",\n      \"CGST\",\n      'SGST',\n      'Total Invoice Amount',\n      'Recieved Amount',\n      'Recieved Date',\n    ];\n    const response = await reportsServices?.clientBillingPaymentTrackingReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!response && !response?.data?.docs) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n\n        data?.groupName || \"N/A\",\n        data?.clientName || \"N/A\",\n        data?.invoiceNumber || \"N/A\",\n        data?.receiptData?.subTotalAmount || \"N/A\",\n        data?.IGST || \"N/A\",\n        data?.CGST || \"N/A\",\n        data?.SGST || \"N/A\",\n        data?.receiptData?.subTotalAmount || \"N/A\",\n        data?.receiptData?.grandTotalAmount || \"N/A\",\n        dayjs(data?.receiptData?.date).format('DD-MM-YYYY hh:mm a') || \"N/A\",\n\n\n      ];\n    });\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`clientBillingPaymentTrackingReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1 sm:flex justify-between items-center\">\n          <div className=\"sm:flex  grid grid-cols-1 gap-1.5 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            {/* <Controller\n              control={control}\n              name=\"PDOrganizationType\"\n              rules={{ required: \"Organization is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={\"\"}\n                  className={`inputAntdSelectClassNameFilterReport `}\n                  showSearch\n                  onFocus={() => handleFocusOrgType()}\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">\n                    Select Organization Type\n                  </Select.Option>\n                  {orgSearchloading ? (\n                    <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>\n                  ) : (\n                    orgTypeList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.name}\n                      </Select.Option>\n                    ))\n                  )}\n                </Select>\n              )}\n            /> */}\n\n            {/* <Controller\n              control={control}\n              name=\"PDindustrytype\"\n              rules={{ required: \"Industry type is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={\"\"}\n                  onFocus={() => {\n                    handleFocusIndustry();\n                  }}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                  className={`inputAntdSelectClassNameFilterReport `}\n                >\n                  <Select.Option value=\"\"> Select Industry Type</Select.Option>\n                  {indusSearchloading ? (\n                    <Select.Option disabled>\n                      <Loader />\n                    </Select.Option>\n                  ) : (\n                    industryListData?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.name}\n                      </Select.Option>\n                    ))\n                  )}\n                </Select>\n              )}\n            /> */}\n\n            {/* <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    placeholder=\"Select Status\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    {[\n                      { label: \"Active\", value: \"true\" },\n                      { label: \"InActive\", value: \"false\" },\n                    ]?.map((array) => {\n                      return (\n                        <Select.Option value={array?.value}>\n                          {array?.label}\n                        </Select.Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              />\n            </div> */}\n\n            {/* <Controller\n              name=\"department\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className={`inputAntdSelectClassNameFilterReport`}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                  onFocus={() => {\n                    dispatch(\n                      deptSearch({\n                        text: \"\",\n                        sort: true,\n                        status: true,\n                        isPagination: false,\n                        companyId:\n                          userInfoglobal?.userType === \"admin\"\n                            ? CompanyId\n                            : userInfoglobal?.userType === \"company\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.companyId,\n                        branchId: [\n                          \"admin\",\n                          \"company\",\n                          \"companyDirector\",\n                        ].includes(userInfoglobal?.userType)\n                          ? BranchId\n                          : userInfoglobal?.userType === \"companyBranch\"\n                          ? userInfoglobal?._id\n                          : userInfoglobal?.branchId,\n                      })\n                    );\n                  }}\n                  onChange={(value) => {\n                    field.onChange(value);\n                  }}\n                  placeholder=\"Select Department\"\n                >\n                  <Select.Option value=\"\">Select Department</Select.Option>\n                  {depLoading ? (\n                    <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>\n                  ) : (\n                    sortByPropertyAlphabetically(departmentListData)?.map(\n                      (element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.name}\n                        </Select.Option>\n                      )\n                    )\n                  )}\n                </Select>\n              )}\n            /> */}\n\n            <div className=\"\">\n              <Controller\n                name=\"groupName\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Group\"\n                    onFocus={() => {\n                      dispatch(\n                        clientGrpSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                          groupId: \"\",\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Group</Select.Option>\n                    {groupSearchLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(clientGroupList)?.map((element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName} ({element?.groupName})\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"PDOrganizationType\", \"\");\n                setValue(\"PDindustrytype\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"groupName\", \"\");\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          >\n\n          </Collapse>\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1 justify-between items-center\">\n            <div className=\"flex py-1 items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Group Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Client Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">Invoice Number</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Sub Total</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">IGST</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">CGST</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">SGST</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Total Invoice Amount </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Recieved Amount </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Recieved Date </th>\n\n\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Created At\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Created By\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Departments\n                </th> */}\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th> */}\n              </tr>\n            </thead>\n            {clientBillingPaymentTrackingReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {clientBillingPaymentTrackingReportList &&\n                  clientBillingPaymentTrackingReportList?.length > 0 ? (\n                  clientBillingPaymentTrackingReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.groupName}\n                      </td>\n\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.clientName}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.invoiceNumber || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {convertIntoAmount(element?.receiptData?.subTotalAmount) || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {convertIntoAmount(element?.IGST)}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {convertIntoAmount(element?.CGST)}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {convertIntoAmount(element?.SGST)}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {convertIntoAmount(element?.receiptData?.subTotalAmount)}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {convertIntoAmount(element?.receiptData?.grandTotalAmount)}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.receiptData?.date || \"-\"}\n                      </td>\n                      {/* \n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.createdBy}\n                      </td>\n                      <td className=\"tableData \">\n                        {(\n                          <div className=\"flex justify-center items-center gap-1\">\n                            <span>{element?.departmentData?.length}</span>\n                            <span className=\"flex justify-center items-center cursor-pointer\">\n                              <FaEye\n                                onClick={() => handleDepartmentModal(element)}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              />\n                            </span>\n                          </div>\n                        ) || \"-\"}\n                      </td> */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n          <Modal\n            className=\"antmodalclassName !w-[60%] !h-[50%]\"\n            title={`Client / ${departmentModalData?.fullName} `}\n            open={departmentModalOpen}\n            onCancel={() => setDepartmentModalOpen(false)}\n            footer={null}\n          >\n            <div className=\"flex justify-between items-center mb-4\">\n              <div>\n                {departmentModalData?.email ?? \"-\"} / {departmentModalData?.mobile?.code + departmentModalData?.mobile?.number}\n              </div>\n\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                    S.No.\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Department Name\n                  </th>\n\n                  {/* <th className=\"border-none p-2 whitespace-nowrap \">Email</th> */}\n                  {/* <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Created At\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Created By\n                  </th> */}\n                </tr>\n              </thead>\n              {clientBillingPaymentTrackingReportFunc_loading ? (\n                <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={15}\n                    className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr>\n              ) : (\n                <tbody>\n                  {departmentModalData?.departmentData &&\n                    departmentModalData?.departmentData.length > 0 ? (\n                    departmentModalData?.departmentData?.map(\n                      (element, index) => (\n                        <tr\n                          className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                            } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                        >\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {index + 1 + (currentPage - 1) * pageSize}\n                          </td>\n\n                          {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.name}\n                          </td>\n                          {/* \n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.email || \"-\"}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.mobile?.code || \"-\"}{\" \"}\n                            {element?.mobile?.number || \"-\"}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {dayjs(element?.createdAt).format(\n                              \"DD-MM-YYYY hh:mm a\"\n                            )}\n                          </td>\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.createdBy}\n                          </td> */}\n                          {/* <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                        <div onClick={()=>{handleDepartmentModal(element)}} className=\"flex justify-center items-center rounded-md h-10 w-10 border-2 border-cyan-500\">\n                          {element?.departmentData?.length || 0}\n                        </div>\n                      </td> */}\n                        </tr>\n                      )\n                    )\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={15}\n                        className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              )}\n            </table>\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={clientBillingPaymentTrackingCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default ClientBillingPaymentTracking;\n"],"names":["_departmentModalData$4","_departmentModalData$5","_departmentModalData$6","_departmentModalData$7","control","formState","errors","setValue","watch","useForm","pageSize","setPageSize","useState","dispatch","useDispatch","clientBillingPaymentTrackingReportList","clientBillingPaymentTrackingReportFunc_loading","clientBillingPaymentTrackingCount","useSelector","state","reports","departmentListData","loading","depLoading","department","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","groupSearchLoading","clientGroup","clientList","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","PDOrganizationType","PDindustrytype","groupName","useEffect","timer","setTimeout","clearTimeout","generateFinancialYears","financialYears","year","push","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","status","organizationId","organizationIds","departmentId","departmentIds","industryId","industryIds","groupId","groupIds","fetchClientServiceTaskReport","clientBillingPaymentTrackingReportFunc","departmentModalOpen","setDepartmentModalOpen","branchSearch","dayjs","subtract","handleSubmit","async","generateExcel","_response$data","_response$data2","_response$data2$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","key","width","getRow","eachCell","cell","fill","type","pattern","fgColor","argb","font","bold","alignment","vertical","horizontal","border","top","style","left","bottom","right","response","reportsServices","data","docs","apiData","map","index","_data$receiptData","_data$receiptData2","_data$receiptData3","_data$receiptData4","sno","clientName","invoiceName","invoiceNumber","subTotal","receiptData","subTotalAmount","iGST","IGST","cGST","CGST","sGST","SGST","totalInvoiceAmount","recievedAmount","grandTotalAmount","recievedDate","date","format","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generatePDF","_departmentModalData$","_departmentModalData$2","_departmentModalData$3","_response$data3","_response$data4","_response$data4$docs","doc","jsPDF","orientation","unit","setFontSize","fullName","email","mobile","code","number","body","_data$receiptData5","_data$receiptData6","_data$receiptData7","_data$receiptData8","autoTable","startY","head","margin","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","items","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","element","PDBranchId","message","_ref2","_sortByPropertyAlphab","onFocus","clientGrpSearch","onChange","disabled","ListLoader","sortByPropertyAlphabetically","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref3","isActive","MdKeyboardArrowDown","size","color","transform","transition","htmlFor","id","Number","pazeSizeReport","colSpan","Loader2","_element$receiptData","_element$receiptData2","_element$receiptData3","_element$receiptData4","convertIntoAmount","Modal","title","open","onCancel","footer","departmentData","CustomPagination","totalCount","page"],"sourceRoot":""}