{"version":3,"file":"static/js/6743.69a9831c.chunk.js","mappings":"0YAkUA,QA5SA,WACI,MAAM,SAAEA,EAAQ,SAAEC,EAAQ,QAAEC,EAASC,WAAW,OAAEC,KAAaC,EAAAA,EAAAA,MAEzDC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACX,cAAEC,EAAa,gBAAEC,EAAe,QAAEC,IAAYC,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,SAEzE,gBAAEC,EAAiBJ,QAASK,IAAyBJ,EAAAA,EAAAA,IAAYC,GAASA,EAAMI,UAC/EC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAS,GAEzCG,GAAYC,EAAAA,EAAAA,IAAS,CACvBvB,UACAwB,KAAM,cACNC,aAAc,KAGZC,GAASH,EAAAA,EAAAA,IAAS,CACpBvB,UACAwB,KAAM,SACNC,aAAc,KAUZE,EAAU,CAACL,EAAWI,EAAQT,GAAYW,KAAK,MAC9CC,EAAeC,IAAoBX,EAAAA,EAAAA,WAAS,IAEnDY,EAAAA,EAAAA,WAAU,KACDF,EAIe,IAAhBT,EACFY,IAEAX,EAAe,GANfS,EAAiBlB,IAAO,IAQzB,CAACe,KAGNI,EAAAA,EAAAA,WAAU,KACNC,KACD,CAACZ,IAEJ,MAAMY,EAAiBA,KACnB,MAAMC,EAAU,CACZC,KAAMd,EACNe,MA1BM,GA2BNC,WAAY,CACRC,KAAMpB,EACNqB,MAAM,EACNZ,OAAQA,EACRa,cAAc,EACdC,UAAWlB,IAGnBhB,GAASmC,EAAAA,EAAAA,IAAaR,KAiCpBS,EAAqBA,KAAO,IAADC,EACT,OAAf7B,QAAe,IAAfA,GAAqB,QAAN6B,EAAf7B,EAAiB8B,YAAI,IAAAD,GAArBA,EAAuBE,QACxBvC,GACIwC,EAAAA,EAAAA,IAAc,CACVP,cAAc,EACdF,KAAM,GACNC,MAAM,EACNZ,QAAQ,OAUlB,UAAEqB,EAAS,QAAEC,EAAO,UAAEC,EAAS,UAAEC,IAAcC,EAAAA,EAAAA,KACrD,OACIC,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACC,SANAC,IAEdrC,EAAcqC,IAImBC,SAAA,EAE7BC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQF,UACnBJ,EAAAA,EAAAA,MAAA,OAAKM,UAAU,mEAAkEF,SAAA,EAC7EJ,EAAAA,EAAAA,MAAA,OAAKM,UAAU,2DAA0DF,SAAA,EACrEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEF,UACbC,EAAAA,EAAAA,KAACE,EAAAA,GAAU,CACPnC,KAAK,cACLxB,QAASA,EACT4D,MAAO,CAAEC,SAAU,uBACnBC,OAAQC,IAAA,IAAAC,EAAA,IAAC,MAAEC,GAAOF,EAAA,OACdX,EAAAA,EAAAA,MAACc,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCF,GAAK,IACTP,UAAS,IAAAU,OAAMC,EAAAA,GAA8B,KAC7CC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IAClBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQjB,UAAUmB,cAAcC,SAASJ,EAAMG,eAE1DE,YAAY,eACZC,QAASpC,EAAmBc,SAAA,EAE5BC,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAACC,MAAM,GAAExB,SAAC,mBACvBzC,GACG0C,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAACE,UAAQ,EAAAzB,UACnBC,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,MAGoC,QAFnClB,GAEhBmB,EAAAA,EAAAA,IAA4C,OAAfrE,QAAe,IAAfA,OAAe,EAAfA,EAAiB8B,aAAK,IAAAoB,OAAA,EAAnDA,EAAqDoB,IAAKC,IACtD5B,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAAiBC,MAAW,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMC,IAAI9B,SACvC,OAAJ6B,QAAI,IAAJA,OAAI,EAAJA,EAAM7D,MADa,OAAJ6D,QAAI,IAAJA,OAAI,EAAJA,EAAMC,gBAwBlD7B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEF,UACbC,EAAAA,EAAAA,KAACE,EAAAA,GAAU,CACPnC,KAAK,SACLxB,QAASA,EACT4D,MAAO,CAAC,EACRE,OAAQyB,IAAA,IAAC,MAAEtB,GAAOsB,EAAA,OACdnC,EAAAA,EAAAA,MAACc,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCF,GAAK,IACTP,UAAS,SAAAU,OAAWC,EAAAA,GAA8B,KAAAD,OAAIlE,EAAOwB,OACvD,gBACA,mBAENmD,YAAY,gBACZP,YAAU,EACVC,aAAcA,CAACC,EAAOC,IAClBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQjB,UAAUmB,cAAcC,SAASJ,EAAMG,eACzDnB,SAAA,EAEDC,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAACC,MAAM,GAAExB,SAAC,mBACxBC,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAACC,OAAO,EAAKxB,SAAC,cAC5BC,EAAAA,EAAAA,KAACS,EAAAA,EAAOa,OAAM,CAACC,OAAO,EAAMxB,SAAC,yBAK7CC,EAAAA,EAAAA,KAAA,UACI+B,QAASA,KACLzF,EAAS,cAAe,IACxBA,EAAS,SAAU,KAEvB2D,UAAU,8FAA6FF,UAEvGC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaF,SAAC,gBAGtCJ,EAAAA,EAAAA,MAAA,OAAKM,UAAU,sCAAqCF,SAAA,EAChDC,EAAAA,EAAAA,KAAA,UACI+B,QAASA,KACLzF,EAAS,cAAe,IACxBA,EAAS,SAAU,KAEvB2D,UAAU,4FAA2FF,UAErGC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaF,SAAC,YAEhCT,GAAaC,IACXS,EAAAA,EAAAA,KAACgC,EAAAA,EAAO,CAACC,UAAU,UAAWC,MAAM,YAAWnC,UAC3CJ,EAAAA,EAAAA,MAAA,UAAQoC,QAASA,KAAQpF,EAAS,wBAA0BsD,UAAU,yFAAwFF,SAAA,EAC1JC,EAAAA,EAAAA,KAACmC,EAAAA,IAAM,KACPnC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaF,SAAC,4BAMtDJ,EAAAA,EAAAA,MAAA,OAAKM,UAAU,SAAQF,SAAA,EACnBC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sDAAqDF,SAC/DR,IAAWI,EAAAA,EAAAA,MAAA,SAAOM,UAAU,sCAAqCF,SAAA,EAC9DC,EAAAA,EAAAA,KAAA,SAAOC,UAAU,GAAEF,UACfJ,EAAAA,EAAAA,MAAA,MAAIM,UAAU,qGAAoGF,SAAA,EAC9GC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CF,SAAC,cAC1DC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,cAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,WAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,iBAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,gBAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,gBAClDC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,SAAC,YAChDN,GAAaD,KAAcQ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CF,SAAC,iBAI9F9C,GAAU+C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBF,UAC7CC,EAAAA,EAAAA,KAAA,MACIoC,QAAS,GACTnC,UAAU,+DAA8DF,UAExEC,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,SAGZrC,EAAAA,EAAAA,KAAA,SAAAD,SACKhD,GAA8B,OAAbA,QAAa,IAAbA,GAAAA,EAAeoC,OAAqB,OAAbpC,QAAa,IAAbA,OAAa,EAAbA,EAAeoC,KAAKC,QAAS,EACrD,OAAbrC,QAAa,IAAbA,OAAa,EAAbA,EAAeoC,KAAKwC,IAAI,CAACW,EAASC,KAAK,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACnClD,EAAAA,EAAAA,MAAA,MAAgBM,UAAS,GAAAU,OAAK4B,EAAQ,IAAM,EAAI,kBAAoB,WAAU,gEAA+DxC,SAAA,EACzIC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAC7CwC,EAAQ,EA/NvC,IA+N6C5E,EAAc,MAEjCqC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAAsB,QAAtByC,EAAS,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASQ,mBAAW,IAAAN,EAAAA,EAAI,OAC5ExC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAAkB,QAAlB0C,EAAA,GAAA9B,OAAY,OAAP2B,QAAO,IAAPA,OAAO,EAAPA,EAASvE,KAAI,gBAAA0E,EAAAA,EAAO,OAC3EzC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAAuB,QAAvB2C,EAAA,GAAA/B,OAAY,OAAP2B,QAAO,IAAPA,OAAO,EAAPA,EAASS,UAAS,gBAAAL,EAAAA,EAAO,OAChF1C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAA2D,QAA3D4C,EAAA,GAAAhC,OAAKqC,IAAa,OAAPV,QAAO,IAAPA,OAAO,EAAPA,EAASW,WAAWC,OAAO,sBAAqB,gBAAAP,EAAAA,EAAO,OACpH3C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,SAAuB,QAAvB6C,EAAA,GAAAjC,OAAY,OAAP2B,QAAO,IAAPA,OAAO,EAAPA,EAASa,UAAS,gBAAAP,EAAAA,EAAO,OAEhF5C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCF,UAC9CC,EAAAA,EAAAA,KAAA,QACIC,UAAS,GAAAU,OAAY,OAAP2B,QAAO,IAAPA,GAAAA,EAASrE,OAAS,gCAAkC,6BAA4B,+DAC5B8B,SAC1D,OAAPuC,QAAO,IAAPA,GAAAA,EAASrE,OAAS,SAAqB,QAAb4E,EAAG,YAAUA,EAAI,SAGlDpD,GAAaD,KAAcQ,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCF,UAC1EJ,EAAAA,EAAAA,MAAA,QAAMM,UAAU,mDAAkDF,SAAA,CAC7DP,IAAaQ,EAAAA,EAAAA,KAACgC,EAAAA,EAAO,CAACC,UAAU,UAAWC,MAAM,OAAMnC,UACpDC,EAAAA,EAAAA,KAAA,UAAQ+B,QAASA,KAAQpF,EAAS,qBAADgE,QAAsByC,EAAAA,EAAAA,GAAe,OAAPd,QAAO,IAAPA,OAAO,EAAPA,EAAST,QAAW5B,UAAU,oEAAoE2B,KAAK,SAAQ7B,UAC1KC,EAAAA,EAAAA,KAACqD,EAAAA,IAAa,CAACpD,UAAU,uCAAuCqD,KAAM,SAG7E7D,IAAaO,EAAAA,EAAAA,KAACgC,EAAAA,EAAO,CAACC,UAAU,UAAWC,MAAM,SAAQnC,UACtDC,EAAAA,EAAAA,KAAA,UAAQ+B,QAASA,IA/M/CwB,KAClB,IAAI/E,EAAU,CACVqD,IAAK0B,GAETC,IAAAA,KAAU,CACNtB,MAAO,UACPtD,KAAM,mCACN6E,KAAM,UACNC,kBAAkB,EAClBC,iBAAkB,OACnBC,KAAMC,IACDA,EAAOC,aACPjH,GAASkH,EAAAA,EAAAA,IAAgBvF,IAAUoF,KAAMI,IAClB,IAADC,EAAT,OAAJD,QAAI,IAAJA,GAAAA,EAAME,QAEHvG,EAAc,GAAoC,IAAlB,OAAbZ,QAAa,IAAbA,GAAmB,QAANkH,EAAblH,EAAeoC,YAAI,IAAA8E,OAAN,EAAbA,EAAqB7E,QACxCxB,EAAeuG,OAAOxG,EAAc,IAGpCY,UA4LmD6F,CAAoB,OAAP9B,QAAO,IAAPA,OAAO,EAAPA,EAAST,KAAM5B,UAAU,4DAA4D2B,KAAK,SAAQ7B,UAClIC,EAAAA,EAAAA,KAACqE,EAAAA,IAAgB,CAACpE,UAAU,kCAAkCqD,KAAM,gBA1B/Ef,MAiCVvC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBF,UACrCC,EAAAA,EAAAA,KAAA,MAAIoC,QAAS,EAAGnC,UAAU,6EAA4EF,SAAC,8BAM9H/C,EArQC,KAsQEgD,EAAAA,EAAAA,KAACsE,EAAAA,EAAgB,CACbC,WAAYvH,EACZwH,SAxQN,GAyQM7G,YAAaA,EACbkC,SA9QQpB,IACxBb,EAAea,WAkRvB,C,6DCrTA,QATA,WACI,OACGuB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CF,UAExDC,EAAAA,EAAAA,KAACyE,EAAAA,EAAI,CAACnB,KAAK,WAGpB,C","sources":["pages/global/address/state/StateList.js","global_layouts/Loader/Loader.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { encrypt } from \"../../../../config/Encryption\"\nimport { FaPenToSquare, FaPlus } from \"react-icons/fa6\"\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { FaAngleDown } from \"react-icons/fa\";\nimport { HiOutlineFilter } from \"react-icons/hi\";\nimport { countrySearch, getCountryListFunc } from \"../country/CountryFeatures/_country_reducers\"\nimport { deleteStateFunc, getStateList, stateSearch } from \"./featureStates/_state_reducers\"\nimport Loader from \"../../../../global_layouts/Loader/Loader\"\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\"\nimport { Select, Tooltip } from \"antd\"\nimport { inputAntdSelectClassNameFilter, inputClassName, sortByPropertyAlphabetically } from \"../../../../constents/global\"\nimport usePermissions from \"../../../../config/usePermissions\"\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\"\nimport dayjs from \"dayjs\"\nimport ListLoader from \"../../../../global_layouts/ListLoader\"\n\nfunction StateList() {\n    const { register, setValue, control, formState: { errors } } = useForm();\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const { stateListData, totalStateCount, loading } = useSelector(state => state.states)\n    // const [status, setStatus] = useState(\"\");\n    const { countryListData, loading: countrySearchLoading } = useSelector(state => state.country)\n    const [searchText, setSearchText] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const CountryId = useWatch({\n        control,\n        name: \"PDCountryId\",\n        defaultValue: \"\",\n    });\n\n    const status = useWatch({\n        control,\n        name: \"status\",\n        defaultValue: \"\",\n    });\n\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const limit = 10;\n\n\n    const filters = [CountryId, status, searchText].join(\"-\");\n    const [isFirstRender ,setisFirstRender] = useState(false)\n    \n    useEffect(() => {\n        if (!isFirstRender) {\n          setisFirstRender(state=>true);\n          return;\n        }\n        if (currentPage === 1) {\n          fetchStateList();\n        } else {\n          setCurrentPage(1);\n        }\n      }, [filters]);\n\n    \n    useEffect(() => {\n        fetchStateList();\n    }, [currentPage]);\n\n    const fetchStateList = () => {\n        const reqData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                text: searchText,\n                sort: true,\n                status: status,\n                isPagination: true,\n                countryId: CountryId\n            }\n        };\n        dispatch(getStateList(reqData));\n    };\n\n\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteStateFunc(reqData)).then((data) => {\n                    if (!data?.error) {\n                        // fetchStateList();\n                        if (currentPage > 1 && stateListData?.docs?.length == 1) {\n                            setCurrentPage(Number(currentPage - 1));\n\n                        } else {\n                            fetchStateList();\n                        }\n\n                    }\n                })\n            }\n        });\n\n    };\n\n    const handleFocusCountry = () => {\n        if (!countryListData?.docs?.length) {\n            dispatch(\n                countrySearch({\n                    isPagination: false,\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                })\n            );\n        }\n    };\n\n    const onChange = (e) => {\n        // \n        setSearchText(e);\n    };\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n    return (\n        <GlobalLayout onChange={onChange}>\n           \n            <div className=\"w-full\">\n                <div className='xl:flex justify-between items-center lg:space-y-0 space-y-2 py-1'>\n                    <div className=\"grid grid-cols-1 sm:grid-cols-3 md:flex md:gap-3 gap-1.5\">\n                        <div className=\"\">\n                            <Controller\n                                name=\"PDCountryId\"\n                                control={control}\n                                rules={{ required: \"Country is required\" }}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        className={` ${inputAntdSelectClassNameFilter} `}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                        placeholder=\"Country Name\"\n                                        onFocus={handleFocusCountry}\n                                    >\n                                        <Select.Option value=\"\">Select Country</Select.Option>\n                                        {countrySearchLoading ? (\n                                            <Select.Option disabled>\n                                                <ListLoader />\n                                            </Select.Option>\n                                        ) : (\n                                            sortByPropertyAlphabetically(countryListData?.docs)?.map((type) => (\n                                                <Select.Option key={type?._id} value={type?._id}>\n                                                    {type?.name}\n                                                </Select.Option>\n                                            ))\n                                        )}\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                        {/* <Select\n                                className={` ${inputAntdSelectClassNameFilter} `}\n                                value={status}\n                                onChange={(e) => {\n                                    setStatus(e);\n                                }}\n                                placeholder=\"Select Status\"\n                                showSearch\n                                filterOption={(input, option) =>\n                                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                }                            >\n                                <Select.Option value=\"\">Select Status</Select.Option>\n                                <Select.Option value={true}>{\"Active\"}</Select.Option>\n                                <Select.Option value={false}>{\"InActive\"}</Select.Option>\n                            </Select> */}\n                        <div className=\"\">\n                            <Controller\n                                name=\"status\"\n                                control={control}\n                                rules={{}}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.status\n                                            ? \"border-[1px] \"\n                                            : \"border-gray-300\"\n                                            }`}\n                                        placeholder=\"Select Status\"\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                    >\n                                        <Select.Option value=\"\">Select Status</Select.Option>\n                                        <Select.Option value={true}> Active </Select.Option>\n                                        <Select.Option value={false}> InActive </Select.Option>\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                        <button\n                            onClick={() => {\n                                setValue(\"PDCountryId\", \"\");\n                                setValue(\"status\", \"\");\n                            }}\n                            className=\"bg-header  py-1 w-24 mt-1 rounded-md md:flex hidden justify-center items-center  text-white\"\n                        >\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                    </div>\n                    <div className=\"flex justify-end items-center gap-2\">\n                        <button\n                            onClick={() => {\n                                setValue(\"PDCountryId\", \"\");\n                                setValue(\"status\", \"\");\n                            }}\n                            className=\"bg-header  py-1.5 rounded-md md:hidden flex px-10 justify-center items-center  text-white\"\n                        >\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                        {(canCreate && canRead) &&\n                            <Tooltip placement=\"topLeft\"  title='Add State'>\n                                <button onClick={() => { navigate(\"/admin/state/create\") }} className='bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white'>\n                                    <FaPlus />\n                                    <span className='text-[12px]'>Add State</span>\n                                </button>\n                            </Tooltip>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"w-full\">\n                <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n                    {canRead && <table className=\"w-full max-w-full  overflow-x-auto \">\n                        <thead className=''>\n                            <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-[#074173] text-white font-[500] h-[40px]'>\n                                <th className='border-none p-2 whitespace-nowrap w-[10%]'>  S.no. </th>\n                                <th className='border-none p-2 whitespace-nowrap'>Country </th>\n                                <th className='border-none p-2 whitespace-nowrap'>State</th>\n                                <th className='border-none p-2 whitespace-nowrap'>State Code </th>\n                                <th className='border-none p-2 whitespace-nowrap'>createdAt </th>\n                                <th className='border-none p-2 whitespace-nowrap'>createdBy </th>\n                                <th className='border-none p-2 whitespace-nowrap'>Status</th>\n                                {(canDelete || canUpdate) && <th className='border-none p-2 whitespace-nowrap w-[10%]'> Action</th>}\n                            </tr>\n                        </thead>\n\n                        {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                            <td\n                                colSpan={10}\n                                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                            >\n                                <Loader2 />\n                            </td>\n                        </tr> :\n                            <tbody>\n                                {stateListData && stateListData?.docs && stateListData?.docs.length > 0 ?\n                                    stateListData?.docs.map((element, index) => (\n                                        <tr key={index} className={`${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'}  border-b-[1px] border-[#DDDDDD] text-[#374151] text-[14px]`}>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                {index + 1 + ((currentPage - 1) * limit)}\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.countryName ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{`${element?.name} ` ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{`${element?.stateCode} ` ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{`${dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a')} ` ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{`${element?.createdBy} ` ?? \"-\"}</td>\n\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                <span\n                                                    className={`${element?.status ? 'bg-[#E0FFBE] border-green-500' : 'bg-red-200 border-red-500 '\n                                                        } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}>\n                                                    {element?.status ? 'Active' : 'Inactive' ?? \"-\"}\n                                                </span>\n                                            </td>\n                                            {(canDelete || canUpdate) && <td className='whitespace-nowrap border-none p-2'>\n                                                <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                    {canUpdate && <Tooltip placement=\"topLeft\"  title='Edit'>\n                                                        <button onClick={() => { navigate(`/admin/state/edit/${encrypt(element?._id)}`) }} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <FaPenToSquare className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                    {canDelete && <Tooltip placement=\"topLeft\"  title='Delete'>\n                                                        <button onClick={() => handleDelete(element?._id)} className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <RiDeleteBin5Line className='text-red-600 hover:text-red-500' size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                </span>\n                                            </td>}\n                                        </tr>\n                                    ))\n                                    : (<tr className=\"bg-white bg-opacity-5 \" >\n                                        <td colSpan={8} className=\"px-6 py-2.5 whitespace-nowrap text-center font-[600] text-sm text-gray-500\">Record Not Found</td>\n                                    </tr>)}\n                            </tbody>}\n\n                    </table>}\n                </div>\n                {totalStateCount > limit && (\n                    <CustomPagination\n                        totalCount={totalStateCount}\n                        pageSize={limit}\n                        currentPage={currentPage}\n                        onChange={onPaginationChange}\n                    />)}\n            </div>\n        </GlobalLayout>\n    )\n}\n\nexport default StateList\n","import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n"],"names":["register","setValue","control","formState","errors","useForm","navigate","useNavigate","dispatch","useDispatch","stateListData","totalStateCount","loading","useSelector","state","states","countryListData","countrySearchLoading","country","searchText","setSearchText","useState","currentPage","setCurrentPage","CountryId","useWatch","name","defaultValue","status","filters","join","isFirstRender","setisFirstRender","useEffect","fetchStateList","reqData","page","limit","reqPayload","text","sort","isPagination","countryId","getStateList","handleFocusCountry","_countryListData$docs","docs","length","countrySearch","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsxs","GlobalLayout","onChange","e","children","_jsx","className","Controller","rules","required","render","_ref","_sortByPropertyAlphab","field","Select","_objectSpread","concat","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","placeholder","onFocus","Option","value","disabled","ListLoader","sortByPropertyAlphabetically","map","type","_id","_ref2","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","element","index","_element$countryName","_ref3","_ref4","_ref5","_ref6","_Inactive","countryName","stateCode","dayjs","createdAt","format","createdBy","encrypt","FaPenToSquare","size","id","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteStateFunc","data","_stateListData$docs","error","Number","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","pageSize","Spin"],"sourceRoot":""}