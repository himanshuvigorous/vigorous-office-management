{"version":3,"file":"static/js/5404.1081e0d0.chunk.js","mappings":"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","sources":["pages/financeManagement/cashbook/EmployeecashbookEdit.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { domainName, inputClassName, inputDisabledClassName, inputLabelClassName, inputLabelClassNameReactSelect } from \"../../../constents/global\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport ReactSelect from \"react-select\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport { expenseTypeSearch } from \"../../global/other/ExpenseHead/expenseTypeFeature/_expenseType_reducers\";\nimport { fileUploadFunc } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { getcashbookDetails, updatecashbook } from \"./cashbookFeature/_cashbook_reducers\";\nimport { decrypt } from \"../../../config/Encryption\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport { FaRegFile, FaTimes } from \"react-icons/fa\";\n\nconst EmployeecashbookEdit = () => {\n  const { loading: cashbookLoading } = useSelector(\n    (state) => state.cashbook\n  );\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    watch,\n    reset,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { employeList } = useSelector((state) => state.employe);\n\n  const { expenseTypeList } = useSelector((state) => state.expenceHead);\n  const CompanyId = useWatch({ control, name: \"PDCompanyId\", defaultValue: \"\" });\n  const BranchId = useWatch({ control, name: \"PDBranchId\", defaultValue: \"\" });\n  const { cashbookDetails } = useSelector(\n    (state) => state.cashbook\n  );\n\n  const [isPreview, setIsPreview] = useState(false);\n  const [formData, setFormData] = useState({\n    attachments: []\n  });\n\n  const { cashbookIdEnc } = useParams();\n  const cashbookId = decrypt(cashbookIdEnc);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: cashbookId,\n      companyId: cashbookDetails?.companyId,\n      directorId: cashbookDetails?.directorId,\n      branchId: cashbookDetails?.branchId,\n      \"employeId\": cashbookDetails?.employeId,\n      \"expenseTypeId\": data?.expencehead?.value,\n      \"expenseFor\": data?.expenseFor,\n      \"amount\": + data?.amount,\n      \"naration\": data?.naration,\n      // \"attachment\": data?.fileUploadLink,\n      \"GSTamount\": 0,\n      \"totalAmount\": + data?.amount,\n      date: data?.date,\n      attachment: formData?.attachments,\n    };\n    dispatch(updatecashbook(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n\n  // useEffect(() => {\n  //   if (\n  //     CompanyId ||\n  //     userInfoglobal?.userType === \"company\" ||\n  //     userInfoglobal?.userType === \"companyDirector\"\n  //   ) {\n  //     dispatch(\n  //       branchSearch({\n  //         text: \"\",\n  //         sort: true,\n  //         status: true,\n  //         companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n  //       })\n  //     );\n  //   }\n  // }, [CompanyId])\n  // useEffect(() => {\n  //   if (userInfoglobal?.userType === \"admin\") {\n  //     dispatch(\n  //       companySearch({\n  //         text: \"\",\n  //         sort: true,\n  //         status: true,\n  //         isPagination: false,\n  //       })\n  //     );\n  //   }\n  // }, []);\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setFormData(prev => ({\n          ...prev,\n          attachments: [...prev?.attachments || [], res?.payload?.data]\n        }));\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setFormData(prev => {\n      const updatedAttachments = prev?.attachments.filter((_, i) => i !== index);\n      return { ...prev, attachments: updatedAttachments };\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getcashbookDetails({\n      _id: cashbookId\n    }))\n  }, [])\n\n  useEffect(() => {\n    if (cashbookDetails) {\n      setValue(\"expenseFor\", cashbookDetails?.expenseFor)\n      setValue(\"amount\", cashbookDetails?.amount)\n      setValue(\"naration\", cashbookDetails?.naration)\n      // setValue(\"fileUploadLink\", cashbookDetails?.attachment)\n      setValue(\"gstAmount\", cashbookDetails?.GSTamount)\n      setValue(\"totalAmount\", cashbookDetails?.totalAmount)\n      setValue(\"date\", dayjs(cashbookDetails?.date))\n      setFormData({\n        attachments: cashbookDetails?.attachment\n      });\n\n      const reqPayload = {\n        text: \"\",\n        status: true,\n        sort: true,\n        isTL: \"\",\n        isHR: \"\",\n        isPagination: false,\n        departmentId: '',\n        designationId: '',\n        companyId: cashbookDetails?.companyId,\n        branchId: cashbookDetails?.branchId,\n      };\n\n      dispatch(employeSearch(reqPayload)).then((response) => {\n        if (!response.error) {\n          const selectedEmployees = response?.payload?.data?.docs?.find((employee) => cashbookDetails?.employeId === employee._id)\n          setValue(\"employee\", { value: selectedEmployees._id, label: selectedEmployees.fullName })\n        }\n      })\n      dispatch(expenseTypeSearch({\n        directorId: \"\",\n        companyId: cashbookDetails?.companyId,\n        branchId: cashbookDetails?.branchId,\n        text: \"\",\n        sort: true,\n        status: \"\",\n        isPagination: false,\n      }\n      )).then((response) => {\n        if (!response.error) {\n          const selectedEmployees = response?.payload?.data?.docs\n            ?.find((employee) => cashbookDetails?.expenseTypeId === employee._id)\n          const employeepayload = {\n            value: selectedEmployees?._id,\n            label: selectedEmployees?.name,\n          }\n          setValue(\"expencehead\", employeepayload)\n        }\n      })\n    }\n  }, [cashbookDetails])\n\n  useEffect(() => {\n    setValue('totalAmount', Number(watch('amount')) + Number(watch('gstAmount')))\n  }, [watch('amount'), watch('gstAmount')])\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-1 md:gap-8 md:my-1 px-3 md:mt-4\">\n\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Expence Head</label>\n              <Controller\n                name=\"expencehead\"\n                control={control}\n                rules={{ required: \"Expence Head is required\" }}\n                render={({ field }) => (\n                  <ReactSelect\n\n                    {...field}\n                    options={expenseTypeList?.map((expence) => ({\n                      value: expence?._id,\n                      label: expence?.name,\n                    }))}\n                    classNamePrefix=\"react-select\"\n                    className={`${inputLabelClassNameReactSelect} ${errors.expencehead ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Expence Head\"\n                  />\n                )}\n              />\n              {errors.expencehead && <p className=\"text-red-500 text-sm\">{errors.expencehead.message}</p>}\n            </div>\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Amount<span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"number\"\n                 step=\"0.01\"\n                {...register(\"amount\", {\n                  required: \"Amount is required\",\n\n                })}\n                className={` ${inputClassName} ${errors.amount ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Amount\"\n              />\n              {errors.amount && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.amount.message}\n                </p>\n              )}\n            </div>\n            {/* <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Gst Amount\n              </label>\n              <input\n                type=\"number\"\n                {...register(\"gstAmount\")}\n                className={` ${inputClassName} ${errors.gstAmount ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Gst Amount\"\n              />\n              {errors.gstAmount && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.gstAmount.message}\n                </p>\n              )}\n            </div> */}\n            {/* <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Total Amount\n              </label>\n              <input\n                type=\"number\"\n                disabled\n                {...register(\"totalAmount\")}\n                className={` ${inputDisabledClassName} ${errors.totalAmount ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Total Amount\"\n              />\n              {errors.totalAmount && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.totalAmount.message}\n                </p>\n              )}\n            </div> */}\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Naration<span className=\"text-red-600\">*</span>\n              </label>\n              <textarea\n\n                {...register(\"naration\", {\n                  required: \"Naration is required\",\n\n                })}\n                className={` ${inputClassName} ${errors.naration ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Naration\"\n              ></textarea>\n              {errors.naration && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.naration.message}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className={`${inputLabelClassName}`}>Date</label>\n              <Controller\n                name=\"date\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    field={field}\n                    errors={errors}\n                    disabledDate={(current) => {\n                      if (!current) return true;\n\n                      const today = dayjs().startOf('day');\n                      const currentDate = current.startOf('day');\n                      const dayOfMonth = today.date();\n\n                      if (dayOfMonth <= 5) {\n                        // --- Last 5 days of previous month ---\n                        const prevMonth = today.subtract(1, 'month');\n                        const endOfPrevMonth = prevMonth.endOf('month').startOf('day');\n                        const startOfLast5PrevMonth = prevMonth\n                          .date(endOfPrevMonth.date() - 4)\n                          .startOf('day');\n\n                        const isInLast5PrevMonth =\n                          (currentDate.isAfter(startOfLast5PrevMonth) || currentDate.isSame(startOfLast5PrevMonth)) &&\n                          (currentDate.isBefore(endOfPrevMonth) || currentDate.isSame(endOfPrevMonth));\n\n                        // --- Current month: 1st to today ---\n                        const startOfCurrentMonth = today.startOf('month');\n                        const isFromStartToToday =\n                          (currentDate.isAfter(startOfCurrentMonth) || currentDate.isSame(startOfCurrentMonth)) &&\n                          (currentDate.isBefore(today) || currentDate.isSame(today));\n\n                        return !(isInLast5PrevMonth || isFromStartToToday);\n                      } else {\n                        // After 5th of month: allow only past dates in current month\n                        const startOfCurrentMonth = today.startOf('month');\n\n                        const isInCurrentMonth =\n                          (currentDate.isAfter(startOfCurrentMonth) || currentDate.isSame(startOfCurrentMonth)) &&\n                          (currentDate.isBefore(today) || currentDate.isSame(today));\n\n                        return !isInCurrentMonth;\n                      }\n                    }}\n                  />\n                )}\n              />\n              {errors.date && <p className=\"text-red-500 text-sm\">Date is required</p>}\n            </div>\n            {/* <div>\n              <label className={`${inputLabelClassName}`}>\n                File  Upload\n              </label>\n\n              <Controller\n                name=\"fileUpload\"\n                control={control}\n\n                render={({ field }) => (\n                  <>\n                    <input\n                      type=\"file\"\n                      id=\"file-upload\"\n                      accept=\"image/*\"\n                      className=\"hidden\"\n                      onChange={(e) => {\n                        field.onChange(e);\n                        handleFileChange(e.target.files[0]);\n                      }}\n                    />\n                    <br />\n                    <label\n                      htmlFor=\"file-upload\"\n                      className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                    >\n                      File Upload\n                    </label>\n                    {errors.fileUpload && (\n                      <p className=\"text-red-600 text-sm mt-1\">{errors.fileUpload.message}</p>\n                    )}\n                  </>\n                )}\n              />\n              {watch('fileUploadLink') && <img\n                src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${watch('fileUploadLink')}`}\n                alt=\"Uploaded\"\n                className=\"w-20 h-20 shadow rounded-sm\"\n              />}\n            </div> */}\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Documents\n              </label>\n              {!isPreview ? (\n                <div className=\"space-y-4\">\n                  <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                  <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-600 bg-white cursor-pointer\">\n                    <FaRegFile className=\"mr-2\" /> Add Documents\n                  </label>\n\n                  <div className=\"space-y-2\">\n                    {formData?.attachments?.map((file, index) => (\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                        <a\n                          href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                          className=\"flex items-center space-x-2\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <FaRegFile className=\"text-gray-500\" />\n                          <span className=\"text-sm text-gray-600\">{file}</span>\n                        </a>\n                        <button\n                          type=\"button\"\n                          onClick={() => handleRemoveFile(index)}\n                          className=\"text-red-500 hover:text-red-700\"\n                        >\n                          <FaTimes />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"space-y-2\">\n                  {/* Attachments preview logic */}\n                </div>\n              )}\n            </div>\n\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={cashbookLoading}\n              className={`${cashbookLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded`}\n            >\n              {cashbookLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default EmployeecashbookEdit;\n"],"names":["EmployeecashbookEdit","_formData$attachments","loading","cashbookLoading","useSelector","state","cashbook","register","handleSubmit","control","watch","reset","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","companyList","company","branchList","branch","employeList","JSON","parse","localStorage","getItem","concat","domainName","employe","expenseTypeList","expenceHead","cashbookDetails","useWatch","name","defaultValue","isPreview","setIsPreview","useState","formData","setFormData","attachments","cashbookIdEnc","useParams","cashbookId","decrypt","useEffect","getcashbookDetails","_id","expenseFor","amount","naration","GSTamount","totalAmount","dayjs","date","attachment","reqPayload","text","status","sort","isTL","isHR","isPagination","departmentId","designationId","companyId","branchId","employeSearch","then","response","error","_response$payload","_response$payload$dat","_response$payload$dat2","selectedEmployees","payload","data","docs","find","employee","employeId","value","label","fullName","expenseTypeSearch","directorId","_response$payload2","_response$payload2$da","_response$payload2$da2","expenseTypeId","employeepayload","Number","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","_data$expencehead","finalPayload","expencehead","updatecashbook","inputLabelClassName","Controller","rules","required","render","_ref","field","ReactSelect","_objectSpread","options","map","expence","classNamePrefix","inputLabelClassNameReactSelect","placeholder","message","type","step","inputClassName","_ref2","CustomDatePicker","disabledDate","current","today","startOf","currentDate","prevMonth","subtract","endOfPrevMonth","endOf","startOfLast5PrevMonth","isInLast5PrevMonth","isAfter","isSame","isBefore","startOfCurrentMonth","isFromStartToToday","onChange","e","reqData","filePath","target","files","isVideo","isMultiple","fileUploadFunc","res","_res$payload","prev","_res$payload2","id","htmlFor","FaRegFile","file","index","href","process","rel","onClick","updatedAttachments","filter","_","i","handleRemoveFile","FaTimes","disabled","Loader"],"sourceRoot":""}