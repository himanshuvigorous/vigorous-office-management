{"version":3,"file":"static/js/3831.0649b8bf.chunk.js","mappings":"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","sources":["pages/client/clientManagement/ServicesDetails.js","pages/client/clientManagement/OwnersDetails.js","pages/client/clientManagement/FInancialDetails.js","../node_modules/antd/es/checkbox/style/index.js","pages/client/clientManagement/KycDocuments.js","../node_modules/antd/es/checkbox/GroupContext.js","../node_modules/antd/es/checkbox/Checkbox.js","../node_modules/antd/es/checkbox/Group.js","../node_modules/antd/es/checkbox/index.js","pages/client/clientManagement/DigitalSignature.js","pages/client/clientManagement/ContactPerson.js","pages/client/clientManagement/BankDetails.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { updateClientFunc, updateService } from \"./clientFeatures/_client_reducers\";\nimport { deptSearch } from \"../../department/departmentFeatures/_department_reducers\";\n\nfunction ServicesDetails({ clientData, fetchData }) {\n    const dispatch = useDispatch();\n    const [selectedEmployees, setSelectedEmployees] = useState([]); // State to track selected employees\n\n    const {\n        register,\n        control,\n        reset,\n        handleSubmit,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            ServicesDetails: [{ serviceId: \"\", number: \"\" }],\n        },\n    });\n\n    useEffect(() => {\n \n        dispatch(deptSearch({\n            companyId: clientData?.data?.companyId,\n            branchId: clientData?.data?.branchId,\n            directorId: \"\",\n            text: \"\",\n            sort: true,\n            status: true,\n            isPagination: false,\n        }));\n    }, [dispatch, clientData]);\n\n    const { departmentListData } = useSelector((state) => state.department);\n\n    const handleSelectEmployee = (employeeId) => {\n        setSelectedEmployees((prevSelected) =>\n            prevSelected.includes(employeeId)\n                ? prevSelected.filter((id) => id !== employeeId)\n                : [...prevSelected, employeeId]\n        );\n    };\n\n    const onSubmit = () => {\n\n        const finalPayload = {\n            ...clientData?.data,\n            departmentIds : selectedEmployees\n        };\n\n        dispatch(updateClientFunc(finalPayload)).then((res) => {\n            if (!res?.error) {\n                fetchData();\n            }\n        });\n    };\n\n    useEffect(() => {\n        const selectedData = clientData?.data?.departmentIds || []; \n        setSelectedEmployees([...selectedData]); \n    }, [clientData]);\n    return (\n        <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"flex gap-2 justify-between items-center my-2\">\n                <div className=\"bg-white shadow-sm w-full overflow-x-auto mt-1 rounded-xl\">\n                    <table className=\"w-full max-w-full rounded-xl overflow-auto\">\n                        <thead>\n                            <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                                <th className=\"border-none p-2 whitespace-nowrap max-w-[5%]\">\n                                    <input\n                                        type=\"checkbox\"\n                                        onChange={(e) => {\n                                            if (e.target.checked) {\n                                                setSelectedEmployees(departmentListData.map((emp) => emp?._id));\n                                            } else {\n                                                setSelectedEmployees([]);\n                                            }\n                                        }}\n                                    />\n                                </th>\n                                <th className=\"border-none p-2 whitespace-nowrap\">Department Name</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {departmentListData && departmentListData.length > 0 ? (\n                                departmentListData.map((element, index) => (\n                                    <tr\n                                        key={element._id}\n                                        className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                                            } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                                    >\n                                        <td className=\"whitespace-nowrap border-none p-2\">\n                                            <input\n                                                type=\"checkbox\"\n                                                checked={selectedEmployees.includes(element._id)}\n                                                onChange={() => handleSelectEmployee(element._id)}\n                                            />\n                                        </td>\n                                        <td className=\"whitespace-nowrap border-none p-2\">{element?.name}</td>\n\n                                    </tr>\n                                ))\n                            ) : (\n                                <tr className=\"bg-white bg-opacity-5\">\n                                    <td\n                                        colSpan={9}\n                                        className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                                    >\n                                        Record Not Found\n                                    </td>\n                                </tr>\n                            )}\n                        </tbody>\n                    </table>\n                </div>\n\n            </div>\n            <button type=\"submit\" className=\"bg-header px-2 py-2 text-sm rounded-md text-white\">\n                Submit\n            </button>\n        </form>\n    );\n}\n\nexport default ServicesDetails;\n","import { AutoComplete, Checkbox, Input, Select } from \"antd\";\nimport { Controller, useFieldArray, useForm } from \"react-hook-form\";\nimport {\n  inputAntdSelectClassName,\n  inputClassName,\n  inputerrorClassNameAutoComplete,\n  inputLabelClassName,\n  sortByPropertyAlphabetically,\n} from \"../../../constents/global\";\nimport { citySearch } from \"../../global/address/city/CityFeatures/_city_reducers\";\nimport { stateSearch } from \"../../global/address/state/featureStates/_state_reducers\";\nimport { countrySearch } from \"../../global/address/country/CountryFeatures/_country_reducers\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport {\n  deleteService,\n  updateOwner,\n  updateService,\n} from \"./clientFeatures/_client_reducers\";\nimport moment from \"moment\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport dayjs from \"dayjs\";\nimport CustomMobileCodePicker from \"../../../global_layouts/MobileCode/MobileCodePicker\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\n\nfunction OwnersDetails({ clientDataParent, fetchData }) {\n  const dispatch = useDispatch();\n  const {\n    register,\n    control,\n    handleSubmit,\n    reset,\n    setValue,\n    watch,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      clientData: [\n        {\n          fullName: \"\",\n          userType: \"clientBranch\",\n          password: \"\",\n          email: \"\",\n          mobile: { code: \"\", number: \"\" },\n          directorProfile: {\n            isShareLoginDetails: false,\n            secondaryEmail: \"\",\n            secondaryMobile: [{ code: \"\", number: \"\" }],\n            landline: { code: \"\", number: \"\" },\n          },\n          generalInfo: {\n            gender: \"\",\n            dateOfBirth: \"\",\n            maritalStatus: \"\",\n          },\n          addresses: {\n            street: \"\",\n            city: \"\",\n            state: \"\",\n            country: \"\",\n            pinCode: \"\",\n          },\n        },\n      ],\n    },\n  });\n\n  const { countryListData ,loading:countryListLoading} = useSelector((state) => state.country);\n  const { stateListData } = useSelector((state) => state.states);\n  const { cityListData } = useSelector((state) => state.city);\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"clientData\",\n  });\n\n\n\n\n  useEffect(() => {\n    if (\n      clientDataParent?.data?.ownerData &&\n      clientDataParent?.data?.ownerData?.length > 0\n    ) {\n\n      reset({\n        clientData: [],\n      });\n      clientDataParent?.data?.ownerData?.forEach((eduDetail, index) => {\n        const formattedEduDetail = {\n          _id: eduDetail?._id,\n          fullName: eduDetail?.fullName,\n          userType: \"clientOwner\",\n\n          email: eduDetail?.email,\n          mobile: {\n            code: eduDetail?.mobile?.code,\n            number: eduDetail?.mobile?.number,\n          },\n          landline: {\n            code: eduDetail?.directorProfile?.landline?.code,\n          },\n          directorProfile: {\n            isShareLoginDetails:\n              eduDetail?.directorProfile?.isShareLoginDetails,\n            secondaryEmail: \"\",\n            secondaryMobile: {\n              code: \"\",\n              number: \"\",\n            },\n            landline: {\n              code: eduDetail?.directorProfile?.landline?.code,\n              number: eduDetail?.directorProfile?.landline?.number,\n            },\n          },\n          generalInfo: {\n            gender: eduDetail?.generalInfo?.gender,\n            dateOfBirth: dayjs(eduDetail?.generalInfo?.dateOfBirth),\n            maritalStatus: eduDetail?.generalInfo?.maritalStatus,\n          },\n          addresses: {\n            street: eduDetail?.addresses?.primary?.street,\n            city: eduDetail?.addresses?.primary?.city,\n            state: eduDetail?.addresses?.primary?.state,\n            country: eduDetail?.addresses?.primary?.country,\n            pinCode: eduDetail?.addresses?.primary?.pinCode,\n            secondary: {\n              street: \"\",\n              city: \"\",\n              state: \"\",\n              country: \"\",\n              pinCode: \"\",\n            },\n            location: {\n              latitude: 0,\n              longitude: 0,\n              address: \"\",\n            },\n          },\n        };\n        append(formattedEduDetail); // Append the formatted data\n      });\n    }\n  }, [clientDataParent, reset, append]); // Added reset and append dependencies for completeness\n\n\n\n\n  const onSubmit = (data) => {\n    const payload = {\n      companyId: clientDataParent?.data?.companyId,\n      directorId: \"\",\n      branchId: clientDataParent?.data?.branchId,\n      clientId: clientDataParent?.data?._id,\n      type: \"owner\",\n      ownerArr: data?.clientData?.map((owner) => {\n        return {\n          _id: owner?._id,\n          fullName: owner?.fullName,\n          userType: \"clientOwner\",\n          password: !owner?._id\n            ? owner?.directorProfile?.isShareLoginDetails === \"true\"\n              ? owner?.password\n              : \"\"\n            : null,\n          email: owner?.email,\n          mobile: {\n            code: owner?.mobile?.code,\n            number: owner?.mobile?.number,\n          },\n\n          directorProfile: {\n            isShareLoginDetails: !owner?._id\n              ? owner?.directorProfile?.isShareLoginDetails\n              : null,\n            secondaryEmail: \"\",\n            secondaryMobile: {\n              code: \"\",\n              number: \"\",\n            },\n            landline: {\n              code: owner?.landline?.code,\n              number: owner?.directorProfile.landline?.number,\n            },\n          },\n          generalInfo: {\n            gender: owner?.generalInfo?.gender,\n            dateOfBirth: owner?.generalInfo?.dateOfBirth,\n            maritalStatus: owner?.generalInfo?.maritalStatus,\n          },\n          addresses: {\n            primary: {\n              street: owner?.addresses?.street,\n              city: owner?.addresses?.city,\n              state: owner?.addresses?.state,\n              country: owner?.addresses?.country,\n              pinCode: owner?.addresses?.pinCode,\n            },\n            secondary: {\n              street: \"\",\n              city: \"\",\n              state: \"\",\n              country: \"\",\n              pinCode: \"\",\n            },\n            location: {\n              latitude: 0,\n              longitude: 0,\n              address: \"\",\n            },\n          },\n        };\n      }),\n    };\n\n    dispatch(updateService(payload)).then((res) => {\n      if (!res?.error) {\n        fetchData();\n      }\n    });\n  };\n\n  const deleteData = (data, index) => {\n    if (data?._id) {\n      dispatch(\n        deleteService({\n          _id: data?._id,\n        })\n      ).then((res) => {\n        if (!res?.error) {\n          fetchData();\n        }\n      });\n    } else {\n      remove(index);\n    }\n  };\n  const [ownerCheckBox, setOwnerCheckBox] = useState(false)\n  const handleOwnerDetails = () => {\n    setOwnerCheckBox((prev) => !prev)\n\n  }\n  const [ownerCheckBoxes, setOwnerCheckBoxes] = useState({});\n\n  return (\n    <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n      <>\n        {fields.map((item, index) => (\n          <div key={item.id} className=\"border border-gray-300 rounded-md my-2\">\n            <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n              <div className=\"px-3 py-2 text-white flex gap-12 font-semibold\">\n                Owner {index + 1}\n                {index === 0 && (\n                  <div className=\"flex items-center gap-2\">\n                    <Checkbox\n                      checked={!!ownerCheckBoxes[index]}\n                      onChange={() => {\n                        setOwnerCheckBoxes((prev) => ({\n                          ...prev,\n                          [index]: !prev[index], // Toggle the checkbox for this index\n                        }));\n\n                        if (!ownerCheckBoxes[index]) {\n                          setValue(`clientData.${index}.fullName`, clientDataParent?.data?.fullName || \"\");\n                          setValue(`clientData.${index}.email`, clientDataParent?.data?.email || \"\");\n                          setValue(`clientData.${index}.mobile.code`, clientDataParent?.data?.mobile?.code || \"\");\n                          setValue(`clientData.${index}.mobile.number`, clientDataParent?.data?.mobile?.number || \"\");\n                          setValue(`clientData.${index}.addresses.country`, clientDataParent?.data?.addresses?.primary?.country || \"\");\n                          setValue(`clientData.${index}.addresses.state`, clientDataParent?.data?.addresses?.primary?.state || \"\");\n                          setValue(`clientData.${index}.addresses.city`, clientDataParent?.data?.addresses?.primary?.city || \"\");\n                          setValue(`clientData.${index}.addresses.pinCode`, clientDataParent?.data?.addresses?.primary?.pinCode || \"\");\n                          setValue(`clientData[${index}].generalInfo.dateOfBirth`, dayjs(clientDataParent?.data?.generalInfo?.dateOfBirth) || null);\n                          setValue(`clientData.${index}.addresses.street`, clientDataParent?.data?.addresses?.primary?.street || \"\");\n                        } else {\n                          // Clear all fields when unchecked\n                          setValue(`clientData.${index}.fullName`, \"\");\n                          setValue(`clientData.${index}.email`, \"\");\n                          setValue(`clientData.${index}.mobile.code`, \"\");\n                          setValue(`clientData.${index}.mobile.number`, \"\");\n                          setValue(`clientData.${index}.addresses.country`, \"\");\n                          setValue(`clientData.${index}.addresses.state`, \"\");\n                          setValue(`clientData.${index}.addresses.city`, \"\");\n                          setValue(`clientData.${index}.addresses.pinCode`, \"\");\n                          setValue(`clientData[${index}].generalInfo.dateOfBirth`, \"\");\n                          setValue(`clientData.${index}.addresses.street`, \"\");\n                        }\n                      }}\n                    />\n                    <span className=\"text-xs\">Same as Primary Details</span>\n                  </div>\n                )}\n              </div>\n\n              {index !== 0 && (\n                <button\n                  type=\"button\"\n                  onClick={() => deleteData(item, index)}\n                  className=\"text-red-600 hover:text-red-800\"\n                >\n                  <AiFillDelete size={20} className=\"m-2\" />\n                </button>\n              )}\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3\">\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Full Name <span className=\"text-red-600\">*</span>\n                </label>\n                <input\n                  {...register(`clientData.${index}.fullName`, {\n                    required: \"Full Name is required\",\n                  })}\n                  placeholder=\"Full Name\"\n                  className={`${inputClassName} ${errors?.clientData?.[index]?.fullName\n                    ? \"border-[1px] \"\n                    : \"border-gray-300\"\n                    }`}\n                />\n                {errors?.clientData?.[index]?.fullName && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.clientData[index].fullName.message}\n                  </p>\n                )}\n              </div>\n              {!item?._id && (\n                <div>\n                  <label className={`${inputLabelClassName}`}>\n                    Share Login Details<span className=\"text-red-600\">*</span>\n                  </label>\n                  {/* <select\n                    {...register(\n                      `clientData.${index}.directorProfile.isShareLoginDetails`\n                    )}\n                    className={`${inputClassName}`}\n                  >\n                    <option value=\"true\">Yes</option>\n                    <option value=\"false\">No</option>\n                  </select> */}\n\n                  <Controller\n                    control={control}\n                    name={`clientData.${index}.directorProfile.isShareLoginDetails`}\n                    rules={{ required: \" Share Login Details type is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        defaultValue={\"\"}\n\n                        className={`${inputAntdSelectClassName} `}\n                      >\n\n                        <Select.Option value=\"true\">Yes</Select.Option>\n                        <Select.Option value=\"false\">No</Select.Option>\n\n                      </Select>\n                    )}\n                  />\n                </div>\n              )}\n\n              {watch(\n                `clientData.${index}.directorProfile.isShareLoginDetails`\n              ) === \"true\" &&\n                !item?._id && (\n                  <div>\n                    <label className={`${inputLabelClassName}`}>\n                      Password <span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      {...register(`clientData.${index}.password`, {\n                        required: \"Password is required\",\n                      })}\n                      className={`${inputClassName} ${errors?.clientData?.[index]?.password\n                        ? \"border-[1px] \"\n                        : \"border-gray-300\"\n                        }`}\n                    />\n                    {errors?.clientData?.[index]?.password && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.clientData[index].password.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Email <span className=\"text-red-600\">*</span>\n                </label>\n                <input\n                  placeholder=\"Enter Email\"\n                  {...register(`clientData.${index}.email`, {\n                    required: \"Email is required\",\n                    pattern: {\n                      value: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                      message: \"Invalid email address\",\n                    },\n                  })}\n                  className={`${inputClassName} ${errors?.clientData?.[index]?.email\n                    ? \"border-[1px] \"\n                    : \"border-gray-300\"\n                    }`}\n                />\n                {errors?.clientData?.[index]?.email && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.clientData[index].email.message}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Mobile <span className=\"text-red-600\">*</span>\n                </label>\n\n                <div className=\"flex gap-2\">\n                  <div className=\"w-[150px]\">\n                    <Controller\n                      control={control}\n                      name={`clientData.${index}.mobile.code`}\n                      rules={{ required: \"code is required\" }}\n                      render={({ field }) => (\n                        <CustomMobileCodePicker\n                          field={field}\n                          errors={errors}\n                        />\n                      )}\n                    />\n                  </div>\n                  <div className=\"w-full\">\n                    <input\n                      type=\"number\"\n                      {...register(`clientData.${index}.mobile.number`, {\n                        required: \"Mobile number is required\",\n\n                        minLength: {\n                          value: 10,\n                          message: \"Must be exactly 10 digits\",\n                        },\n                        maxLength: {\n                          value: 10,\n                          message: \"Must be exactly 10 digits\",\n                        },\n                      })}\n                      maxLength={10}\n                      onInput={(e) => {\n                        if (e.target.value.length > 10) {\n                          e.target.value = e.target.value.slice(0, 10);\n                        }\n                      }}\n                      placeholder=\"Number\"\n                      className={`${inputClassName} ${errors?.clientData?.[index]?.mobile?.number\n                        ? \"border-[1px] \"\n                        : \"border-gray-300\"\n                        }`}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex gap-3\">\n                  {errors?.clientData?.[index]?.mobile?.code && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.clientData[index].mobile.code.message}\n                    </p>\n                  )}\n                  {errors?.clientData?.[index]?.mobile?.number && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.clientData[index].mobile.number.message}\n                    </p>\n                  )}\n                </div>\n              </div>\n              {/* <div>\n                <label className={`${inputLabelClassName}`}>Landline</label>\n                <div className=\"flex gap-2\">\n                  <div className=\"w-[150px]\">\n                    <Controller\n                      control={control}\n                      name={`clientData.${index}.landline.code`}\n                      render={({ field }) => (\n                        <CustomMobileCodePicker\n                          field={field}\n                            errors={errors} \n                          />\n                      )}\n                    />{\" \"}\n                  </div>\n                  <div className=\"w-full\">\n                    <input\n                      type=\"number\"\n                      {...register(\n                        `clientData.${index}.directorProfile.landline.number`,\n                        {\n                          minLength: {\n                            value: 10,\n                            message: \"Must be exactly 10 digits\",\n                          },\n                          maxLength: {\n                            value: 10,\n                            message: \"Must be exactly 10 digits\",\n                          },\n                        }\n                      )}\n                      maxLength={10}\n                      onInput={(e) => {\n                        if (e.target.value.length > 10) {\n                          e.target.value = e.target.value.slice(0, 10);\n                        }\n                      }}\n                      placeholder=\"Number\"\n                      className={`${inputClassName} ${\n                        errors?.clientData?.[index]?.directorProfile?.landline\n                          ?.number\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                      }`}\n                    />\n                     {errors?.clientData?.[index]?.directorProfile?.landline?.number && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors?.clientData[index]?.directorProfile?.landline?.number?.message}\n                  </p>\n                )}\n                  </div>\n                </div>\n              </div> */}\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Gender <span className=\"text-red-600\">*</span>\n                </label>\n                {/* <select\n                  {...register(`clientData.${index}.generalInfo.gender`, {\n                    required: \"Gender is required\",\n                  })}\n                  className={`${inputClassName} ${\n                    errors?.clientData?.[index]?.generalInfo?.gender\n                      ? \"border-[1px] \"\n                      : \"border-gray-300\"\n                  }`}\n                >\n                  <option value=\"\">Select Gender</option>\n                  <option value=\"Male\">Male</option>\n                  <option value=\"Female\">Female</option>\n                  <option value=\"Other\">Other</option>\n                </select> */}\n\n\n                <Controller\n                  control={control}\n                  name={`clientData.${index}.generalInfo.gender`}\n                  rules={{ required: \"Gender is required\" }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      defaultValue={\"\"}\n\n                      className={`${inputAntdSelectClassName} `}\n                    >\n\n                      <Select.Option value=\"\">Select Gender</Select.Option>\n                      <Select.Option value=\"Male\">Male</Select.Option>\n                      <Select.Option value=\"Female\">Female</Select.Option>\n                      <Select.Option value=\"Other\">Other</Select.Option>\n\n                    </Select>\n                  )}\n                />\n                {errors?.clientData?.[index]?.generalInfo?.gender && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.clientData[index].generalInfo.gender.message}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Date of Birth <span className=\"text-red-600\">*</span>\n                </label>\n                <Controller\n                  name={`clientData[${index}].generalInfo.dateOfBirth`}\n                  control={control}\n                  render={({ field }) => (\n                    <CustomDatePicker\n                      field={field}\n                      errors={errors}\n                      disabledDate={(current) => {\n                        return (\n                          current &&\n                          current.isAfter(moment().endOf(\"day\"), \"day\")\n                        );\n                      }}\n                    />\n                  )}\n                />\n                {errors?.clientData?.[index]?.generalInfo?.dateOfBirth && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.clientData[index].generalInfo.dateOfBirth.message}\n                  </p>\n                )}\n              </div>\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Marital Status <span className=\"text-red-600\">*</span>\n                </label>\n                {/* <select\n                  {...register(\n                    `clientData.${index}.generalInfo.maritalStatus`,\n                    { required: \"Marital Status is required\" }\n                  )}\n                  className={`${inputClassName} ${\n                    errors?.clientData?.[index]?.generalInfo?.maritalStatus\n                      ? \"border-[1px] \"\n                      : \"border-gray-300\"\n                  }`}\n                >\n                  <option value=\"\">Select Marital Status</option>\n                  <option value=\"Single\">Single</option>\n                  <option value=\"Married\">Married</option>\n                  <option value=\"Divorced\">Divorced</option>\n                </select> */}\n\n                <Controller\n                  control={control}\n                  name={`clientData.${index}.generalInfo.maritalStatus`}\n                  rules={{ required: \"  Marital Status  is required\" }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      defaultValue={\"\"}\n\n                      className={`${inputAntdSelectClassName} `}\n                    >\n\n                      <Select.Option value=\"\">Select Marital Status</Select.Option>\n                      <Select.Option value=\"Single\">Single</Select.Option>\n                      <Select.Option value=\"Married\">Married</Select.Option>\n                      <Select.Option value=\"Divorced\">Divorced</Select.Option>\n                    </Select>\n                  )}\n                />\n                {errors?.clientData?.[index]?.generalInfo?.maritalStatus && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.clientData[index].generalInfo.maritalStatus.message}\n                  </p>\n                )}\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3\">\n              <div className=\"col-span-2\">\n                <label className={`${inputLabelClassName}`}>\n                  Primary Address<span className=\"text-red-600\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  {...register(`clientData.${index}.addresses.street`, {\n                    required: \"Primary Address is required\",\n                  })}\n                  className={`${inputClassName} ${errors.clientData?.[index]?.addresses?.street\n                    ? \"border-[1px] \"\n                    : \"border-gray-300\"\n                    }`}\n                  placeholder=\"Enter Primary Address\"\n                />\n                {errors.clientData?.[index]?.addresses?.street && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.clientData?.[index]?.addresses?.street.message}\n                  </p>\n                )}\n              </div>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 md:gap-8 md:my-1 px-3\">\n              <div>\n                <div className={`${inputLabelClassName}`}>\n                  Country <span className=\"text-red-600\">*</span>\n                </div>\n                <Controller\n                  control={control}\n                  name={`clientData.${index}.addresses.country`}\n                  rules={{ required: \"Country is required\" }}\n                  render={({ field }) => (\n                    <AutoComplete\n                      {...field}\n                      onChange={(value) => field.onChange(value)} // Handle country change\n                      className=\"w-full\"\n                      options={sortByPropertyAlphabetically(countryListData?.docs)?.map((type) => ({\n                        value: type?.name,\n                      }))}\n                      notFoundContent={countryListLoading&&<ListLoader/>}\n                    >\n                      <input\n                        placeholder=\"Enter Country\"\n                        onFocus={() => {\n                          dispatch(\n                            countrySearch({\n                              isPagination: false,\n                              text: \"\",\n                              sort: true,\n                              status: true,\n                            })\n                          );\n                        }}\n                        className={`${inputClassName} ${errors.clientData?.[index]?.addresses?.country\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          }`}\n                      />\n                    </AutoComplete>\n                  )}\n                />\n                {errors.clientData?.[index]?.addresses?.country && (\n                  <p className={`${inputerrorClassNameAutoComplete}`}>\n                    {errors.clientData[index].addresses.country.message}\n                  </p>\n                )}\n              </div>\n              <div>\n                <div className={`${inputLabelClassName}`}>\n                  State <span className=\"text-red-600\">*</span>\n                </div>\n                <Controller\n                  control={control}\n                  name={`clientData.${index}.addresses.state`}\n                  rules={{ required: \"State is required\" }}\n                  render={({ field }) => (\n                    <AutoComplete\n                      {...field}\n                      onChange={(value) => field.onChange(value)} // Handle state change\n                      className=\"w-full\"\n                      options={sortByPropertyAlphabetically(stateListData?.docs)?.map((type) => ({\n                        value: type?.name,\n                      }))}\n                            notFoundContent={<ListLoader/>}z\n                    >\n                      <input\n                        placeholder=\"Enter State\"\n                        onFocus={() => {\n                          dispatch(\n                            stateSearch({\n                              isPagination: false,\n                              text: \"\",\n                              countryName: watch(\n                                `clientData.${index}.addresses.country`\n                              ),\n                              sort: true,\n                              status: true,\n                            })\n                          );\n                        }}\n                        className={`${inputClassName} ${errors.clientData?.[index]?.addresses?.state\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          }`}\n                      />\n                    </AutoComplete>\n                  )}\n                />\n                {errors.clientData?.[index]?.addresses?.state && (\n                  <p className={`${inputerrorClassNameAutoComplete}`}>\n                    {errors.clientData[index].addresses.state.message}\n                  </p>\n                )}\n              </div>\n\n              <div>\n                <div className={`${inputLabelClassName}`}>\n                  City <span className=\"text-red-600\">*</span>\n                </div>\n                <Controller\n                  control={control}\n                  name={`clientData.${index}.addresses.city`}\n                  rules={{ required: \"City is required\" }}\n                  render={({ field }) => (\n                    <AutoComplete\n                      {...field}\n                      onChange={(value) => field.onChange(value)} // Handle city change\n                      className=\"w-full\"\n                      options={sortByPropertyAlphabetically(cityListData?.docs)?.map((type) => ({\n                        value: type?.name,\n                      }))}\n                            notFoundContent={<ListLoader/>}\n                    >\n                      <input\n                        placeholder=\"Enter City\"\n                        onFocus={() => {\n                          dispatch(\n                            citySearch({\n                              isPagination: false,\n                              text: \"\",\n                              sort: true,\n                              status: true,\n                              stateName: watch(\n                                `clientData.${index}.addresses.state`\n                              ),\n                            })\n                          );\n                        }}\n                        className={`${inputClassName} ${errors.clientData?.[index]?.addresses?.city\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          }`}\n                      />\n                    </AutoComplete>\n                  )}\n                />\n                {errors.clientData?.[index]?.addresses?.city && (\n                  <p className={`${inputerrorClassNameAutoComplete}`}>\n                    {errors.clientData[index].addresses.city.message}\n                  </p>\n                )}\n              </div>\n\n              {/* Pin Code Field */}\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Pin Code <span className=\"text-red-600\">*</span>\n                </label>\n                <Controller\n                  control={control}\n                  name={`clientData.${index}.addresses.pinCode`}\n                  rules={{ required: \"Pin Code is required\" }}\n                  render={({ field }) => (\n                    <input\n                      {...field}\n                      type=\"number\"\n                      placeholder=\"Enter Pin Code\"\n                      maxLength={6}\n                      onInput={(e) => {\n                        if (e.target.value.length > 6) {\n                          e.target.value = e.target.value.slice(0, 6);\n                        }\n                      }}\n                      className={`${inputClassName} ${errors.clientData?.[index]?.addresses?.pinCode\n                        ? \"border-[1px] \"\n                        : \"border-gray-300\"\n                        }`}\n                    />\n                  )}\n                />\n                {errors.clientData?.[index]?.addresses?.pinCode && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.clientData[index].addresses.pinCode.message}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n\n        <div className=\"flex gap-2 justify-between items-center my-2\">\n          <button\n            type=\"button\"\n            onClick={() =>\n              append({\n                fullName: \"\",\n                userType: \"clientBranch\",\n                password: \"\",\n                email: \"\",\n                mobile: { code: \"\", number: \"\" },\n                directorProfile: {\n                  isShareLoginDetails: false,\n                  secondaryEmail: \"\",\n                  secondaryMobile: [{ code: \"\", number: \"\" }],\n                  landline: { code: \"\", number: \"\" },\n                },\n                generalInfo: {\n                  gender: \"\",\n                  dateOfBirth: \"\",\n                  maritalStatus: \"\",\n                },\n                addresses: {\n                  street: \"\",\n                  city: \"\",\n                  state: \"\",\n                  country: \"\",\n                  pinCode: \"\",\n                },\n              })\n            }\n            className=\"bg-header px-2 py-2 text-sm rounded-md text-white\"\n          >\n            Add New Client\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"bg-header px-2 py-2 text-sm rounded-md text-white\"\n          >\n            Submit\n          </button>\n        </div>\n      </>\n    </form>\n  );\n}\n\nexport default OwnersDetails;\n","\nimport { useEffect, useState } from \"react\";\nimport { formButtonClassName, generateFinancialYearPairs, getDefaultFinacialYear, inputAntdSelectClassName, inputClassName, inputLabelClassName } from \"../../../constents/global\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteDocument, fileUploadFunc, updateDocument } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { empDoctSearch, getEmployeeDocument } from \"../../global/other/employeeDocument/EmployeeDocumentFeatures/_emp_document_reducers\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Select } from \"antd\";\nimport CommonImageViewer from \"../../../global_layouts/ImageViewrModal/CommonImageViewer\";\nimport Swal from \"sweetalert2\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport getUserIds from \"../../../constents/getUserIds\";\n\nfunction FInancialDetails({clientData ,  fetchData}) {\n    const [documents, setDocuments] = useState([\n        { id: 1, name: \"\", documentNo: \"\",isPeriod: \"\",quarterName: \"\",monthName: \"\", file: [] },\n      ]);\n        const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n      const { loadingUpdateFile } = useSelector((state) => state.fileUpload);\n      const [formErrors, setFormErrors] = useState([]);\n      const dispatch = useDispatch();\n      const handleAddMore = () => {\n        setDocuments([...documents, { id: Date.now() }]);\n      };\n\n      const { employeeDocumentList, employeeDocListloading} = useSelector(\n        (state) => state.employeeDocument\n      );\n\n\n      useEffect(() => {\n        dispatch(empDoctSearch({ isPagination:false, companyId:getUserIds()?.userCompanyId,}));\n      }, [dispatch]);\n\n\n\n\n      const handleInputChange = (index, field, value) => {\n        const updatedDocuments = [...documents];\n        updatedDocuments[index][field] = value;\n        setDocuments(updatedDocuments);\n        const newFormErrors = [...formErrors];\n        if (newFormErrors[index]?.[field]) {\n          delete newFormErrors[index][field];\n        }\n        setFormErrors(newFormErrors);\n      };\n    \n      const handleFileChange = (index, file) => {\n        if (!file) return;\n        const isPdf = file.type === 'application/pdf';\n        const filePreviewUrl = URL.createObjectURL(file); // Create a preview URL for non-PDF files\n    \n        // Show SweetAlert to confirm upload\n        Swal.fire({\n            title: 'Preview your file',\n            html: `\n                <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n                    <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n                    ${\n                        isPdf\n                            ? `<p style=\"font-size: 16px; color: #074173;\">${file.name}</p>`\n                            : `<img src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">`\n                    }\n                    <br>\n                </div>\n            `,\n            showCancelButton: true,\n            confirmButtonText: 'Confirm!',\n            cancelButtonText: 'Cancel',\n        }).then((result) => {\n            if (result.isConfirmed) {\n                // Proceed with file upload only if the user confirms\n                dispatch(\n                    fileUploadFunc({\n                        filePath: file,\n                        isVideo: false,\n                        isMultiple: false,\n                    })\n                ).then((data) => {\n                    if (!data.error) {\n                        const updatedDocuments = [...documents];\n                        updatedDocuments[index].file = [data?.payload?.data];\n                        setDocuments(updatedDocuments);\n    \n                        // Remove error for this file field if it exists\n                        const newFormErrors = [...formErrors];\n                        if (newFormErrors[index]?.file) {\n                            delete newFormErrors[index].file;\n                        }\n                        setFormErrors(newFormErrors);\n                    }\n                });\n            } else {\n\n            }\n        });\n    };\n    \n      const handleDelete = (document, index) => {\n        if (document?._id) {\n          dispatch(deleteDocument({ _id: document?._id })).then((data) => {\n            if (!data.error) {\n              fetchData()\n              // setDocuments((prevDocuments) =>\n              //   prevDocuments.filter((_, index2) => index2 !== index)\n              // );\n            }\n          });\n        } else {\n          setDocuments((prevDocuments) =>\n            prevDocuments.filter((_, index2) => index2 !== index)\n          );\n        }\n      };\n    \n      const validateForm = () => {\n        let errors = [];\n        documents.forEach((document, index) => {\n          let error = {};\n          if (!document.name) {\n            error.name = \"Document Type is required.\";\n          }\n          if (!document.year) {\n            error.year = \"Year is required.\";\n          }\n          if (!document.isPeriod) {\n            error.isPeriod = \"type is required.\";\n          }\n          if (!document.file || document.file.length === 0) {\n            error.file = \"Document file is required.\";\n          }\n          if (Object.keys(error).length > 0) {\n            errors[index] = error;\n          }\n        });\n    \n        setFormErrors(errors);\n        return errors.every((error) => Object.keys(error).length === 0); // returns true if no errors\n      };\n\n\n      useEffect(()=>{\n        if(clientData){\n            const documentData = clientData?.data?.financeData?.length\n            ? clientData?.data.financeData.map((element) => ({\n                _id: element?._id || \"\",\n                name: element?.name || \"\",\n                year: element?.yearRange || \"\",\n                file: element?.filePath || [],\n                isPeriod:element?.type || '',\n            quarterName:element?.monthQuaters || '',\n            monthName:element?.monthName || '',\n              }))\n            : [{ _id: \"\", name: \"\", year: getDefaultFinacialYear(), file: [] }];\n        \n          setDocuments([...documentData]);\n        }\n        },[clientData])\n\nconst onSubmit = async (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n\n        const financialInfoPayload = documents.map((element, index) => {\n          if (element?._id) {\n            return {\n                 userId: clientData?.data?._id ,\n              _id: element?._id,\n              name: element?.name,\n              yearRange: element?.year,\n              filePath: element?.file,\n               type: element?.isPeriod,\n            monthName: (element?.isPeriod =='Quaterly' || element?.isPeriod =='Yearly' )  ? '' : element?.monthName,\n              monthQuaters: element?.isPeriod !='Quaterly' ?'': element?.quarterName,\n            };\n          } else {\n            return {\n                 userId: clientData?.data?._id ,\n              name: element?.name,\n              yearRange: element?.year,\n              filePath: element?.file,\n               type: element?.isPeriod,\n             monthName: (element?.isPeriod =='Quaterly' || element?.isPeriod =='Yearly' )  ? '' : element?.monthName,\n              monthQuaters: element?.isPeriod !='Quaterly' ?'': element?.quarterName,\n            };\n          }\n        });\n\n        const finalPayload = {\n          financialInfo: financialInfoPayload,\n          type: \"financial\",\n        };\n\n        await dispatch(updateDocument(finalPayload)).then((data) => {\n          if (!data.error) {\n            fetchData()\n            \n          }\n\n        });\n      }\n  };\n  const financialYearPairs = generateFinancialYearPairs();\n  const handleDeleteDocImage = (index, file) => {\n    const updatedDocs = [...documents];\n    updatedDocs[index].file = [];\n    setDocuments(updatedDocs);\n};\n    return (\n        <form autoComplete=\"off\" onSubmit={onSubmit}>\n             \n        <div className=\"rounded-md\">\n          {documents?.map((document, index) => \n          {\n            const dropdownType = document.isPeriod;\n            return (\n             <div key={index} className=\"border border-gray-300 rounded-md my-2\">\n             <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n                 <div className=\"px-3 py-2 text-white font-semibold\">Financial Document {index + 1}</div>\n               <button\n                     type=\"button\"\n                     onClick={() => handleDelete(document, index)}\n                     className=\"text-red-600 hover:text-red-800\"\n                 >\n                     <AiFillDelete size={20} className=\"m-2\" />\n                 </button>\n             </div>\n            <div\n              key={index}\n              className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\"\n            >\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Document Type <span className=\"text-red-600\">*</span>\n                </label>\n                <Select\n                            value={document.name}\n                            className={` ${inputAntdSelectClassName} ${formErrors.name ? \"border-[1px] \" : \"border-gray-300\"}`}\n                            onChange={(e) =>\n                              handleInputChange(\n                                index,\n                                \"name\",\n                                e\n                              )\n                            }\n                            placeholder=\"Select Document Type\"\n                            showSearch\n\n                          >\n                            <Select.Option value=\"\">Select Document</Select.Option>\n                            {employeeDocListloading?   <Select.Option disabled>\n                  <Loader/>\n                 </Select.Option>:(employeeDocumentList\n                              ?.filter((data) => data?.type === \"Financial\")\n                              \n                              .map((type) => (\n                                <Select.Option key={type.name} value={type.name}>\n                                  {type.name}\n                                </Select.Option>\n                              )))}\n\n                          </Select>\n              \n                {formErrors[index]?.name && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].name}\n                  </p>\n                )}\n              </div>\n             \n              <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Year <span className=\"text-red-600\">*</span>\n                          </label>\n                          <Select\n                          defaultValue={getDefaultFinacialYear()}\n                            value={document.year}\n                            onChange={(e) =>\n                              handleInputChange(\n                                index,\n                                \"year\",\n                                e\n                              )\n                            }\n                            className={`${inputAntdSelectClassName} ${formErrors[index]?.name ? \"border-[1px] \" : \"\"}`}\n                          >\n                            <Select.Option value=\"\">Select Financial Year</Select.Option>\n                            {financialYearPairs.map((yearPair) => (\n                              <Select.Option key={yearPair} value={yearPair}>\n                                {yearPair}\n                              </Select.Option>\n                            ))}\n                          </Select>\n                          \n                          {formErrors[index]?.year && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrors[index].year}\n                            </p>\n                          )}\n                        </div>\n\n                           <div>\n                                                    <label className={`${inputLabelClassName}`}>\n                                                      Type <span className=\"text-red-600\">*</span>\n                                                    </label>\n                        \n                                                    <Select\n                                                      defaultValue={\"\"}\n                                                      onChange={(e) =>\n                                                        handleInputChange(index, \"isPeriod\", e)\n                                                      }\n                                                      value={document?.isPeriod}\n                                                      className={`${inputAntdSelectClassName} `}\n                                                    >\n                                                      <Select.Option value=\"\">\n                                                        Select Type\n                                                      </Select.Option>\n                                                      <Select.Option value=\"Quaterly\">\n                                                        {\" \"}\n                                                        Quaterly\n                                                      </Select.Option>\n                                                      <Select.Option value=\"Monthly\">\n                                                        Monthly\n                                                      </Select.Option>\n                                                      <Select.Option value=\"Yearly\">\n                                                        Yearly\n                                                      </Select.Option>\n                                                    </Select>\n                        \n                                                    {formErrors[index]?.isPeriod && (\n                                                      <p className=\"text-red-600 text-sm\">\n                                                        {formErrors[index].isPeriod}\n                                                      </p>\n                                                    )}\n                                                  </div>\n                        \n                                                  {dropdownType === \"Quaterly\" && (\n                                                    <div>\n                                                      <label className={`${inputLabelClassName}`}>\n                                                        Quarter <span className=\"text-red-600\">*</span>\n                                                      </label>\n                        \n                                                      <Select\n                                                        defaultValue={\"\"}\n                                                        className={`${inputAntdSelectClassName} `}\n                                                        onChange={(e) =>\n                                                          handleInputChange(index, \"quarterName\", e)\n                                                        }\n                                                        value={document?.quarterName}\n                                                      >\n                                                        <Select.Option value=\"\">\n                                                          Select Quarter\n                                                        </Select.Option>\n                                                        {quarter.map((qtr) => (\n                                                          <Select.Option key={qtr} value={qtr}>\n                                                            {qtr}\n                                                          </Select.Option>\n                                                        ))}\n                                                      </Select>\n                        \n                                                      {formErrors[index]?.quarterName && (\n                                                        <p className=\"text-red-600 text-sm\">\n                                                          {formErrors[index].quarterName}\n                                                        </p>\n                                                      )}\n                                                    </div>\n                                                  )}\n                        \n                                                  {dropdownType === \"Monthly\" && (\n                                                    <div>\n                                                      <label className={`${inputLabelClassName}`}>\n                                                        Month <span className=\"text-red-600\">*</span>\n                                                      </label>\n                        \n                                                      <Select\n                                                        defaultValue={\"\"}\n                                                        className={`${inputAntdSelectClassName} `}\n                                                        onChange={(e) =>\n                                                          handleInputChange(index, \"monthName\", e)\n                                                        }\n                                                        value={document?.monthName}\n                                                      >\n                                                        <Select.Option value=\"\">\n                                                          Select Month\n                                                        </Select.Option>\n                                                        {months.map((month) => (\n                                                          <Select.Option key={month} value={month}>\n                                                            {month}\n                                                          </Select.Option>\n                                                        ))}\n                                                      </Select>\n                        \n                                                      {formErrors[index]?.monthName && (\n                                                        <p className=\"text-red-600 text-sm\">\n                                                          {formErrors[index].monthName}\n                                                        </p>\n                                                      )}\n                                                    </div>\n                                                  )}\n\n\n                        {/* <div>\n                <label className={`${inputLabelClassName}`}>\n                  Year <span className=\"text-red-600\">*</span>\n                </label>\n                <input\n                  type=\"number\"\n                  value={document.year}\n                  onChange={(e) =>\n                    handleInputChange(\n                      index,\n                      \"year\",\n                      e.target.value\n                    )\n                  }\n                  className={`${inputClassName} ${\n                    formErrors[index]?.year\n                      ? \"border-[1px] \"\n                      : \"\"\n                  }`}\n                  placeholder=\"Enter Year\"\n                />\n                {formErrors[index]?.year && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].year}\n                  </p>\n                )}\n              </div> */}\n              <div className=\"flex items-center gap-2\">\n                          <div>\n                            <label className={`${inputLabelClassName}`}>\n                              Upload Image  <span className=\"text-red-600\">*</span>\n                            </label>\n                            <input\n                              type=\"file\"\n                                accept=\".pdf,image/*\"\n                              id={`documentUpload${index}`}\n                              className=\"hidden\"\n                              onChange={(e) =>\n                                handleFileChange(index, e.target.files[0])\n                              }\n                            />\n                            <br />\n                            <label\n                              htmlFor={`documentUpload${index}`}\n                              className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                            >\n                              Upload Image\n                            </label>\n                          </div>\n                          {document?.file?.length > 0\n                            ? document.file.map((file, fileIndex) => (\n                              <div key={fileIndex} className=\"relative\">\n                                 <CommonImageViewer\n                                  // key={index}\n                                  src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                                  alt={`Uploaded ${fileIndex + 1}`}\n                           \n                                />\n                                <button\n                                  className=\"absolute -top-1 -right-2 bg-red-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs\"\n                                  onClick={() => handleDeleteDocImage(index, file)}\n                                >\n                                  ✕\n                                </button>\n                              </div>\n                            ))\n                            : null}\n                          {formErrors[index]?.file && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrors[index].file}\n                            </p>\n                          )}\n                        </div>\n\n\n              {/* <div className=\"flex items-center gap-2\">\n                <div>\n                  <label className={`${inputLabelClassName}`}>\n                    Upload <span className=\"text-red-600\">*</span>\n                  </label>\n                  <input\n                    type=\"file\"\n                    id={`documentUpload${index}`}\n                    className=\"hidden\"\n                    onChange={(e) =>\n                      handleFileChange(index, e.target.files[0])\n                    }\n                  />\n                  <br />\n                  <label\n                    htmlFor={`documentUpload${index}`}\n                    className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                  >\n                    Upload\n                  </label>\n                </div>\n                {document?.file?.length > 0\n                  ? document.file.map((file, index) => (\n                      <img\n                        key={index}\n                        src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                        alt={`Uploaded ${index + 1}`}\n                        className=\"w-20 h-20 shadow rounded-sm\"\n                      />\n                    ))\n                  : null}\n                {formErrors[index]?.file && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].file}\n                  </p>\n                )}\n              </div> */}\n\n              {/* <div className=\"px-3 gap-4 items-end mb-3\">\n                <button\n                  type=\"button\"\n                  onClick={() => handleDelete(document, index)}\n                  className=\"text-gray-600 hover:text-gray-800 flex items-center justify-center border-2 border-gray-500 p-1 rounded-lg\"\n                >\n                  <i className=\"fas fa-trash-alt flex items-center justify-center w-[25px] h-[25px]\"></i>\n                </button>\n              </div> */}\n            </div>\n            </div>\n          )})}\n          <div className=\"flex justify-between px-3 pb-2\">\n            <button\n              type=\"button\"\n              onClick={handleAddMore}\n              className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n            >\n              Add More\n            </button>\n          </div>\n        </div>\n        <div className=\"flex justify-between px-3 pb-2\">\n          <button\n            // disabled={loadingUpdateFile}\n            type=\"Submit\"\n            className={`${formButtonClassName}`}\n          >\n            {loadingUpdateFile ? \"Submitting ...\" : \"Submit Details\"}\n          </button>\n        </div>\n      </form>\n    )\n}\n\nexport default FInancialDetails\n","import { unit } from '@ant-design/cssinjs';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Styles ==============================\nexport const genCheckboxStyle = token => {\n  const {\n    checkboxCls\n  } = token;\n  const wrapperCls = `${checkboxCls}-wrapper`;\n  return [\n  // ===================== Basic =====================\n  {\n    // Group\n    [`${checkboxCls}-group`]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-flex',\n      flexWrap: 'wrap',\n      columnGap: token.marginXS,\n      // Group > Grid\n      [`> ${token.antCls}-row`]: {\n        flex: 1\n      }\n    }),\n    // Wrapper\n    [wrapperCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'inline-flex',\n      alignItems: 'baseline',\n      cursor: 'pointer',\n      // Fix checkbox & radio in flex align #30260\n      '&:after': {\n        display: 'inline-block',\n        width: 0,\n        overflow: 'hidden',\n        content: \"'\\\\a0'\"\n      },\n      // Checkbox near checkbox\n      [`& + ${wrapperCls}`]: {\n        marginInlineStart: 0\n      },\n      [`&${wrapperCls}-in-form-item`]: {\n        'input[type=\"checkbox\"]': {\n          width: 14,\n          // FIXME: magic\n          height: 14 // FIXME: magic\n        }\n      }\n    }),\n    // Wrapper > Checkbox\n    [checkboxCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      lineHeight: 1,\n      cursor: 'pointer',\n      borderRadius: token.borderRadiusSM,\n      // To make alignment right when `controlHeight` is changed\n      // Ref: https://github.com/ant-design/ant-design/issues/41564\n      alignSelf: 'center',\n      // Wrapper > Checkbox > input\n      [`${checkboxCls}-input`]: {\n        position: 'absolute',\n        // Since baseline align will get additional space offset,\n        // we need to move input to top to make it align with text.\n        // Ref: https://github.com/ant-design/ant-design/issues/38926#issuecomment-1486137799\n        inset: 0,\n        zIndex: 1,\n        cursor: 'pointer',\n        opacity: 0,\n        margin: 0,\n        [`&:focus-visible + ${checkboxCls}-inner`]: genFocusOutline(token)\n      },\n      // Wrapper > Checkbox > inner\n      [`${checkboxCls}-inner`]: {\n        boxSizing: 'border-box',\n        display: 'block',\n        width: token.checkboxSize,\n        height: token.checkboxSize,\n        direction: 'ltr',\n        backgroundColor: token.colorBgContainer,\n        border: `${unit(token.lineWidth)} ${token.lineType} ${token.colorBorder}`,\n        borderRadius: token.borderRadiusSM,\n        borderCollapse: 'separate',\n        transition: `all ${token.motionDurationSlow}`,\n        '&:after': {\n          boxSizing: 'border-box',\n          position: 'absolute',\n          top: '50%',\n          insetInlineStart: '25%',\n          display: 'table',\n          width: token.calc(token.checkboxSize).div(14).mul(5).equal(),\n          height: token.calc(token.checkboxSize).div(14).mul(8).equal(),\n          border: `${unit(token.lineWidthBold)} solid ${token.colorWhite}`,\n          borderTop: 0,\n          borderInlineStart: 0,\n          transform: 'rotate(45deg) scale(0) translate(-50%,-50%)',\n          opacity: 0,\n          content: '\"\"',\n          transition: `all ${token.motionDurationFast} ${token.motionEaseInBack}, opacity ${token.motionDurationFast}`\n        }\n      },\n      // Wrapper > Checkbox + Text\n      '& + span': {\n        paddingInlineStart: token.paddingXS,\n        paddingInlineEnd: token.paddingXS\n      }\n    })\n  },\n  // ===================== Hover =====================\n  {\n    // Wrapper & Wrapper > Checkbox\n    [`\n        ${wrapperCls}:not(${wrapperCls}-disabled),\n        ${checkboxCls}:not(${checkboxCls}-disabled)\n      `]: {\n      [`&:hover ${checkboxCls}-inner`]: {\n        borderColor: token.colorPrimary\n      }\n    },\n    [`${wrapperCls}:not(${wrapperCls}-disabled)`]: {\n      [`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled) ${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimaryHover,\n        borderColor: 'transparent'\n      },\n      [`&:hover ${checkboxCls}-checked:not(${checkboxCls}-disabled):after`]: {\n        borderColor: token.colorPrimaryHover\n      }\n    }\n  },\n  // ==================== Checked ====================\n  {\n    // Wrapper > Checkbox\n    [`${checkboxCls}-checked`]: {\n      [`${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimary,\n        borderColor: token.colorPrimary,\n        '&:after': {\n          opacity: 1,\n          transform: 'rotate(45deg) scale(1) translate(-50%,-50%)',\n          transition: `all ${token.motionDurationMid} ${token.motionEaseOutBack} ${token.motionDurationFast}`\n        }\n      }\n    },\n    [`\n        ${wrapperCls}-checked:not(${wrapperCls}-disabled),\n        ${checkboxCls}-checked:not(${checkboxCls}-disabled)\n      `]: {\n      [`&:hover ${checkboxCls}-inner`]: {\n        backgroundColor: token.colorPrimaryHover,\n        borderColor: 'transparent'\n      }\n    }\n  },\n  // ================= Indeterminate =================\n  {\n    [checkboxCls]: {\n      '&-indeterminate': {\n        '&': {\n          // Wrapper > Checkbox > inner\n          [`${checkboxCls}-inner`]: {\n            backgroundColor: `${token.colorBgContainer}`,\n            borderColor: `${token.colorBorder}`,\n            '&:after': {\n              top: '50%',\n              insetInlineStart: '50%',\n              width: token.calc(token.fontSizeLG).div(2).equal(),\n              height: token.calc(token.fontSizeLG).div(2).equal(),\n              backgroundColor: token.colorPrimary,\n              border: 0,\n              transform: 'translate(-50%, -50%) scale(1)',\n              opacity: 1,\n              content: '\"\"'\n            }\n          },\n          // https://github.com/ant-design/ant-design/issues/50074\n          [`&:hover ${checkboxCls}-inner`]: {\n            backgroundColor: `${token.colorBgContainer}`,\n            borderColor: `${token.colorPrimary}`\n          }\n        }\n      }\n    }\n  },\n  // ==================== Disable ====================\n  {\n    // Wrapper\n    [`${wrapperCls}-disabled`]: {\n      cursor: 'not-allowed'\n    },\n    // Wrapper > Checkbox\n    [`${checkboxCls}-disabled`]: {\n      // Wrapper > Checkbox > input\n      [`&, ${checkboxCls}-input`]: {\n        cursor: 'not-allowed',\n        // Disabled for native input to enable Tooltip event handler\n        // ref: https://github.com/ant-design/ant-design/issues/39822#issuecomment-1365075901\n        pointerEvents: 'none'\n      },\n      // Wrapper > Checkbox > inner\n      [`${checkboxCls}-inner`]: {\n        background: token.colorBgContainerDisabled,\n        borderColor: token.colorBorder,\n        '&:after': {\n          borderColor: token.colorTextDisabled\n        }\n      },\n      '&:after': {\n        display: 'none'\n      },\n      '& + span': {\n        color: token.colorTextDisabled\n      },\n      [`&${checkboxCls}-indeterminate ${checkboxCls}-inner::after`]: {\n        background: token.colorTextDisabled\n      }\n    }\n  }];\n};\n// ============================== Export ==============================\nexport function getStyle(prefixCls, token) {\n  const checkboxToken = mergeToken(token, {\n    checkboxCls: `.${prefixCls}`,\n    checkboxSize: token.controlInteractiveSize\n  });\n  return genCheckboxStyle(checkboxToken);\n}\nexport default genStyleHooks('Checkbox', (token, {\n  prefixCls\n}) => [getStyle(prefixCls, token)]);","import { useEffect, useState } from \"react\";\nimport { formButtonClassName, inputAntdSelectClassName, inputCalanderClassName, inputClassName, inputLabelClassName, sortByPropertyAlphabetically } from \"../../../constents/global\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteDocument, fileUploadFunc, updateDocument } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { empDoctSearch, getEmployeeDocument } from \"../../global/other/employeeDocument/EmployeeDocumentFeatures/_emp_document_reducers\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { DatePicker, Select } from \"antd\";\nimport CommonImageViewer from \"../../../global_layouts/ImageViewrModal/CommonImageViewer\";\nimport Swal from \"sweetalert2\";\nimport dayjs from \"dayjs\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport getUserIds from \"../../../constents/getUserIds\";\n\nfunction KycDocuments({ clientData, fetchData }) {\n  const [documents, setDocuments] = useState([\n    { id: 1, documentType: \"\", documentNo: \"\", file: [] },\n  ]);\n  const { loadingUpdateFile } = useSelector((state) => state.fileUpload);\n  const [formErrors, setFormErrors] = useState([]);\n  const dispatch = useDispatch();\n  const handleAddMore = () => {\n    setDocuments([...documents, { id: Date.now() }]);\n  };\n\n  const { control, register } = useForm()\n\n  const { employeeDocumentList, employeeDocListloading } = useSelector(\n    (state) => state.employeeDocument\n  );\n\n\n  useEffect(() => {\n    dispatch(empDoctSearch({ isPagination:false, companyId:getUserIds()?.userCompanyId,}));\n  }, [dispatch]);\n\n\n  useEffect(() => {\n    if (clientData) {\n      const documentData = clientData?.data?.documentData?.length\n        ? clientData.data.documentData.map((document) => ({\n          _id: document?._id || \"\",\n          documentType: document?.name || \"\",\n          documentNo: document?.number || \"\",\n          file: document?.filePath || [],\n          endYear:document?.expireDate && dayjs(document?.expireDate) ,\n        }))\n        : [\n          {\n            _id: \"\",\n            documentType: \"\",\n            documentNo: \"\",\n            file: [],\n          },\n        ];\n\n      setDocuments([...documentData]);\n    }\n  }, [clientData])\n\n  const handleInputChange = (index, field, value) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index][field] = value;\n    setDocuments(updatedDocuments);\n    const newFormErrors = [...formErrors];\n    if (newFormErrors[index]?.[field]) {\n      delete newFormErrors[index][field];\n    }\n    setFormErrors(newFormErrors);\n  };\n\n  const handleFileChange = (index, file) => {\n    if (!file) return;\n    const isPdf = file.type === 'application/pdf';\n    const filePreviewUrl = URL.createObjectURL(file); // Create a preview URL for images\n\n    // Show SweetAlert to confirm upload\n    Swal.fire({\n      title: 'Preview your file',\n      html: `\n              <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n                  <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n                  ${isPdf\n          ? `<p style=\"font-size: 16px; color: #074173;\">${file.name}</p>`\n          : `<img src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">`\n        }\n                  <br>\n              </div>\n          `,\n      showCancelButton: true,\n      confirmButtonText: 'Confirm!',\n      cancelButtonText: 'Cancel',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(\n          fileUploadFunc({\n            filePath: file,\n            isVideo: false,\n            isMultiple: false,\n          })\n        ).then((data) => {\n          if (!data.error) {\n            const updatedDocuments = [...documents];\n            updatedDocuments[index].file = [data?.payload?.data];\n            setDocuments(updatedDocuments);\n            const newFormErrors = [...formErrors];\n            if (newFormErrors[index]?.file) {\n              delete newFormErrors[index].file;\n            }\n            setFormErrors(newFormErrors);\n          }\n        });\n      } else {\n\n      }\n    });\n  };\n\n\n  const handleDelete = (document, index) => {\n    if (document?._id) {\n      dispatch(deleteDocument({ _id: document?._id })).then((data) => {\n        if (!data.error) {\n          fetchData()\n          // setDocuments((prevDocuments) =>\n          //     prevDocuments.filter((_, index2) => index2 !== index)\n          // );\n        }\n      });\n    } else {\n      setDocuments((prevDocuments) =>\n        prevDocuments.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n\n  const validateForm = () => {\n    let errors = [];\n    documents.forEach((document, index) => {\n      let error = {};\n      if (!document.documentType) {\n        error.documentType = \"Document Type is required.\";\n      }\n      if (!document.documentNo) {\n        error.documentNo = \"Document No is required.\";\n      }\n      \n      if (!document.file || document.file.length === 0) {\n        error.file = \"Document file is required.\";\n      }\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n\n    setFormErrors(errors);\n    return errors.every((error) => Object.keys(error).length === 0); // returns true if no errors\n  };\n\n\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    if (validateForm()) {\n      const documentPayload = documents.map((doc, index) => {\n        if (doc?._id) {\n          return {\n            userId: clientData?.data?._id,\n            _id: doc?._id,\n            name: doc?.documentType,\n            number: doc?.documentNo,\n            filePath: doc?.file,\n            \"expireDate\": doc?.endYear ? dayjs(doc?.endYear) : null,\n          };\n        } else {\n          return {\n            userId: clientData?.data?._id,\n            name: doc?.documentType,\n            number: doc?.documentNo,\n            filePath: doc?.file,\n            \"expireDate\": doc?.endYear ? dayjs(doc?.endYear) : null,\n          };\n        }\n      });\n\n      const finalPayload = {\n        documents: documentPayload,\n        type: \"documents\",\n      };\n      await dispatch(updateDocument(finalPayload)).then((data) => {\n        if (!data.error) {\n          fetchData()\n        }\n\n      });\n    }\n  };\n\n  const handleDeleteDoctImage = (index, file) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index].file = [];\n    setDocuments(updatedDocuments);\n  };\n\n\n\n  return (\n    <form autoComplete=\"off\" onSubmit={onSubmit}>\n\n      <div className=\"rounded-md \">\n\n        {documents?.map((document, index) => (\n          <div className=\"border border-gray-300 rounded-md my-2\" key={index}>\n            <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n              <div className=\"px-3 py-2 text-white font-semibold\">  Document {index + 1}</div>\n              <button\n                type=\"button\"\n                onClick={() => handleDelete(document, index)}\n                className=\"text-red-600 hover:text-red-800\"\n              >\n                <AiFillDelete size={20} className=\"m-2\" />\n              </button>\n            </div>\n            <div\n              key={index}\n              className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\"\n            >\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Document Type <span className=\"text-red-600\">*</span>\n                </label>\n                <Select\n                  value={document.documentType}\n                  className={` ${inputAntdSelectClassName} ${formErrors.documentType ? \"border-[1px] \" : \"border-gray-300\"}`}\n                  onChange={(e) =>\n                    handleInputChange(\n                      index,\n                      \"documentType\",\n                      e\n                    )\n                  }\n                  placeholder=\"Select Document Type\"\n                  showSearch\n\n\n                >\n\n                  <Select.Option value=\"\">Select Document</Select.Option>\n                  {employeeDocListloading ? (\n                   <Select.Option disabled>\n                  <Loader/>\n                 </Select.Option>\n                  ) : (\n                    sortByPropertyAlphabetically(employeeDocumentList)\n                      ?.filter((data) => data?.type === \"General\")\n                      .map((type) => (\n                        <Select.Option key={type.name} value={type.name}>\n                          {type.name}\n                        </Select.Option>\n                      ))\n                  )}\n\n                </Select>\n\n                {formErrors[index]?.documentType && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].documentType}\n                  </p>\n                )}\n              </div>\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Document No <span className=\"text-red-600\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  value={document.documentNo}\n                  onChange={(e) =>\n                    handleInputChange(\n                      index,\n                      \"documentNo\",\n                      e.target.value\n                    )\n                  }\n                  className={`${inputClassName} ${formErrors[index]?.documentNo\n                    ? \"border-[1px] \"\n                    : \"\"\n                    }`}\n                  placeholder=\"Enter Document No\"\n                />\n                {formErrors[index]?.documentNo && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].documentNo}\n                  </p>\n                )}\n              </div>\n              <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Expiry Date \n                          </label>\n                          <DatePicker\n                            className={`${inputCalanderClassName} py-2.5 ${formErrors[index]?.endYear ? \"border-[1px] \" : \"border-gray-300\"} `}\n                            popupClassName={'!z-[1580]'}\n                            value={document.endYear} onChange={(e) =>\n                              handleInputChange(\n                                index,\n                                \"endYear\",\n                                e\n                              )} picker=\"date\" />\n                          {formErrors[index]?.endYear && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrors[index].endYear}\n                            </p>\n                          )}\n                        </div>\n\n              <div className=\"flex items-center gap-2\">\n                <div>\n                  <label className={`${inputLabelClassName}`}>\n                    Upload Image <span className=\"text-red-600\">*</span>\n                  </label>\n                  <input\n                    type=\"file\"\n                    accept=\".pdf,image/*\"\n                    id={`documentUpload${index}`}\n                    className=\"hidden\"\n                    onChange={(e) =>\n                      handleFileChange(index, e.target.files[0])\n                    }\n                  />\n                  <br />\n                  <label\n                    htmlFor={`documentUpload${index}`}\n                    className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                  >\n                    Upload Image\n                  </label>\n                </div>\n                {document?.file?.length > 0\n                  ? document.file.map((file, fileIndex) => (\n                    <div key={fileIndex} className=\"relative\">\n                      <CommonImageViewer\n                        // key={index}\n                        src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                        alt={`Uploaded ${fileIndex + 1}`}\n\n                      />\n                      <button\n                        className=\"absolute -top-1 -right-2 bg-red-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs\"\n                        onClick={() => handleDeleteDoctImage(index, file)}\n                      >\n                        ✕\n                      </button>\n                    </div>\n\n                  ))\n                  : null}\n                {formErrors[index]?.file && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].file}\n                  </p>\n                )}\n              </div>\n\n              {/* <div className=\"px-3 gap-4 items-end mb-3\">\n                      <button\n                        type=\"submit\"\n                        onClick={() => handleDelete(document, index)}\n                        className=\"text-gray-600 hover:text-gray-800 flex items-center justify-center border-2 border-gray-500 p-1 rounded-lg\"\n                      >\n                        <i className=\"fas fa-trash-alt flex items-center justify-center w-[25px] h-[25px]\"></i>\n                      </button>\n                    </div> */}\n            </div>\n          </div>\n        ))}\n        <div className=\"flex justify-between px-3 pb-2\">\n          <button\n            type=\"button\"\n            onClick={handleAddMore}\n            className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n          >\n            Add More\n          </button>\n        </div>\n      </div>\n      <div className=\"flex justify-between px-3 pb-2\">\n        <button\n          disabled={loadingUpdateFile}\n          type=\"Submit\"\n          className={`${formButtonClassName}`}\n        >\n          {loadingUpdateFile ? \"Submitting ...\" : \"Submit Details\"}\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default KycDocuments\n","import React from 'react';\nconst GroupContext = /*#__PURE__*/React.createContext(null);\nexport default GroupContext;","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport RcCheckbox from 'rc-checkbox';\nimport { composeRef } from \"rc-util/es/ref\";\nimport { devUseWarning } from '../_util/warning';\nimport Wave from '../_util/wave';\nimport { TARGET_CLS } from '../_util/wave/interface';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport { FormItemInputContext } from '../form/context';\nimport GroupContext from './GroupContext';\nimport useStyle from './style';\nimport useBubbleLock from './useBubbleLock';\nconst InternalCheckbox = (props, ref) => {\n  var _a;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      children,\n      indeterminate = false,\n      style,\n      onMouseEnter,\n      onMouseLeave,\n      skipGroup = false,\n      disabled\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"children\", \"indeterminate\", \"style\", \"onMouseEnter\", \"onMouseLeave\", \"skipGroup\", \"disabled\"]);\n  const {\n    getPrefixCls,\n    direction,\n    checkbox\n  } = React.useContext(ConfigContext);\n  const checkboxGroup = React.useContext(GroupContext);\n  const {\n    isFormItemInput\n  } = React.useContext(FormItemInputContext);\n  const contextDisabled = React.useContext(DisabledContext);\n  const mergedDisabled = (_a = (checkboxGroup === null || checkboxGroup === void 0 ? void 0 : checkboxGroup.disabled) || disabled) !== null && _a !== void 0 ? _a : contextDisabled;\n  const prevValue = React.useRef(restProps.value);\n  const checkboxRef = React.useRef(null);\n  const mergedRef = composeRef(ref, checkboxRef);\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Checkbox');\n    process.env.NODE_ENV !== \"production\" ? warning('checked' in restProps || !!checkboxGroup || !('value' in restProps), 'usage', '`value` is not a valid prop, do you mean `checked`?') : void 0;\n  }\n  React.useEffect(() => {\n    checkboxGroup === null || checkboxGroup === void 0 ? void 0 : checkboxGroup.registerValue(restProps.value);\n  }, []);\n  React.useEffect(() => {\n    if (skipGroup) {\n      return;\n    }\n    if (restProps.value !== prevValue.current) {\n      checkboxGroup === null || checkboxGroup === void 0 ? void 0 : checkboxGroup.cancelValue(prevValue.current);\n      checkboxGroup === null || checkboxGroup === void 0 ? void 0 : checkboxGroup.registerValue(restProps.value);\n      prevValue.current = restProps.value;\n    }\n    return () => checkboxGroup === null || checkboxGroup === void 0 ? void 0 : checkboxGroup.cancelValue(restProps.value);\n  }, [restProps.value]);\n  React.useEffect(() => {\n    var _a;\n    if ((_a = checkboxRef.current) === null || _a === void 0 ? void 0 : _a.input) {\n      checkboxRef.current.input.indeterminate = indeterminate;\n    }\n  }, [indeterminate]);\n  const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const checkboxProps = Object.assign({}, restProps);\n  if (checkboxGroup && !skipGroup) {\n    checkboxProps.onChange = (...args) => {\n      if (restProps.onChange) {\n        restProps.onChange.apply(restProps, args);\n      }\n      if (checkboxGroup.toggleOption) {\n        checkboxGroup.toggleOption({\n          label: children,\n          value: restProps.value\n        });\n      }\n    };\n    checkboxProps.name = checkboxGroup.name;\n    checkboxProps.checked = checkboxGroup.value.includes(restProps.value);\n  }\n  const classString = classNames(`${prefixCls}-wrapper`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-wrapper-checked`]: checkboxProps.checked,\n    [`${prefixCls}-wrapper-disabled`]: mergedDisabled,\n    [`${prefixCls}-wrapper-in-form-item`]: isFormItemInput\n  }, checkbox === null || checkbox === void 0 ? void 0 : checkbox.className, className, rootClassName, cssVarCls, rootCls, hashId);\n  const checkboxClass = classNames({\n    [`${prefixCls}-indeterminate`]: indeterminate\n  }, TARGET_CLS, hashId);\n  // ============================ Event Lock ============================\n  const [onLabelClick, onInputClick] = useBubbleLock(checkboxProps.onClick);\n  // ============================== Render ==============================\n  return wrapCSSVar(/*#__PURE__*/React.createElement(Wave, {\n    component: \"Checkbox\",\n    disabled: mergedDisabled\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classString,\n    style: Object.assign(Object.assign({}, checkbox === null || checkbox === void 0 ? void 0 : checkbox.style), style),\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave,\n    onClick: onLabelClick\n  }, /*#__PURE__*/React.createElement(RcCheckbox, Object.assign({}, checkboxProps, {\n    onClick: onInputClick,\n    prefixCls: prefixCls,\n    className: checkboxClass,\n    disabled: mergedDisabled,\n    ref: mergedRef\n  })), children !== undefined && children !== null && (/*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-label`\n  }, children)))));\n};\nconst Checkbox = /*#__PURE__*/React.forwardRef(InternalCheckbox);\nif (process.env.NODE_ENV !== 'production') {\n  Checkbox.displayName = 'Checkbox';\n}\nexport default Checkbox;","\"use client\";\n\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport Checkbox from './Checkbox';\nimport GroupContext from './GroupContext';\nimport useStyle from './style';\nconst CheckboxGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      defaultValue,\n      children,\n      options = [],\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      style,\n      onChange\n    } = props,\n    restProps = __rest(props, [\"defaultValue\", \"children\", \"options\", \"prefixCls\", \"className\", \"rootClassName\", \"style\", \"onChange\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [value, setValue] = React.useState(restProps.value || defaultValue || []);\n  const [registeredValues, setRegisteredValues] = React.useState([]);\n  React.useEffect(() => {\n    if ('value' in restProps) {\n      setValue(restProps.value || []);\n    }\n  }, [restProps.value]);\n  const memoizedOptions = React.useMemo(() => options.map(option => {\n    if (typeof option === 'string' || typeof option === 'number') {\n      return {\n        label: option,\n        value: option\n      };\n    }\n    return option;\n  }), [options]);\n  const cancelValue = val => {\n    setRegisteredValues(prevValues => prevValues.filter(v => v !== val));\n  };\n  const registerValue = val => {\n    setRegisteredValues(prevValues => [].concat(_toConsumableArray(prevValues), [val]));\n  };\n  const toggleOption = option => {\n    const optionIndex = value.indexOf(option.value);\n    const newValue = _toConsumableArray(value);\n    if (optionIndex === -1) {\n      newValue.push(option.value);\n    } else {\n      newValue.splice(optionIndex, 1);\n    }\n    if (!('value' in restProps)) {\n      setValue(newValue);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange(newValue.filter(val => registeredValues.includes(val)).sort((a, b) => {\n      const indexA = memoizedOptions.findIndex(opt => opt.value === a);\n      const indexB = memoizedOptions.findIndex(opt => opt.value === b);\n      return indexA - indexB;\n    }));\n  };\n  const prefixCls = getPrefixCls('checkbox', customizePrefixCls);\n  const groupPrefixCls = `${prefixCls}-group`;\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls, rootCls);\n  const domProps = omit(restProps, ['value', 'disabled']);\n  const childrenNode = options.length ? memoizedOptions.map(option => (/*#__PURE__*/React.createElement(Checkbox, {\n    prefixCls: prefixCls,\n    key: option.value.toString(),\n    disabled: 'disabled' in option ? option.disabled : restProps.disabled,\n    value: option.value,\n    checked: value.includes(option.value),\n    onChange: option.onChange,\n    className: classNames(`${groupPrefixCls}-item`, option.className),\n    style: option.style,\n    title: option.title,\n    id: option.id,\n    required: option.required\n  }, option.label))) : children;\n  const memoizedContext = React.useMemo(() => ({\n    toggleOption,\n    value,\n    disabled: restProps.disabled,\n    name: restProps.name,\n    // https://github.com/ant-design/ant-design/issues/16376\n    registerValue,\n    cancelValue\n  }), [toggleOption, value, restProps.disabled, restProps.name, registerValue, cancelValue]);\n  const classString = classNames(groupPrefixCls, {\n    [`${groupPrefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, cssVarCls, rootCls, hashId);\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: style\n  }, domProps, {\n    ref: ref\n  }), /*#__PURE__*/React.createElement(GroupContext.Provider, {\n    value: memoizedContext\n  }, childrenNode)));\n});\nexport { GroupContext };\nexport default CheckboxGroup;","\"use client\";\n\nimport InternalCheckbox from './Checkbox';\nimport Group from './Group';\nconst Checkbox = InternalCheckbox;\nCheckbox.Group = Group;\nCheckbox.__ANT_CHECKBOX = true;\nif (process.env.NODE_ENV !== 'production') {\n  Checkbox.displayName = 'Checkbox';\n}\nexport default Checkbox;","import { useEffect, useState } from \"react\";\nimport {\n  formButtonClassName,\n  inputAntdSelectClassName,\n  inputCalanderClassName,\n  inputClassName,\n  inputLabelClassName,\n  sortByPropertyAlphabetically,\n} from \"../../../constents/global\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport {\n  deleteService,\n  updateService,\n} from \"./clientFeatures/_client_reducers\";\nimport { DatePicker, Select } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { DigitalSignatureTypeSearch } from \"../../clientService/sigantureServiceFeatures/_digital_signature_type_reducers\";\nimport { useNavigate } from \"react-router-dom\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\n\nfunction DigitalSignature({ clientData, fetchData }) {\n  const [documents, setDocuments] = useState([\n    { id: 1, documentType: \"\", documentNo: \"\", file: [] },\n  ]);\n  const { DigitalSignatureTypeList,loading:digitSignLoading } = useSelector(\n    (state) => state.digitalSignatureType\n  );\n  const { loadingUpdateFile } = useSelector((state) => state.fileUpload);\n  const [formErrors, setFormErrors] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleAddMore = () => {\n    setDocuments([...documents, { id: Date.now() }]);\n  };\n  useEffect(() => {\n    dispatch(\n      DigitalSignatureTypeSearch({\n        branchId: clientData?.data?.branchId,\n        companyId: clientData?.data?.companyId,\n      })\n    );\n  }, []);\n  const handleInputChange = (index, field, value) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index][field] = value;\n    setDocuments(updatedDocuments);\n    const newFormErrors = [...formErrors];\n    if (newFormErrors[index]?.[field]) {\n      delete newFormErrors[index][field];\n    }\n    setFormErrors(newFormErrors);\n  };\n  const handleDelete = (document, index) => {\n    if (document?._id) {\n      dispatch(deleteService({ _id: document?._id })).then((data) => {\n        if (!data.error) {\n          fetchData();\n        }\n      });\n    } else {\n      setDocuments((prevDocuments) =>\n        prevDocuments.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n\n  const validateForm = () => {\n    let errors = [];\n    documents.forEach((document, index) => {\n      let error = {};\n      if (!document.name) {\n        error.name = \"Name is required.\";\n      }\n      if (!document.signatureType) {\n        error.signatureType = \"Signature Type is required.\";\n      }\n      if (!document.startDate) {\n        error.startDate = \"Start Date is required.\";\n      }\n      if (!document.endDate) {\n        error.endDate = \"End Date is required.\";\n      }\n\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n\n    setFormErrors(errors);\n    return errors.every((error) => Object.keys(error).length === 0);\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (validateForm()) {\n      const documentPayload = documents.map((doc, index) => {\n        if (doc?._id) {\n          return {\n            _id: doc?._id,\n            name: doc?.name,\n            startDate: doc?.startDate,\n            expiryDate: doc?.endDate,\n            signatureTypeId: doc?.signatureType,\n          };\n        } else {\n          return {\n            name: doc?.name,\n            startDate: doc?.startDate,\n            expiryDate: doc?.endDate,\n            signatureTypeId: doc?.signatureType,\n          };\n        }\n      });\n      const finalPaylaod = {\n        companyId: clientData?.data?.companyId,\n        directorId: \"\",\n        branchId: clientData?.data?.branchId,\n        clientId: clientData?.data?._id,\n        type: \"Signature\",\n        signatureArr: documentPayload,\n      };\n      dispatch(updateService(finalPaylaod)).then((res) => {\n        if (!res?.error) {\n          fetchData();\n        }\n      });\n      navigate(-1);\n    }\n  };\n  useEffect(() => {\n    if (clientData) {\n      const documentData = clientData?.data?.signatureData?.length\n        ? clientData.data.signatureData.map((document) => ({\n            _id: document?._id || \"\",\n            name: document?.name || \"\",\n            startDate: dayjs(document?.startDate) || \"\",\n            endDate: dayjs(document?.expiryDate) || \"\",\n            file: document?.attechment || [],\n            signatureType: document?.signatureTypeId || \"\",\n          }))\n        : [\n            {\n              documentType: \"\",\n              documentNo: \"\",\n              file: [],\n              signatureType: \"\",\n            },\n          ];\n\n      setDocuments([...documentData]);\n    }\n  }, [clientData]);\n  return (\n    <form autoComplete=\"off\" onSubmit={onSubmit}>\n      <div className=\"rounded-md\">\n        {documents?.map((document, index) => (\n          <div key={index} className=\"border border-gray-300 rounded-md my-2\">\n            <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n              <div className=\"px-3 py-2 text-white font-semibold\">\n                {\" \"}\n                digital Signature {index + 1}\n              </div>\n              {index !== 0 && (\n                <button\n                  type=\"button\"\n                  onClick={() => handleDelete(document, index)}\n                  className=\"text-red-600 hover:text-red-800\"\n                >\n                  <AiFillDelete size={20} className=\"m-2\" />\n                </button>\n              )}\n            </div>\n            <div\n              key={index}\n              className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\"\n            >\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Signature Type <span className=\"text-red-600\">*</span>\n                </label>\n                <Select\n                  value={document.signatureType}\n                  className={` ${inputAntdSelectClassName} ${\n                    formErrors.signatureType\n                      ? \"border-[1px] \"\n                      : \"border-gray-300\"\n                  }`}\n                  onChange={(e) => handleInputChange(index, \"signatureType\", e)}\n                  placeholder=\"Select Signature Type\"\n                  showSearch\n                >\n                  <Select.Option value=\"\">Select Signature Type</Select.Option>\n                  {digitSignLoading ? <Select.Option disabled>\n                          <ListLoader />\n                        </Select.Option>:sortByPropertyAlphabetically(DigitalSignatureTypeList?.docs)?.map((type) => (\n                    <Select.Option key={type._id} value={type._id}>\n                      {type.name}\n                    </Select.Option>\n                  ))}\n                </Select>\n                {formErrors[index]?.signatureType && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].signatureType}\n                  </p>\n                )}\n              </div>\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Name <span className=\"text-red-600\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  value={document?.name}\n                  onChange={(e) =>\n                    handleInputChange(index, \"name\", e.target.value)\n                  }\n                  className={`${inputClassName} ${\n                    formErrors[index]?.name ? \"border-[1px] \" : \"\"\n                  }`}\n                  placeholder=\"Enter  Name\"\n                />\n                {formErrors[index]?.name && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].name}\n                  </p>\n                )}\n              </div>\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  Start Date <span className=\"text-red-600\">*</span>\n                </label>\n                <DatePicker\n                  size={\"large\"}\n                  picker={\"date\"}\n                  format=\"DD/MM/YYYY\"\n                  disabledDate={(current) => {\n                    return current.isBefore(dayjs().endOf(\"day\"), \"day\");\n                  }}\n                  value={\n                    document?.startDate ? dayjs(document?.startDate) : null\n                  }\n                  onChange={(date) =>\n                    handleInputChange(index, \"startDate\", date)\n                  }\n                  className={` ${inputCalanderClassName} ${\n                    formErrors[index]?.startDate\n                      ? \"border-[1px] \"\n                      : \"\"\n                  } `}\n                  popupClassName={\"!z-[1580]\"}\n                />\n                {formErrors[index]?.startDate && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].startDate}\n                  </p>\n                )}\n              </div>\n              <div>\n                <label className={`${inputLabelClassName}`}>\n                  End Date <span className=\"text-red-600\">*</span>\n                </label>\n                <DatePicker\n                  size={\"large\"}\n                  picker={\"date\"}\n                  format=\"DD/MM/YYYY\"\n                  disabledDate={(current) => {\n                    return current.isBefore(dayjs().endOf(\"day\"), \"day\");\n                  }}\n                  value={document?.endDate ? dayjs(document?.endDate) : null}\n                  onChange={(date) => handleInputChange(index, \"endDate\", date)}\n                  className={` ${inputCalanderClassName} ${\n                    formErrors[index]?.endDate\n                      ? \"border-[1px] \"\n                      : \"\"\n                  } `}\n                  popupClassName={\"!z-[1580]\"}\n                />\n                {formErrors[index]?.endDate && (\n                  <p className=\"text-red-600 text-sm\">\n                    {formErrors[index].endDate}\n                  </p>\n                )}\n              </div>\n            </div>\n          </div>\n        ))}\n        <div className=\"flex justify-between px-3 pb-2\">\n          <button\n            type=\"button\"\n            onClick={handleAddMore}\n            className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n          >\n            Add More\n          </button>\n        </div>\n      </div>\n      <div className=\"flex justify-between px-3 pb-2\">\n        <button\n          disabled={loadingUpdateFile}\n          type=\"Submit\"\n          className={`${formButtonClassName}`}\n        >\n          {loadingUpdateFile ? \"Submitting ...\" : \"Submit Details\"}\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default DigitalSignature;\n","import { Controller, useForm } from \"react-hook-form\";\nimport { inputClassName, inputLabelClassName } from \"../../../constents/global\";\nimport { AutoComplete, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { countrySearch } from \"../../global/address/country/CountryFeatures/_country_reducers\";\nimport { useEffect } from \"react\";\nimport { updateClientFunc } from \"./clientFeatures/_client_reducers\";\nimport CustomMobileCodePicker from \"../../../global_layouts/MobileCode/MobileCodePicker\";\n\nfunction ContactPerson({ clientData ,fetchData }) {\n    const {\n        register,\n        handleSubmit,\n        setValue,\n        control,\n        formState: { errors },\n    } = useForm();\n    const { countryListData } = useSelector((state) => state.country);\n    const dispatch = useDispatch()\n    const onSubmit = (data) => {\n\n        const finalPayload = {\n            ...clientData?.data,\n            clientProfile: {\n                ...clientData?.data?.clientProfile,\n                \"contactInfo\": {\n                    \"name\": data?.name,\n                    \"email\": data?.email,\n                    \"mobile\": {\n                        \"code\": data?.code,\n                        \"number\": data?.number\n                    },\n                    \"designation\": data?.designation\n                }\n            }\n\n        }\n        dispatch(updateClientFunc(finalPayload)).then((res)=>{\n            if(!res?.error){\n                fetchData()\n            }\n        })\n    }\n\n    useEffect(() => {\n        if (clientData?.data?.clientProfile?.contactInfo) {\n            setValue(\"name\", clientData?.data?.clientProfile?.contactInfo?.name)\n            setValue(\"email\", clientData?.data?.clientProfile?.contactInfo?.email)\n            setValue(\"code\", clientData?.data?.clientProfile?.contactInfo?.mobile?.code)\n            setValue(\"number\", clientData?.data?.clientProfile?.contactInfo?.mobile?.number)\n            setValue(\"designation\", clientData?.data?.clientProfile?.contactInfo?.designation)\n        }\n    }, [clientData])\n\n    return (\n        <form autoComplete=\"off\" className=\"\" onSubmit={handleSubmit(onSubmit)}>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 md:my-2\">\n                <div className=\"\">\n                    <label className={`${inputLabelClassName}`}>\n                        Name <span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        {...register(\"name\", {\n                            required: \"Name is required\",\n                        })}\n                        className={`placeholder: ${inputClassName} ${errors.name\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        placeholder=\"Enter Name\"\n                    />\n                    {errors.name && (\n                        <p className=\"text-red-500 text-sm\">\n                            {errors.name.message}\n                        </p>\n                    )}\n                </div>\n                <div className=\"\">\n                    <label className={`${inputLabelClassName}`}>\n                        Email <span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                        type=\"text\"\n                        {...register(\"email\", {\n                            required: \"Email is required\",\n                            pattern: {\n                                value:\n                                    /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                                message: \"Please enter a valid email address\",\n                            },\n                        })}\n                        className={` ${inputClassName} ${errors.email ? \"border-[1px] \" : \"border-gray-300\"\n                            }`}\n                        placeholder=\"Enter Email\"\n                    />\n                    {errors.email && (\n                        <p className=\"text-red-500 text-sm\">\n                            {errors.email.message}\n                        </p>\n                    )}\n                </div>\n                <div className=\"\">\n                    <label className={`${inputLabelClassName}`}>\n                        designation <span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                        type=\"designation\"\n                        {...register(\"designation\", {\n                            required: \"designation is required\",\n                        })}\n                        className={` ${inputClassName} ${errors.designation ? \"border-[1px] \" : \"border-gray-300\"\n                            }`}\n                        placeholder=\"Enter designation\"\n                    />\n                    {errors.designation && (\n                        <p className=\"text-red-500 text-sm\">\n                            {errors.designation.message}\n                        </p>\n                    )}\n                </div>\n                <div className=\"flex gap-3\">\n                    <div className=\"w-[150px]\">\n                        <label className={`${inputLabelClassName}`}>\n                            code<span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                            control={control}\n                            name=\"code\"\n                            rules={{ required: \"code is required\" }}\n                            render={({ field }) => (\n                                <CustomMobileCodePicker\n                                field={field}\n                                  errors={errors} \n                                />\n                            )}\n                        />\n                        {errors[`code`] && (\n                            <p className=\"text-red-500 text-sm\">\n                                {errors[`code`].message}\n                            </p>\n                        )}\n                    </div>\n                    <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                            Mobile No<span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                            type=\"number\"\n                            {...register(`number`, {\n                                required: \"Mobile No is required\",\n                                minLength: {\n                                    value: 10,\n                                    message: \"Must be exactly 10 digits\",\n                                },\n                                maxLength: {\n                                    value: 10,\n                                    message: \"Must be exactly 10 digits\",\n                                },\n                            })}\n                            className={` ${inputClassName} ${errors[`number`]\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                            placeholder=\"Enter Mobile No\"\n                            maxLength={10}\n                            onInput={(e) => {\n                                if (e.target.value.length > 10) {\n                                    e.target.value = e.target.value.slice(0, 10);\n                                }\n                            }}\n                        />\n                        {errors[`number`] && (\n                            <p className=\"text-red-500 text-sm\">\n                                {errors[`number`].message}\n                            </p>\n                        )}\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex justify-end \">\n                <button\n                    type=\"submit\"\n                    className=\"bg-header text-white p-2 px-4 rounded mt-4\"\n                >\n                    Submit\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport default ContactPerson\n","import { useEffect, useState } from \"react\";\nimport { formButtonClassName, inputAntdSelectClassName, inputClassName, inputLabelClassName, sortByPropertyAlphabetically } from \"../../../constents/global\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteDocument, fileUploadFunc, updateDocument } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Select } from \"antd\";\nimport { banknameSearch } from \"../../global/other/bankname/bankNameFeatures/_bankName_reducers.js\";\nimport CommonImageViewer from \"../../../global_layouts/ImageViewrModal/CommonImageViewer.js\";\nimport Swal from \"sweetalert2\";\nimport Loader from \"../../../global_layouts/Loader.js\";\n\n\n\nfunction BankDetails({ clientData, fetchData }) {\n    const [banks, setBanks] = useState([1]);\n    const handleBankAddMore = () => {\n        setBanks([...banks, { id: Date.now() }]);\n    };\n    const { bankNameListData,bankNameLoading } = useSelector((state) => state.bankname);\n    const { loadingUpdateFile } = useSelector((state) => state.fileUpload);\n    const [formErrors, setFormErrors] = useState([]);\n    const dispatch = useDispatch();\n    const handleInputChangeBank = (index, field, value) => {\n        const updatedBanks = [...banks];\n        const newFormErrors = [...formErrors];\n\n        if (field === \"ifscCode\") {\n            const ifscPattern = /^[A-Z]{4}0[A-Z0-9]{6}$/;\n\n            if (!ifscPattern.test(value)) {\n                if (!newFormErrors[index]) newFormErrors[index] = {};\n                newFormErrors[index][field] = \"Invalid IFSC code. Example: SBIN0001234\";\n            } else {\n                if (newFormErrors[index]?.[field]) {\n                    delete newFormErrors[index][field];\n                }\n            }\n        }\n\n        if (field === \"accountNumber\") {\n            const accountPattern = /^\\d{6,18}$/;\n\n            if (!accountPattern.test(value)) {\n                if (!newFormErrors[index]) newFormErrors[index] = {};\n                newFormErrors[index][field] =\n                    \"Invalid account number. Must be 6 to 18 digits.\";\n            } else {\n                if (newFormErrors[index]?.[field]) {\n                    delete newFormErrors[index][field];\n                }\n            }\n        }\n        updatedBanks[index][field] = value;\n        setBanks(updatedBanks);\n        setFormErrors(newFormErrors);\n    };\n\n    const handleBankFileChange = (index, file) => {\n        if (!file) return;\n\n        const isPdf = file.type === 'application/pdf';\n        const filePreviewUrl = URL.createObjectURL(file); // Create preview URL for non-PDF files\n    \n        // Show SweetAlert confirmation before uploading\n        Swal.fire({\n            title: 'Preview your file',\n            html: `\n                <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n                    <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n                    ${\n                        isPdf\n                            ? `<p style=\"font-size: 16px; color: #074173;\">${file.name}</p>`\n                            : `<img src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">`\n                    }\n                    <br>\n                </div>\n            `,\n            showCancelButton: true,\n            confirmButtonText: 'Confirm!',\n            cancelButtonText: 'Cancel',\n        }).then((result) => {\n            if (result.isConfirmed) {\n                // Proceed with file upload only if the user confirms\n                dispatch(\n                    fileUploadFunc({\n                        filePath: file,\n                        isVideo: false,\n                        isMultiple: false,\n                    })\n                ).then((data) => {\n                    if (!data.error) {\n                        const updatedBanks = [...banks];\n                        updatedBanks[index].file = [data?.payload?.data];\n                        setBanks(updatedBanks);\n    \n                        // Remove error if it exists\n                        const newFormErrors = [...formErrors];\n                        if (newFormErrors[index]?.file) {\n                            delete newFormErrors[index].file;\n                        }\n                        setFormErrors(newFormErrors);\n                    }\n                });\n            } else {\n            }\n        });\n    };\n    \n    useEffect(() => {\n        dispatch(banknameSearch({ isPagination: false, text: \"\", sort: true, status: true }));\n    }, [])\n    const handleBankDelete = (bank, index) => {\n        if (bank?._id) {\n            dispatch(deleteDocument({ _id: bank?._id })).then((data) => {\n                if (!data.error) {\n                    fetchData()\n\n                }\n            });\n        } else {\n            setBanks((prevBanks) =>\n                prevBanks.filter((_, index2) => index2 !== index)\n            );\n        }\n    };\n\n    const validateBankForm = () => {\n        let errors = [];\n        banks.forEach((bank, index) => {\n            let error = {};\n            if (!bank.accountType) {\n                error.accountType = \"Account Type is required.\";\n            }\n            if (!bank.bankholderName) {\n                error.bankholderName = \"Account Holder name is required.\";\n            }\n            if (!bank.accountNumber) {\n                error.accountNumber = \"Account No is required.\";\n            }\n            if (!bank.bankName) {\n                error.bankName = \"Bank Name is required.\";\n            }\n            if (!bank.branchName) {\n                error.branchName = \"Branch Name is required.\";\n            }\n            if (!bank.ifscCode) {\n                error.ifscCode = \"Ifsc code is required.\";\n            }\n            // if (!bank.file || bank.file.length === 0) {\n            //     error.file = \"Bank file is required.\";\n            // }\n            if (Object.keys(error).length > 0) {\n                errors[index] = error;\n            }\n        });\n\n        setFormErrors(errors);\n        return errors.every((error) => Object.keys(error).length === 0);\n    };\n\n\n    useEffect(() => {\n        if (clientData) {\n            const bankData = clientData?.data?.bankData?.length\n                ? clientData?.data?.bankData.map((bank) => ({\n                    _id: bank?._id || \"\",\n                    accountType: bank?.accountType || \"\",\n                    bankName: bank?.bankName || \"\",\n                    branchName: bank?.branchName || \"\",\n                    bankholderName: bank?.bankholderName || \"\",\n                    accountNumber: bank?.accountNumber || \"\",\n                    ifscCode: bank?.ifscCode || \"\",\n                    file: bank?.filePath || [],\n                }))\n                : [\n                    {\n                        _id: \"\",\n                        accountType: \"\",\n                        bankName: \"\",\n                        branchName: \"\",\n                        bankholderName: \"\",\n                        accountNumber: \"\",\n                        ifscCode: \"\",\n                        file: [],\n                    },\n                ];\n\n            setBanks([...bankData]);\n        }\n    }, [clientData])\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        if (validateBankForm()) {\n            const bankPayload = banks.map((bank, index) => {\n                if (bank?._id) {\n                    return {\n                        userId: clientData?.data?._id,\n                        _id: bank?._id,\n                        bankholderName: bank?.bankholderName,\n                        bankName: bank?.bankName,\n                        accountNumber: bank?.accountNumber,\n                        branchName: bank?.branchName,\n                        ifscCode: bank?.ifscCode,\n                        accountType: bank?.accountType,\n                        filePath: bank?.file,\n                    };\n                } else {\n                    return {\n                        userId: clientData?.data?._id,\n                        bankholderName: bank?.bankholderName,\n                        bankName: bank?.bankName,\n                        accountNumber: bank?.accountNumber,\n                        branchName: bank?.branchName,\n                        ifscCode: bank?.ifscCode,\n                        accountType: bank?.accountType,\n                        filePath: bank?.file,\n                    };\n                }\n            });\n\n            const finalPayload = {\n                bank: bankPayload,\n                type: \"bank\",\n            };\n            await dispatch(updateDocument(finalPayload)).then((data) => {\n                if (!data.error) {\n                    fetchData()\n                }\n\n            });\n        }\n    }\n    const handleDeleteBankImage = (index, file) => {\n        const updatedBanks = [...banks];\n        updatedBanks[index].file = [];\n        setBanks(updatedBanks);\n    };\n\n    return (\n        <form autoComplete=\"off\" onSubmit={onSubmit}>\n            <div className=\"rounded-md\">\n                {banks.map((bank, index) => (\n                    <div key={index} className=\"border border-gray-300 rounded-md my-2\">\n                        <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n                            <div className=\"px-3 py-2 text-white font-semibold\">Bank Document {index + 1}</div>\n                            <button\n                                type=\"button\"\n                                onClick={() => handleBankDelete(bank, index)}\n                                className=\"text-red-600 hover:text-red-800\"\n                            >\n                                <AiFillDelete size={20} className=\"m-2\" />\n                            </button>\n                        </div>\n                        <div\n                            key={index}\n                            className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\"\n                        >\n                            <div className=\"w-full\">\n                                <label className={`${inputLabelClassName}`}>\n                                    Account Holder Name{\" \"}\n                                    <span className=\"text-red-600\">*</span>\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    value={bank.bankholderName}\n                                    onChange={(e) =>\n                                        handleInputChangeBank(\n                                            index,\n                                            \"bankholderName\",\n                                            e.target.value\n                                        )\n                                    }\n                                    className={`${inputClassName} ${formErrors[index]?.bankholderName\n                                        ? \"border-[1px] \"\n                                        : \"\"\n                                        }`}\n                                    placeholder=\"Enter Account Holder name\"\n                                />\n                                {formErrors[index]?.bankholderName && (\n                                    <p className=\"text-red-600 text-sm\">\n                                        {formErrors[index].bankholderName}\n                                    </p>\n                                )}\n                            </div>\n\n                            <div className=\"w-full\">\n                                <label className={`${inputLabelClassName}`}>\n                                    Bank Name <span className=\"text-red-600\">*</span>\n                                </label>\n                                <Select\n                                    value={bank.bankName}\n\n                                    onChange={(e) =>\n                                        handleInputChangeBank(\n                                            index,\n                                            \"bankName\",\n                                            e\n                                        )\n                                    }\n                                    className={`${inputAntdSelectClassName} ${formErrors[index]?.bankName\n                                        ? \"border-[1px] \"\n                                        : \"\"\n                                        }`}\n                                >\n                                    <Select.Option value=\"\">Select Bank Name</Select.Option>\n                                    {bankNameLoading? <Select.Option disabled>\n                  <Loader/>\n                 </Select.Option>:(sortByPropertyAlphabetically(bankNameListData)?.map((data) => (\n                                        <Select.Option key={data.name} value={data.name}>\n                                            {data.name}\n                                        </Select.Option>\n                                    )))}\n                                </Select>\n\n                                {formErrors[index]?.bankName && (\n                                    <p className=\"text-red-600 text-sm\">\n                                        {formErrors[index].bankName}\n                                    </p>\n                                )}\n                            </div>\n\n                            <div className=\"w-full\">\n                                <label className={`${inputLabelClassName}`}>\n                                    Branch Name <span className=\"text-red-600\">*</span>\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    value={bank.branchName}\n                                    onChange={(e) =>\n                                        handleInputChangeBank(\n                                            index,\n                                            \"branchName\",\n                                            e.target.value\n                                        )\n                                    }\n                                    className={`${inputClassName} ${formErrors[index]?.branchName\n                                        ? \"border-[1px] \"\n                                        : \"\"\n                                        }`}\n                                    placeholder=\"Enter Branch name\"\n                                />\n                                {formErrors[index]?.branchName && (\n                                    <p className=\"text-red-600 text-sm\">\n                                        {formErrors[index].branchName}\n                                    </p>\n                                )}\n                            </div>\n\n                            <div className=\"w-full\">\n                                <label className={`${inputLabelClassName}`}>\n                                    Account Number<span className=\"text-red-600\">*</span>\n                                </label>\n                                <input\n                                    type=\"number\"\n                                    value={bank.accountNumber}\n                                    onChange={(e) =>\n                                        handleInputChangeBank(\n                                            index,\n                                            \"accountNumber\",\n                                            e.target.value\n                                        )\n                                    }\n                                    className={`${inputClassName} ${formErrors[index]?.accountNumber\n                                        ? \"border-[1px] \"\n                                        : \"\"\n                                        }`}\n                                    placeholder=\"Enter Account Number\"\n                                />\n                                {formErrors[index]?.accountNumber && (\n                                    <p className=\"text-red-600 text-sm\">\n                                        {formErrors[index].accountNumber}\n                                    </p>\n                                )}\n                            </div>\n\n                            <div className=\"w-full\">\n                                <label className={`${inputLabelClassName}`}>\n                                    IFSC Code<span className=\"text-red-600\">*</span>\n                                </label>\n                                <input\n                                    type=\"text\"\n                                    value={bank.ifscCode}\n                                    onChange={(e) =>\n                                        handleInputChangeBank(\n                                            index,\n                                            \"ifscCode\",\n                                            e.target.value\n                                        )\n                                    }\n                                    className={`${inputClassName} ${formErrors[index]?.ifscCode ? \"border-[1px] \" : \"\"\n                                        }`}\n                                    placeholder=\"Enter IFSC Code\"\n                                />\n                                {formErrors[index]?.ifscCode && (\n                                    <p className=\"text-red-600 text-sm\">\n                                        {formErrors[index].ifscCode}\n                                    </p>\n                                )}\n                            </div>\n\n                            <div className=\"w-full\">\n                                <label className={`${inputLabelClassName}`}>\n                                    Account Type <span className=\"text-red-600\">*</span>\n                                </label>\n                                {/* <select\n                                    value={bank.accountType}\n                                    onChange={(e) =>\n                                        handleInputChangeBank(\n                                            index,\n                                            \"accountType\",\n                                            e.target.value\n                                        )\n                                    }\n                                    className={`${inputClassName} ${formErrors[index]?.accountType\n                                        ? \"border-[1px] \"\n                                        : \"\"\n                                        }`}\n                                >\n                                    <option value=\"\">Select Account Type</option>\n                                    <option className=\"\" value=\"saving\">\n                                        Saving\n                                    </option>\n                                    <option className=\"\" value=\"current\">\n                                        Current\n                                    </option>\n                                    <option className=\"\" value=\"Salary\">\n                                        Salary\n                                    </option>\n                                    <option className=\"\" value=\"Joint\">\n                                        Joint\n                                    </option>\n                                </select> */}\n\n\n\n                                <Select\n\n                                    defaultValue={\"\"}\n                                    // onFocus={() => {\n                                    //   dispatch(\n                                    //     branchSearch({\n                                    //       text: \"\",\n                                    //       sort: true,\n                                    //       status: true,\n                                    //       companyId:\n                                    //         userInfoglobal?.userType === \"admin\"\n                                    //           ? CompanyId\n                                    //           : userInfoglobal?.userType === \"company\"\n                                    //             ? userInfoglobal?._id\n                                    //             : userInfoglobal?.companyId,\n                                    //     })\n                                    //   );\n                                    // }}\n                                    className={`${inputAntdSelectClassName} `}\n\n                                    value={bank.accountType}\n                                    onChange={(value) =>\n                                        handleInputChangeBank(\n                                            index,\n                                            \"accountType\",\n                                            value\n                                        )\n                                    }\n                                >\n                                    <Select.Option value=\"\">Select Account Type</Select.Option>\n\n                                    <Select.Option className=\"\" value=\"saving\">\n                                        Saving\n                                    </Select.Option>\n                                    <Select.Option className=\"\" value=\"current\">\n                                        Current\n                                    </Select.Option>\n                                    <Select.Option className=\"\" value=\"Salary\">\n                                        Salary\n                                    </Select.Option>\n                                    <Select.Option className=\"\" value=\"Joint\">\n                                        Joint\n                                    </Select.Option>\n                                </Select>\n\n                                {formErrors[index]?.accountType && (\n                                    <p className=\"text-red-600 text-sm\">\n                                        {formErrors[index].accountType}\n                                    </p>\n                                )}\n                            </div>\n                            {/* <div className=\"flex items-center gap-2\">\n                                <div>\n                                    <label className={`${inputLabelClassName}`}>\n                                        Upload <span className=\"text-red-600\">*</span>\n                                    </label>\n                                    <input\n                                        type=\"file\"\n                                        id={`bankUpload${index}`}\n                                        className=\"hidden\"\n                                        onChange={(e) =>\n                                            handleBankFileChange(index, e.target.files[0])\n                                        }\n                                    />\n                                    <br />\n                                    <label\n                                        htmlFor={`bankUpload${index}`}\n                                        className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                                    >\n                                        Upload\n                                    </label>\n                                </div>\n                                {bank?.file?.length > 0\n                                    ? bank.file.map((file, index) => (\n                                        <img\n                                            key={index}\n                                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                                            alt={`Uploaded ${index + 1}`}\n                                            className=\"w-20 h-20 shadow rounded-sm\"\n                                        />\n                                    ))\n                                    : null}\n                                {formErrors[index]?.file && (\n                                    <p className=\"text-red-600 text-sm\">\n                                        {formErrors[index].file}\n                                    </p>\n                                )}\n                            </div> */}\n                            <div className=\"flex items-center gap-2\">\n                                <div>\n                                    <label className={`${inputLabelClassName}`}>\n                                        Upload Image\n                                    </label>\n                                    <input\n                                        type=\"file\"\n                                          accept=\".pdf,image/*\"\n                                        id={`bankUpload${index}`}\n                                        className=\"hidden\"\n                                        onChange={(e) =>\n                                            handleBankFileChange(index, e.target.files[0])\n                                        }\n                                    />\n                                    <br />\n                                    <label\n                                        htmlFor={`bankUpload${index}`}\n                                        className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                                    >\n                                        Upload Image\n                                    </label>\n                                </div>\n                                {bank?.file?.length > 0\n                                    ? bank.file.map((file, fileIndex) => (\n                                        <div key={fileIndex} className=\"relative\">\n                                            <CommonImageViewer\n                                                // key={index}\n                                                src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                                                alt={`Uploaded ${fileIndex + 1}`}\n\n                                            />\n                                            <button\n                                                className=\"absolute -top-1 -right-2 bg-red-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs\"\n                                                onClick={() => handleDeleteBankImage(index, file)}\n                                            >\n                                                ✕\n                                            </button>\n                                        </div>\n                                    ))\n                                    : null}\n                                {formErrors[index]?.file && (\n                                    <p className=\"text-red-600 text-sm\">\n                                        {formErrors[index].file}\n                                    </p>\n                                )}\n                            </div>\n\n                           \n                        </div>\n                    </div>\n                ))}\n                <div className=\"flex justify-between px-3 pb-2\">\n                    <button\n                        type=\"button\"\n                        onClick={handleBankAddMore}\n                        className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n                    >\n                        Add More\n                    </button>\n                </div>\n            </div>\n            <div className=\"flex justify-between px-3 pb-2\">\n                <button\n                    disabled={loadingUpdateFile}\n                    type=\"Submit\"\n                    className={`${formButtonClassName}`}\n                >\n                    {loadingUpdateFile ? \"Submitting ...\" : \"Submit Details\"}\n                </button>\n            </div>\n        </form>\n    )\n}\n\nexport default BankDetails\n"],"names":["_ref","clientData","fetchData","dispatch","useDispatch","selectedEmployees","setSelectedEmployees","useState","register","control","reset","handleSubmit","formState","errors","useForm","defaultValues","ServicesDetails","serviceId","number","useEffect","_clientData$data","_clientData$data2","deptSearch","companyId","data","branchId","directorId","text","sort","status","isPagination","departmentListData","useSelector","state","department","_clientData$data3","selectedData","departmentIds","_jsxs","autoComplete","onSubmit","finalPayload","_objectSpread","updateClientFunc","then","res","error","children","_jsx","className","type","onChange","e","target","checked","map","emp","_id","length","element","index","concat","includes","handleSelectEmployee","employeeId","prevSelected","filter","id","name","colSpan","clientDataParent","setValue","watch","fullName","userType","password","email","mobile","code","directorProfile","isShareLoginDetails","secondaryEmail","secondaryMobile","landline","generalInfo","gender","dateOfBirth","maritalStatus","addresses","street","city","country","pinCode","countryListData","loading","countryListLoading","stateListData","states","cityListData","fields","append","remove","useFieldArray","_clientDataParent$dat","_clientDataParent$dat2","_clientDataParent$dat3","_clientDataParent$dat4","_clientDataParent$dat5","ownerData","forEach","eduDetail","_eduDetail$mobile","_eduDetail$mobile2","_eduDetail$directorPr","_eduDetail$directorPr2","_eduDetail$directorPr3","_eduDetail$directorPr4","_eduDetail$directorPr5","_eduDetail$directorPr6","_eduDetail$directorPr7","_eduDetail$generalInf","_eduDetail$generalInf2","_eduDetail$generalInf3","_eduDetail$addresses","_eduDetail$addresses$","_eduDetail$addresses2","_eduDetail$addresses3","_eduDetail$addresses4","_eduDetail$addresses5","_eduDetail$addresses6","_eduDetail$addresses7","_eduDetail$addresses8","_eduDetail$addresses9","formattedEduDetail","dayjs","primary","secondary","location","latitude","longitude","address","ownerCheckBox","setOwnerCheckBox","ownerCheckBoxes","setOwnerCheckBoxes","_clientDataParent$dat6","_clientDataParent$dat7","_clientDataParent$dat8","_data$clientData","payload","clientId","ownerArr","owner","_owner$directorProfil","_owner$mobile","_owner$mobile2","_owner$directorProfil2","_owner$landline","_owner$directorProfil3","_owner$generalInfo","_owner$generalInfo2","_owner$generalInfo3","_owner$addresses","_owner$addresses2","_owner$addresses3","_owner$addresses4","_owner$addresses5","updateService","_Fragment","item","_errors$clientData","_errors$clientData$in","_errors$clientData2","_errors$clientData2$i","_errors$clientData3","_errors$clientData3$i","_errors$clientData4","_errors$clientData4$i","_errors$clientData5","_errors$clientData5$i","_errors$clientData6","_errors$clientData6$i","_errors$clientData7","_errors$clientData7$i","_errors$clientData7$i2","_errors$clientData8","_errors$clientData8$i","_errors$clientData8$i2","_errors$clientData9","_errors$clientData9$i","_errors$clientData9$i2","_errors$clientData0","_errors$clientData0$i","_errors$clientData0$i2","_errors$clientData1","_errors$clientData1$i","_errors$clientData1$i2","_errors$clientData10","_errors$clientData10$","_errors$clientData10$2","_errors$clientData11","_errors$clientData11$","_errors$clientData11$2","_errors$clientData12","_errors$clientData12$","_errors$clientData12$2","_errors$clientData13","_errors$clientData13$","_errors$clientData13$2","_errors$clientData15","_errors$clientData15$","_errors$clientData15$2","_errors$clientData17","_errors$clientData17$","_errors$clientData17$2","_errors$clientData19","_errors$clientData19$","_errors$clientData19$2","_errors$clientData21","_errors$clientData21$","_errors$clientData21$2","Checkbox","_clientDataParent$dat9","_clientDataParent$dat0","_clientDataParent$dat1","_clientDataParent$dat10","_clientDataParent$dat11","_clientDataParent$dat12","_clientDataParent$dat13","_clientDataParent$dat14","_clientDataParent$dat15","_clientDataParent$dat16","_clientDataParent$dat17","_clientDataParent$dat18","_clientDataParent$dat19","_clientDataParent$dat20","_clientDataParent$dat21","_clientDataParent$dat22","_clientDataParent$dat23","_clientDataParent$dat24","_clientDataParent$dat25","_clientDataParent$dat26","_clientDataParent$dat27","_clientDataParent$dat28","_clientDataParent$dat29","prev","onClick","deleteData","deleteService","AiFillDelete","size","inputLabelClassName","required","placeholder","inputClassName","message","Controller","rules","render","_ref2","field","Select","defaultValue","inputAntdSelectClassName","Option","value","pattern","_ref3","CustomMobileCodePicker","minLength","maxLength","onInput","slice","_ref4","_ref5","CustomDatePicker","disabledDate","current","isAfter","moment","endOf","_ref6","_ref7","_sortByPropertyAlphab","_errors$clientData14","_errors$clientData14$","_errors$clientData14$2","AutoComplete","options","sortByPropertyAlphabetically","docs","notFoundContent","ListLoader","onFocus","countrySearch","inputerrorClassNameAutoComplete","_ref8","_sortByPropertyAlphab2","_errors$clientData16","_errors$clientData16$","_errors$clientData16$2","z","stateSearch","countryName","_ref9","_sortByPropertyAlphab3","_errors$clientData18","_errors$clientData18$","_errors$clientData18$2","citySearch","stateName","_ref0","_errors$clientData20","_errors$clientData20$","_errors$clientData20$2","documents","setDocuments","documentNo","isPeriod","quarterName","monthName","file","quarter","months","loadingUpdateFile","fileUpload","formErrors","setFormErrors","employeeDocumentList","employeeDocListloading","employeeDocument","_getUserIds","empDoctSearch","getUserIds","userCompanyId","handleInputChange","_newFormErrors$index","updatedDocuments","newFormErrors","_clientData$data$fina","documentData","financeData","year","yearRange","filePath","monthQuaters","getDefaultFinacialYear","financialYearPairs","generateFinancialYearPairs","async","preventDefault","validateForm","document","Object","keys","every","financialInfo","userId","updateDocument","_formErrors$index","_formErrors$index2","_formErrors$index3","_formErrors$index4","_formErrors$index5","_formErrors$index6","_document$file","_formErrors$index7","dropdownType","handleDelete","deleteDocument","prevDocuments","_","index2","showSearch","disabled","Loader","yearPair","qtr","month","accept","handleFileChange","isPdf","filePreviewUrl","URL","createObjectURL","Swal","title","html","showCancelButton","confirmButtonText","cancelButtonText","result","isConfirmed","fileUploadFunc","isVideo","isMultiple","_data$payload","_newFormErrors$index2","files","htmlFor","fileIndex","CommonImageViewer","src","process","alt","handleDeleteDocImage","updatedDocs","handleAddMore","Date","now","formButtonClassName","genCheckboxStyle","token","checkboxCls","wrapperCls","assign","resetComponent","display","flexWrap","columnGap","marginXS","antCls","flex","alignItems","cursor","width","overflow","content","marginInlineStart","height","position","whiteSpace","lineHeight","borderRadius","borderRadiusSM","alignSelf","inset","zIndex","opacity","margin","genFocusOutline","boxSizing","checkboxSize","direction","backgroundColor","colorBgContainer","border","unit","lineWidth","lineType","colorBorder","borderCollapse","transition","motionDurationSlow","top","insetInlineStart","calc","div","mul","equal","lineWidthBold","colorWhite","borderTop","borderInlineStart","transform","motionDurationFast","motionEaseInBack","paddingInlineStart","paddingXS","paddingInlineEnd","borderColor","colorPrimary","colorPrimaryHover","motionDurationMid","motionEaseOutBack","fontSizeLG","pointerEvents","background","colorBgContainerDisabled","colorTextDisabled","color","getStyle","prefixCls","checkboxToken","mergeToken","controlInteractiveSize","genStyleHooks","documentType","_clientData$data$docu","endYear","expireDate","doc","DatePicker","inputCalanderClassName","popupClassName","picker","handleDeleteDoctImage","React","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","InternalCheckbox","props","ref","_a","customizePrefixCls","rootClassName","indeterminate","style","onMouseEnter","onMouseLeave","skipGroup","restProps","getPrefixCls","checkbox","ConfigContext","checkboxGroup","GroupContext","isFormItemInput","FormItemInputContext","contextDisabled","DisabledContext","mergedDisabled","prevValue","checkboxRef","mergedRef","composeRef","registerValue","cancelValue","input","rootCls","useCSSVarCls","wrapCSSVar","hashId","cssVarCls","useStyle","checkboxProps","_len","arguments","args","Array","_key","apply","toggleOption","label","classString","classNames","checkboxClass","TARGET_CLS","onLabelClick","onInputClick","useBubbleLock","Wave","component","RcCheckbox","undefined","registeredValues","setRegisteredValues","memoizedOptions","option","val","prevValues","v","_toConsumableArray","optionIndex","newValue","push","splice","a","b","findIndex","opt","groupPrefixCls","domProps","omit","childrenNode","key","toString","memoizedContext","Provider","Group","__ANT_CHECKBOX","DigitalSignatureTypeList","digitSignLoading","digitalSignatureType","navigate","useNavigate","DigitalSignatureTypeSearch","_clientData$data6","_clientData$data6$sig","signatureData","startDate","endDate","expiryDate","attechment","signatureType","signatureTypeId","_clientData$data4","_clientData$data5","documentPayload","finalPaylaod","signatureArr","format","isBefore","date","_clientData$data2$cli","_clientData$data3$cli","_clientData$data3$cli2","_clientData$data4$cli","_clientData$data4$cli2","_clientData$data5$cli","_clientData$data5$cli2","_clientData$data5$cli3","_clientData$data6$cli","_clientData$data6$cli2","_clientData$data6$cli3","_clientData$data7","_clientData$data7$cli","_clientData$data7$cli2","clientProfile","contactInfo","designation","banks","setBanks","bankNameListData","bankNameLoading","bankname","handleInputChangeBank","updatedBanks","test","banknameSearch","_clientData$data$bank","bankData","bank","accountType","bankName","branchName","bankholderName","accountNumber","ifscCode","validateBankForm","_formErrors$index8","_formErrors$index9","_formErrors$index0","_formErrors$index1","_bank$file","_formErrors$index10","handleBankDelete","prevBanks","handleBankFileChange","_newFormErrors$index3","handleDeleteBankImage","handleBankAddMore"],"sourceRoot":""}