{"version":3,"file":"static/js/4082.dc88082b.chunk.js","mappings":"sWA0hBA,QAxgBA,SAA0BA,GAAuG,IAAtG,OAAEC,EAAM,KAAEC,EAAI,sBAAEC,EAAqB,eAAEC,EAAc,eAAEC,EAAiB,UAAS,WAACC,GAAW,GAAMN,EAC5H,MAAQO,QAASC,IAA2BC,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,cACjE,SACJC,EAAQ,aACRC,EAAY,SACZC,EAAQ,QACRC,EAAO,MACPC,EAAK,MACLC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,OAEE,cACJC,EAAa,eACbC,EAAc,aACdC,EAAY,SACZC,IACEC,EAAAA,EAAAA,KAEEC,GAAWC,EAAAA,EAAAA,OACVC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACvC,WAAEC,EAAU,kBAAEC,IAAsBvB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMuB,QACjEC,EAAiBC,KAAKC,MAC1BC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAE9B,YAAEC,EAAalC,QAASmC,IAAoBjC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMiC,UACzE,sBAAEC,IAA0BnC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMmC,mBAEzDC,GAAYC,EAAAA,EAAAA,IAAS,CACzBhC,UACAiC,KAAM,cACNC,aAAc5B,IAGV6B,GAAYH,EAAAA,EAAAA,IAAS,CACzBhC,UACAiC,KAAM,YACNC,aAAc,KAGVE,GAAWJ,EAAAA,EAAAA,IAAS,CACxBhC,UACAiC,KAAM,aACNC,aAAc1B,KAgChB6B,EAAAA,EAAAA,WAAU,KACHnD,IAEa,YAAbuB,GAAuC,oBAAbA,GAC7BE,GACE2B,EAAAA,EAAAA,IAAa,CACXC,KAAM,GACNC,MAAM,EACNC,QAAQ,EACRV,UAAWA,EACXW,cAAc,OAInB,CAACxD,EAAQ6C,KAEZM,EAAAA,EAAAA,WAAU,KACHnD,KAEA6C,GAA0C,WAAf,OAAdZ,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,YAC/B2B,GAAyC,kBAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,WAA4D,cAAf,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,YACrD,YAAnBnB,GACFqD,IAEFhC,GAASiC,EAAAA,EAAAA,IAAwB,CAC/BC,WAAY,GACZd,UAC+B,WAAf,OAAdZ,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,UACZsB,EAC6B,aAAf,OAAdZ,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,UACA,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgB2B,IACF,OAAd3B,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,UACxBK,SAC+B,aAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,WACe,WAAf,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,WACa,qBAAf,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,UACd2B,EAC6B,mBAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,UACA,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgB2B,IACF,OAAd3B,QAAc,IAAdA,OAAc,EAAdA,EAAgBiB,SACxBG,KAAM,GACNC,MAAM,EACNC,OAAQ,GACRC,cAAc,QAGjB,CAACxD,EAAQ6C,EAAWK,IAEvB,MAAMO,EAAuBA,KAC3B,MAAMI,EAAa,CACjBR,KAAM,GACNE,QAAQ,EACRD,MAAM,EACNQ,KAAM,GACNC,KAAM,GACNP,cAAc,EACdQ,aAAc3D,EAAa,GAAkC,cAAf,OAAd4B,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,UAAwC,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgB+B,aAAe,GACzGC,cAAe,GACfpB,UAC+B,WAAf,OAAdZ,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,UACZsB,EAC6B,aAAf,OAAdZ,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,UACA,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgB2B,IACF,OAAd3B,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,UACxBK,SAC+B,aAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,WACe,WAAf,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,WACa,qBAAf,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,UACd2B,EAC6B,mBAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBV,UACA,OAAdU,QAAc,IAAdA,OAAc,EAAdA,EAAgB2B,IACF,OAAd3B,QAAc,IAAdA,OAAc,EAAdA,EAAgBiB,UAE1BzB,GAASyC,EAAAA,EAAAA,IAAcL,KAiCnBM,EAAeA,KACnBnD,IACAY,EAAc,IACdzB,KAGF,OACEiE,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,MAAM,sBACNC,KAAMvE,EACNwE,SAAUL,EACVM,OAAQ,KACRC,MAAO,IACPC,UAAQ,EACRC,UAAU,oBAAmBC,UAE7BC,EAAAA,EAAAA,MAAA,QAAMC,aAAa,MAAMC,SAAUpE,EA9CrBX,IAChB,MAAMgF,EAAe,CACnBpC,UAAWA,EACXc,WAAY,GACZT,SAAUA,EACV,MAAa,OAAJjD,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,KACf,UAAiC,aAAhB,OAAJ9C,QAAI,IAAJA,OAAI,EAAJA,EAAMgD,WAA8B,OAAJhD,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,UAAY,KAC/D,YAAmB,OAAJjF,QAAI,IAAJA,OAAI,EAAJA,EAAMkF,aACrB,YAAe,GACf,WAAiC,YAAnB/E,EAAoC,OAAJH,QAAI,IAAJA,OAAI,EAAJA,EAAMmF,SAA8B,aAAnBhF,EAA8C,OAAd6B,QAAc,IAAdA,OAAc,EAAdA,EAAgB2B,IAAM,GACrH,cAAqB,OAAJ3D,QAAI,IAAJA,OAAI,EAAJA,EAAMoF,YACvB,YAAmB,OAAJpF,QAAI,IAAJA,OAAI,EAAJA,EAAMqF,aACrB,UAAiB,OAAJrF,QAAI,IAAJA,OAAI,EAAJA,EAAMgD,UACnB,SAAgB,OAAJhD,QAAI,IAAJA,OAAI,EAAJA,EAAMsF,aAClB,WAAc5D,EACd,eAAkB,KAClB,KAAQ,IAGVF,GAAS+D,EAAAA,EAAAA,IAAsBP,IAAeQ,KAAMC,IAC7CA,EAAOC,QAEV3E,IACAY,EAAc,IACdzB,IACAD,SAqBwD2E,SAAA,EACxDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6CAA4CC,SAAA,EAC1C,UAAbtD,GAAqC,YAAbA,GAAuC,oBAAbA,KAClDuD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,SAAOF,UAAS,GAAAtC,OAAKsD,EAAAA,IAAsBf,SAAA,CAAC,WACnCT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcC,SAAC,UAExCT,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACT9C,KAAK,aACLjC,QAASA,EACTgF,MAAO,CAAEC,SAAU,sBAEnBC,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBnB,EAAAA,EAAAA,MAACqB,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTtB,UAAS,GAAAtC,OAAK+D,EAAAA,GAAwB,KAAA/D,OAAIpB,EAAOoF,WAAa,iBAAmB,mBACjFC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQ5B,UAAU8B,cAAcC,SAASJ,EAAMG,eAExDE,kBAAoBC,GAAYA,EAAQC,WACxCC,YAAY,gBAAenC,SAAA,EAE3BT,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAACC,MAAM,GAAErC,SAAC,kBACvB9C,GAAoBqC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAACE,UAAQ,EAAAtC,UAC1CT,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,MACiB,OAAVtF,QAAU,IAAVA,OAAU,EAAVA,EAAYuF,IAAKC,IACnClD,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAAiBC,MAAW,OAAJI,QAAI,IAAJA,OAAI,EAAJA,EAAM1D,IAAIiB,SACzC,OAAJyC,QAAI,IAAJA,OAAI,EAAJA,EAAMC,UADe,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAM1D,aAOjC1C,EAAOoF,aAAclC,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBC,SAAE3D,EAAOoF,WAAWkB,cAIjF1C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACfC,EAAAA,EAAAA,MAAA,SAAOF,UAAS,GAAAtC,OAAKsD,EAAAA,IAAsBf,SAAA,CAAC,eAC/BT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcC,SAAC,UAE5CT,EAAAA,EAAAA,KAAA,SAAAgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEkB,KAAK,QACD3G,EAAS,OAAQ,CACnBoF,SAAU,4BACV,IACFnB,UAAS,GAAAtC,OAAKmF,EAAAA,GAAc,KAAAnF,OAAIpB,EAAO6B,KAAO,iBAAmB,mBACjEiE,YAAY,sBAEb9F,EAAO6B,OACNqB,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBC,SAChC3D,EAAO6B,KAAKyE,aAKH,YAAnBpH,IAAmC0E,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EAC/CC,EAAAA,EAAAA,MAAA,SAAOF,UAAS,GAAAtC,OAAKsD,EAAAA,IAAsBf,SAAA,CAAC,cAChCT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcC,SAAC,UAE3CT,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACT/E,QAASA,EACTiC,KAAK,WACL+C,MAAO,CAAEC,SAAU,wBACnBC,OAAQ0B,IAAA,IAAAC,EAAA,IAAC,MAAEzB,GAAOwB,EAAA,OAChB5C,EAAAA,EAAAA,MAACqB,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACT0B,YAAU,EACVrB,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQ5B,UAAU8B,cAAcC,SAASJ,EAAMG,eAExDE,kBAAoBC,GAAYA,EAAQC,WAExCnC,UAAS,GAAAtC,OAAK+D,EAAAA,GAAwB,KAAA/D,OAAIpB,EAAOkE,SAAW,iBAAmB,mBAC/E4B,YAAY,mBAAkBnC,SAAA,EAE9BT,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAACC,MAAM,GAAErC,SAAC,qBACvBpC,GAAkB2B,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAACE,UAAQ,EAAAtC,UAACT,EAAAA,EAAAA,KAACgD,EAAAA,EAAU,MACC,QADkBO,GACvEE,EAAAA,EAAAA,IAA6BrF,EAAa,mBAAW,IAAAmF,OAAA,EAArDA,EAAuDN,IAAI,CAACS,EAASC,KACnE3D,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAAaC,MAAc,OAAPY,QAAO,IAAPA,OAAO,EAAPA,EAASlE,IAAIiB,SACrC,OAAPiD,QAAO,IAAPA,OAAO,EAAPA,EAASP,UADQQ,WAQ7B7G,EAAOkE,WACNhB,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBC,SAAE3D,EAAOkE,SAASoC,cAIzD1C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,MAAA,SAAOF,UAAS,GAAAtC,OAAKsD,EAAAA,IAAsBf,SAAA,CAAC,kBAC5BT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcC,SAAC,UAE/CT,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACT/E,QAASA,EACTiC,KAAK,eACL+C,MAAO,CAAEC,SAAU,6BACnBC,OAAQgC,IAAA,IAAAC,EAAA,IAAC,MAAE/B,GAAO8B,EAAA,OAChBlD,EAAAA,EAAAA,MAACqB,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTc,YAAY,uBACZpC,UAAS,GAAAtC,OAAK+D,EAAAA,GAAwB,KAAA/D,OAAIpB,EAAOqE,aAAe,iBAAmB,mBACnFqC,YAAU,EACVf,kBAAoBC,GAAYA,EAAQC,WACxCR,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQ5B,UAAU8B,cAAcC,SAASJ,EAAMG,eACvD9B,SAAA,EAEDT,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAACC,MAAM,GAAErC,SAAC,yBACY,QADwBoD,EAC3D,CAAC,MAAO,SAAU,OAAQ,iBAAS,IAAAA,OAAA,EAAnCA,EAAqCZ,IAAIpH,IACxCmE,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAAYC,MAAOjH,EAAK4E,SAAE5E,GAApBA,WAK3BiB,EAAOqE,eACNnB,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBC,SAChC3D,EAAOqE,aAAaiC,cAK3B1C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,MAAA,SAAOF,UAAS,GAAAtC,OAAKsD,EAAAA,IAAsBf,SAAA,CAAC,eAC/BT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcC,SAAC,UAE5CT,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACT/E,QAASA,EACTiC,KAAK,YACL+C,MAAO,CAAEC,SAAU,0BACnBC,OAAQkC,IAAA,IAAAC,EAAA,IAAC,MAAEjC,GAAOgC,EAAA,OAChBpD,EAAAA,EAAAA,MAACqB,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTc,YAAY,oBACZpC,UAAS,GAAAtC,OAAK+D,EAAAA,GAAwB,KAAA/D,OAAIpB,EAAO+B,UAAY,iBAAmB,mBAChF2E,YAAU,EACVf,kBAAoBC,GAAYA,EAAQC,WACxCR,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQ5B,UAAU8B,cAAcC,SAASJ,EAAMG,eACvD9B,SAAA,EAEDT,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAACC,MAAM,GAAErC,SAAC,sBACH,QADoCsD,EACxD,CAAC,UAAW,gBAAQ,IAAAA,OAAA,EAApBA,EAAsBd,IAAIpH,IACzBmE,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAAYC,MAAOjH,EAAK4E,SAAE5E,GAApBA,WAK3BiB,EAAO+B,YACNmB,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBC,SAChC3D,EAAO+B,UAAUuE,aAKT,YAAdvE,IACC6B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBC,EAAAA,EAAAA,MAAA,SAAOF,UAAS,GAAAtC,OAAKsD,EAAAA,IAAsBf,SAAA,CAAC,YAClCT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcC,SAAC,UAEzCT,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACT/E,QAASA,EACTiC,KAAK,YACL+C,MAAO,CAAEC,SAAU,uBACnBC,OAAQoC,IAAA,IAAC,MAAElC,GAAOkC,EAAA,OAChBtD,EAAAA,EAAAA,MAACqB,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTc,YAAY,iBACZH,kBAAoBC,GAAYA,EAAQC,WACxCnC,UAAS,GAAAtC,OAAK+D,EAAAA,GAAwB,KAAA/D,OAAIpB,EAAOgE,UAAY,iBAAmB,mBAChF0C,YAAU,EACVrB,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQ5B,UAAU8B,cAAcC,SAASJ,EAAMG,eACvD9B,SAAA,EAEDT,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAACC,MAAM,GAAErC,SAAC,mBACF,OAArBlC,QAAqB,IAArBA,OAAqB,EAArBA,EAAuB0E,IAAI,CAACpH,EAAM8H,KACjC3D,EAAAA,EAAAA,KAAC+B,EAAAA,EAAOc,OAAM,CAAaC,MAAW,OAAJjH,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,IAAIiB,SAAM,OAAJ5E,QAAI,IAAJA,OAAI,EAAJA,EAAMqE,OAAhCyD,WAK3B7G,EAAOgE,YACNd,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBC,SAChC3D,EAAOgE,UAAUsC,cAM1B1C,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,SAAOF,UAAS,GAAAtC,OAAKsD,EAAAA,IAAsBf,SAAA,CAAC,eAC/BT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcC,SAAC,UAE5CT,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACT9C,KAAK,cACLjC,QAASA,EACTgF,MAAO,CAAEC,UAAU,GACnBC,OAAQqC,IAAA,IAAC,MAAEnC,GAAOmC,EAAA,OAChBjE,EAAAA,EAAAA,KAACkE,EAAAA,EAAgB,CACfpC,MAAOA,EACPqC,UAAU,EACVC,OAAO,mBACPtH,OAAQA,EACRuH,aAAeC,GACNA,GAAWA,EAAQC,SAASC,MAASC,MAAM,OAAQ,YAKjE3H,EAAOmE,cACNjB,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBC,SAAC,+BAIxCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,SAAOF,UAAS,GAAAtC,OAAKsD,EAAAA,IAAsBf,SAAA,CAAC,aACjCT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcC,SAAC,UAE1CT,EAAAA,EAAAA,KAACyB,EAAAA,GAAU,CACT9C,KAAK,eACLjC,QAASA,EACTgF,MAAO,CAAEC,UAAU,GACnBC,OAAQ8C,IAAA,IAAC,MAAE5C,GAAO4C,EAAA,OAChB1E,EAAAA,EAAAA,KAACkE,EAAAA,EAAgB,CACfpC,MAAOA,EACPqC,UAAU,EACVC,OAAO,mBACPtH,OAAQA,EACRuH,aAAeC,GACNA,GAAWA,EAAQC,SAASC,MAASC,MAAM,OAAQ,YAKjE3H,EAAOoE,eACNlB,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBC,SAAC,6BAIxCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,SAAOF,UAAS,GAAAtC,OAAKsD,EAAAA,IAAsBf,SAAA,CAAC,gBAC9BT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,eAAcC,SAAC,UAE7CT,EAAAA,EAAAA,KAAA,YAAAgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMzF,EAAS,eAAgB,CAC3BoF,SAAU,6BACV,IACFnB,UAAS,GAAAtC,OAAKmF,EAAAA,GAAc,KAAAnF,OAAIpB,EAAOiE,aAAe,iBAAmB,kBAAiB,SAC1F6B,YAAY,uBAEb9F,EAAOiE,eACNf,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,uBAAsBC,SAChC3D,EAAOiE,aAAaqC,cAK3B1C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCT,EAAAA,EAAAA,KAAA,SACEkD,KAAK,OACLyB,SA3ZcC,IACxB,MAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAC5B,IAAKF,EAAM,OAEX,MAAMG,EAAU,CACdC,SAAUJ,EACVK,SAAS,EACTC,YAAY,GAGd9H,GAAS+H,EAAAA,EAAAA,IAAeJ,IAAU3D,KAAMgE,IAAS,IAADC,EACvC,OAAHD,QAAG,IAAHA,GAAY,QAATC,EAAHD,EAAKE,eAAO,IAAAD,GAAZA,EAAczJ,MAChB2B,EAAegI,IAAI,IAAAC,EAAA,MAAK,IAAID,EAAS,OAAHH,QAAG,IAAHA,GAAY,QAATI,EAAHJ,EAAKE,eAAO,IAAAE,OAAT,EAAHA,EAAc5J,WAgZ1C2E,UAAU,SACVkF,GAAG,iBAELhF,EAAAA,EAAAA,MAAA,SACEiF,QAAQ,cACRnF,UAAU,kJAAiJC,SAAA,EAE3JT,EAAAA,EAAAA,KAAC4F,EAAAA,IAAS,CAACpF,UAAU,SAAS,uBAGhCR,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,YAAWC,SACb,OAAVlD,QAAU,IAAVA,OAAU,EAAVA,EAAY0F,IAAI,CAAC4B,EAAMlB,KACtBjD,EAAAA,EAAAA,MAAA,OAEEF,UAAU,8DAA6DC,SAAA,EAEvEC,EAAAA,EAAAA,MAAA,KACEmF,KAAI,GAAA3H,OAAK4H,gCAAyC,YAAA5H,OAAW2G,GAC7DrE,UAAU,8BACVsE,OAAO,SACPiB,IAAI,sBAAqBtF,SAAA,EAEzBT,EAAAA,EAAAA,KAAC4F,EAAAA,IAAS,CAACpF,UAAU,mBACrBR,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,wBAAuBC,SACpCoE,QAGL7E,EAAAA,EAAAA,KAAA,UACEkD,KAAK,SACL8C,QAASA,IAxaDrC,KACxBnG,EAAegI,GACkB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMS,OAAO,CAACC,EAAGC,IAAMA,IAAMxC,KAsa3ByC,CAAiBzC,GAChCnD,UAAU,kCAAiCC,UAE3CT,EAAAA,EAAAA,KAACqG,EAAAA,IAAO,QAnBL1C,aA2BfjD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kCAAiCC,SAAA,EAC9CT,EAAAA,EAAAA,KAACsG,EAAAA,GAAM,CAACN,QAASjG,EAAcgD,SAAU5G,EAAuBsE,SAAC,YAGjET,EAAAA,EAAAA,KAACsG,EAAAA,GAAM,CACLpD,KAAK,UACLqD,SAAS,SACTxD,SAAU5G,EACVD,QAASC,EAAuBsE,SAE/BtE,EAAyB,gBAAkB,kBAMxD,C,8eC5dA,MAAM,KAAEqK,EAAI,MAAEC,EAAK,UAAEC,GAAcC,EAAAA,GAC7B,SAAEC,GAAaC,EAAAA,GACf,QAAEC,GAAYC,EAAAA,EAEdC,EAAiBA,CAACC,EAAOC,KAC7B,IAAKD,EAAO,MAAO,QACnB,MAAME,EAAUD,GAAO,IAAIE,KACrBC,EAAW7C,IAAAA,SAAgBA,IAAO2C,GAASG,KAAK9C,IAAOyC,KACvDM,EAAQC,KAAKC,MAAMJ,EAASK,WAC5BC,EAAUH,KAAKC,MAAMJ,EAASO,aAAe,GACnD,MAAM,GAAN1J,OAAUqJ,EAAK,MAAArJ,OAAKyJ,EAAO,MAGvBE,EAAe,CACnB,SAAY,CAAEC,MAAO,OAAQ7I,KAAM,WAAY8I,MAAM/H,EAAAA,EAAAA,KAACgI,EAAAA,EAAY,KAClE,cAAe,CAAEF,MAAO,SAAU7I,KAAM,cAAe8I,MAAM/H,EAAAA,EAAAA,KAACiI,EAAAA,EAAkB,KAChF,UAAa,CAAEH,MAAO,QAAS7I,KAAM,YAAa8I,MAAM/H,EAAAA,EAAAA,KAACkI,EAAAA,EAAmB,KAC5E,SAAY,CAAEJ,MAAO,SAAU7I,KAAM,WAAY8I,MAAM/H,EAAAA,EAAAA,KAACkI,EAAAA,EAAmB,KAC3E,KAAQ,CAAEJ,MAAO,QAAS7I,KAAM,OAAQ8I,MAAM/H,EAAAA,EAAAA,KAACkI,EAAAA,EAAmB,KAClE,SAAY,CAAEJ,MAAO,MAAO7I,KAAM,WAAY8I,MAAM/H,EAAAA,EAAAA,KAACmI,EAAAA,EAAa,KAClE,SAAY,CAAEL,MAAO,UAAW7I,KAAM,aAAc8I,MAAM/H,EAAAA,EAAAA,KAACgI,EAAAA,EAAY,MAo0BzE,EAj0BsBrM,IAA8D,IAADyM,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5D,OAAE5M,EAAM,KAAEC,EAAI,eAAEE,EAAc,sBAAED,GAAuBH,EAC5E,MAAM0B,GAAWC,EAAAA,EAAAA,OACVmL,EAASC,IAAcjL,EAAAA,EAAAA,UAAS,KAChCkL,GAAWC,KAAgBnL,EAAAA,EAAAA,UAAS,aACpCoL,GAAcC,KAAmBrL,EAAAA,EAAAA,UAAS,KAC1CsL,GAAaC,KAAkBvL,EAAAA,EAAAA,UAAS,aAEzC,mBAAEwL,KAAuB7M,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,aACpD4M,GAAmC,OAAlBD,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoBE,UACrCC,GAAsC,OAAlBH,SAAkB,IAAlBA,IAAiC,QAAfb,EAAlBa,GAAoBI,qBAAa,IAAAjB,GAAe,QAAfC,EAAjCD,EAAmCkB,qBAAa,IAAAjB,OAA9B,EAAlBA,EAAkDpH,aACrE1D,GAAYC,KAAiBC,EAAAA,EAAAA,UAAS,IACvCI,GAAiBC,KAAKC,MAC1BC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,MAE9BoL,GAA4B,OAAd1L,SAAc,IAAdA,QAAc,EAAdA,GAAgB2B,KAC7BgK,GAAUC,KAAehM,EAAAA,EAAAA,UAASiM,OAAOC,WAAa,MAG7D5K,EAAAA,EAAAA,WAAU,KACR,MAAM6K,EAAeA,KACnBH,GAAYC,OAAOC,WAAa,MAIlC,OADAD,OAAOG,iBAAiB,SAAUD,GAC3B,IAAMF,OAAOI,oBAAoB,SAAUF,IACjD,KAGH7K,EAAAA,EAAAA,WAAU,KACR,GAAIkK,GAAoB,CAAC,IAADc,EAAAC,EAAAC,EACtB,MAAMC,EAAY,MACM,OAAlBjB,SAAkB,IAAlBA,IAAiC,QAAfc,EAAlBd,GAAoBI,qBAAa,IAAAU,OAAf,EAAlBA,EAAmCI,WAAY,IAAIlH,IAAImH,GAAQA,EAAK5K,UAClD,OAAlByJ,SAAkB,IAAlBA,IAAiC,QAAfe,EAAlBf,GAAoBI,qBAAa,IAAAW,GAAU,QAAVC,EAAjCD,EAAmCK,gBAAQ,IAAAJ,OAAzB,EAAlBA,EAA6CK,OAAQ,IAAIrH,IAAImH,GAAQA,EAAK5K,KAAO4K,EAAKnJ,cAE5F6H,GAAgBoB,EAClB,GACC,CAACjB,MAEJlK,EAAAA,EAAAA,WAAU,KACJnD,GAAc,OAAJC,QAAI,IAAJA,GAAAA,EAAM2D,KAClB+K,GAAiB1O,EAAK2D,MAEvB,CAAC5D,EAAY,OAAJC,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,MAElB,MAAM+K,IAAmBC,EAAAA,EAAAA,aAAa9E,IACpCrI,GAASoN,EAAAA,EAAAA,IAAsB,CAAEjL,IAAKkG,MACrC,CAACrI,KAEJ0B,EAAAA,EAAAA,WAAU,KACR,IAAoC,cAAb,OAAlBkK,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,SACQ,cAAb,OAAlB8J,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,SACW,iBAAb,OAAlB8J,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,UAA6B+J,IAAkBE,GAAmB,CACtF,MAAMsB,EAAWC,YAAY,KAC3B,MAAMtD,EAAW7C,IAAAA,SAAgBA,MAAS8C,KAAK8B,KACzC7B,EAAQjF,OAAO+E,EAASE,SAASqD,SAAS,EAAG,KAC7CjD,EAAUrF,OAAO+E,EAASM,WAAWiD,SAAS,EAAG,KACjDC,EAAUvI,OAAO+E,EAASwD,WAAWD,SAAS,EAAG,KACvD5B,GAAe,GAAD9K,OAAIqJ,EAAK,KAAArJ,OAAIyJ,EAAO,KAAAzJ,OAAI2M,KACrC,KACH,MAAO,IAAMC,cAAcJ,EAC7B,GACC,CAACzB,KAEJ,MAsCM8B,GAAoBnG,IACxB,MAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAC5B,IAAKF,EAAM,OAEX,MAAMG,EAAU,CACdC,SAAUJ,EACVK,SAAS,EACTC,YAAY,GAGd9H,GAAS+H,EAAAA,EAAAA,IAAeJ,IAAU3D,KAAMgE,IAAS,IAADC,EACvC,OAAHD,QAAG,IAAHA,GAAY,QAATC,EAAHD,EAAKE,eAAO,IAAAD,GAAZA,EAAczJ,MAChB2B,GAAegI,IAAI,IAAAC,EAAA,MAAK,IAAID,EAAS,OAAHH,QAAG,IAAHA,GAAY,QAATI,EAAHJ,EAAKE,eAAO,IAAAE,OAAT,EAAHA,EAAc5J,WAKhDuK,GAAoBzC,IACxBnG,GAAegI,GACkB,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMS,OAAO,CAACC,EAAGC,IAAMA,IAAMxC,KAKtDqH,GAAsBA,KACrBvC,EAAQwC,QAAgC,IAAtB1N,GAAW2N,OAKlC7N,GAAS8N,EAAAA,EAAAA,IAAsB,CAC7B3L,IAAK3D,EAAK2D,IACV0D,KAAM,UACNuF,QAASA,EAAQwC,OACjBhG,SAAU1H,MACR8D,KAAKgE,IACFA,EAAI9D,QACPmH,EAAW,IACXlL,GAAc,IACd+M,GAAiB1O,EAAK2D,QAbxB4D,EAAAA,GAAQgI,QAAQ,uCAkBdC,GAAqBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAC/B,OAAyB,OAAlBxC,SAAkB,IAAlBA,IAAiC,QAAfqC,EAAlBrC,GAAoBI,qBAAa,IAAAiC,GAAU,QAAVC,EAAjCD,EAAmCjB,gBAAQ,IAAAkB,GAA3CA,EAA6CG,aAAY,GAAAxN,OAAwB,OAAlB+K,SAAkB,IAAlBA,IAAiC,QAAfuC,EAAlBvC,GAAoBI,qBAAa,IAAAmC,GAAU,QAAVC,EAAjCD,EAAmCnB,gBAAQ,IAAAoB,OAAzB,EAAlBA,EAA6CC,aAAY,YAAa,QAsBxIC,GAAqBvB,IAAU,IAADwB,EAAAC,EAAAC,EAClC,OACE9L,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,4GAA2GC,UACxHC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,OAAMC,UACnBT,EAAAA,EAAAA,KAAC+L,EAAAA,EAAM,CACLC,KAAM,GACNC,IAAmB,QAAdL,EAAAxB,EAAK8B,iBAAS,IAAAN,GAAdA,EAAgBO,aAAY,GAAAjO,OAAM4H,gCAAyC,YAAA5H,OAAWkM,EAAK8B,UAAUC,cAAiB,KAC3HpE,MAAM/H,EAAAA,EAAAA,KAACgI,EAAAA,EAAY,SAGvBtH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kEAAiEC,SAAA,EAC9EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,iDAAgDC,UAAgB,QAAdoL,EAAAzB,EAAK8B,iBAAS,IAAAL,OAAA,EAAdA,EAAgB1I,WAAY,aAC9FnD,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,wCAAuCC,SAAE+D,IAAO4F,EAAKgC,WAAWC,gBAElFrM,EAAAA,EAAAA,KAACsM,EAAAA,EAAG,CAACxE,MAAM,QAAQC,MAAM/H,EAAAA,EAAAA,KAACuM,EAAAA,EAAe,IAAK/L,UAAU,qBAAoBC,SAAC,gBAE/ET,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,0CAAyCC,SAAE2J,EAAK3B,WAEnD,QAATqD,EAAA1B,EAAKvF,YAAI,IAAAiH,OAAA,EAATA,EAAWZ,QAAS,IACnBxK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBT,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,oDAAmDC,SAAC,iBAClET,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,YAAWC,SACvB2J,EAAKvF,KAAK5B,IAAI,CAAC4B,EAAM2H,KACpB9L,EAAAA,EAAAA,MAAA,KACEmF,KAAI,GAAA3H,OAAK4H,gCAAyC,YAAA5H,OAAW2G,GAC7DC,OAAO,SACPiB,IAAI,sBAEJvF,UAAU,2HAA0HC,SAAA,EAEpIT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,qCAAoCC,SAAEoE,KACtD7E,EAAAA,EAAAA,KAACyM,EAAAA,EAAgB,CAACjM,UAAU,6CAJvBgM,kBAgBnBE,GAAqBtC,IAAU,IAADuC,EAAAC,EAClC,MAAMC,EAAahE,GAAarG,SAAS4H,EAAK5K,KAAO4K,EAAKnJ,aAE1D,OACEjB,EAAAA,EAAAA,KAAA,OAAKQ,UAAS,6FAAAtC,OAA+F2O,EAAa,uBAAyB,mBAAoBpM,UACrKC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,OAAMC,UACnBT,EAAAA,EAAAA,KAAC+L,EAAAA,EAAM,CACLC,KAAM,GACNC,IAAG,GAAA/N,OAAK4H,gCAAyC,YAAA5H,OAA6B,OAAlB+K,SAAkB,IAAlBA,IAAkC,QAAhB0D,EAAlB1D,GAAoB6D,sBAAc,IAAAH,OAAhB,EAAlBA,EAAoCR,cAChGpE,MAAM/H,EAAAA,EAAAA,KAACgI,EAAAA,EAAY,SAGvBtH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kEAAiEC,SAAA,EAC9EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,iDAAgDC,UAAoB,OAAlBwI,SAAkB,IAAlBA,IAAkC,QAAhB2D,EAAlB3D,GAAoB6D,sBAAc,IAAAF,OAAhB,EAAlBA,EAAoCzJ,WAAY,aAClHnD,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,wCAAuCC,SAAE+D,IAAO4F,EAAKnJ,aAAaoL,gBAEpF3L,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAACsM,EAAAA,EAAG,CAACxE,MAAM,OAAOC,MAAM/H,EAAAA,EAAAA,KAAC+M,EAAAA,EAAmB,IAAKvM,UAAU,qBAAoBC,SAC5E2J,EAAKlJ,aAAe,aAAe,mBAEtClB,EAAAA,EAAAA,KAACsG,EAAAA,GAAM,CACLpD,KAAK,OACL6E,KAAM8E,GAAa7M,EAAAA,EAAAA,KAACgN,EAAAA,EAAU,KAAMhN,EAAAA,EAAAA,KAACiN,EAAAA,EAAY,IACjDjH,QAASA,KAAMkH,OA3FNxH,EA2FsB0E,EAAK5K,KAAO4K,EAAKnJ,iBA1F9D6H,GAAgBtD,GACdA,EAAKhD,SAASkD,GACVF,EAAKS,OAAOkH,GAASA,IAAUzH,GAC/B,IAAIF,EAAME,IAJOA,OA4FTlF,UAAU,OACVwL,KAAK,gBAKVa,IACCnM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,yFAAwFC,UACrGT,EAAAA,EAAAA,KAACkI,EAAAA,EAAmB,OAEtBxH,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,+CAA8CC,SAAC,gBAC5DT,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,mCAAkCC,SAC5C+D,IAAO4F,EAAKnJ,aAAamD,OAAO,8BAKtCgG,EAAKlJ,eACJR,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,yFAAwFC,UACrGT,EAAAA,EAAAA,KAACkI,EAAAA,EAAmB,OAEtBxH,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,+CAA8CC,SAAC,iBAC5DT,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,mCAAkCC,SAC5C+D,IAAO4F,EAAKlJ,cAAckD,OAAO,kCAO5C1D,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,uFAAsFC,UACnGT,EAAAA,EAAAA,KAACoN,EAAAA,EAAiB,OAEpB1M,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,+CAA8CC,SAAC,cAC5DT,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,mCAAkCC,SAC5CuG,EAAeoD,EAAKnJ,YAAamJ,EAAKlJ,sBAK5CkJ,EAAK3B,UACJ/H,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,gGAA+FC,UAC5GT,EAAAA,EAAAA,KAACuM,EAAAA,EAAe,OAElB7L,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,+CAA8CC,SAAC,aAC5DT,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,mCAAkCC,SAAE2J,EAAK3B,4BAYpE4E,GAAoBA,KAAA,IAAAC,EAAAC,EAAAC,EAAA,OACxBxN,EAAAA,EAAAA,KAACyN,EAAAA,EAAI,CACHvN,MAAM,eACNM,UAAU,OACVkN,UAAW,CAAEC,aAAc,oBAAqBC,QAAS,QACzDC,UAAW,CAAED,QAAS,QAASnN,UAE/BC,EAAAA,EAAAA,MAACoN,EAAAA,EAAY,CAACC,OAAQ,EAAGC,UAAU,EAAOxN,UAAU,4BAA2BC,SAAA,EAC7ET,EAAAA,EAAAA,KAAC8N,EAAAA,EAAaG,KAAI,CAACC,MAAM,WAAW1N,UAAU,OAAMC,UAClDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,qFAAoFC,UACjGT,EAAAA,EAAAA,KAACmO,EAAAA,EAAY,CAAC3N,UAAU,eAE1BR,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,sBAAqBC,UAAoB,OAAlBwI,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoBmF,WAAY,kBAI3EpO,EAAAA,EAAAA,KAAC8N,EAAAA,EAAaG,KAAI,CAACC,MAAM,SAAS1N,UAAU,OAAMC,UAChDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,uFAAsFC,UAC1D,QAAxC6M,EAAAzF,EAA+B,OAAlBoB,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,eAAO,IAAAmO,OAAA,EAAxCA,EAA0CvF,QAAQ/H,EAAAA,EAAAA,KAACqO,EAAAA,EAAK,CAAClP,OAAO,kBAEnEa,EAAAA,EAAAA,KAACsM,EAAAA,EAAG,CAACxE,OAA+C,QAAxCyF,EAAA1F,EAA+B,OAAlBoB,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,eAAO,IAAAoO,OAAA,EAAxCA,EAA0CzF,QAAS,UAAWtH,UAAU,iCAAgCC,UACzE,QAAxC+M,EAAA3F,EAA+B,OAAlBoB,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,eAAO,IAAAqO,OAAA,EAAxCA,EAA0CvO,QAA0B,OAAlBgK,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,SAAU,kBAKvFa,EAAAA,EAAAA,KAAC8N,EAAAA,EAAaG,KAAI,CAACC,MAAM,aAAa1N,UAAU,OAAMC,UACpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAACsO,EAAAA,EAAgB,CAAC9N,UAAU,wBAC5BR,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,sBAAqBC,SAChB,OAAlBwI,SAAkB,IAAlBA,IAAAA,GAAoBsF,cACjB/J,IAAOyE,GAAmBsF,eAAenK,OAAO,eAChD,kBAKVpE,EAAAA,EAAAA,KAAC8N,EAAAA,EAAaG,KAAI,CAACC,MAAM,WAAW1N,UAAU,OAAMC,UAClDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAACsO,EAAAA,EAAgB,CAAC9N,UAAU,wBAC5BR,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,sBAAqBC,SAChB,OAAlBwI,SAAkB,IAAlBA,IAAAA,GAAoBuF,YACjBhK,IAAOyE,GAAmBuF,aAAapK,OAAO,eAC9C,kBAKVpE,EAAAA,EAAAA,KAAC8N,EAAAA,EAAaG,KAAI,CAACC,MAAM,aAAa1N,UAAU,OAAMC,UACpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCT,EAAAA,EAAAA,KAAC+M,EAAAA,EAAmB,CAACvM,UAAU,wBAC/BR,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,sBAAqBC,SAAE4K,kBAO3CoD,GAAqBA,KAAA,IAAAC,EAAAC,EAAAC,EAAA,OACzBlO,EAAAA,EAAAA,MAAC+M,EAAAA,EAAI,CACHvN,MAAM,WACNwN,UAAW,CAAEC,aAAc,oBAAqBC,QAAS,QACzDC,UAAW,CAAED,QAAS,OAAQiB,UAAW,UAAWpO,SAAA,EAEpDT,EAAAA,EAAAA,KAAC+L,EAAAA,EAAM,CACLC,KAAMxC,GAAW,GAAK,GACtByC,IAAG,GAAA/N,OAAK4H,gCAAyC,YAAA5H,OAA6B,OAAlB+K,SAAkB,IAAlBA,IAAkC,QAAhByF,EAAlBzF,GAAoB6D,sBAAc,IAAA4B,OAAhB,EAAlBA,EAAoCvC,cAChGpE,MAAM/H,EAAAA,EAAAA,KAACgI,EAAAA,EAAY,IACnBxH,UAAU,UAEZE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BT,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,wDAAuDC,UAC/C,OAAlBwI,SAAkB,IAAlBA,IAAkC,QAAhB0F,EAAlB1F,GAAoB6D,sBAAc,IAAA6B,OAAhB,EAAlBA,EAAoCxL,WAAY,gBAEnDnD,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,6BAA4BC,UACpB,OAAlBwI,SAAkB,IAAlBA,IAAkC,QAAhB2F,EAAlB3F,GAAoB6D,sBAAc,IAAA8B,OAAhB,EAAlBA,EAAoCE,OAAQ,uBA0BrD,MAAM3E,GAAW,KAAuB,OAAlBlB,SAAkB,IAAlBA,IAAiC,QAAfX,EAAlBW,GAAoBI,qBAAa,IAAAf,OAAf,EAAlBA,EAAmC6B,WAAY,IAC/DE,GAAW,KAAuB,OAAlBpB,SAAkB,IAAlBA,IAAiC,QAAfV,EAAlBU,GAAoBI,qBAAa,IAAAd,GAAU,QAAVC,EAAjCD,EAAmC8B,gBAAQ,IAAA7B,OAAzB,EAAlBA,EAA6C8B,OAAQ,IAGrEyE,GAAiB5E,GAASjL,KAAK,CAAC8P,EAAGC,IAAM,IAAI7H,KAAK6H,EAAE7C,WAAa,IAAIhF,KAAK4H,EAAE5C,YAC5E8C,GAAiB7E,GAASnL,KAAK,CAAC8P,EAAGC,IAAM,IAAI7H,KAAK6H,EAAEhO,aAAe,IAAImG,KAAK4H,EAAE/N,cAEpF,OACEP,EAAAA,EAAAA,MAACT,EAAAA,EAAK,CACJE,KAAMvE,EACNwE,SAAUrE,EACVsE,OAAQ,KACRC,MAAOkJ,GAAW,OAAS,KAC3BjJ,UAAQ,EACR4O,gBAAc,EACd3O,UAAU,oCACV4O,MAAO5F,GAAW,CAChB6F,IAAK,EACLC,OAAQ,EACR1B,QAAS,EACT2B,SAAU,OACVC,OAAQ,SACN,CAAEH,IAAK,IACXxB,UAAWrE,GAAW,CACpBoE,QAAS,OACT6B,UAAW,qBACXC,UAAW,QACT,CAAC,EACLxP,OACEQ,EAAAA,EAAAA,MAAA,OAAKF,UAAWgJ,GAAW,aAAe,YAAY/I,SAAA,EACpDT,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,gEAA+DC,SACxD,OAAlBwI,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB/I,SAEvBQ,EAAAA,EAAAA,MAAA,KAAGF,UAAU,+DAA8DC,SAAA,EACzEC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,OAAMC,SAAA,CAAC,IAAoB,OAAlBwI,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB0G,aAC7C3P,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,iCAAgCC,SAAC,YACjDC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,4BAA2BC,SAAA,CAAC,WACf,OAAlBwI,SAAkB,IAAlBA,IAAAA,GAAoBmD,UAAY5H,IAAOyE,GAAmBmD,WAAWC,UAAY,YAIjG5L,SAAA,EAEDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yEAAwEC,SAAA,EACrFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8DAA6DC,SAAA,CACzE8I,MAAkC,OAAlBN,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB2G,cACH,cAAb,OAAlB3G,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,SACY,cAAb,OAAlB8J,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,SACW,iBAAb,OAAlB8J,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,WACpBa,EAAAA,EAAAA,KAAC6P,EAAAA,EAAO,CAAC3P,MAAOgJ,GAAiB,aAAe,cAAczI,UAC5DT,EAAAA,EAAAA,KAACsG,EAAAA,GAAM,CACLpD,KAAMgG,GAAiB,UAAY,UACnC4G,OAAQ5G,GACRnB,KAAMmB,IAAiBlJ,EAAAA,EAAAA,KAAC+P,EAAAA,EAAmB,KAAM/P,EAAAA,EAAAA,KAACiI,EAAAA,EAAkB,IACpEjC,QAlZIgK,UAClB,GAAI9G,GAAgB,CAClB,MAAQpG,MAAO2F,SAAkBwH,IAAAA,KAAU,CACzC/P,MAAO,oBACPkC,MAAO,WACP8N,WAAY,6CACZC,iBAAkB,6BAClBC,gBAAiB,CACf,aAAc,qBAEhBC,kBAAkB,EAClBC,kBAAmB,SACnBC,iBAAkB,gBAGJC,IAAZ/H,GACFpL,GAAS8N,EAAAA,EAAAA,IAAsB,CAC7B3L,IAAK3D,EAAK2D,IACV0D,KAAM,YACNuF,SAAgB,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASwC,SAAU,MAC1B5J,KAAKgE,IACFA,EAAI9D,OACPgJ,GAAiB1O,EAAK2D,MAI9B,MACEnC,GAAS8N,EAAAA,EAAAA,IAAsB,CAC7B3L,IAAK3D,EAAK2D,IACV0D,KAAM,cACJ7B,KAAKgE,IACFA,EAAI9D,OACPgJ,GAAiB1O,EAAK2D,QAmXdwM,KAAMxC,GAAW,QAAU,SAC3BhJ,UAAU,iEAAgEC,SAEzEyI,GAAiB,aAAe,kBAKT,iBAAb,OAAlBD,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,WACA,OAAlB8J,SAAkB,IAAlBA,IAAAA,GAAoBE,YACrBI,MAAkC,OAAlBN,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB2G,cAClC5P,EAAAA,EAAAA,KAACsG,EAAAA,GAAM,CACLpD,KAAK,UACL6E,MAAM/H,EAAAA,EAAAA,KAACyQ,EAAAA,EAAiB,IACxBzK,QAnUU0K,KACtBrT,GAASsT,EAAAA,EAAAA,IAAsB,CAC7B,IAAyB,OAAlB1H,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoBzJ,IAC3B,OAAU,eACR6B,KAAMgE,IACHA,EAAI9D,OACPgJ,GAAiB1O,EAAK2D,QA8TdwM,KAAMxC,GAAW,QAAU,SAC3BhJ,UAAU,kCAAiCC,SAC5C,sBAK0B,cAAb,OAAlBwI,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,SACS,cAAb,OAAlB8J,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,SACW,iBAAb,OAAlB8J,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB9J,UAA6B+J,IAAiBH,KAAerI,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iEAAgEC,SAAA,EAC9JT,EAAAA,EAAAA,KAAC4Q,EAAAA,IAAO,KACR5Q,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,gBAAeC,SAAEsI,YAKrC/I,EAAAA,EAAAA,KAAC6Q,EAAAA,EAAO,CAACrQ,UAAU,SAElBgJ,IAEC9I,EAAAA,EAAAA,MAAC+M,EAAAA,EAAI,CACHI,UAAW,CAAED,QAAS,QACtBpN,UAAU,mBAAkBC,SAAA,EAG5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBT,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,2BAA0BC,SAAC,kBACzCT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,4BAA2BC,SACvC4M,WAKL3M,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBT,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,2BAA0BC,SAAC,cACzCT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,4BAA2BC,SACvCgO,WAKL/N,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBT,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,2BAA0BC,SAAC,iBACzCT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,iDAAgDC,UAC7DT,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,wBAAuBC,UACf,OAAlBwI,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB6H,cAAe,iDAM1CpQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBT,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,2BAA0BC,SAAC,iBACzCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iDAAgDC,SAAA,EAC7DT,EAAAA,EAAAA,KAAC4G,EAAQ,CACPmK,KAAM,EACNjO,MAAO2F,EACP9D,SAAWC,GAAM8D,EAAW9D,EAAEE,OAAOhC,OACrCF,YAAY,mBACZpC,UAAU,cACVwQ,SAAU,CAAEC,QAAS,EAAGC,QAAS,MAGnCxQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBT,EAAAA,EAAAA,KAAA,SACEkD,KAAK,OACLyB,SAAUoG,GACVvK,UAAU,SACVkF,GAAG,wBAELhF,EAAAA,EAAAA,MAAA,SACEiF,QAAQ,qBACRnF,UAAU,0LAAyLC,SAAA,EAEnMT,EAAAA,EAAAA,KAACmR,EAAAA,EAAiB,CAAC3Q,UAAU,SAAS,uBAGxCR,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,YAAWC,SACb,OAAVlD,SAAU,IAAVA,QAAU,EAAVA,GAAY0F,IAAI,CAAC4B,EAAMlB,KACtBjD,EAAAA,EAAAA,MAAA,OAEEF,UAAU,sEAAqEC,SAAA,EAE/EC,EAAAA,EAAAA,MAAA,KACEmF,KAAI,GAAA3H,OAAK4H,gCAAyC,YAAA5H,OAAW2G,GAC7DrE,UAAU,uCACVsE,OAAO,SACPiB,IAAI,sBAAqBtF,SAAA,EAEzBT,EAAAA,EAAAA,KAACmR,EAAAA,EAAiB,CAAC3Q,UAAU,mBAC7BR,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,uCAAsCC,SACnDoE,QAGL7E,EAAAA,EAAAA,KAAA,UACEkD,KAAK,SACL8C,QAASA,IAAMI,GAAiBzC,GAChCnD,UAAU,oDAAmDC,UAE7DT,EAAAA,EAAAA,KAACmI,EAAAA,EAAa,QAnBXxE,UA0Bb3D,EAAAA,EAAAA,KAACsG,EAAAA,GAAM,CACLpD,KAAK,UACL8C,QAASgF,GACTjI,UAAY0F,EAAQwC,QAAgC,IAAtB1N,GAAW2N,OACzC1K,UAAU,0CACVuH,MAAM/H,EAAAA,EAAAA,KAACoR,EAAAA,EAAY,IACnBpF,KAAK,SAAQvL,SACd,2BAQPC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,2BAA0BC,SAAC,cACzCC,EAAAA,EAAAA,MAACqG,EAAAA,EAAI,CACHsK,iBAAiB,WACjBC,UAAW3I,GACXhE,SAAUiE,GACVpI,UAAU,gBACV0C,KAAK,OAAMzC,SAAA,EAEXT,EAAAA,EAAAA,KAAC8G,EAAO,CACNyK,KACE7Q,EAAAA,EAAAA,MAAA,QAAMF,UAAU,4DAA2DC,SAAA,EACzET,EAAAA,EAAAA,KAACuM,EAAAA,EAAe,IAAG,cAGtB9L,UAGDT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvBsO,GAAe9L,IAAI,CAACmH,EAAMzG,KACzB3D,EAAAA,EAAAA,KAACwR,EAAAA,SAAc,CAAA/Q,SACZkL,GAAkBvB,IADAA,EAAK5K,KAAOmE,IAKR,IAA1BoL,GAAe7D,SACdxK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CT,EAAAA,EAAAA,KAACuM,EAAAA,EAAe,CAAC/L,UAAU,mBAC3BR,EAAAA,EAAAA,KAAA,KAAAS,SAAG,6BAbP,aAoBNT,EAAAA,EAAAA,KAAC8G,EAAO,CACNyK,KACE7Q,EAAAA,EAAAA,MAAA,QAAMF,UAAU,4DAA2DC,SAAA,EACzET,EAAAA,EAAAA,KAACyR,EAAAA,EAAe,IAAG,mBAGtBhR,UAGDT,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvByO,GAAejM,IAAI,CAACmH,EAAMzG,KACzB3D,EAAAA,EAAAA,KAACwR,EAAAA,SAAc,CAAA/Q,SACZiM,GAAkBtC,IADAA,EAAK5K,KAAO4K,EAAKnJ,aAAe0C,IAK5B,IAA1BuL,GAAehE,SACdxK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CT,EAAAA,EAAAA,KAAC+M,EAAAA,EAAmB,CAACvM,UAAU,mBAC/BR,EAAAA,EAAAA,KAAA,KAAAS,SAAG,uCAbP,sBAwBZC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0BAAyBC,SAAA,EACtCT,EAAAA,EAAAA,KAACyN,EAAAA,EAAI,CACHvN,MAAM,cACNwN,UAAW,CAAEC,aAAc,oBAAqBC,QAAS,aACzDC,UAAW,CAAED,QAAS,QAASnN,UAE/BT,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,gBAAeC,UACP,OAAlBwI,SAAkB,IAAlBA,QAAkB,EAAlBA,GAAoB6H,cAAe,8CAIxCpQ,EAAAA,EAAAA,MAAC+M,EAAAA,EAAI,CACHvN,MAAM,cACNwN,UAAW,CAAEC,aAAc,oBAAqBC,QAAS,aACzDC,UAAW,CAAED,QAAS,QACtBpN,UAAU,OAAMC,SAAA,EAEhBT,EAAAA,EAAAA,KAAC4G,EAAQ,CACPmK,KAAM,EACNjO,MAAO2F,EACP9D,SAAWC,GAAM8D,EAAW9D,EAAEE,OAAOhC,OACrCF,YAAY,mBACZpC,UAAU,cACVwQ,SAAU,CAAEC,QAAS,EAAGC,QAAS,MAGnCxQ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kEAAiEC,SAAA,EAC9EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBT,EAAAA,EAAAA,KAAA,SACEkD,KAAK,OACLyB,SAAUoG,GACVvK,UAAU,SACVkF,GAAG,iBAELhF,EAAAA,EAAAA,MAAA,SACEiF,QAAQ,cACRnF,UAAU,oKAAmKC,SAAA,EAE7KT,EAAAA,EAAAA,KAACmR,EAAAA,EAAiB,CAAC3Q,UAAU,SAAS,uBAGxCR,EAAAA,EAAAA,KAAA,OAAKQ,UAAU,YAAWC,SACb,OAAVlD,SAAU,IAAVA,QAAU,EAAVA,GAAY0F,IAAI,CAAC4B,EAAMlB,KACtBjD,EAAAA,EAAAA,MAAA,OAEEF,UAAU,8DAA6DC,SAAA,EAEvEC,EAAAA,EAAAA,MAAA,KACEmF,KAAI,GAAA3H,OAAK4H,gCAAyC,YAAA5H,OAAW2G,GAC7DrE,UAAU,8BACVsE,OAAO,SACPiB,IAAI,sBAAqBtF,SAAA,EAEzBT,EAAAA,EAAAA,KAACmR,EAAAA,EAAiB,CAAC3Q,UAAU,mBAC7BR,EAAAA,EAAAA,KAAA,QAAMQ,UAAU,wBAAuBC,SACpCoE,QAGL7E,EAAAA,EAAAA,KAAA,UACEkD,KAAK,SACL8C,QAASA,IAAMI,GAAiBzC,GAChCnD,UAAU,oDAAmDC,UAE7DT,EAAAA,EAAAA,KAACmI,EAAAA,EAAa,QAnBXxE,UA0Bb3D,EAAAA,EAAAA,KAACsG,EAAAA,GAAM,CACLpD,KAAK,UACL8C,QAASgF,GACTjI,UAAY0F,EAAQwC,QAAgC,IAAtB1N,GAAW2N,OACzC1K,UAAU,6BACVuH,MAAM/H,EAAAA,EAAAA,KAACoR,EAAAA,EAAY,IACnBpF,KAAK,SAAQvL,SACd,wBAMLT,EAAAA,EAAAA,KAACyN,EAAAA,EAAI,CACHI,UAAW,CAAED,QAAS,GACtBpN,UAAU,gBAAeC,UAEzBC,EAAAA,EAAAA,MAACqG,EAAAA,EAAI,CACHsK,iBAAiB,WACjBC,UAAW3I,GACXhE,SAAUiE,GACVpI,UAAU,sBAAqBC,SAAA,EAE/BT,EAAAA,EAAAA,KAAC8G,EAAO,CACNyK,KACE7Q,EAAAA,EAAAA,MAAA,QAAMF,UAAU,yCAAwCC,SAAA,EACtDT,EAAAA,EAAAA,KAACuM,EAAAA,EAAe,IAAG,cAGtB9L,UAGDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBT,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,yCAAwCC,SAAC,cACvDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvBsO,GAAe9L,IAAI,CAACmH,EAAMzG,KACzB3D,EAAAA,EAAAA,KAACwR,EAAAA,SAAc,CAAA/Q,SACZkL,GAAkBvB,IADAA,EAAK5K,KAAOmE,IAKR,IAA1BoL,GAAe7D,SACdxK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CT,EAAAA,EAAAA,KAACuM,EAAAA,EAAe,CAAC/L,UAAU,mBAC3BR,EAAAA,EAAAA,KAAA,KAAAS,SAAG,8BAdP,aAqBNT,EAAAA,EAAAA,KAAC8G,EAAO,CACNyK,KACE7Q,EAAAA,EAAAA,MAAA,QAAMF,UAAU,yCAAwCC,SAAA,EACtDT,EAAAA,EAAAA,KAACyR,EAAAA,EAAe,IAAG,mBAGtBhR,UAGDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBT,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,yCAAwCC,SAAC,mBACvDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvByO,GAAejM,IAAI,CAACmH,EAAMzG,KACzB3D,EAAAA,EAAAA,KAACwR,EAAAA,SAAc,CAAA/Q,SACZiM,GAAkBtC,IADAA,EAAK5K,KAAO4K,EAAKnJ,aAAe0C,IAK5B,IAA1BuL,GAAehE,SACdxK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CT,EAAAA,EAAAA,KAAC+M,EAAAA,EAAmB,CAACvM,UAAU,mBAC/BR,EAAAA,EAAAA,KAAA,KAAAS,SAAG,wCAdP,qBAwBZC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvB4M,KACAoB,c,yGCx4Bb,MAAMiD,EAAe,CACjBC,SAAU,OACVC,KAAM,SACNC,SAAU,QACVC,SAAU,WAIRC,EAAiB,CACnBC,SAAU,UACV,cAAe,UACfC,UAAW,UACXN,SAAU,UACVC,KAAM,UACNC,SAAU,UACVC,SAAU,WA6Fd,EA1FuBnW,IAA8D,IAA7D,QAAE+H,EAAO,mBAAEwO,EAAkB,eAAEC,GAAiB,GAAOxW,EAC3E,MAAMyW,EACkB,eAAb,OAAP1O,QAAO,IAAPA,OAAO,EAAPA,EAASvE,SAA8C,cAAb,OAAPuE,QAAO,IAAPA,OAAO,EAAPA,EAASvE,QAChD,GAAIgT,EACA,OACInS,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,oCAAmCC,UAC7CT,EAAAA,EAAAA,KAAA,OACIQ,UAAU,iEACV4O,MAAO,CACHiD,gBAAiBN,EAAsB,OAAPrO,QAAO,IAAPA,OAAO,EAAPA,EAASvE,SAAW,WACtDsB,SAEM,OAAPiD,QAAO,IAAPA,OAAO,EAAPA,EAASvE,WAK1B,MAAMmT,GACFtS,EAAAA,EAAAA,KAACuS,EAAAA,EAAI,CACDvM,QAASnE,IAAc,IAAb,IAAE2Q,GAAK3Q,EACTuQ,GACAF,EAAmBM,EAAY,OAAP9O,QAAO,IAAPA,OAAO,EAAPA,EAASlE,MAGzCiT,aAAc,CAAQ,OAAP/O,QAAO,IAAPA,OAAO,EAAPA,EAASvE,QAAQsB,SAE/BiS,OAAOC,KAAKjB,GAAczO,IAAK9D,IAC5B,MAAMyT,GACDR,GACD,CAAC,WAAY,cAAe,aAAa5P,SAASrD,GAGtD,IAAI0T,EAAa,GAOjB,OANKT,EAEM,CAAC,WAAY,cAAe,aAAa5P,SAASrD,KACzD0T,EAAa,2CAFbA,EAAa,+DAMb7S,EAAAA,EAAAA,KAACuS,EAAAA,EAAKtE,KAAI,CAENlL,SAAU6P,EACVxD,MAAO,CACH0D,OAAQF,EAAa,cAAgB,UACrCG,QAASH,EAAa,GAAM,GAC9BnS,SAEDoS,GACG7S,EAAAA,EAAAA,KAAC6P,EAAAA,EAAO,CAAC3P,MAAO2S,EAAYG,UAAU,QAAOvS,UACzCT,EAAAA,EAAAA,KAAA,OAAAS,UACIT,EAAAA,EAAAA,KAACsM,EAAAA,EAAG,CAACxE,MAAO4J,EAAavS,GAAQsB,SAAEtB,SAI3Ca,EAAAA,EAAAA,KAACsM,EAAAA,EAAG,CAACxE,MAAO4J,EAAavS,GAAQsB,SAAEtB,KAdlCA,OAsBzB,OACIa,EAAAA,EAAAA,KAAA,MAAIQ,UAAU,oCAAmCC,UAC7CT,EAAAA,EAAAA,KAAC6P,EAAAA,EAAO,CACJmD,UAAU,UACV9S,MACIkS,EACM,gBAAe,WAAAlU,OACG,OAAPwF,QAAO,IAAPA,OAAO,EAAPA,EAASvE,QAC7BsB,UAEDT,EAAAA,EAAAA,KAACiT,EAAAA,EAAQ,CAACC,QAASZ,EAAM5P,QAAS,CAAC,SAASjC,UACxCC,EAAAA,EAAAA,MAAA,OACIF,UAAS,6EAAAtC,OAA+EkU,EAAa,8BAAgC,sBAErIhD,MAAO,CACHiD,gBAAiBN,EAAsB,OAAPrO,QAAO,IAAPA,OAAO,EAAPA,EAASvE,SAAW,WACtDsB,SAAA,CAEM,OAAPiD,QAAO,IAAPA,OAAO,EAAPA,EAASvE,OACTiT,IAAcpS,EAAAA,EAAAA,KAACiN,EAAAA,EAAY,CAACmC,MAAO,CAAE+D,SAAU,GAAIrL,MAAO,mB","sources":["pages/Project management/ProjecttaskMagement/CreateProjectTask.js","pages/Project management/ProjecttaskMagement/LogsProjectTaskView.js","pages/Project management/ProjecttaskMagement/StatusDropDown.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useForm, Controller, useWatch } from \"react-hook-form\";\nimport { Modal, AutoComplete, Input, Select, Button, Space } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport getUserIds from '../../../constents/getUserIds';\nimport { domainName, getLocationDataByPincode, inputAntdSelectClassName, inputClassName, inputLabelClassName, inputerrorClassNameAutoComplete, sortByPropertyAlphabetically } from \"../../../constents/global\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport { createProjectTaskFunc } from \"./ProjecttaskFeatures/_project_task_reducers\";\nimport { projectmanagementSearch } from \"../ProjectManagement/ProjectManagementFeatures/_ProjectManagement_reducers\";\nimport { FaRegFile, FaTimes } from \"react-icons/fa\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport { fileUploadFunc } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\n\nfunction CreateProjectTask({ isOpen, data, fetchListAfterSuccess, closeModalFunc, handlingPerson = \"manager\",isDirector=false}) {\n  const { loading: projectTaskListLoading } = useSelector(state => state.projectTask);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    control,\n    watch,\n    reset,\n    formState: { errors },\n  } = useForm();\n\n  const {\n    userCompanyId,\n    userDirectorId,\n    userBranchId,\n    userType\n  } = getUserIds();\n\n  const dispatch = useDispatch();\n  const [attachment, setAttachment] = useState([]);\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { employeList, loading: employeeLoading } = useSelector((state) => state.employe);\n  const { projectmanagementList } = useSelector((state) => state.projectManagement);\n\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: userCompanyId,\n  });\n\n  const relatedTo = useWatch({\n    control,\n    name: \"relatedTo\",\n    defaultValue: \"\",\n  });\n\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: userBranchId,\n  });\n\n\n\n\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setAttachment((prev) => [...prev, res?.payload?.data]);\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setAttachment((prev) => {\n      const updatedAttachments = prev?.filter((_, i) => i !== index);\n      return updatedAttachments;\n    });\n  };\n\n  // Fetch data only when modal is open\n  useEffect(() => {\n    if (!isOpen) return;\n\n    if ( userType === \"company\" || userType === \"companyDirector\") {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          companyId: companyId,\n          isPagination: false,\n        })\n      );\n    }\n  }, [isOpen, companyId]);\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    if ((companyId || userInfoglobal?.userType !== \"admin\") &&\n      (branchId || userInfoglobal?.userType !== \"companBranch\" || userInfoglobal?.userType === \"employee\")) {\n      if (handlingPerson === \"manager\") {\n        fetchEmployeListData();\n      }\n      dispatch(projectmanagementSearch({\n        directorId: \"\",\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? companyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        text: '',\n        sort: true,\n        status: '',\n        isPagination: false,\n      }));\n    }\n  }, [isOpen, companyId, branchId]);\n\n  const fetchEmployeListData = () => {\n    const reqPayload = {\n      text: \"\",\n      status: true,\n      sort: true,\n      isTL: \"\",\n      isHR: \"\",\n      isPagination: false,\n      departmentId: isDirector ? '' : userInfoglobal?.userType === \"employee\" ? userInfoglobal?.departmentId : '',\n      designationId: \"\",\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? companyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? branchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n    };\n    dispatch(employeSearch(reqPayload));\n  };\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      companyId: companyId,\n      directorId: \"\",\n      branchId: branchId,\n      \"title\": data?.name,\n      \"projectId\": data?.relatedTo === \"project\" ? data?.projectId : null,\n      \"description\": data?.descriptions,\n      \"followerIds\": [],\n      \"assignedTo\": handlingPerson === \"manager\" ?  data?.employee : handlingPerson === \"employee\" ? userInfoglobal?._id : '',\n      \"startDateTime\": data?.checkInTime,\n      \"endDateTime\": data?.checkOutTime,\n      \"relatedTo\": data?.relatedTo,\n      \"priority\": data?.taskPriority,\n      \"attachment\": attachment,\n      \"estimatedHours\": null,\n      \"tags\": [],\n    };\n\n    dispatch(createProjectTaskFunc(finalPayload)).then((result) => {\n      if (!result.error) {\n        // Reset form and close modal on success\n        reset();\n        setAttachment([]);\n        closeModalFunc();\n        fetchListAfterSuccess(); // Refresh the parent list\n      }\n    });\n  };\n\n  const handleCancel = () => {\n    reset();\n    setAttachment([]);\n    closeModalFunc();\n  };\n\n  return (\n    <Modal\n      title=\"Create Project Task\"\n      open={isOpen}\n      onCancel={handleCancel}\n      footer={null}\n      width={800}\n      centered\n      className=\"antmodalclassName\"\n    >\n      <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 my-4\">\n          {(userType === \"admin\" || userType === \"company\" || userType === \"companyDirector\") && (\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Branch <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"PDBranchId\"\n                control={control}\n                rules={{ required: \"Branch is required\" }}\n\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.PDBranchId ? \"border-red-500\" : \"border-gray-300\"}`}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    getPopupContainer={(trigger) => trigger.parentNode}\n                    placeholder=\"Select Branch\"\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchListloading ? <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option> : (branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n              {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n            </div>\n          )}\n\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>\n              Task Title <span className=\"text-red-600\">*</span>\n            </label>\n            <input\n              type=\"text\"\n              {...register(\"name\", {\n                required: \"Task Title is required\",\n              })}\n              className={`${inputClassName} ${errors.name ? \"border-red-500\" : \"border-gray-300\"}`}\n              placeholder=\"Enter Task Title\"\n            />\n            {errors.name && (\n              <p className=\"text-red-500 text-sm\">\n                {errors.name.message}\n              </p>\n            )}\n          </div>\n\n      {handlingPerson === \"manager\" &&    <div className=\"\">\n            <label className={`${inputLabelClassName}`}>\n              Assign To <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              control={control}\n              name=\"employee\"\n              rules={{ required: \"employee is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                  getPopupContainer={(trigger) => trigger.parentNode}\n\n                  className={`${inputAntdSelectClassName} ${errors.employee ? \"border-red-500\" : \"border-gray-300\"}`}\n                  placeholder=\"Select Assign To\"\n                >\n                  <Select.Option value=\"\">Select Assign To</Select.Option>\n                  {employeeLoading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                    sortByPropertyAlphabetically(employeList, 'fullName')?.map((element, index) => (\n                      <Select.Option key={index} value={element?._id}>\n                        {element?.fullName}\n                      </Select.Option>\n                    ))\n                  }\n                </Select>\n              )}\n            />\n            {errors.employee && (\n              <p className=\"text-red-500 text-sm\">{errors.employee.message}</p>\n            )}\n          </div>}\n\n          <div className=\"w-full\">\n            <label className={`${inputLabelClassName}`}>\n              Task Priority <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              control={control}\n              name=\"taskPriority\"\n              rules={{ required: \"Task Priority is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  placeholder=\"Select Task Priority\"\n                  className={`${inputAntdSelectClassName} ${errors.taskPriority ? \"border-red-500\" : \"border-gray-300\"}`}\n                  showSearch\n                  getPopupContainer={(trigger) => trigger.parentNode}\n                  filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">Select Task Priority</Select.Option>\n                  {['low', 'medium', 'high', 'urgent']?.map(data =>\n                    <Select.Option key={data} value={data}>{data}</Select.Option>\n                  )}\n                </Select>\n              )}\n            />\n            {errors.taskPriority && (\n              <p className=\"text-red-500 text-sm\">\n                {errors.taskPriority.message}\n              </p>\n            )}\n          </div>\n\n          <div className=\"w-full\">\n            <label className={`${inputLabelClassName}`}>\n              Related To <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              control={control}\n              name=\"relatedTo\"\n              rules={{ required: \"Related To is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  placeholder=\"Select Related To\"\n                  className={`${inputAntdSelectClassName} ${errors.relatedTo ? \"border-red-500\" : \"border-gray-300\"}`}\n                  showSearch\n                  getPopupContainer={(trigger) => trigger.parentNode}\n                  filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">Select Related To</Select.Option>\n                  {['project', 'other']?.map(data =>\n                    <Select.Option key={data} value={data}>{data}</Select.Option>\n                  )}\n                </Select>\n              )}\n            />\n            {errors.relatedTo && (\n              <p className=\"text-red-500 text-sm\">\n                {errors.relatedTo.message}\n              </p>\n            )}\n          </div>\n\n          {relatedTo === \"project\" && (\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>\n                Project <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                control={control}\n                name=\"projectId\"\n                rules={{ required: \"Project is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    placeholder=\"Select Project\"\n                    getPopupContainer={(trigger) => trigger.parentNode}\n                    className={`${inputAntdSelectClassName} ${errors.projectId ? \"border-red-500\" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Project</Select.Option>\n                    {projectmanagementList?.map((data, index) =>\n                      <Select.Option key={index} value={data?._id}>{data?.title}</Select.Option>\n                    )}\n                  </Select>\n                )}\n              />\n              {errors.projectId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.projectId.message}\n                </p>\n              )}\n            </div>\n          )}\n\n          <div>\n            <label className={`${inputLabelClassName}`}>\n              Start Time <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              name=\"checkInTime\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field }) => (\n                <CustomDatePicker\n                  field={field}\n                  showTime={true}\n                  format=\"DD/MM/YYYY HH:mm\"\n                  errors={errors}\n                  disabledDate={(current) => {\n                    return current && current.isBefore(moment().endOf('day'), 'day');\n                  }}\n                />\n              )}\n            />\n            {errors.checkInTime && (\n              <p className=\"text-red-500 text-sm\">Start Time is required</p>\n            )}\n          </div>\n\n          <div>\n            <label className={`${inputLabelClassName}`}>\n              End Time <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              name=\"checkOutTime\"\n              control={control}\n              rules={{ required: true }}\n              render={({ field }) => (\n                <CustomDatePicker\n                  field={field}\n                  showTime={true}\n                  format=\"DD/MM/YYYY HH:mm\"\n                  errors={errors}\n                  disabledDate={(current) => {\n                    return current && current.isBefore(moment().endOf('day'), 'day');\n                  }}\n                />\n              )}\n            />\n            {errors.checkOutTime && (\n              <p className=\"text-red-500 text-sm\">End Time is required</p>\n            )}\n          </div>\n\n          <div className=\"md:col-span-2 \">\n            <label className={`${inputLabelClassName}`}>\n              Description <span className=\"text-red-600\">*</span>\n            </label>\n            <textarea\n              {...register(\"descriptions\", {\n                required: \"Description is required\",\n              })}\n              className={`${inputClassName} ${errors.descriptions ? \"border-red-500\" : \"border-gray-300\"} h-24`}\n              placeholder=\"Enter description\"\n            />\n            {errors.descriptions && (\n              <p className=\"text-red-500 text-sm\">\n                {errors.descriptions.message}\n              </p>\n            )}\n          </div>\n\n          <div className=\"md:col-span-2 space-y-4\">\n            <input\n              type=\"file\"\n              onChange={handleFileChange}\n              className=\"hidden\"\n              id=\"file-upload\"\n            />\n            <label\n              htmlFor=\"file-upload\"\n              className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer hover:bg-gray-50\"\n            >\n              <FaRegFile className=\"mr-2\" /> Add Attachments\n            </label>\n\n            <div className=\"space-y-2\">\n              {attachment?.map((file, index) => (\n                <div\n                  key={index}\n                  className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\"\n                >\n                  <a\n                    href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                    className=\"flex items-center space-x-2\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <FaRegFile className=\"text-gray-500\" />\n                    <span className=\"text-sm text-gray-600\">\n                      {file}\n                    </span>\n                  </a>\n                  <button\n                    type=\"button\"\n                    onClick={() => handleRemoveFile(index)}\n                    className=\"text-red-500 hover:text-red-700\"\n                  >\n                    <FaTimes />\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end space-x-4 mt-6\">\n          <Button onClick={handleCancel} disabled={projectTaskListLoading}>\n            Cancel\n          </Button>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={projectTaskListLoading}\n            loading={projectTaskListLoading}\n          >\n            {projectTaskListLoading ? 'Submitting...' : 'Submit'}\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n}\n\nexport default CreateProjectTask;","import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Modal,\n  Button,\n  Row,\n  Col,\n  Card,\n  Typography,\n  Divider,\n  Spin,\n  Input,\n  Avatar,\n  Tag,\n  Progress,\n  Upload,\n  message,\n  Badge,\n  Timeline,\n  Collapse,\n  Tooltip,\n  Tabs,\n  Descriptions\n} from 'antd';\nimport {\n  PlayCircleOutlined,\n  PauseCircleOutlined,\n  PaperClipOutlined,\n  FilePdfOutlined,\n  FileExcelOutlined,\n  FileImageOutlined,\n  FileWordOutlined,\n  FileOutlined,\n  FileTextOutlined,\n  ClockCircleOutlined,\n  CommentOutlined,\n  CheckCircleOutlined,\n  UserOutlined,\n  CalendarOutlined,\n  FlagOutlined,\n  HourglassOutlined,\n  DownloadOutlined,\n  CloseOutlined,\n  SendOutlined,\n  MessageOutlined,\n  PlusOutlined,\n  DownOutlined,\n  UpOutlined,\n  CheckCircleFilled,\n  HistoryOutlined\n} from '@ant-design/icons';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProjectTaskDetails, logsofProjectTaskFunc, statusProjectTaskFunc } from './ProjecttaskFeatures/_project_task_reducers';\nimport { fileUploadFunc } from '../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers';\nimport Swal from 'sweetalert2';\nimport { FaRegFile, FaTimes, FaStopwatch } from 'react-icons/fa';\nimport { domainName, inputClassName } from '../../../constents/global';\nimport { MdWorkHistory } from 'react-icons/md';\nimport { BiTimer } from 'react-icons/bi';\n\nconst { Text, Title, Paragraph } = Typography;\nconst { TextArea } = Input;\nconst { TabPane } = Tabs;\n\nconst formatDuration = (start, end) => {\n  if (!start) return '0h 0m';\n  const endTime = end || new Date();\n  const duration = moment.duration(moment(endTime).diff(moment(start)));\n  const hours = Math.floor(duration.asHours());\n  const minutes = Math.floor(duration.asMinutes()) % 60;\n  return `${hours}h ${minutes}m`;\n};\n\nconst statusConfig = {\n  'assigned': { color: 'blue', text: 'Assigned', icon: <UserOutlined /> },\n  'in-progress': { color: 'orange', text: 'In Progress', icon: <PlayCircleOutlined /> },\n  'completed': { color: 'green', text: 'Completed', icon: <CheckCircleOutlined /> },\n  'reviewed': { color: 'purple', text: 'Reviewed', icon: <CheckCircleOutlined /> },\n  'done': { color: 'green', text: 'Done', icon: <CheckCircleOutlined /> },\n  'rejected': { color: 'red', text: 'Rejected', icon: <CloseOutlined /> },\n  'reassign': { color: 'volcano', text: 'Reassigned', icon: <UserOutlined /> }\n};\n\nconst TaskLogsModal = ({ isOpen, data, closeModalFunc, fetchListAfterSuccess }) => {\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState('');\n  const [activeTab, setActiveTab] = useState('comments');\n  const [expandedLogs, setExpandedLogs] = useState([]);\n  const [workingTime, setWorkingTime] = useState(\"00:00:00\");\n  const loadingDetails = false;\n  const { projectTaskDetails } = useSelector(state => state.projectTask);\n  const isTimerRunning = projectTaskDetails?.isCheckIn;\n  const latestCheckinData = projectTaskDetails?.timeSpentData?.latestCheckIn?.checkInTime\n  const [attachment, setAttachment] = useState([]);\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const loginuserId = userInfoglobal?._id;\n  const [isMobile, setIsMobile] = useState(window.innerWidth < 768);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth < 768);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  // Open all comments by default\n  useEffect(() => {\n    if (projectTaskDetails) {\n      const allLogIds = [\n        ...(projectTaskDetails?.timeSpentData?.comments || []).map(item => item._id),\n        ...(projectTaskDetails?.timeSpentData?.timeLogs?.list || []).map(item => item._id || item.checkInTime)\n      ];\n      setExpandedLogs(allLogIds);\n    }\n  }, [projectTaskDetails]);\n\n  useEffect(() => {\n    if (isOpen && data?._id) {\n      fetchDetailsData(data._id);\n    }\n  }, [isOpen, data?._id]);\n\n  const fetchDetailsData = useCallback((id) => {\n    dispatch(getProjectTaskDetails({ _id: id }));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if ((projectTaskDetails?.status === \"assigned\" ||\n      projectTaskDetails?.status === \"reassign\" ||\n      projectTaskDetails?.status === \"in-progress\") && isTimerRunning && latestCheckinData) {\n      const interval = setInterval(() => {\n        const duration = moment.duration(moment().diff(latestCheckinData));\n        const hours = String(duration.hours()).padStart(2, \"0\");\n        const minutes = String(duration.minutes()).padStart(2, \"0\");\n        const seconds = String(duration.seconds()).padStart(2, \"0\");\n        setWorkingTime(`${hours}:${minutes}:${seconds}`);\n      }, 1000);\n      return () => clearInterval(interval);\n    }\n  }, [projectTaskDetails]);\n\n  const handleTimer = async () => {\n    if (isTimerRunning) {\n      const { value: comment } = await Swal.fire({\n        title: 'Check-out Comment',\n        input: 'textarea',\n        inputLabel: 'Please enter your comment for checking out',\n        inputPlaceholder: 'Enter your comment here...',\n        inputAttributes: {\n          'aria-label': 'Check-out comment'\n        },\n        showCancelButton: true,\n        confirmButtonText: 'Submit',\n        cancelButtonText: 'Cancel',\n      });\n\n      if (comment !== undefined) {\n        dispatch(logsofProjectTaskFunc({\n          _id: data._id,\n          type: 'check-out',\n          comment: comment?.trim() || ''\n        })).then(res => {\n          if (!res.error) {\n            fetchDetailsData(data._id);\n          }\n        });\n      }\n    } else {\n      dispatch(logsofProjectTaskFunc({\n        _id: data._id,\n        type: 'check-in'\n      })).then(res => {\n        if (!res.error) {\n          fetchDetailsData(data._id);\n        }\n      });\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setAttachment((prev) => [...prev, res?.payload?.data]);\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setAttachment((prev) => {\n      const updatedAttachments = prev?.filter((_, i) => i !== index);\n      return updatedAttachments;\n    });\n  };\n\n  const handleCommentSubmit = () => {\n    if (!comment.trim() && attachment.length === 0) {\n      message.warning('Please add a comment or attachment');\n      return;\n    }\n\n    dispatch(logsofProjectTaskFunc({\n      _id: data._id,\n      type: 'comment',\n      comment: comment.trim(),\n      filePath: attachment\n    })).then(res => {\n      if (!res.error) {\n        setComment('');\n        setAttachment([]);\n        fetchDetailsData(data._id);\n      }\n    })\n  };\n\n  const calculateTotalTime = () => {\n    return projectTaskDetails?.timeSpentData?.timeLogs?.totalMinutes ? `${projectTaskDetails?.timeSpentData?.timeLogs?.totalMinutes} Minutes` : '0.00'\n  };\n\n  const toggleExpandLog = (id) => {\n    setExpandedLogs(prev =>\n      prev.includes(id)\n        ? prev.filter(logId => logId !== id)\n        : [...prev, id]\n    );\n  };\n\n  const handleCompleted = () => {\n    dispatch(statusProjectTaskFunc({\n      \"_id\": projectTaskDetails?._id,\n      \"status\": \"completed\"\n    })).then((res) => {\n      if (!res.error) {\n        fetchDetailsData(data._id);\n      }\n    })\n  };\n\n  const renderCommentItem = (item) => {\n    return (\n      <div className=\"mb-4 rounded-lg border border-gray-200 bg-white p-4 shadow-sm transition-all duration-200 hover:shadow-md\">\n        <div className=\"flex items-start\">\n          <div className=\"mr-3\">\n            <Avatar\n              size={40}\n              src={item.createdBy?.profileImage ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${item.createdBy.profileImage}` : null}\n              icon={<UserOutlined />}\n            />\n          </div>\n          <div className=\"flex-1 overflow-hidden\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-2\">\n              <div className=\"flex items-center\">\n                <span className=\"font-medium text-gray-900 text-sm sm:text-base\">{item.createdBy?.fullName || 'Unknown'}</span>\n                <span className=\"ml-2 text-xs sm:text-sm text-gray-500\">{moment(item.createdAt).fromNow()}</span>\n              </div>\n              <Tag color=\"green\" icon={<CommentOutlined />} className=\"text-xs sm:text-sm\">Comment</Tag>\n            </div>\n            <p className=\"mt-2 text-gray-700 text-sm sm:text-base\">{item.comment}</p>\n\n            {item.file?.length > 0 && (\n              <div className=\"mt-3\">\n                <h4 className=\"mb-2 text-xs sm:text-sm font-medium text-gray-500\">Attachments</h4>\n                <div className=\"space-y-2\">\n                  {item.file.map((file, idx) => (\n                    <a\n                      href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      key={idx}\n                      className=\"flex items-center justify-between rounded-md bg-gray-50 px-3 py-2 hover:bg-gray-100 transition-colors text-xs sm:text-sm\"\n                    >\n                      <span className=\"truncate font-medium text-gray-700\">{file}</span>\n                      <DownloadOutlined className=\"ml-2 text-gray-400 hover:text-gray-600\" />\n                    </a>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderTimeLogItem = (item) => {\n    const isExpanded = expandedLogs.includes(item._id || item.checkInTime);\n\n    return (\n      <div className={`mb-4 rounded-lg border border-gray-200 bg-white p-4 shadow-sm transition-all duration-200 ${isExpanded ? 'ring-2 ring-blue-500' : 'hover:shadow-md'}`}>\n        <div className=\"flex items-start\">\n          <div className=\"mr-3\">\n            <Avatar\n              size={40}\n              src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${projectTaskDetails?.assignedToData?.profileImage}`}\n              icon={<UserOutlined />}\n            />\n          </div>\n          <div className=\"flex-1 overflow-hidden\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center justify-between gap-2\">\n              <div className=\"flex items-center\">\n                <span className=\"font-medium text-gray-900 text-sm sm:text-base\">{projectTaskDetails?.assignedToData?.fullName || 'Unknown'}</span>\n                <span className=\"ml-2 text-xs sm:text-sm text-gray-500\">{moment(item.checkInTime).fromNow()}</span>\n              </div>\n              <div className=\"flex items-center\">\n                <Tag color=\"blue\" icon={<ClockCircleOutlined />} className=\"text-xs sm:text-sm\">\n                  {item.checkOutTime ? 'Time Entry' : 'Timer Running'}\n                </Tag>\n                <Button\n                  type=\"text\"\n                  icon={isExpanded ? <UpOutlined /> : <DownOutlined />}\n                  onClick={() => toggleExpandLog(item._id || item.checkInTime)}\n                  className=\"ml-2\"\n                  size=\"small\"\n                />\n              </div>\n            </div>\n\n            {isExpanded && (\n              <div className=\"mt-4 space-y-4\">\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                  <div className=\"flex items-center\">\n                    <div className=\"mr-3 flex h-8 w-8 items-center justify-center rounded-full bg-green-100 text-green-600\">\n                      <CheckCircleOutlined />\n                    </div>\n                    <div>\n                      <p className=\"text-xs sm:text-sm font-medium text-gray-500\">Checked in</p>\n                      <p className=\"text-xs sm:text-sm text-gray-900\">\n                        {moment(item.checkInTime).format('MMM D, YYYY h:mm A')}\n                      </p>\n                    </div>\n                  </div>\n\n                  {item.checkOutTime && (\n                    <div className=\"flex items-center\">\n                      <div className=\"mr-3 flex h-8 w-8 items-center justify-center rounded-full bg-green-100 text-green-600\">\n                        <CheckCircleOutlined />\n                      </div>\n                      <div>\n                        <p className=\"text-xs sm:text-sm font-medium text-gray-500\">Checked out</p>\n                        <p className=\"text-xs sm:text-sm text-gray-900\">\n                          {moment(item.checkOutTime).format('MMM D, YYYY h:mm A')}\n                        </p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"flex items-center\">\n                  <div className=\"mr-3 flex h-8 w-8 items-center justify-center rounded-full bg-blue-100 text-blue-600\">\n                    <HourglassOutlined />\n                  </div>\n                  <div>\n                    <p className=\"text-xs sm:text-sm font-medium text-gray-500\">Duration</p>\n                    <p className=\"text-xs sm:text-sm text-gray-900\">\n                      {formatDuration(item.checkInTime, item.checkOutTime)}\n                    </p>\n                  </div>\n                </div>\n\n                {item.comment && (\n                  <div className=\"flex items-start\">\n                    <div className=\"mr-3 flex h-8 w-8 items-center justify-center rounded-full bg-purple-100 text-purple-600 mt-1\">\n                      <CommentOutlined />\n                    </div>\n                    <div>\n                      <p className=\"text-xs sm:text-sm font-medium text-gray-500\">Comment</p>\n                      <p className=\"text-xs sm:text-sm text-gray-900\">{item.comment}</p>\n                    </div>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderTaskDetails = () => (\n    <Card\n      title=\"Task Details\"\n      className=\"mb-6\"\n      headStyle={{ borderBottom: '1px solid #f0f0f0', padding: '16px' }}\n      bodyStyle={{ padding: '16px' }}\n    >\n      <Descriptions column={1} bordered={false} className=\"task-details-descriptions\">\n        <Descriptions.Item label=\"Priority\" className=\"py-2\">\n          <div className=\"flex items-center\">\n            <div className=\"mr-2 flex h-6 w-6 items-center justify-center rounded-full bg-red-100 text-red-600\">\n              <FlagOutlined className=\"text-xs\" />\n            </div>\n            <span className=\"font-medium text-sm\">{projectTaskDetails?.priority || 'Not set'}</span>\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item label=\"Status\" className=\"py-2\">\n          <div className=\"flex items-center\">\n            <div className=\"mr-2 flex h-6 w-6 items-center justify-center rounded-full bg-blue-100 text-blue-600\">\n              {statusConfig[projectTaskDetails?.status]?.icon || <Badge status=\"processing\" />}\n            </div>\n            <Tag color={statusConfig[projectTaskDetails?.status]?.color || 'default'} className=\"font-medium text-xs sm:text-sm\">\n              {statusConfig[projectTaskDetails?.status]?.text || projectTaskDetails?.status || 'Not set'}\n            </Tag>\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item label=\"Start Date\" className=\"py-2\">\n          <div className=\"flex items-center\">\n            <CalendarOutlined className=\"mr-2 text-gray-400\" />\n            <span className=\"font-medium text-sm\">\n              {projectTaskDetails?.startDateTime\n                ? moment(projectTaskDetails.startDateTime).format('MMM D, YYYY')\n                : 'Not set'}\n            </span>\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item label=\"Due Date\" className=\"py-2\">\n          <div className=\"flex items-center\">\n            <CalendarOutlined className=\"mr-2 text-gray-400\" />\n            <span className=\"font-medium text-sm\">\n              {projectTaskDetails?.endDateTime\n                ? moment(projectTaskDetails.endDateTime).format('MMM D, YYYY')\n                : 'Not set'}\n            </span>\n          </div>\n        </Descriptions.Item>\n\n        <Descriptions.Item label=\"Total Time\" className=\"py-2\">\n          <div className=\"flex items-center\">\n            <ClockCircleOutlined className=\"mr-2 text-gray-400\" />\n            <span className=\"font-medium text-sm\">{calculateTotalTime()}</span>\n          </div>\n        </Descriptions.Item>\n      </Descriptions>\n    </Card>\n  );\n\n  const renderAssigneeCard = () => (\n    <Card\n      title=\"Assignee\"\n      headStyle={{ borderBottom: '1px solid #f0f0f0', padding: '16px' }}\n      bodyStyle={{ padding: '16px', textAlign: 'center' }}\n    >\n      <Avatar\n        size={isMobile ? 60 : 80}\n        src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${projectTaskDetails?.assignedToData?.profileImage}`}\n        icon={<UserOutlined />}\n        className=\"mb-4\"\n      />\n      <div className=\"text-center\">\n        <p className=\"font-semibold text-gray-900 text-base sm:text-lg mb-1\">\n          {projectTaskDetails?.assignedToData?.fullName || 'Unassigned'}\n        </p>\n        <p className=\"text-gray-500 mb-3 text-sm\">\n          {projectTaskDetails?.assignedToData?.role || 'Team Member'}\n        </p>\n      </div>\n    </Card>\n  );\n\n  if (loadingDetails) {\n    return (\n      <Modal\n        open={isOpen}\n        onCancel={closeModalFunc}\n        footer={null}\n        width={isMobile ? '100%' : 800}\n        centered\n        className=\"task-logs-modal\"\n        style={isMobile ? { top: 0, margin: 0, padding: 0, maxWidth: '100%' } : {}}\n      >\n        <div className=\"flex flex-col items-center justify-center p-10\">\n          <Spin size=\"large\" />\n          <p className=\"mt-4 text-gray-500\">Loading task details...</p>\n        </div>\n      </Modal>\n    );\n  }\n\n  // Create copies of arrays to avoid mutating read-only state\n  const comments = [...(projectTaskDetails?.timeSpentData?.comments || [])];\n  const timeLogs = [...(projectTaskDetails?.timeSpentData?.timeLogs?.list || [])];\n\n  // Sort the copies instead of the original arrays\n  const sortedComments = comments.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n  const sortedTimeLogs = timeLogs.sort((a, b) => new Date(b.checkInTime) - new Date(a.checkInTime));\n\n  return (\n    <Modal\n      open={isOpen}\n      onCancel={closeModalFunc}\n      footer={null}\n      width={isMobile ? '100%' : 1100}\n      centered\n      destroyOnClose\n      className=\"task-logs-modal antmodalclassName\"\n      style={isMobile ? {\n        top: 0,\n        margin: 0,\n        padding: 0,\n        maxWidth: '100%',\n        height: '100vh'\n      } : { top: 20 }}\n      bodyStyle={isMobile ? {\n        padding: '16px',\n        maxHeight: 'calc(100vh - 55px)',\n        overflowY: 'auto'\n      } : {}}\n      title={\n        <div className={isMobile ? \"max-w-full\" : \"max-w-3/4\"}>\n          <h2 className=\"text-xl sm:text-2xl font-bold text-gray-900 mb-1 line-clamp-2\">\n            {projectTaskDetails?.title}\n          </h2>\n          <p className=\"text-gray-500 flex items-center flex-wrap text-xs sm:text-sm\">\n            <span className=\"mr-2\">#{projectTaskDetails?.taskCode}</span>\n            <span className=\"text-gray-300 hidden sm:inline\">•</span>\n            <span className=\"ml-0 sm:ml-2 mt-1 sm:mt-0\">\n              Created {projectTaskDetails?.createdAt ? moment(projectTaskDetails.createdAt).fromNow() : ''}\n            </span>\n          </p>\n        </div>\n      }\n    >\n      <div className=\"flex flex-col sm:flex-row sm:justify-between sm:items-start gap-3 mb-6\">\n        <div className=\"flex flex-col sm:flex-row items-start sm:items-center gap-2\">\n          {loginuserId === projectTaskDetails?.assignedTo &&\n            (projectTaskDetails?.status === \"assigned\" ||\n              projectTaskDetails?.status === \"reassign\" ||\n              projectTaskDetails?.status === \"in-progress\") && (\n              <Tooltip title={isTimerRunning ? 'Stop timer' : 'Start timer'}>\n                <Button\n                  type={isTimerRunning ? 'primary' : 'default'}\n                  danger={isTimerRunning}\n                  icon={isTimerRunning ? <PauseCircleOutlined /> : <PlayCircleOutlined />}\n                  onClick={handleTimer}\n                  size={isMobile ? \"small\" : \"middle\"}\n                  className=\"flex items-center w-full sm:w-auto justify-center mb-2 sm:mb-0\"\n                >\n                  {isTimerRunning ? 'Stop Timer' : 'Start Timer'}\n                </Button>\n              </Tooltip>\n            )}\n\n          {projectTaskDetails?.status === \"in-progress\" &&\n            !projectTaskDetails?.isCheckIn &&\n            loginuserId === projectTaskDetails?.assignedTo && (\n              <Button\n                type=\"primary\"\n                icon={<CheckCircleFilled />}\n                onClick={handleCompleted}\n                size={isMobile ? \"small\" : \"middle\"}\n                className=\"w-full sm:w-auto justify-center\"\n              >\n                Mark Complete\n              </Button>\n            )}\n        </div>\n        {(projectTaskDetails?.status === \"assigned\" ||\n        projectTaskDetails?.status === \"reassign\" ||\n        projectTaskDetails?.status === \"in-progress\") && isTimerRunning &&workingTime && <div className=\"text-[20px] font-medium text-teal-600 flex items-center  gap-2\">\n          <BiTimer />\n          <span className=\"font-semibold\">{workingTime}</span>\n        </div>}\n      </div>\n      \n\n      <Divider className=\"my-4\" />\n\n      {isMobile ? (\n        // Mobile layout - single column with all content in one card\n        <Card\n          bodyStyle={{ padding: '16px' }}\n          className=\"mobile-task-card\"\n        >\n          {/* Task Details Section */}\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-4\">Task Details</h3>\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              {renderTaskDetails()}\n            </div>\n          </div>\n\n          {/* Assignee Section */}\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-4\">Assignee</h3>\n            <div className=\"bg-gray-50 p-4 rounded-lg\">\n              {renderAssigneeCard()}\n            </div>\n          </div>\n\n          {/* Description Section */}\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-4\">Description</h3>\n            <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n              <p className=\"text-gray-700 text-sm\">\n                {projectTaskDetails?.description || 'No description provided for this task.'}\n              </p>\n            </div>\n          </div>\n\n          {/* Add Comment Section */}\n          <div className=\"mb-6\">\n            <h3 className=\"text-lg font-medium mb-4\">Add Comment</h3>\n            <div className=\"bg-white p-4 rounded-lg border border-gray-200\">\n              <TextArea\n                rows={3}\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n                placeholder=\"Add a comment...\"\n                className=\"w-full mb-4\"\n                autoSize={{ minRows: 3, maxRows: 6 }}\n              />\n\n              <div className=\"flex flex-col gap-4\">\n                <div className=\"space-y-4\">\n                  <input\n                    type=\"file\"\n                    onChange={handleFileChange}\n                    className=\"hidden\"\n                    id=\"file-upload-mobile\"\n                  />\n                  <label\n                    htmlFor=\"file-upload-mobile\"\n                    className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer hover:bg-gray-50 transition-colors w-full justify-center\"\n                  >\n                    <PaperClipOutlined className=\"mr-2\" /> Add Attachments\n                  </label>\n\n                  <div className=\"space-y-2\">\n                    {attachment?.map((file, index) => (\n                      <div\n                        key={index}\n                        className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md text-xs\"\n                      >\n                        <a\n                          href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                          className=\"flex items-center space-x-2 truncate\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <PaperClipOutlined className=\"text-gray-500\" />\n                          <span className=\"text-gray-600 truncate max-w-[120px]\">\n                            {file}\n                          </span>\n                        </a>\n                        <button\n                          type=\"button\"\n                          onClick={() => handleRemoveFile(index)}\n                          className=\"text-red-500 hover:text-red-700 transition-colors\"\n                        >\n                          <CloseOutlined />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Button\n                  type=\"primary\"\n                  onClick={handleCommentSubmit}\n                  disabled={(!comment.trim() && attachment.length === 0)}\n                  className=\"flex items-center justify-center w-full\"\n                  icon={<SendOutlined />}\n                  size=\"middle\"\n                >\n                  Post Comment\n                </Button>\n              </div>\n            </div>\n          </div>\n\n          {/* Activity Section */}\n          <div>\n            <h3 className=\"text-lg font-medium mb-4\">Activity</h3>\n            <Tabs\n              defaultActiveKey=\"comments\"\n              activeKey={activeTab}\n              onChange={setActiveTab}\n              className=\"activity-tabs\"\n              type=\"card\"\n            >\n              <TabPane\n                tab={\n                  <span className='flex justify-center items-center gap-1 text-xs sm:text-sm'>\n                    <CommentOutlined />\n                    Comments\n                  </span>\n                }\n                key=\"comments\"\n              >\n                <div className=\"pt-4\">\n                  <div className=\"space-y-4\">\n                    {sortedComments.map((item, index) => (\n                      <React.Fragment key={item._id || index}>\n                        {renderCommentItem(item)}\n                      </React.Fragment>\n                    ))}\n\n                    {sortedComments.length === 0 && (\n                      <div className=\"text-center py-8 text-gray-500\">\n                        <CommentOutlined className=\"text-3xl mb-2\" />\n                        <p>No comments yet</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </TabPane>\n\n              <TabPane\n                tab={\n                  <span className='flex justify-center items-center gap-1 text-xs sm:text-sm'>\n                    <HistoryOutlined />\n                    Time Activity\n                  </span>\n                }\n                key=\"activity\"\n              >\n                <div className=\"pt-4\">\n                  <div className=\"space-y-4\">\n                    {sortedTimeLogs.map((item, index) => (\n                      <React.Fragment key={item._id || item.checkInTime || index}>\n                        {renderTimeLogItem(item)}\n                      </React.Fragment>\n                    ))}\n\n                    {sortedTimeLogs.length === 0 && (\n                      <div className=\"text-center py-8 text-gray-500\">\n                        <ClockCircleOutlined className=\"text-3xl mb-2\" />\n                        <p>No time activity recorded</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </TabPane>\n            </Tabs>\n          </div>\n        </Card>\n      ) : (\n        // Desktop layout - original three-column design\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          <div className=\"lg:col-span-2 space-y-6\">\n            <Card\n              title=\"Description\"\n              headStyle={{ borderBottom: '1px solid #f0f0f0', padding: '16px 24px' }}\n              bodyStyle={{ padding: '24px' }}\n            >\n              <p className=\"text-gray-700\">\n                {projectTaskDetails?.description || 'No description provided for this task.'}\n              </p>\n            </Card>\n\n            <Card\n              title=\"Add Comment\"\n              headStyle={{ borderBottom: '1px solid #f0f0f0', padding: '16px 24px' }}\n              bodyStyle={{ padding: '24px' }}\n              className=\"mb-6\"\n            >\n              <TextArea\n                rows={4}\n                value={comment}\n                onChange={(e) => setComment(e.target.value)}\n                placeholder=\"Add a comment...\"\n                className=\"w-full mb-4\"\n                autoSize={{ minRows: 3, maxRows: 6 }}\n              />\n\n              <div className=\"flex flex-col md:flex-row md:items-center justify-between gap-4\">\n                <div className=\"space-y-4\">\n                  <input\n                    type=\"file\"\n                    onChange={handleFileChange}\n                    className=\"hidden\"\n                    id=\"file-upload\"\n                  />\n                  <label\n                    htmlFor=\"file-upload\"\n                    className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer hover:bg-gray-50 transition-colors\"\n                  >\n                    <PaperClipOutlined className=\"mr-2\" /> Add Attachments\n                  </label>\n\n                  <div className=\"space-y-2\">\n                    {attachment?.map((file, index) => (\n                      <div\n                        key={index}\n                        className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\"\n                      >\n                        <a\n                          href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                          className=\"flex items-center space-x-2\"\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <PaperClipOutlined className=\"text-gray-500\" />\n                          <span className=\"text-sm text-gray-600\">\n                            {file}\n                          </span>\n                        </a>\n                        <button\n                          type=\"button\"\n                          onClick={() => handleRemoveFile(index)}\n                          className=\"text-red-500 hover:text-red-700 transition-colors\"\n                        >\n                          <CloseOutlined />\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <Button\n                  type=\"primary\"\n                  onClick={handleCommentSubmit}\n                  disabled={(!comment.trim() && attachment.length === 0)}\n                  className=\"flex items-center self-end\"\n                  icon={<SendOutlined />}\n                  size=\"middle\"\n                >\n                  Post Comment\n                </Button>\n              </div>\n            </Card>\n\n            <Card\n              bodyStyle={{ padding: 0 }}\n              className=\"activity-card\"\n            >\n              <Tabs\n                defaultActiveKey=\"comments\"\n                activeKey={activeTab}\n                onChange={setActiveTab}\n                className=\"activity-tabs !px-5\"\n              >\n                <TabPane\n                  tab={\n                    <span className='flex justify-center items-center gap-1'>\n                      <CommentOutlined />\n                      Comments\n                    </span>\n                  }\n                  key=\"comments\"\n                >\n                  <div className=\"p-6\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Comments</h3>\n                    <div className=\"space-y-4\">\n                      {sortedComments.map((item, index) => (\n                        <React.Fragment key={item._id || index}>\n                          {renderCommentItem(item)}\n                        </React.Fragment>\n                      ))}\n\n                      {sortedComments.length === 0 && (\n                        <div className=\"text-center py-8 text-gray-500\">\n                          <CommentOutlined className=\"text-3xl mb-2\" />\n                          <p>No comments yet</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </TabPane>\n\n                <TabPane\n                  tab={\n                    <span className='flex justify-center items-center gap-1'>\n                      <HistoryOutlined />\n                      Time Activity\n                    </span>\n                  }\n                  key=\"activity\"\n                >\n                  <div className=\"p-6\">\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-4\">Time Activity</h3>\n                    <div className=\"space-y-4\">\n                      {sortedTimeLogs.map((item, index) => (\n                        <React.Fragment key={item._id || item.checkInTime || index}>\n                          {renderTimeLogItem(item)}\n                        </React.Fragment>\n                      ))}\n\n                      {sortedTimeLogs.length === 0 && (\n                        <div className=\"text-center py-8 text-gray-500\">\n                          <ClockCircleOutlined className=\"text-3xl mb-2\" />\n                          <p>No time activity recorded</p>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </TabPane>\n              </Tabs>\n            </Card>\n          </div>\n\n          <div className=\"space-y-6\">\n            {renderTaskDetails()}\n            {renderAssigneeCard()}\n          </div>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default TaskLogsModal;","import { Dropdown, Menu, Tag, Tooltip } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\n\n// Tag colors\nconst statusColors = {\n    reviewed: \"blue\",\n    done: \"purple\",\n    rejected: \"error\",\n    reassign: \"warning\",\n};\n\n// Background colors for trigger box\nconst statusBgColors = {\n    assigned: \"#f5f5f5\",\n    \"in-progress\": \"#e6f7ff\",\n    completed: \"#f6ffed\",\n    reviewed: \"#e6f4ff\",\n    done: \"#f9f0ff\",\n    rejected: \"#fff1f0\",\n    reassign: \"#fffbe6\",\n};\n\nconst StatusDropdown = ({ element, handleStatusChange, employeePortal = false }) => {\n    const isEditable =\n        element?.status === \"completed\" || element?.status === \"reviewed\";\n    if (employeePortal) {\n        return (\n            <td className=\"whitespace-nowrap border-none p-2\">\n                <div\n                    className=\"flex capitalize items-center gap-2 px-2 py-1 border rounded-md\"\n                    style={{\n                        backgroundColor: statusBgColors[element?.status] || \"#fafafa\",\n                    }}\n                >\n                    {element?.status}\n                </div>\n            </td>\n        );\n    }\n    const menu = (\n        <Menu\n            onClick={({ key }) => {\n                if (isEditable) {\n                    handleStatusChange(key, element?._id);\n                }\n            }}\n            selectedKeys={[element?.status]}\n        >\n            {Object.keys(statusColors).map((status) => {\n                const isDisabled =\n                    !isEditable ||\n                    [\"assigned\", \"in-progress\", \"completed\"].includes(status);\n\n                // Tooltip message handling\n                let tooltipMsg = \"\";\n                if (!isEditable) {\n                    tooltipMsg = \"You can only change status when it is Completed or Reviewed\";\n                } else if ([\"assigned\", \"in-progress\", \"completed\"].includes(status)) {\n                    tooltipMsg = \"Status will change according to Working\";\n                }\n\n                return (\n                    <Menu.Item\n                        key={status}\n                        disabled={isDisabled}\n                        style={{\n                            cursor: isDisabled ? \"not-allowed\" : \"pointer\",\n                            opacity: isDisabled ? 0.6 : 1,\n                        }}\n                    >\n                        {tooltipMsg ? (\n                            <Tooltip title={tooltipMsg} placement=\"right\">\n                                <div>\n                                    <Tag color={statusColors[status]}>{status}</Tag>\n                                </div>\n                            </Tooltip>\n                        ) : (\n                            <Tag color={statusColors[status]}>{status}</Tag>\n                        )}\n                    </Menu.Item>\n                );\n            })}\n        </Menu>\n    );\n\n    return (\n        <td className=\"whitespace-nowrap border-none p-2\">\n            <Tooltip\n                placement=\"topLeft\"\n                title={\n                    isEditable\n                        ? \"Change Status\"\n                        : `Already ${element?.status}`\n                }\n            >\n                <Dropdown overlay={menu} trigger={[\"click\"]}>\n                    <div\n                        className={`flex capitalize items-center gap-2 px-2 py-1 border rounded-md transition ${isEditable ? \"cursor-pointer hover:shadow\" : \"cursor-not-allowed\"\n                            }`}\n                        style={{\n                            backgroundColor: statusBgColors[element?.status] || \"#fafafa\",\n                        }}\n                    >\n                        {element?.status}\n                        {isEditable && <DownOutlined style={{ fontSize: 10, color: \"#666\" }} />}\n                    </div>\n                </Dropdown>\n            </Tooltip>\n        </td>\n    );\n};\n\nexport default StatusDropdown;\n"],"names":["_ref","isOpen","data","fetchListAfterSuccess","closeModalFunc","handlingPerson","isDirector","loading","projectTaskListLoading","useSelector","state","projectTask","register","handleSubmit","setValue","control","watch","reset","formState","errors","useForm","userCompanyId","userDirectorId","userBranchId","userType","getUserIds","dispatch","useDispatch","attachment","setAttachment","useState","branchList","branchListloading","branch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","employeList","employeeLoading","employe","projectmanagementList","projectManagement","companyId","useWatch","name","defaultValue","relatedTo","branchId","useEffect","branchSearch","text","sort","status","isPagination","fetchEmployeListData","projectmanagementSearch","directorId","_id","reqPayload","isTL","isHR","departmentId","designationId","employeSearch","handleCancel","_jsx","Modal","title","open","onCancel","footer","width","centered","className","children","_jsxs","autoComplete","onSubmit","finalPayload","projectId","descriptions","employee","checkInTime","checkOutTime","taskPriority","createProjectTaskFunc","then","result","error","inputLabelClassName","Controller","rules","required","render","_ref2","field","Select","_objectSpread","inputAntdSelectClassName","PDBranchId","filterOption","input","option","String","toLowerCase","includes","getPopupContainer","trigger","parentNode","placeholder","Option","value","disabled","ListLoader","map","type","fullName","message","inputClassName","_ref3","_sortByPropertyAlphab","showSearch","sortByPropertyAlphabetically","element","index","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","CustomDatePicker","showTime","format","disabledDate","current","isBefore","moment","endOf","_ref0","onChange","e","file","target","files","reqData","filePath","isVideo","isMultiple","fileUploadFunc","res","_res$payload","payload","prev","_res$payload2","id","htmlFor","FaRegFile","href","process","rel","onClick","filter","_","i","handleRemoveFile","FaTimes","Button","htmlType","Text","Title","Paragraph","Typography","TextArea","Input","TabPane","Tabs","formatDuration","start","end","endTime","Date","duration","diff","hours","Math","floor","asHours","minutes","asMinutes","statusConfig","color","icon","UserOutlined","PlayCircleOutlined","CheckCircleOutlined","CloseOutlined","_projectTaskDetails$t","_projectTaskDetails$t2","_projectTaskDetails$t0","_projectTaskDetails$t1","_projectTaskDetails$t10","comment","setComment","activeTab","setActiveTab","expandedLogs","setExpandedLogs","workingTime","setWorkingTime","projectTaskDetails","isTimerRunning","isCheckIn","latestCheckinData","timeSpentData","latestCheckIn","loginuserId","isMobile","setIsMobile","window","innerWidth","handleResize","addEventListener","removeEventListener","_projectTaskDetails$t3","_projectTaskDetails$t4","_projectTaskDetails$t5","allLogIds","comments","item","timeLogs","list","fetchDetailsData","useCallback","getProjectTaskDetails","interval","setInterval","padStart","seconds","clearInterval","handleFileChange","handleCommentSubmit","trim","length","logsofProjectTaskFunc","warning","calculateTotalTime","_projectTaskDetails$t6","_projectTaskDetails$t7","_projectTaskDetails$t8","_projectTaskDetails$t9","totalMinutes","renderCommentItem","_item$createdBy","_item$createdBy2","_item$file","Avatar","size","src","createdBy","profileImage","createdAt","fromNow","Tag","CommentOutlined","idx","DownloadOutlined","renderTimeLogItem","_projectTaskDetails$a","_projectTaskDetails$a2","isExpanded","assignedToData","ClockCircleOutlined","UpOutlined","DownOutlined","toggleExpandLog","logId","HourglassOutlined","renderTaskDetails","_statusConfig$project","_statusConfig$project2","_statusConfig$project3","Card","headStyle","borderBottom","padding","bodyStyle","Descriptions","column","bordered","Item","label","FlagOutlined","priority","Badge","CalendarOutlined","startDateTime","endDateTime","renderAssigneeCard","_projectTaskDetails$a3","_projectTaskDetails$a4","_projectTaskDetails$a5","textAlign","role","sortedComments","a","b","sortedTimeLogs","destroyOnClose","style","top","margin","maxWidth","height","maxHeight","overflowY","taskCode","assignedTo","Tooltip","danger","PauseCircleOutlined","async","Swal","inputLabel","inputPlaceholder","inputAttributes","showCancelButton","confirmButtonText","cancelButtonText","undefined","CheckCircleFilled","handleCompleted","statusProjectTaskFunc","BiTimer","Divider","description","rows","autoSize","minRows","maxRows","PaperClipOutlined","SendOutlined","defaultActiveKey","activeKey","tab","React","HistoryOutlined","statusColors","reviewed","done","rejected","reassign","statusBgColors","assigned","completed","handleStatusChange","employeePortal","isEditable","backgroundColor","menu","Menu","key","selectedKeys","Object","keys","isDisabled","tooltipMsg","cursor","opacity","placement","Dropdown","overlay","fontSize"],"sourceRoot":""}