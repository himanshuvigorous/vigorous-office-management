{"version":3,"file":"static/js/6285.538e30f6.chunk.js","mappings":"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","sources":["pages/hr/employeeSalary/StandardPayroll/ViewStandardpayroll.js"],"sourcesContent":["import { Controller, useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { formButtonClassName, inputAntdSelectClassName, inputClassName, inputDisabledClassName, inputLabelClassName, sortByPropertyAlphabetically } from \"../../../../constents/global\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { resetStandardPayrollState, standardPayrollCreate, standardPayrollDetails, standardPayrollUpdate } from \"./standardPayrollfeature/_standardPayroll_reducers\";\nimport { deductionsListSearch, getdeductionsList } from \"../Deductions/deductionsfeature/_deductionsList_reducers\";\nimport { allowanceListSearch, getAllowanceList } from \"../Allowance/allowancefeature/_allowanceList_reducers\";\nimport { decrypt } from \"../../../../config/Encryption\";\nimport { Select } from \"antd\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\n\n\n\nconst ViewStandardpayroll = () => {\n  const {\n    register,\n    handleSubmit,\n    control,\n    reset,\n    watch,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { standardPayrollIdEnc } = useParams();\n  const standardPayrollId = decrypt(standardPayrollIdEnc);\n  const { standardPayrollDetailsData } = useSelector((state) => state.standardPayroll);\n  const { allowanceListData, loading: allowanceLoading } = useSelector((state) => state.allowance);\n  const { deductionsListData, loading: deductionLoading } = useSelector((state) => state.deductions);\n  const [isDataFetched, setIsDataFetched] = useState(false);\n  const [allDedfinalemployeeList, setAllDedFinalEmployeeList] = useState([]);\n  const {\n    fields: allowanceDetails,\n    append: appendAllowance,\n    remove: removeAllowance,\n  } = useFieldArray({\n    control,\n    name: \"allowanceDetails\",\n  });\n  const {\n    fields: deductionDetails,\n    append: appendDeduction,\n    remove: removeDeduction,\n  } = useFieldArray({\n    control,\n    name: \"deductionDetails\",\n  });\n  const selectedEmployee = useWatch({\n    control,\n    name: \"employee\",\n    defaultValue: \"\",\n  });\n  const deductionsListDetails = useWatch({\n    control,\n    name: \"deductionDetails\",\n    defaultValue: \"\",\n  });\n  const allowanceListDetails = useWatch({\n    control,\n    name: \"allowanceDetails\",\n    defaultValue: \"\",\n  });\n\n  useEffect(() => {\n    if (standardPayrollId) {\n      dispatch(standardPayrollDetails({ _id: standardPayrollId }));\n    }\n\n    // Cleanup function to reset the state when the component unmounts\n    return () => {\n      dispatch(resetStandardPayrollState());\n    };\n  }, [standardPayrollId, dispatch]);\n  useEffect(() => {\n    if (standardPayrollDetailsData) {\n\n\n      if (!standardPayrollDetailsData) return null;\n\n      let AllDed = [];\n      const basicSalary = Number(standardPayrollDetailsData?.basicSalary) || 0;\n\n      // Process Allowances\n      if (Array.isArray(allowanceListDetails)) {\n        allowanceListDetails.forEach((all) => {\n          const allId = all?.allowance;\n          const allowanceItem = allowanceListData?.find(\n            (item) => item?._id === allId\n          );\n          const allName = allowanceItem?.name || \"-\";\n          const allIsPercentage = all?.isPercentage;\n          const amount = Number(all?.amount) || 0;\n\n          const calculatedAmounted =\n            allIsPercentage === \"Yes\"\n              ? (basicSalary * amount) / 100\n              : amount;\n\n          AllDed.push({\n            name: allName,\n            isPercentage: allIsPercentage,\n            _id: allId,\n            amount: calculatedAmounted,\n            type: \"allowance\",\n          });\n        });\n      }\n\n      // Process Deductions\n      if (Array.isArray(deductionsListDetails)) {\n        deductionsListDetails.forEach((ded) => {\n          const dedId = ded?.deduction;\n          const deductionItem = deductionsListData?.find(\n            (item) => item?._id === dedId\n          );\n          const dedName = deductionItem?.name || \"-\";\n          const dedIsPercentage = ded?.isPercentage;\n          const amount = Number(ded?.amount) || 0;\n\n          const calculatedAmounted =\n            dedIsPercentage === \"Yes\"\n              ? (basicSalary * amount) / 100\n              : amount;\n\n          AllDed.push({\n            name: dedName,\n            isPercentage: dedIsPercentage,\n            _id: dedId,\n            amount: calculatedAmounted,\n            type: \"deduction\",\n          });\n        });\n      }\n\n      setAllDedFinalEmployeeList(AllDed);\n    }\n  }, [\n    standardPayrollDetailsData,\n    allowanceListDetails,\n    deductionsListDetails,\n    allowanceListData,\n    deductionsListData,\n\n  ]);\n\n  const { loading: standardPayrollLoading } = useSelector(\n    (state) => state.standardPayroll\n  );\n  useEffect(() => {\n    if (standardPayrollDetailsData && standardPayrollDetailsData?.companyId && standardPayrollDetailsData?.branchId && !isDataFetched) {\n      setIsDataFetched(true); // Prevent re-fetching\n\n      // Reset form values before any data changes\n      reset();\n\n      // Set form values immediately after resetting\n      setValue(\"allowanceDetails\", []);\n      setValue(\"deductionDetails\", []);\n      setValue(\"employee\", standardPayrollDetailsData?.employeName);\n\n\n      dispatch(allowanceListSearch({\n        \"text\": \"\",\n        \"sort\": true,\n        \"status\": true,\n        \"isPagination\": false,\n        directorId: \"\",\n        companyId: standardPayrollDetailsData?.companyId,\n        branchId: standardPayrollDetailsData?.branchId,\n      })).then((data) => {\n        if (!data?.error) {\n          standardPayrollDetailsData?.allowances?.forEach(allowance => {\n            const newAllowance = {\n              allowance: allowance?.allowanceId,\n              isPercentage: allowance?.isPercentage ? \"Yes\" : \"No\",\n              amount: allowance?.value,\n            };\n            appendAllowance(newAllowance);\n          });\n        }\n      });\n\n      // Dispatch for deduction list\n      dispatch(deductionsListSearch({\n        \"text\": \"\",\n        \"sort\": true,\n        \"status\": true,\n        \"isPagination\": false,\n        directorId: \"\",\n        companyId: standardPayrollDetailsData?.companyId,\n        branchId: standardPayrollDetailsData?.branchId,\n      })).then((data) => {\n        if (!data?.error) {\n          standardPayrollDetailsData?.deductions?.forEach(deduction => {\n            const newDeduction = {\n              deduction: deduction?.deductionId,\n              isPercentage: deduction?.isPercentage ? \"Yes\" : \"No\",\n              amount: deduction?.value,\n            };\n            appendDeduction(newDeduction);\n          });\n        }\n      });\n    }\n  }, [standardPayrollDetailsData, isDataFetched, dispatch, reset, setValue]);\n\n\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: standardPayrollId,\n      companyId: standardPayrollDetailsData?.companyId,\n      directorId: \"\",\n      branchId: standardPayrollDetailsData?.branchId,\n      \"employeId\": standardPayrollDetailsData?.employeId,\n      \"allowances\": data?.allowanceDetails?.map((allowance) => ({\n        \"allowanceId\": allowance?.allowance,\n        \"name\": allowanceListData?.find((item) => item?._id === allowance?.allowance)?.name,\n        \"isPercentage\": allowance?.isPercentage === \"Yes\" ? true : false,\n        \"value\": allowance?.amount\n      })),\n      \"deductions\": data?.deductionDetails?.map((deduction) => ({\n        \"deductionId\": deduction?.deduction,\n        \"name\": deductionsListData?.find((item) => item?._id === deduction?.deduction)?.name,\n        \"isPercentage\": deduction?.isPercentage === \"Yes\" ? true : false,\n        \"value\": deduction?.amount\n      }))\n    };\n\n    dispatch(standardPayrollUpdate(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n\n\n\n\n\n  const { Option } = Select\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"space-y-4 px-4 py-4\">\n            <div className=\"bg-white rounded-lg shadow-md border border-gray-200 overflow-hidden\">\n              {/* Employee Header with Salary Summary */}\n              <div className=\"bg-header text-white p-4\">\n                <div className=\"flex flex-col md:flex-row items-center gap-4\">\n                  <div className=\"w-16 h-16 rounded-full bg-white flex items-center justify-center shrink-0\">\n                    {standardPayrollDetailsData?.profileImage ? (\n                      <img src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${standardPayrollDetailsData.profileImage}`} alt=\"Profile\" className=\"w-full h-full rounded-full object-cover\" />\n                    ) : (\n                      <span className=\"text-3xl font-bold text-header\">{standardPayrollDetailsData?.fullName?.charAt(0).toUpperCase()}</span>\n                    )}\n                    {/* <span className=\"text-2xl font-bold text-header\">\n\n                      {standardPayrollDetailsData?.employeName?.charAt(0).toUpperCase() || 'E'}\n                    </span> */}\n                  </div>\n\n                  <div className=\"flex-1\">\n                    <h2 className=\"text-lg font-bold\">{standardPayrollDetailsData?.employeName}</h2>\n\n                    {/* Salary Summary */}\n                    <div className=\"grid grid-cols-3 gap-2 mt-2 text-sm\">\n                      <div className=\"bg-white/10 p-1 rounded text-center\">\n                        <p className=\"font-medium\">Basic</p>\n                        <p className=\"font-semibold\">₹{standardPayrollDetailsData?.basicSalary?.toLocaleString('en-IN') || '0'}</p>\n                      </div>\n                      <div className=\"bg-white/10 p-1 rounded text-center\">\n                        <p className=\"font-medium\">Monthly</p>\n                        <p className=\"font-semibold\">₹{standardPayrollDetailsData?.baseSalary?.toLocaleString('en-IN') || '0'}</p>\n                      </div>\n                      <div className=\"bg-white/10 p-1 rounded text-center\">\n                        <p className=\"font-medium\">Yearly</p>\n                        <p className=\"font-semibold\">₹{standardPayrollDetailsData?.ctc?.toLocaleString('en-IN') || '0'}</p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Deductions & Allowances */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 divide-y md:divide-y-0 md:divide-x divide-gray-200\">\n                {/* Allowances Section */}\n                <div className=\"p-4\">\n                  <h3 className=\"text-md font-semibold text-green-700 mb-3 flex items-center gap-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                    </svg>\n                    Allowances\n                  </h3>\n\n                  {allDedfinalemployeeList?.filter(item => item?.type?.toLowerCase() === 'allowance')?.length > 0 ? (\n                    <div className=\"space-y-2\">\n                      {allDedfinalemployeeList\n                        .filter(item => item?.type?.toLowerCase() === 'allowance')\n                        .map((item, idx) => (\n                          <div key={`allowance-${idx}`} className=\"flex justify-between items-center p-2 bg-green-50 rounded border border-green-100\">\n                            <span className=\"font-medium text-gray-700\">{item.name}</span>\n                            <span className=\"font-semibold text-green-600\">+ ₹{item.amount}</span>\n                          </div>\n                        ))}\n\n                      <div className=\"flex justify-between items-center p-2 bg-green-100 rounded font-semibold mt-2\">\n                        <span>Total Allowances</span>\n                        <span className=\"text-green-700\">\n                          + ₹{allDedfinalemployeeList\n                            .filter(item => item?.type?.toLowerCase() === 'allowance')\n                            .reduce((sum, item) => sum + (parseFloat(item.amount) || 0), 0)\n                            .toLocaleString('en-IN')}\n                        </span>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"text-gray-500 bg-green-50 p-2 rounded text-center\">\n                      No allowances this period\n                    </div>\n                  )}\n                </div>\n\n                {/* Deductions Section */}\n                <div className=\"p-4\">\n                  <h3 className=\"text-md font-semibold text-red-700 mb-3 flex items-center gap-2\">\n                    <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M20 12H4\" />\n                    </svg>\n                    Deductions\n                  </h3>\n\n                  {allDedfinalemployeeList?.filter(item => item?.type?.toLowerCase() === 'deduction')?.length > 0 ? (\n                    <div className=\"space-y-2\">\n                      {allDedfinalemployeeList\n                        .filter(item => item?.type?.toLowerCase() === 'deduction')\n                        .map((item, idx) => (\n                          <div key={`deduction-${idx}`} className=\"flex justify-between items-center p-2 bg-red-50 rounded border border-red-100\">\n                            <span className=\"font-medium text-gray-700\">{item.name}</span>\n                            <span className=\"font-semibold text-red-600\">- ₹{item.amount}</span>\n                          </div>\n                        ))}\n\n                      <div className=\"flex justify-between items-center p-2 bg-red-100 rounded font-semibold mt-2\">\n                        <span>Total Deductions</span>\n                        <span className=\"text-red-700\">\n                          - ₹{allDedfinalemployeeList\n                            .filter(item => item?.type?.toLowerCase() === 'deduction')\n                            .reduce((sum, item) => sum + (parseFloat(item.amount) || 0), 0)\n                            .toLocaleString('en-IN')}\n                        </span>\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"text-gray-500 bg-red-50 p-2 rounded text-center\">\n                      No deductions this period\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              {/* Net Salary Calculation */}\n              <div className=\"p-4 border-t border-gray-200 bg-gray-50\">\n                <div className=\"max-w-md mx-auto\">\n                  <h3 className=\"text-md font-semibold text-center mb-3 text-gray-700\">Salary Calculation</h3>\n\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between\">\n                      <span>Basic Salary:</span>\n                      <span className=\"font-medium\">₹{standardPayrollDetailsData?.basicSalary?.toLocaleString('en-IN') || '0'}</span>\n                    </div>\n\n                    <div className=\"flex justify-between text-green-600\">\n                      <span>Total Allowances:</span>\n                      <span>\n                        + ₹{allDedfinalemployeeList\n                          .filter(item => item?.type?.toLowerCase() === 'allowance')\n                          .reduce((sum, item) => sum + (parseFloat(item.amount) || 0), 0)\n                          .toLocaleString('en-IN')}\n                      </span>\n                    </div>\n\n                    <div className=\"flex justify-between text-red-600\">\n                      <span>Total Deductions:</span>\n                      <span>\n                        - ₹{allDedfinalemployeeList\n                          .filter(item => item?.type?.toLowerCase() === 'deduction')\n                          .reduce((sum, item) => sum + (parseFloat(item.amount) || 0), 0)\n                          .toLocaleString('en-IN')}\n                      </span>\n                    </div>\n\n                    <div className=\"border-t border-gray-300 my-2\"></div>\n\n                    <div className=\"flex justify-between text-lg font-bold text-header\">\n                      <span>Net Salary Payable:</span>\n                      <span>\n                        ₹{(parseFloat(standardPayrollDetailsData?.basicSalary || 0) +\n                          (allDedfinalemployeeList\n                            .filter(item => item?.type?.toLowerCase() === 'allowance')\n                            .reduce((sum, item) => sum + (parseFloat(item.amount) || 0), 0)) -\n                          (allDedfinalemployeeList\n                            .filter(item => item?.type?.toLowerCase() === 'deduction')\n                            .reduce((sum, item) => sum + (parseFloat(item.amount) || 0), 0))\n                        ).toLocaleString('en-IN')}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default ViewStandardpayroll;\n"],"names":["ViewStandardpayroll","_standardPayrollDetai3","_standardPayrollDetai4","_standardPayrollDetai5","_standardPayrollDetai6","_allDedfinalemployeeL","_allDedfinalemployeeL2","_standardPayrollDetai7","register","handleSubmit","control","reset","watch","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","standardPayrollIdEnc","useParams","standardPayrollId","decrypt","standardPayrollDetailsData","useSelector","state","standardPayroll","allowanceListData","loading","allowanceLoading","allowance","deductionsListData","deductionLoading","deductions","isDataFetched","setIsDataFetched","useState","allDedfinalemployeeList","setAllDedFinalEmployeeList","fields","allowanceDetails","append","appendAllowance","remove","removeAllowance","useFieldArray","name","deductionDetails","appendDeduction","removeDeduction","deductionsListDetails","useWatch","defaultValue","allowanceListDetails","useEffect","standardPayrollDetails","_id","resetStandardPayrollState","AllDed","basicSalary","Number","Array","isArray","forEach","all","allId","allowanceItem","find","item","allName","allIsPercentage","isPercentage","amount","calculatedAmounted","push","type","ded","dedId","deduction","deductionItem","dedName","dedIsPercentage","standardPayrollLoading","companyId","branchId","employeName","allowanceListSearch","directorId","then","data","_standardPayrollDetai","error","allowances","newAllowance","allowanceId","value","deductionsListSearch","_standardPayrollDetai2","newDeduction","deductionId","Option","Select","_jsx","GlobalLayout","children","className","autoComplete","onSubmit","_data$allowanceDetail","_data$deductionDetail","finalPayload","employeId","map","_allowanceListData$fi","_deductionsListData$f","standardPayrollUpdate","_jsxs","profileImage","src","concat","process","alt","fullName","charAt","toUpperCase","toLocaleString","baseSalary","ctc","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","filter","_item$type","toLowerCase","length","_item$type2","idx","_item$type3","reduce","sum","parseFloat","_item$type4","_item$type5","_item$type6","_item$type7","_item$type8","_item$type9","_item$type0"],"sourceRoot":""}