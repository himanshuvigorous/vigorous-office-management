{"version":3,"file":"static/js/3578.18540559.chunk.js","mappings":"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","sources":["pages/global/other/wfhManager/UpdatewfhManager.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { decrypt } from \"../../../../config/Encryption\";\n\nimport { Select } from \"antd\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { wfhManagerDetails, wfhManagerUpdate } from \"./wfhManagerfeature/_wfhManager_reducers\";\n\n\n\n\nconst UpdatewfhManager = () => {\n  const {  loading:wfhManagerLoading } = useSelector(\n    (state) => state.wfhManager\n  );\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\nconst {wfhManagerIdEnc} = useParams();\nconst wfhManagerId = decrypt(wfhManagerIdEnc);\nconst {wfhManagerDetailsData} = useSelector((state) => state.wfhManager);\n \n\n\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const isPercentage = useWatch({\n    control,\n    name: \"isPercentage\",\n    defaultValue: \"\",\n  });\n\nuseEffect(()=>{\nif(wfhManagerId){\n  dispatch(wfhManagerDetails({\n    _id:wfhManagerId\n  }));\n}\n},[wfhManagerId])\n\n\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: wfhManagerId,\n      companyId: wfhManagerDetailsData.companyId,\n      directorId:wfhManagerDetailsData?.directorId,\n      branchId: wfhManagerDetailsData.branchId,\n      name: data?.wfhManagerName,\n      // \"allowedDays\": data?.allowedDays,\n    \"perdaySalaryPercent\": data?.perdaySalaryPercent,\n      status:data.status==='true'?true :data.status==='false'?false:''\n    };\n    dispatch(wfhManagerUpdate(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  useEffect(()=>{\nif(wfhManagerDetailsData){\nsetValue(\"wfhManagerName\", wfhManagerDetailsData?.name);\n// setValue(\"allowedDays\", wfhManagerDetailsData?.allowedDays);\nsetValue(\"perdaySalaryPercent\", wfhManagerDetailsData?.perdaySalaryPercent);\nsetValue(\"status\",wfhManagerDetailsData?.status===true ? 'true':wfhManagerDetailsData?.status===false ? 'false' : '')\n}\n  },[wfhManagerDetailsData])\n\n\n  \n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Name <span className=\"text-red-600\"> *</span></label>\n              <input\n                type=\"text\"\n                {...register(\"wfhManagerName\", {\n                  required: \"WFH Name  is required\",\n                })}\n                className={`${inputClassName} ${errors.wfhManagerName ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter WFH Name\"\n              />\n              {errors.wfhManagerName && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.wfhManagerName.message}\n                </p>\n              )}\n            </div>\n             {/* <div className=\"\">\n                            <label className={`${inputLabelClassName}`}>Maximum Allowed Days  <span className=\"text-red-600\">*</span></label>\n                            <input\n                              type=\"number\"\n                              {...register(\"allowedDays\", {\n                                required: \"Maximum Days  is required\",\n                               \n                                \n                              })}\n                              className={`${inputClassName} ${errors.allowedDays ? \"border-[1px] \" : \"border-gray-300\"}`}\n                              placeholder=\"Enter Maximum Days \"\n                            />\n                            {errors.allowedDays && (\n                              <p className=\"text-red-500 text-sm\">{errors.allowedDays.message}</p>\n                            )}\n                          </div> */}\n            <div className=\"\">\n  <label className={`${inputLabelClassName}`}>\n    Perday Salary Percent <span className=\"text-red-600\">*</span>\n  </label>\n  \n  <input\n    type=\"number\"\n    step=\"0.01\"\n    {...register(\"perdaySalaryPercent\", {\n      required: \"Perday Salary Percent is required\",\n      min: {\n        value: 0,\n        message: \"Percentage must be at least 0%\",\n      },\n      max: {\n        value: 100,\n        message: \"Percentage cannot exceed 100%\",\n      },\n    })}\n    className={`${inputClassName} ${errors.perdaySalaryPercent ? \"border-[1px] border-red-500\" : \"border-gray-300\"}`}\n    placeholder=\"Enter Perday Salary Percent\"\n  />\n\n  {errors.perdaySalaryPercent && (\n    <p className=\"text-red-500 text-sm\">{errors.perdaySalaryPercent.message}</p>\n  )}\n</div>\n\n\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Status <span className=\"text-red-600\">*</span>\n              </label>\n           \n                  <Controller\n                      name=\"status\"\n                      control={control}\n                      rules={{\n                        required:'status is required'\n                      }}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          className={` w-32 ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n                \n                          placeholder=\"Select Status\"\n                          showSearch\n\n                        >\n                          <Select.Option value=\"\">Select Status</Select.Option>\n                       \n                       \n                            <Select.Option value=\"true\" > Active  </Select.Option>\n                             <Select.Option value=\"false\" > InActive  </Select.Option>\n                           \n                        </Select>\n                      )}\n                    />\n              {errors.status && (\n                <p className=\"text-red-500 text-sm\">{errors.status.message}</p>\n              )}\n              </div>\n            </div>\n\n          <div className=\"flex justify-end\">\n          <button\n              type=\"submit\"\n              disabled={wfhManagerLoading}\n              className={`${wfhManagerLoading ? 'bg-gray-400': 'bg-header' } text-white p-2 px-4 mt-3 rounded`}\n            >\n            {wfhManagerLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default UpdatewfhManager;\n"],"names":["UpdatewfhManager","loading","wfhManagerLoading","useSelector","state","wfhManager","register","handleSubmit","control","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","wfhManagerIdEnc","useParams","wfhManagerId","decrypt","wfhManagerDetailsData","JSON","parse","localStorage","getItem","concat","domainName","useWatch","name","defaultValue","useEffect","wfhManagerDetails","_id","perdaySalaryPercent","status","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","directorId","branchId","wfhManagerName","wfhManagerUpdate","then","error","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","step","min","value","max","Controller","rules","render","_ref","field","Select","inputAntdSelectClassName","PDPlan","showSearch","Option","disabled","Loader"],"sourceRoot":""}