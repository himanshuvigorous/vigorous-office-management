{"version":3,"file":"static/js/3769.b42fc6cf.chunk.js","mappings":"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","sources":["pages/clientNotification/NotificationList.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { useForm, useWatch } from \"react-hook-form\";\nimport { deleteNotification, getNotificationList, notificationSearch } from \"./notificationFeatures/_notification_reducers\"\nimport { companySearch } from \"../company/companyManagement/companyFeatures/_company_reducers\"\nimport { domainName, inputClassName, inputClassNameSearch, inputLabelClassName } from \"../../constents/global\"\nimport { FaPlus } from \"react-icons/fa\"\nimport GlobalLayout from \"../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { encrypt } from \"../../config/Encryption\";\nimport CustomPagination from \"../../component/CustomPagination/CustomPagination\";\nimport getUserIds from \"../../constents/getUserIds\";\nimport { Tooltip } from \"antd\";\n\nfunction NotificationList() {\n    const { register, setValue, formState: { errors }, control } = useForm();\n    const {\n        userCompanyId,\n        userDirectorId,\n        userBranchId,\n        userEmployeId,\n        userDepartmentId,\n        userDesignationId,\n        userType\n    } = getUserIds();\n    const { companyList } = useSelector((state) => state.company);\n    const { notificationList, totalNotificationCount } = useSelector(state => state.notification);\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const companyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: userCompanyId,\n    });\n    const branchId = useWatch({\n        control,\n        name: \"PDBranchId\",\n        defaultValue: userBranchId,\n    });\n    const notificationType = useWatch({\n        control,\n        name: \"notificationType\",\n        defaultValue: userBranchId,\n    });\n    useEffect(() => {\n        if (userType === \"admin\") {\n            dispatch(companySearch({\n                text: \"\",\n                sort: true,\n                status: true,\n                isPagination: false,\n            }));\n        }\n    }, []);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const limit = 10;\n\n    useEffect(() => {\n        fetchNotificationList();\n    }, [currentPage])\n\n    const fetchNotificationList = () => {\n        const reqListData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                companyId: companyId,\n                branchId: branchId,\n                \"directorId\": \"\",\n                text: \"\",\n                sort: true,\n                status: \"\",\n                isPagination: true,\n            }\n        }\n        dispatch(getNotificationList(reqListData));\n    }\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteNotification(reqData)).then((data) => {\n                    !data.error && getNotificationList();\n                })\n            }\n        });\n    };\n\n    const handleOnChange = async (event) => {\n        const searchValue = event.target.value;\n        setValue(\"notificationType\", searchValue);\n\n        if (searchValue.trim().length > 0) {\n            const reqListData = {\n                page: currentPage,\n                limit: limit,\n                reqPayload: {\n                    companyId: companyId,\n                    branchId: branchId,\n                    \"directorId\": \"\",\n                    text: \"\",\n                    sort: true,\n                    status: \"\",\n                    isPagination: false,\n                    notificationType: searchValue\n                }\n            }\n            dispatch(getNotificationList(reqListData));\n        }\n    };\n\n\n    return (\n        <GlobalLayout>\n            {/* <h2 className=\"text-2xl font-bold col-span-2\">\n                User Designations\n            </h2> */}\n            <div className=''>\n                {/* <div class=\"sm:flex justify-between items-center py-1 lg:space-y-0 space-y-2 overflow-y-auto\">\n                    <div className=\"relative flex items-center\">\n                        <FaSearch className=\"absolute left-3 text-gray-400\" size={14} />\n                        <input\n                            type=\"text\"\n                            {...register(\"search\")}\n                            onChange={handleOnChange}\n                            className=\"pl-10 pr-4 py-2 text-left rounded-md text-[12px] border border-gray-300 bg-white\"\n                            placeholder=\"Search Anything..\"\n                        />\n                    </div>\n                    <LoginDetails />\n                </div> */}\n\n                <div className='flex justify-between items-center md:space-y-0 space-y-2 py-1'>\n                    <div className=\"flex justify-start\">\n                        <div className=\"w-fit\">\n                            <label className={`${inputLabelClassName}`}>\n                                Type<span className=\"text-red-600\">*</span>\n                            </label>\n                            <select\n                                {...register(\"notificationType\", {\n                                    required: \"Type is required\",\n                                })}\n                                className={` ${inputClassName} ${errors.notificationType\n                                    ? \"border-[1px] \"\n                                    : \"border-gray-300\"\n                                    }`}\n                                onChange={handleOnChange}\n                            >\n                                <option className=\"\" value=\"\">Select Type</option>\n                                <option value=\"group\">Client Group</option>\n                                <option value=\"client\">Client Wise</option>\n                                <option value=\"department\">Department Wise</option>\n                                <option value=\"other\">other</option>\n                            </select>\n                        </div>\n                        {userType === \"admin\" && (\n                            <div className=\"\">\n                                <select\n                                    {...register(\"PDCompanyId\", {\n                                        required: \"company is required\",\n                                    })}\n                                    className={` ${inputClassNameSearch} ${errors.PDCompanyId ? \"border-[1px] \" : \"border-gray-300\"\n                                        }`}\n                                >\n                                    <option className=\"\" value=\"\">\n                                        Select Comapany\n                                    </option>\n                                    {companyList?.map((type) => (\n                                        <option value={type?._id}>{type?.fullName}</option>\n                                    ))}\n                                </select>\n                                {errors.PDCompanyId && (\n                                    <p className=\"text-red-500 text-sm\">\n                                        {errors.PDCompanyId.message}\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                    <button onClick={() => { navigate(\"/admin/notification/create\") }} className='bg-header p-2 rounded-md flex justify-center items-center space-x-2 text-white'>\n                        <FaPlus />\n                        <span className='text-[12px] tracking-wide'>Add Notification</span>\n                    </button>\n                </div>\n            </div>\n            <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n                <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                    <thead className=''>\n                        <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                            <th className='border-none p-2 whitespace-nowrap w-[15%]'>\n                                SNo.\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Type\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Subject\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap w-[30%]'>\n                                Message\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Status\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap w-[15%]'>\n                                Action\n                            </th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {notificationList && notificationList?.length > 0 ?\n                            notificationList?.map((element, index) => (\n                                <tr key={index} className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151] text-[14px]`}>\n                                    <td className='whitespace-nowrap border-none p-2 '>\n                                        {index + 1 + ((currentPage - 1) * limit)}\n                                    </td>\n                                    <td className='whitespace-nowrap border-none p-2 '>{element?.notificationType ?? \"-\"}</td>\n                                    <td className='whitespace-nowrap border-none p-2 '>{element?.subject ?? \"-\"}</td>\n                                    <td className='whitespace-nowrap border-none p-2 '>{element?.message ?? \"-\"}</td>\n                                    <td className='whitespace-nowrap border-none p-2 '>\n                                        <span className={`${element?.status ? 'bg-[#E0FFBE] border-green-500' : 'bg-red-200 border-red-500'\n                                            } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}>\n                                            {element?.status ? 'Active' : 'Inactive' ?? \"-\"}\n                                        </span>\n                                    </td>\n                                    <td className='whitespace-nowrap border-none p-2'>\n                                        <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                            {/* <button onClick={() => { navigate(`/admin/notification/edit/${encrypt(element?._id)}`) }} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                <FaPenToSquare className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} />\n                                            </button> */}\n                                            <Tooltip placement=\"topLeft\"  title='Delete'>\n                                            <button onClick={() => handleDelete(element?._id)} className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                <RiDeleteBin5Line className='text-red-600 hover:text-red-500' size={16} />\n                                            </button>\n                                            </Tooltip>\n                                        </span>\n                                    </td>\n                                </tr>\n                            ))\n                            : (<tr className=\"bg-white bg-opacity-5 \" >\n                                <td colSpan={4} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">Record Not Found</td>\n                            </tr>)}\n                    </tbody>\n                </table>\n            </div>\n            {notificationList?.length > 0 &&\n                <CustomPagination\n                    totalCount={totalNotificationCount}\n                    pageSize={limit}\n                    currentPage={currentPage}\n                    onChange={onPaginationChange}\n                />}\n        </GlobalLayout>\n    )\n}\nexport default NotificationList"],"names":["register","setValue","formState","errors","control","useForm","userCompanyId","userDirectorId","userBranchId","userEmployeId","userDepartmentId","userDesignationId","userType","getUserIds","companyList","useSelector","state","company","notificationList","totalNotificationCount","notification","navigate","useNavigate","dispatch","useDispatch","companyId","useWatch","name","defaultValue","branchId","useEffect","companySearch","text","sort","status","isPagination","currentPage","setCurrentPage","useState","fetchNotificationList","reqListData","page","limit","reqPayload","getNotificationList","_jsxs","GlobalLayout","children","_jsx","className","concat","inputLabelClassName","_objectSpread","required","inputClassName","notificationType","onChange","async","searchValue","event","target","value","trim","length","inputClassNameSearch","PDCompanyId","map","type","_id","fullName","message","onClick","FaPlus","element","index","_element$notification","_element$subject","_element$message","_Inactive","subject","Tooltip","placement","title","id","reqData","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteNotification","data","error","handleDelete","RiDeleteBin5Line","size","colSpan","CustomPagination","totalCount","pageSize"],"sourceRoot":""}