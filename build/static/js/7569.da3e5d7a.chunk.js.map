{"version":3,"file":"static/js/7569.da3e5d7a.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/clientReports/ClientReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  inputAntdSelectClassName,\n  inputAntdSelectClassNameFilter,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Select, Tooltip } from \"antd\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { clientReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport { Option } from \"antd/es/mentions\";\nimport { designationSearch } from \"../../../designation/designationFeatures/_designation_reducers\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { clientGrpSearch, getClientGroupList } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport * as ExcelJS from 'exceljs';\nimport jsPDF from \"jspdf\";\nimport { Group } from \"antd/es/avatar\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\n\nfunction ClientReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { clientReportList, totalclientReportCount, clientReportFunc_loading } = useSelector(\n    (state) => state.reports\n  );\n  const { clientGroupList, totalClientGroupCount, loading } = useSelector(state => state.clientGroup)\n  const { employeList } = useSelector((state) => state.employe);\n\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const pageSize = 10;\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n  const { designationList } = useSelector((state) => state.designation);\n  const { departmentListData } = useSelector((state) => state.department);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const workType = useWatch({\n    control,\n    name: \"workType\",\n    defaultValue: \"\",\n  });\n  const shift = useWatch({\n    control,\n    name: \"shift\",\n    defaultValue: \"\",\n  });\n  const daterange = useWatch({\n    control,\n    name: \"daterange\",\n    defaultValue: \"\",\n  });\n  const employeeId = useWatch({\n    control,\n    name: \"employeeId\",\n    defaultValue: \"\",\n  });\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n  });\n  const isTL = useWatch({\n    control,\n    name: \"isTL\",\n  });\n  const isHR = useWatch({\n    control,\n    name: \"isHR\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n  });\n\n  const clientGroup = useWatch({\n    control,\n    name: \"clientGroup\",\n  });\n\n\n\n  useEffect(() => {\n    fetchClientGroupList()\n  }, [currentPage, BranchId, CompanyId])\n\n\n  const fetchClientGroupList = () => {\n    const reqData = {\n\n\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          :\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.branchId,\n      \"directorId\": \"\",\n      \"text\": \"\",\n      \"sort\": true,\n      \"status\": true,\n      \"isPagination\": false,\n\n    }\n    dispatch(clientGrpSearch(reqData))\n  }\n\n\n \n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n  useEffect(() => {\n    if (CompanyId) {\n      setValue(\"PDBranchId\", \"\");\n    }\n  }, [CompanyId]);\n\n  const handleDepartmentChange = (event) => {\n    setValue(\"PDDepartmentId\", event);\n    setValue(\"PDDesignationId\", \"\");\n    dispatch(\n      designationSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        departmentId: event,\n        companyId: userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      })\n    );\n  };\n\n  const handleFocusDepartment = () => {\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId: userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n      })\n    );\n  };\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    fetchClientReport(debouncedFilterText);\n  }, [\n    currentPage,\n    debouncedFilterText,\n    CompanyId,\n    BranchId,\n    searchText,\n    Status,\n    workType,\n    shift,\n    daterange,\n    employeeId,\n    startDate,\n    isTL,\n    isHR,\n    clientGroup,\n    department,\n  ]);\n\n  // useEffect(() => {\n  //     fetchEmployeListData();\n  // }, [\n\n  // ]);\n\n  // const fetchEmployeListData = () => {\n  //     const reqPayload = {\n  //       text: \"\",\n  //       status: true,\n  //       sort: true,\n  //       isTL: \"\",\n  //       isHR: \"\",\n  //       isPagination: true,\n  //       departmentId: \"\",\n  //       designationId: \"\",\n  //       companyId: userInfoglobal?.companyId,\n  //       branchId: userInfoglobal?.branchId,\n  //     };\n\n  //     dispatch(employeSearch(reqPayload));\n  //   };\n\n  const fetchClientReport = (debouncedFilterText) => {\n    let reqData = {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        // \"companyId\": \"\",\n        // \"directorId\": \"\",\n        // \"branchId\": \"\",\n        // \"organizationId\": \"\",\n        // \"departmentId\": \"\",\n        // \"industryId\": \"\",\n        // \"groupId\": \"\",\n        // \"taskId\": \"\",\n        // \"text\": \"\",\n        // \"sort\": true,\n        // \"status\": \"\",\n        // \"isPagination\": true\n\n        text: \"\",\n        isTL: isTL === \"YES\" ? true : isTL === \"NO\" ? false : \"\",\n        isManager: \"\",\n        isReceptionist: \"\",\n        isHR: isHR === \"YES\" ? true : isHR === \"NO\" ? false : \"\",\n        status: Status === \"Active\" ? true : Status === \"InActive\" ? false : \"\",\n        sort: true,\n        isPagination: true,\n\n        directorId: \"\",\n\n        departmentId: department,\n        groupId: clientGroup,\n        reporting_to: \"\",\n        roleKey: \"\",\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n      },\n    };\n    dispatch(clientReportFunc(reqData));\n  };\n\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId]);\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  const onChange = (e) => {\n    ;\n    setSearchText(e);\n  };\n\n  const [taskData, setTaskData] = useState(\"\");\n  const [viewTask, setViewTask] = useState(false);\n  const handleTaskView = (data) => {\n    setTaskData(data);\n\n    setViewTask((prev) => !prev);\n  };\n\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('API Data');\n    const apiData = clientReportList?.map((element) => {\n      return {\n        name: element?.fullName,\n        group: element?.clientGroupData?.fullName || \"-\",\n        email: element?.email,\n        mobileNo: `${element?.mobile?.code || \"-\"}  ${element?.mobile?.number || \"-\"}`,\n        gstNumber: element?.clientProfile?.GSTNumber,\n        panNumber: element?.clientProfile?.penNumber,\n        aadharNumber: element?.clientProfile?.adharNumber,\n        dateOfJoining: `${dayjs(element.clientProfile.dateOfJoining).format(\"YYYY-MM-DD\")}`,\n        // taskName:element?.hasTask?.taskName,\n        // fee:element?.hasTask?.fee,\n        // dueDate:dayjs(element?.hasTask?.dueDate).format(\"YYYY-MM-DD\") || \"-\",\n        // financialYear:element?.hasTask?.financialYear || \"-\",\n        // monthName:element?.hasTask?.monthName || \"-\",\n        // monthQuaters:element?.hasTask?.monthQuaters || \"-\",\n        // type:element?.hasTask?.type || \"-\" || \"-\",\n        // taskStatus:element?.hasTask?.status || \"-\" || \"-\",\n\n\n\n        status: element?.status ? \"Active\" : \"Inactive\" ?? \"-\"\n      }\n    })\n\n\n    worksheet.columns = [\n      { header: 'Client Name', key: 'name', width: 50 },\n      { header: 'Group', key: 'group', width: 30 },\n      { header: 'Email', key: 'email', width: 50 },\n      { header: 'Mobile No.', key: 'mobileNo', width: 50 },\n      { header: 'Gst Number', key: 'gstNumber', width: 50 },\n      { header: 'Pan Number', key: 'panNumber', width: 50 },\n      { header: 'Aadhar Number', key: 'aadharNumber', width: 50 },\n      { header: 'dateOfJoining', key: 'dateOfJoining', width: 50 },\n      // { header: 'Task Name', key: 'taskName', width: 50 },\n      // { header: 'Fees', key: 'fee', width: 50 },\n      // { header: 'Due Date', key: 'dueDate', width: 50 },\n      // { header: 'financialYear', key: 'financialYear', width: 50 },\n      // { header: 'Month Name', key: 'monthName', width: 50 },\n      // { header: 'monthQuaters', key: 'monthQuaters', width: 50 },\n      // { header: 'Type', key: 'type', width: 50 },\n      // { header: 'Task Status', key: 'taskStatus', width: 50 },\n      { header: 'status', key: 'status', width: 50 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: 'pattern',\n        pattern: 'solid',\n        fgColor: { argb: 'FFB6D7A8' }, // Light green\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: 'middle', horizontal: 'center' };\n      cell.border = {\n        top: { style: 'thin' },\n        left: { style: 'thin' },\n        bottom: { style: 'thin' },\n        right: { style: 'thin' },\n      };\n    });\n\n    worksheet.autoFilter = {\n      from: 'A1',\n      to: 'I1',\n    };\n\n    apiData.forEach(item => {\n      worksheet.addRow(item);\n    });\n\n\n    workbook.xlsx.writeBuffer().then(buffer => {\n      const blob = new Blob([buffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'api_data.xlsx';\n      link.click();\n    });\n  };\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <div className=\"xl:flex justify-between items-center space-y-1.5\">\n            <div className=\"grid 2xl:grid-cols-5 lg:grid-cols-3 md:grid-cols-3 sm:grid-cols-3 grid-cols-1 gap-2 flex-wrap text-[14px] rounded-md\">\n              {userInfoglobal?.userType === \"admin\" && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDCompanyId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Select Company\"\n                        showSearch\n                      >\n                        <Select.Option value=\"\">Select Company</Select.Option>\n                        {companyList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDCompanyId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDCompanyId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n              {(userInfoglobal?.userType === \"admin\" ||\n                userInfoglobal?.userType === \"company\" ||\n                userInfoglobal?.userType === \"companyDirector\") && (\n                  <div className=\"\">\n                    <Controller\n                      name=\"PDBranchId\"\n                      control={control}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                            }`}\n                          placeholder=\"Select Branch\"\n                          showSearch\n                          filterOption={(input, option) =>\n                            String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                        >\n                          <Select.Option value=\"\">Select Branch</Select.Option>\n                          {branchList?.map((element) => (\n                            <Select.Option value={element?._id}>\n                              {\" \"}\n                              {element?.fullName}{\" \"}\n                            </Select.Option>\n                          ))}\n                        </Select>\n                      )}\n                    />\n                    {errors.PDBranchId && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.PDBranchId.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n\n              <div className=\"\">\n                <Controller\n                  name=\"PDDepartmentId\"\n                  control={control}\n                  rules={{ required: \"Department is required\" }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${errors.PDDepartmentId\n                        ? \"border-[1px] \"\n                        : \"border-gray-300\"\n                        }`}\n                      onChange={(value) => {\n                        field.onChange(value);\n                        handleDepartmentChange(value); // Custom handler if needed\n                      }}\n                      onFocus={handleFocusDepartment}\n                      placeholder=\"Select Department\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Option value=\"\">Select Department</Option>\n                      {departmentListData?.map((element) => (\n                        <Option key={element?._id} value={element?._id}>\n                          {element?.name}\n                        </Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.employeeId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.employeeId.message}\n                  </p>\n                )}\n              </div>\n              <div className=\"\">\n                <Controller\n                  name=\"clientGroup\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select clientGroup\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Select.Option value=\"\">Select clientGroup</Select.Option>\n                      {clientGroupList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.fullName}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n\n              </div>\n              {/* <div>\n                                <Controller\n                                    name=\"status\"\n                                    control={control}\n                                    rules={{}}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                                                }`}\n                                            placeholder=\"Select Status\"\n                                            showSearch\n                                        >\n                                            <Select.Option value=\"\">Select Status</Select.Option>\n\n                                            <Select.Option value=\"Present\"> Present </Select.Option>\n                                            <Select.Option value=\"firstHalf\">\n                                                {\" \"}\n                                                First Half{\" \"}\n                                            </Select.Option>\n                                            <Select.Option value=\"secondHalf\">\n                                                {\" \"}\n                                                Second Half{\" \"}\n                                            </Select.Option>\n                                        </Select>\n                                    )}\n                                />\n                            </div> */}\n              {/* <div>\n                <Controller\n                  name=\"isTL\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${\n                        errors.shift ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                      placeholder=\"Select TL\"\n                    >\n                      <Select.Option value=\"\">Select TL</Select.Option>\n                      {[\"YES\", \"NO\"]?.map((type) => (\n                        <Select.Option key={type} value={type}>\n                          {type}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div> */}\n              {/* \n              <div>\n                <Controller\n                  name=\"isHR\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${\n                        errors.shift ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                      placeholder=\"Select HR\"\n                    >\n                      <Select.Option value=\"\">Select HR</Select.Option>\n                      {[\"YES\", \"NO\"]?.map((type) => (\n                        <Select.Option key={type} value={type}>\n                          {type}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div> */}\n              <div>\n                <Controller\n                  name=\"status\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${errors.shift ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select Status\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Select.Option value=\"\">Select Status</Select.Option>\n                      {[\"Active\", \"InActive\"]?.map((type) => (\n                        <Select.Option key={type} value={type}>\n                          {type}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>\n\n              {/* <div>\n                                <Controller\n                                    name=\"workType\"\n                                    control={control}\n\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={`${inputAntdSelectClassNameFilter} ${errors.workType ? '' : 'border-gray-300'}`}\n                                            placeholder=\"Select Work Type\"\n                                        >\n                                            <Select.Option value=\"\">Select Work Type</Select.Option>\n                                            {[\n                                                { key: \"work_from_office\", value: \"Work From Office\" },\n                                                { key: \"work_from_home\", value: \"Work From Home\" },\n                                                { key: \"hybrid\", value: \"Hybrid\" },\n                                                { key: \"remote\", value: \"Remote\" }\n                                            ]?.map((type) => (\n                                                <Select.Option key={type.key} value={type.key}>\n                                                    {type.value}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    )}\n                                />\n                            </div> */}\n              {/* <div>\n                                <Controller\n                                    name=\"daterange\"\n                                    control={control}\n\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={`${inputAntdSelectClassNameFilter} ${errors.daterange ? '' : 'border-gray-300'}`}\n                                            placeholder=\"Select Date Range\"\n                                        >\n                                            <Select.Option value=\"\">Select Date Range</Select.Option>\n                                            {[\n                                                { key: \"thisWeek\", value: \"This Week\" },\n                                                { key: \"lastWeek\", value: \"Last Week\" },\n                                                { key: \"lastMonth\", value: \"Last Month\" },\n                                                { key: \"last3Months\", value: \"Last 3 Months\" },\n                                                { key: \"last6Months\", value: \"last 6 Months\" },\n                                                { key: \"lastYear\", value: \"Last Year\" }\n                                            ]?.map((type) => (\n                                                <Select.Option key={type.key} value={type.key}>\n                                                    {type.value}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    )}\n                                />\n                            </div> */}\n              <div>\n                {/* <Controller\n                    name=\"startDate\"\n                    control={control}\n        \n                    render={({ field }) => (\n                      <CustomDatePicker defaultValue={dayjs().subtract(1, 'month')} size={\"middle\"} field={field} errors={errors} />\n                    )}\n                  /> */}\n              </div>\n\n              {/* <div>\n                  <Controller\n                    name=\"endDate\"\n                    control={control}\n        \n                    render={({ field }) => (\n                      <CustomDatePicker defaultValue={dayjs()} size={\"middle\"} field={field} errors={errors} />\n                    )}\n                  />\n                </div> */}\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  setValue(\"PDBranchId\", \"\");\n                  setValue(\"PdCompanyId\", \"\");\n                  setValue(\"isTL\", \"\");\n                  setValue(\"isHR\", \"\");\n                  setValue(\"clientGroup\", \"\");\n                  setValue(\"PDDepartmentId\", \"\");\n                  setValue(\"status\", \"\");\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Client Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Group\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Email</th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">User Name</th> */}\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Office Email\n                </th> */}\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Mobile No.\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Department\n                </th> */}\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Designation\n                </th> */}\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  <div className=\"flex gap-1\">Role Key</div>\n                </th> */}\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  <div className=\"flex gap-1\">Gst Number</div>\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Pan Number\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Aadhar Number</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  dateOfJoining\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">createdAt</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">createdBy</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Task Details\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Status</th>\n              </tr>\n            </thead>\n            {clientReportFunc_loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {clientReportList && clientReportList.length > 0 ? (\n                  clientReportList.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n              \n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {index + 1}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.fullName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientGroupData?.fullName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.email || \"-\"}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.userName || \"-\"}\n                    </td> */}\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.officeEmail || \"-\"}\n                    </td> */}\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.mobile?.code || \"-\"}{\" \"}\n                        {element?.mobile?.number || \"-\"}\n                      </td>\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.departmentData?.name || \"-\"}\n                    </td> */}\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.designationData?.name || \"-\"}\n                    </td> */}\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.designationData?.roleKey || \"-\"}\n                    </td> */}\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientProfile?.GSTNumber || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientProfile?.penNumber || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientProfile?.adharNumber || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientProfile?.dateOfJoining\n                          ? dayjs(element.clientProfile.dateOfJoining).format(\n                            \"DD-MM-YYYY hh:mm a\"\n                          )\n                          : \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.createdBy || \"-\"}\n                      </td>\n                      <td className=\"flex justify-center  items-center\">\n                        <Tooltip placement=\"topLeft\"  title={\"View Task Details\"}>\n                          <button\n                            onClick={() => {\n                              handleTaskView(element);\n                            }}\n                            className=\"px-2 py-2 text-xs rounded-md bg-transparent text-header border border-muted\"\n                            type=\"button\"\n                          >\n                            <FaEye\n                              className={`${\" hover:text-[#337ab7] text-[#3c8dbc]\"}`}\n                            />\n                          </button>\n                        </Tooltip>\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        <span\n                          className={`${element?.status\n                            ? \"bg-[#E0FFBE] border-green-500\"\n                            : \"bg-red-200 border-red-500\"\n                            } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                        >\n                          {element?.status ? \"Active\" : \"Inactive\" ?? \"-\"}\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>\n\n        {viewTask && (\n          <div\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1560] lg:p-20\"\n            onClick={handleTaskView}\n          >\n            <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl  m-2\" onClick={(e) => {\n              e.stopPropagation();\n\n            }} >\n              <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n                <thead>\n                  <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                    <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                      S.No.\n                    </th>\n\n                    <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                      Task Name\n                    </th>\n\n                    <th className=\"border-none p-2 whitespace-nowrap text-center\">Fees</th>\n                    {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">User Name</th> */}\n                    {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Office Email\n                </th> */}\n                    <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                      Due Date\n                    </th>\n                    {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Department\n                </th> */}\n                    {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Designation\n                </th> */}\n\n                    {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  <div className=\"flex gap-1\">Role Key</div>\n                </th> */}\n\n                    <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                      <div className=\"flex gap-1\">financialYear</div>\n                    </th>\n                    <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                      Month Name\n                    </th>\n                    <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                      monthQuaters\n                    </th>\n                    <th className=\"border-none p-2 whitespace-nowrap text-center\">Type</th>\n                    <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                      Status\n                    </th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {taskData?.hasTask && taskData?.hasTask?.length > 0 ? (\n                    taskData?.hasTask?.map((element, index) => (\n                      <tr\n                        className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                          } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                      >\n\n                        <td className=\"whitespace-nowrap text-center border-none p-2\">\n                          {index + 1}\n                        </td>\n\n                        <td className=\"whitespace-nowrap text-center border-none p-2\">\n                          {element?.taskName || \"-\"}\n                        </td>\n\n                        <td className=\"whitespace-nowrap text-center border-none p-2\">\n                          {element?.fee || \"-\"}\n                        </td>\n\n                        {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                      {element?.userName || \"-\"}\n                    </td> */}\n\n                        {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                      {element?.officeEmail || \"-\"}\n                    </td> */}\n                        <td className=\"whitespace-nowrap text-center border-none p-2\">\n                          {dayjs(element?.dueDate).format(\"DD-MM-YYYY hh:mm a\") || \"-\"}\n                        </td>\n                        {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                      {element?.departmentData?.name || \"-\"}\n                    </td> */}\n                        {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                      {element?.designationData?.name || \"-\"}\n                    </td> */}\n                        {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                      {element?.designationData?.roleKey || \"-\"}\n                    </td> */}\n\n                        <td className=\"whitespace-nowrap text-center border-none p-2\">\n                          {element?.financialYear || \"-\"}\n                        </td>\n\n                        <td className=\"whitespace-nowrap text-center border-none p-2\">\n                          {element?.monthName || \"-\"}\n                        </td>\n\n                        <td className=\"whitespace-nowrap text-center border-none p-2\">\n                          {element?.monthQuaters || \"-\"}\n                        </td>\n                        <td className=\"whitespace-nowrap text-center border-none p-2\">\n                          {element?.type || \"-\"}\n                        </td>\n\n                        <td className=\"whitespace-nowrap text-center border-none p-2\">\n                          <span\n                            className={`${element?.status === \"Completed\"\n                              ? \"bg-[#E0FFBE] border-green-500\"\n                              : \"bg-red-200 border-red-500\"\n                              } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                          >\n                            {element?.status === \"Completed\"\n                              ? \"Completed\"\n                              : \"Pending\" ?? \"-\"}\n                          </span>\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={15}\n                        className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n        <CustomPagination\n          totalCount={totalclientReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default ClientReport;\n"],"names":["_taskData$hasTask","_taskData$hasTask2","control","formState","errors","setValue","useForm","dispatch","useNavigate","useDispatch","clientReportList","totalclientReportCount","clientReportFunc_loading","useSelector","state","reports","clientGroupList","totalClientGroupCount","loading","clientGroup","employeList","employe","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","companyList","company","branchList","branch","designationList","designation","departmentListData","department","CompanyId","useWatch","name","defaultValue","BranchId","Status","workType","shift","daterange","employeeId","startDate","isTL","isHR","useEffect","fetchClientGroupList","reqData","companyId","userType","_id","branchId","clientGrpSearch","timer","setTimeout","clearTimeout","handleFocusDepartment","deptSearch","text","sort","status","isPagination","fetchClientReport","pageSize","reqPayload","isManager","isReceptionist","directorId","departmentId","groupId","reporting_to","roleKey","clientReportFunc","branchSearch","companySearch","taskData","setTaskData","viewTask","setViewTask","handleTaskView","data","prev","_jsx","GlobalLayout","onChange","e","children","_jsxs","className","Controller","render","_ref","field","Select","_objectSpread","inputAntdSelectClassNameFilter","PDPlan","placeholder","showSearch","Option","value","map","element","fullName","PDCompanyId","message","_ref2","filterOption","input","option","String","toLowerCase","includes","PDBranchId","rules","required","_ref3","PDDepartmentId","event","designationSearch","onFocus","_ref4","_ref5","_ref6","type","onClick","async","workbook","ExcelJS","worksheet","addWorksheet","apiData","_element$clientGroupD","_element$mobile","_element$mobile2","_element$clientProfil","_element$clientProfil2","_element$clientProfil3","_Inactive","group","clientGroupData","email","mobileNo","mobile","code","number","gstNumber","clientProfile","GSTNumber","panNumber","penNumber","aadharNumber","adharNumber","dateOfJoining","dayjs","format","columns","header","key","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","horizontal","border","top","style","left","bottom","right","autoFilter","from","to","forEach","item","addRow","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","length","index","_element$clientGroupD2","_element$mobile3","_element$mobile4","_element$clientProfil4","_element$clientProfil5","_element$clientProfil6","_element$clientProfil7","_Inactive2","createdAt","createdBy","Tooltip","placement","title","FaEye","stopPropagation","hasTask","_Pending","taskName","fee","dueDate","financialYear","monthName","monthQuaters","CustomPagination","totalCount","page"],"sourceRoot":""}