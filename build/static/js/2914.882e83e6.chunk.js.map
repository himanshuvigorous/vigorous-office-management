{"version":3,"file":"static/js/2914.882e83e6.chunk.js","mappings":"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","sources":["pages/hr/employeeSalary/employeePayrollModule/PayrollList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { getPayrollList } from \"./employeePayRollFeatures/_payroll_reducers\";\nimport { domainName, formatNumber } from \"../../../../constents/global\";\nimport moment from \"moment\";\nimport getUserIds from \"../../../../constents/getUserIds\";\nimport { getstandardPayrollList } from \"../StandardPayroll/standardPayrollfeature/_standardPayroll_reducers\";\nimport { Tooltip } from \"antd\";\nimport { encrypt } from \"../../../../config/Encryption\";\nimport { FaEye } from \"react-icons/fa\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\n\nfunction PayrollList() {\n  const { userCompanyId, userBranchId, userType, userEmployeId } = getUserIds();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { payrollRequestData, loading } = useSelector((state) => state.payrollReducer);\n  const { standardPayrollListData } = useSelector(\n    (state) => state.standardPayroll\n  );\n  const [activeTab, setActivetab] = useState(1)\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  useEffect(() => {\n  if(userInfoglobal?.userType === \"employee\"){  getPayrollFunc();\n    getchstandardPayrollData();}\n  }, []);\n\n  const getPayrollFunc = () => {\n    const data = {\n      currentPage: \"\",\n      pageSize: \"\",\n      reqData: {\n        companyId: userCompanyId,\n        branchId: userBranchId,\n        text: searchText,\n        sort: true,\n        status: 'Approved',\n        isPagination: false,\n        directorId: \"\",\n        employeId: userEmployeId,\n      },\n    };\n    dispatch(getPayrollList(data));\n  };\n  const getchstandardPayrollData = () => {\n    let reqData = {\n      currentPage: \"\",\n      pageSize: \"\",\n      reqPayload: {\n        text: searchText,\n        sort: true,\n        status: 'Active',\n        isPagination: false,\n        directorId: \"\",\n        companyId: userCompanyId,\n        branchId: userBranchId,\n        employeId: userEmployeId,\n      },\n    };\n    dispatch(getstandardPayrollList(reqData));\n  };\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n    if (userInfoglobal?.userType !== \"employee\") {\n      return (\n        <GlobalLayout>\n          <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n            <p className=\"text-center font-semibold\">\n              You are not an employee. This page is viewable for employees only.\n            </p>\n          </div>\n        </GlobalLayout>\n      )\n    }\n  return (\n    <GlobalLayout onChange={onChange}>\n      <>\n        <div className=\"flex justify-start items-center  my-1\">\n          <button\n            onClick={() => setActivetab(1)}\n            className={`${activeTab === 1 ? \"bg-header border-header text-white\" : \"text-black\"} px-3 py-2 border  rounded-l-md flex justify-center items-center space-x-2 `}\n          >\n            <span className=\"text-[12px]\">Standard payroll</span>\n          </button>\n          <button\n            onClick={() => setActivetab(2)}\n            className={`${activeTab === 2 ? \"bg-header border-header text-white\" : \"text-black\"} px-3 py-2 border  rounded-r-md flex justify-center items-center space-x-2 `}\n          >\n            <span className=\"text-[12px]\">Actual Payslip</span>\n          </button>\n        </div>\n        {activeTab === 1 && <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n          <thead>\n            <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n              <th className=\"border-none p-2 whitespace-nowrap w-[5%]\">\n                S.No.\n              </th>\n              <th className=\"border-none p-2 whitespace-nowrap\">Name</th>\n\n              <th className=\"border-none p-2 whitespace-nowrap\">\n                Created By\n              </th>\n              <th className=\"border-none p-2 whitespace-nowrap\">\n                Base Salary\n              </th>\n              <th className=\"border-none p-2 whitespace-nowrap\">\n                CTC\n              </th>\n              <th className=\"border-none p-2 whitespace-nowrap\">\n                Status\n              </th>\n\n            </tr>\n          </thead>\n          {loading ? <tr className=\"bg-white bg-opacity-5 \">\n            <td\n              colSpan={10}\n              className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n            >\n              <Loader2 />\n            </td>\n          </tr> :\n            <tbody>\n              {standardPayrollListData && standardPayrollListData.length > 0 ? (\n                standardPayrollListData.map((element, index) => (\n                  <tr\n                    className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                      } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                  >\n                    <td className=\"whitespace-nowrap border-none p-2\">\n                      {index + 1}\n                    </td>\n                    <td className=\"whitespace-nowrap border-none p-2\">\n                      {element.employeName}\n                    </td>\n\n                    <td className=\"whitespace-nowrap border-none p-2\">\n                      {element.createdBy}\n                    </td>\n                    <td className=\"whitespace-nowrap border-none p-2\">\n                      {element.baseSalary}\n                    </td>\n                    <td className=\"whitespace-nowrap border-none p-2\">\n                      {element.ctc}\n                    </td>\n\n                    <td className=\"whitespace-nowrap border-none p-2\">\n\n                      {element?.status}\n\n\n                    </td>\n\n                  </tr>\n                ))\n              ) : (\n                <tr className=\"bg-white bg-opacity-5\">\n                  <td\n                    colSpan={15}\n                    className=\"px-6 py-2 whitespace-nowrap font-[600] text-center text-sm text-gray-500\"\n                  >\n                    Record Not Found\n                  </td>\n                </tr>\n              )}\n            </tbody>}\n        </table>}\n        {activeTab === 2 && <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n            <thead className=\"\">\n              <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n                <th className=\"p-2 whitespace-nowrap w-[10%]\">Employee Name</th>\n                <th className=\"p-2 whitespace-nowrap\">Start date</th>\n                <th className=\"p-2 whitespace-nowrap\">End date</th>\n                <th className=\"p-2 whitespace-nowrap\">Basic Salary</th>\n                <th className=\"p-2 whitespace-nowrap\">Gross Salary</th>\n                <th className=\"p-2 whitespace-nowrap\">Net Salary</th>\n                <th className=\"p-2 whitespace-nowrap\">Status</th>\n                <th className=\"p-2 whitespace-nowrap\">Actions</th>\n              </tr>\n            </thead>\n            {loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {payrollRequestData && payrollRequestData.length > 0 ? (\n                  payrollRequestData.map((element, index) => (\n                    <tr\n                      key={element?._id}\n                      className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                    >\n                      <td className=\"whitespace-nowrap p-2\">{index + 1}</td>\n                      <td className=\"whitespace-nowrap p-2\">\n                        {element?.employeName}\n                      </td>\n                      <td className=\"whitespace-nowrap p-2\">\n                        {moment(element?.startDate).format(\"DD-MM-YYYY\")}\n                      </td>\n                      <td className=\"whitespace-nowrap p-2\">\n                        {moment(element?.endDate).format(\"DD-MM-YYYY\")}\n                      </td>\n                      <td className=\"whitespace-nowrap p-2\">\n                        {formatNumber(element?.basicSalary).toFixed(2)} ₹\n                      </td>\n                      <td className=\"whitespace-nowrap p-2\">\n                        {formatNumber(element?.grossSalary).toFixed(2)} ₹\n                      </td>\n                      <td className=\"whitespace-nowrap p-2\">\n                        {formatNumber(element?.netSalary).toFixed(2)} ₹\n                      </td>\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        {element?.status}\n                      </td>\n                      <td>\n                        <Tooltip placement=\"topLeft\" title=\"View\">\n                          <button\n                            onClick={() =>\n                              navigate(\n                                `/admin/employee-paySlipData/${encrypt(element?._id)}`\n                              )\n                            }\n                            className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                            type=\"button\"\n                          >\n                            <FaEye\n                              className={` ${\"text-sky-600 hover:text-sky-500\"}`}\n                              size={16}\n                            />\n                          </button>\n                        </Tooltip>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={12}\n                      className=\"px-6 py-2 whitespace-nowrap font-[600] text-center text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>}\n      </>\n    </GlobalLayout>\n  );\n}\nexport default PayrollList;\n"],"names":["userCompanyId","userBranchId","userType","userEmployeId","getUserIds","navigate","useNavigate","dispatch","useDispatch","payrollRequestData","loading","useSelector","state","payrollReducer","standardPayrollListData","standardPayroll","activeTab","setActivetab","useState","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","useEffect","getPayrollFunc","getchstandardPayrollData","data","currentPage","pageSize","reqData","companyId","branchId","text","sort","status","isPagination","directorId","employeId","getPayrollList","reqPayload","getstandardPayrollList","_jsx","GlobalLayout","children","className","onChange","e","_jsxs","_Fragment","onClick","colSpan","Loader2","length","map","element","index","employeName","createdBy","baseSalary","ctc","moment","startDate","format","endDate","formatNumber","basicSalary","toFixed","grossSalary","netSalary","Tooltip","placement","title","encrypt","_id","type","FaEye","size"],"sourceRoot":""}