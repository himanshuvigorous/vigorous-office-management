{"version":3,"file":"static/js/3270.95782067.chunk.js","mappings":"qbAmhBA,QAnfA,WAAgC,IAADA,EAC7B,MAAM,SACJC,EAAQ,QACRC,EAAO,SACPC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MACEC,EAAiBC,KAAKC,MAC1BC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAG9B,cAAEC,EAAa,aAAEC,EAAY,SAAEC,IAAaC,EAAAA,EAAAA,MAC5C,wBAAEC,EAAuB,yBAAEC,EAAwB,QAAEC,IAAYC,EAAAA,EAAAA,IACpEC,GAAUA,EAAMC,kBAEb,aAAEC,IAAiBH,EAAAA,EAAAA,IAAaC,GAAUA,EAAMG,iBAGhD,gBAAEC,IAAoBL,EAAAA,EAAAA,IAAaC,GAAUA,EAAMK,gBAKnDC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAGX,YAAEC,IAAgBX,EAAAA,EAAAA,IAAaC,GAAUA,EAAMW,UAC/C,WAAEC,EAAU,kBAAEC,IAAsBd,EAAAA,EAAAA,IAAaC,GAAUA,EAAMc,QAMjEC,GAAYC,EAAAA,EAAAA,IAAS,CACzBpC,UACAqC,KAAM,cACNC,aAAc1B,KAMV,UAAE2B,EAAS,QAAEC,EAAO,UAAEC,EAAS,UAAEC,IAAcC,EAAAA,EAAAA,MAE9CC,EAAcC,IAAmBC,EAAAA,EAAAA,MAClCC,EAAcC,SAASJ,EAAaK,IAAI,UAAY,EAEpDC,GAAkBN,EAAaK,IAAI,aAAe,GAClDE,GAAgBP,EAAaK,IAAI,WAAa,IAC7CG,GAAaC,KAAkBC,EAAAA,EAAAA,UAASP,IACxCQ,GAAOC,KAAYF,EAAAA,EAAAA,UAJL,KAKdG,GAAQC,KAAaJ,EAAAA,EAAAA,UAASH,KAC9BQ,GAAYC,KAAiBN,EAAAA,EAAAA,UAAS,KACtCO,GAAUC,KAAeR,EAAAA,EAAAA,UAASJ,KAIzCa,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAS,IAAIC,gBACfb,GAAc,GAAGY,EAAOE,IAAI,OAAQd,IACpCS,IAAUG,EAAOE,IAAI,WAAYL,IACjCJ,IAAQO,EAAOE,IAAI,SAAUT,IACjCZ,EAAgBmB,IACf,CAACH,GAAUJ,GAAQL,GAAaO,MACnCI,EAAAA,EAAAA,WAAU,KACRI,MACC,CAACN,GAAUJ,GAAQL,GAAaO,KAEnC,MAwBMQ,GAA2BA,KAC/B,IAAIC,EAAU,CACZhB,YAAaA,GACbiB,SAAUd,GACVe,WAAY,CACVC,KAAMZ,GACNa,MAAM,EACNf,OAAQA,GACRgB,cAAc,EACdC,WAAY,GACZvC,UAC+B,WAAf,OAAd9B,QAAc,IAAdA,OAAc,EAAdA,EAAgBS,UACZqB,EAC6B,aAAf,OAAd9B,QAAc,IAAdA,OAAc,EAAdA,EAAgBS,UACA,OAAdT,QAAc,IAAdA,OAAc,EAAdA,EAAgBsE,IACF,OAAdtE,QAAc,IAAdA,OAAc,EAAdA,EAAgB8B,UACxB0B,SAC+B,aAAf,OAAdxD,QAAc,IAAdA,OAAc,EAAdA,EAAgBS,WACe,WAAf,OAAdT,QAAc,IAAdA,OAAc,EAAdA,EAAgBS,WACa,qBAAf,OAAdT,QAAc,IAAdA,OAAc,EAAdA,EAAgBS,UACd+C,GAC6B,mBAAf,OAAdxD,QAAc,IAAdA,OAAc,EAAdA,EAAgBS,UACA,OAAdT,QAAc,IAAdA,OAAc,EAAdA,EAAgBsE,IACF,OAAdtE,QAAc,IAAdA,OAAc,EAAdA,EAAgBwD,WAG5BnC,GAASkD,EAAAA,EAAAA,IAAuBR,MAMlCL,EAAAA,EAAAA,WAAU,MACJ5B,GAA0B,YAAbrB,GAAuC,oBAAbA,IACzCY,GACEmD,EAAAA,EAAAA,IAAa,CACXN,KAAM,GACNC,MAAM,EACNf,QAAQ,EACRgB,cAAc,EACdtC,UAAWA,MAIhB,CAACA,KACJ4B,EAAAA,EAAAA,WAAU,KACS,UAAbjD,GACFY,GACEoD,EAAAA,EAAAA,IAAc,CACZP,KAAM,GACNC,MAAM,EACNf,QAAQ,EACRgB,cAAc,KAIpB/C,GAASqD,EAAAA,EAAAA,IAAqB,CAC5B5C,UAC+B,aAAf,OAAd9B,QAAc,IAAdA,OAAc,EAAdA,EAAgBS,UACE,OAAdT,QAAc,IAAdA,OAAc,EAAdA,EAAgBsE,IACF,OAAdtE,QAAc,IAAdA,OAAc,EAAdA,EAAgB8B,UACtBsC,cAAc,MAGf,IAMH,MAyCMO,GAA2B,OAAfxD,QAAe,IAAfA,GAAiE,QAAlD1B,EAAf0B,EAAiByD,KAAMC,GAAmB,qBAAN,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAMC,cAA2B,IAAArF,OAAlD,EAAfA,EAAmE6E,IAC/ES,IAA4BzC,EAAAA,EAAAA,GAAeqC,IAAWxC,QAK5D,OAEE6C,EAAAA,EAAAA,MAACC,EAAAA,EAAY,CAACC,SAzIEC,IAChB5B,GAAc4B,IAwImBC,SAAA,EAC/BJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,wCAAuCD,SAAA,EACpDE,EAAAA,EAAAA,KAAA,UACED,UAAU,8GAA6GD,UAEvHE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,cAAaD,SAAC,wBAEhCE,EAAAA,EAAAA,KAAA,UACEC,QAASA,KACP,IAAKR,GACH,OAAO,KAEPxD,EAAS,wBAIb8D,UAAU,oGAAmGD,UAE7GE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,cAAaD,SAAC,yBAGlCJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,qBAAoBD,SAAA,EACjCJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,0EAAyED,SAAA,EACtFJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,sFAAqFD,SAAA,CACpF,UAAb3E,IACC6E,EAAAA,EAAAA,KAAA,OAAKD,UAAU,2DAA0DD,UACvEE,EAAAA,EAAAA,KAACE,EAAAA,GAAU,CACT7F,QAASA,EACTqC,KAAK,cACLyD,MAAO,CAAEC,SAAU,uBACnBC,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBZ,EAAAA,EAAAA,MAACc,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACT5D,aAAc,GACd+D,SAAUnF,EACVwE,UAAS,GAAAhF,OAAK4F,EAAAA,GAA8B,KAC5CC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQhB,UAAUkB,cAAcC,SAASJ,EAAMG,eACvDlB,SAAA,EAEDE,EAAAA,EAAAA,KAACQ,EAAAA,EAAOU,OAAM,CAACC,MAAM,GAAErB,SAAC,mBACZ,OAAX3D,QAAW,IAAXA,OAAW,EAAXA,EAAaiF,IAAKC,IACjBrB,EAAAA,EAAAA,KAACQ,EAAAA,EAAOU,OAAM,CAAiBC,MAAW,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,IAAIc,SACzC,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMC,UADe,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,gBASvB,UAAb7D,GACa,YAAbA,GACa,oBAAbA,KACE6E,EAAAA,EAAAA,KAAA,OAAKD,UAAU,2DAA0DD,UAEvEJ,EAAAA,EAAAA,MAACc,EAAAA,EAAM,CACL7D,aAAc,GACd+D,SAAUnF,EACV4F,MAAOjD,GACP0B,SAhMUuB,IAC1BhD,GAAYgD,GACZzD,GAAe,IA+LCqC,UAAS,GAAAhF,OAAK4F,EAAAA,GAA8B,KAC5CY,YAAU,EACVX,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQhB,UAAUkB,cAAcC,SAASJ,EAAMG,eACvDlB,SAAA,EAEDE,EAAAA,EAAAA,KAACQ,EAAAA,EAAOU,OAAM,CAACC,MAAM,GAAErB,SAAC,kBACvBxD,GAAqB0D,EAAAA,EAAAA,KAACQ,EAAAA,EAAOU,OAAM,CAACR,UAAQ,EAAAZ,UAC3CE,EAAAA,EAAAA,KAACwB,EAAAA,EAAU,MACkB,OAAVnF,QAAU,IAAVA,OAAU,EAAVA,EAAY+E,IAAKC,IACpCrB,EAAAA,EAAAA,KAACQ,EAAAA,EAAOU,OAAM,CAAiBC,MAAW,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,IAAIc,SACzC,OAAJuB,QAAI,IAAJA,OAAI,EAAJA,EAAMC,UADe,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMrC,YAQpCgB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,GAAED,UAEfJ,EAAAA,EAAAA,MAACc,EAAAA,EAAM,CAELT,UAAS,SAAAhF,OAAW4F,EAAAA,GAA8B,KAAA5F,OAAIP,EAAOiH,OAAS,gBAAkB,mBACxFC,YAAY,gBACZhB,SAAUnF,EACV4F,MAAOrD,GACP8B,SArNcuB,IAC1BpD,GAAUoD,GACVzD,GAAe,IAoNH6D,YAAU,EACVX,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQhB,UAAUkB,cAAcC,SAASJ,EAAMG,eACvDlB,SAAA,EAEDE,EAAAA,EAAAA,KAACQ,EAAAA,EAAOU,OAAM,CAACC,MAAM,GAAErB,SAAC,mBACxBE,EAAAA,EAAAA,KAACQ,EAAAA,EAAOU,OAAM,CAACC,MAAM,QAAOrB,SAAE,cAC9BE,EAAAA,EAAAA,KAACQ,EAAAA,EAAOU,OAAM,CAACC,MAAM,SAAQrB,SAAE,eAC/BE,EAAAA,EAAAA,KAACQ,EAAAA,EAAOU,OAAM,CAACC,MAAM,WAAUrB,SAAE,sBAKrCE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,cAAaD,UAC1BE,EAAAA,EAAAA,KAAA,UACEC,QAASA,KArPrBvC,GAAe,GACfS,GAAY,IACZJ,GAAU,IACVE,GAAc,KAqPF8B,UAAU,0FAAyFD,UACnGE,EAAAA,EAAAA,KAAA,QAAMD,UAAU,cAAaD,SAAC,iBAInClD,IACCoD,EAAAA,EAAAA,KAAA,OAAKD,UAAU,iCAAgCD,UAC7CE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CAACC,UAAU,UAAUC,MAAM,yBAAwB/B,UACzDJ,EAAAA,EAAAA,MAAA,UACEO,QAASA,IAAMhE,EAAS,iCACxB8D,UAAU,yFAAwFD,SAAA,EAElGE,EAAAA,EAAAA,KAAC8B,EAAAA,IAAM,KACP9B,EAAAA,EAAAA,KAAA,QAAMD,UAAU,cAAaD,SAAC,sCAKxCJ,EAAAA,EAAAA,MAAA,OAAKK,UAAU,SAAQD,SAAA,EACrBE,EAAAA,EAAAA,KAAA,OAAKD,UAAU,sDAAqDD,UAClEJ,EAAAA,EAAAA,MAAA,SAAOK,UAAU,+CAA8CD,SAAA,EAC7DE,EAAAA,EAAAA,KAAA,SAAAF,UACEJ,EAAAA,EAAAA,MAAA,MAAIK,UAAU,sFAAqFD,SAAA,EACjGE,EAAAA,EAAAA,KAAA,MAAID,UAAU,oBAAmBD,SAAC,WAGlCE,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAC,UAC1BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAC,gBAG1BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAC,SAG1BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAC,oBAG1BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAC,kBAG1BE,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SAAC,YAGxBjD,GAAWC,KACXkD,EAAAA,EAAAA,KAAA,MAAID,UAAU,oBAAmBD,SAAC,gBAKvCvE,GACCyE,EAAAA,EAAAA,KAAA,MAAID,UAAU,yBAAwBD,UACpCE,EAAAA,EAAAA,KAAA,MACE+B,QAAS,GACThC,UAAU,+DAA8DD,UAExEE,EAAAA,EAAAA,KAACgC,EAAAA,EAAO,SAGZhC,EAAAA,EAAAA,KAAA,SAAAF,SACGzE,IAAkD,OAAvBA,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyB4G,QAAS,EACrC,OAAvB5G,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyB+F,IAAI,CAACc,EAASC,KACrCzC,EAAAA,EAAAA,MAAA,MACEK,UAAS,kBAAAhF,OAAoBoH,EAAQ,IAAM,EAAI,kBAAoB,WAAU,oCACxCrC,SAAA,EAErCE,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SACtBqC,EAAQ,GAAK1E,GAAc,GAAKG,MAEnCoC,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SACf,OAAPoC,QAAO,IAAPA,OAAO,EAAPA,EAASE,eAEZpC,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,SACf,OAAPoC,QAAO,IAAPA,OAAO,EAAPA,EAASG,aAEZrC,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,UACtBwC,EAAAA,EAAAA,IAAyB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASK,QAE9BvC,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,UACtBwC,EAAAA,EAAAA,IAAyB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASM,aAAeF,EAAAA,EAAAA,IAAyB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASM,YAAe,OAEvFxC,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,UACtBwC,EAAAA,EAAAA,IAAyB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASO,cAAgBH,EAAAA,EAAAA,IAAyB,OAAPJ,QAAO,IAAPA,OAAO,EAAPA,EAASO,aAAgB,OAEzFzC,EAAAA,EAAAA,KAAA,MAAID,UAAU,YAAWD,UACvBJ,EAAAA,EAAAA,MAAA,UACEK,UAAU,kDACVoB,MAAc,OAAPe,QAAO,IAAPA,OAAO,EAAPA,EAASpE,OAChB4C,SAA8B,cAAb,OAAPwB,QAAO,IAAPA,OAAO,EAAPA,EAASpE,QACnB8B,SAAWC,GAvNH6C,EAAC7C,EAAG8C,KACpC5G,GACE6G,EAAAA,EAAAA,IAAsB,CACpB5D,IAAK2D,EACL7E,OAAQ+B,EAAEgD,OAAO1B,SAEnB2B,KAAMvD,IACG,OAAJA,QAAI,IAAJA,GAAAA,EAAMwD,OACTvE,QAgNsBkE,CAA0B7C,EAAU,OAAPqC,QAAO,IAAPA,OAAO,EAAPA,EAASlD,KACvCc,SAAA,EAEDE,EAAAA,EAAAA,KAAA,UAAQU,UAAQ,EAACS,MAAM,QAAOrB,SAAC,aAC/BE,EAAAA,EAAAA,KAAA,UAAQmB,MAAM,SAAQrB,SAAE,cACxBE,EAAAA,EAAAA,KAAA,UAAQmB,MAAM,WAAUrB,SAAE,qBAG5BjD,GAAWC,KACX4C,EAAAA,EAAAA,MAAA,MAAIK,UAAU,YAAWD,SAAA,EACvBE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CAACC,UAAU,UAAUC,MAAM,OAAM/B,UACvCE,EAAAA,EAAAA,KAAA,UACED,UAAU,oEACVsB,KAAK,SACLpB,QAASA,KACPhE,EAAS,+BAADlB,QAAgCiI,EAAAA,EAAAA,GAAe,OAAPd,QAAO,IAAPA,OAAO,EAAPA,EAASlD,QACzDc,UAEFE,EAAAA,EAAAA,KAACiD,EAAAA,IAAK,CACJlD,UAAU,sCACVmD,KAAM,UAIZlD,EAAAA,EAAAA,KAACmD,EAAAA,EAAQ,CACPC,KAAM,CACJC,MAAO,CACLvG,GAAa,CACXwG,IAAK,OACLC,OACE7D,EAAAA,EAAAA,MAAA,QAAMK,UAAU,oBAAmBD,SAAA,EACjCE,EAAAA,EAAAA,KAACwD,EAAAA,IAAa,CAACzD,UAAU,wBAAwB,UAIrDE,QAASA,IACPhE,EAAS,+BAADlB,QAAgCiI,EAAAA,EAAAA,GAAe,OAAPd,QAAO,IAAPA,OAAO,EAAPA,EAASlD,QAE7DjC,GAAa,CACXuG,IAAK,SACLC,OACE7D,EAAAA,EAAAA,MAAA,QAAMK,UAAU,iCAAgCD,SAAA,EAC9CE,EAAAA,EAAAA,KAACyD,EAAAA,IAAgB,CAAC1D,UAAU,SAAS,YAIzCE,QAASA,IAjSrB0C,KACpB,IAAIlE,EAAU,CACZO,IAAK2D,GAEPe,IAAAA,KAAU,CACR7B,MAAO,UACPjD,KAAM,mCACN+E,KAAM,UACNC,kBAAkB,EAClBC,iBAAkB,OACjBf,KAAMgB,IACHA,EAAOC,aACThI,GAASiI,EAAAA,EAAAA,IAAsBvF,IAAUqE,KAAMvD,IAEzC9B,GAAc,GAAwC,IAAZ,OAAvBpC,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyB4G,QAC9CvE,GAAeuG,OAAOxG,GAAc,IAGpCe,UA+QuC0F,CAAoB,OAAPhC,QAAO,IAAPA,OAAO,EAAPA,EAASlD,QAI3CmF,QAAS,CAAC,SAASrE,UAEnBE,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,CAACC,UAAU,UAAUC,MAAM,eAAc/B,UAC/CE,EAAAA,EAAAA,KAAA,UACED,UAAU,oEACVsB,KAAK,SAAQvB,UAEbE,EAAAA,EAAAA,KAACoE,EAAAA,IAA8B,CAC7BrE,UAAU,sCACVmD,KAAM,mBAUtBlD,EAAAA,EAAAA,KAAA,MAAID,UAAU,wBAAuBD,UACnCE,EAAAA,EAAAA,KAAA,MACE+B,QAAS,GACThC,UAAU,2EAA0ED,SACrF,+BAQbE,EAAAA,EAAAA,KAACqE,EAAAA,EAAgB,CACfC,WAAYhJ,EACZoD,SAAUd,GACVH,YAAaA,GACbmC,SA5ZkB2E,GAAS7G,GAAe6G,aAkatD,C","sources":["pages/hr/employeeSalary/StandardPayroll/StandardPayrollList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaPenToSquare, FaPlus } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport {\n  convertIntoAmount,\n  domainName,\n  inputAntdSelectClassNameFilter,\n} from \"../../../../constents/global\";\n\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { encrypt } from \"../../../../config/Encryption\";\nimport Swal from \"sweetalert2\";\nimport { Select, Tooltip, Dropdown } from \"antd\";\nimport getUserIds from \"../../../../constents/getUserIds\";\n\nimport { getstandardPayrollList, standardPayrollDelete, standardPayrollStatus } from \"./standardPayrollfeature/_standardPayroll_reducers\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\nimport usePermissions from \"../../../../config/usePermissions\";\nimport { dynamicSidebarSearch } from \"../../../DyanmicSidebar/DyanmicSidebarFeatures/_dyanmicSidebar_reducers\";\n\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { BsViewList } from \"react-icons/bs\";\nimport { FaEye } from \"react-icons/fa\";\n\n\nfunction StandardPayrollList() {\n  const {\n    register,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm();\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const { userCompanyId, userBranchId, userType } = getUserIds();\n  const { standardPayrollListData, standardPayrollListTotal, loading } = useSelector(\n    (state) => state.standardPayroll\n  );\n  const { PageRoleData } = useSelector((state) => state.rolePermission);\n\n\n  const { sidebarListData } = useSelector((state) => state.dynamicSidebar);\n\n\n\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n\n\n\n\n\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: userCompanyId,\n  });\n\n\n\n\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initialPage = parseInt(searchParams.get(\"page\")) || 1;\n  const initialLimit = 10;\n  const initialBranchId = searchParams.get(\"branchId\") || \"\";\n  const initialStatus = searchParams.get(\"status\") || \"\";\n  const [currentPage, setCurrentPage] = useState(initialPage);\n  const [limit, setLimit] = useState(initialLimit);\n  const [status, setStatus] = useState(initialStatus)\n  const [searchText, setSearchText] = useState(\"\");\n  const [branchId, setBranchId] = useState(initialBranchId);\n\n\n\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (currentPage > 1) params.set(\"page\", currentPage);\n    if (branchId) params.set(\"branchId\", branchId);\n    if (status) params.set(\"status\", status);\n    setSearchParams(params);\n  }, [branchId, status, currentPage, searchText,]);\n  useEffect(() => {\n    getchstandardPayrollData();\n  }, [branchId, status, currentPage, searchText,]);\n\n  const handleResetFilters = () => {\n    setCurrentPage(1);\n    setBranchId(\"\");\n    setStatus(\"\");\n    setSearchText(\"\");\n  };\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const onPaginationChange = (page) => setCurrentPage(page);\n  const handleBranchChange = (value) => {\n    setBranchId(value);\n    setCurrentPage(1);\n  };\n\n\n  const handleStatusChange = (value) => {\n    setStatus(value);\n    setCurrentPage(1);\n  };\n\n\n\n  const getchstandardPayrollData = () => {\n    let reqData = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqPayload: {\n        text: searchText,\n        sort: true,\n        status: status,\n        isPagination: true,\n        directorId: \"\",\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? companyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n      },\n    };\n    dispatch(getstandardPayrollList(reqData));\n  };\n\n\n\n\n  useEffect(() => {\n    if (companyId || userType === \"company\" || userType === \"companyDirector\") {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: companyId,\n        })\n      );\n    }\n  }, [companyId]);\n  useEffect(() => {\n    if (userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n    dispatch(dynamicSidebarSearch({\n      companyId:\n        userInfoglobal?.userType === \"company\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.companyId,\n      isPagination: false,\n    }))\n\n  }, []);\n\n\n\n\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(standardPayrollDelete(reqData)).then((data) => {\n\n          if (currentPage > 1 && standardPayrollListData?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n\n          } else {\n            getchstandardPayrollData();\n          }\n        });\n      }\n    });\n  };\n\n\n\n  const handlePayrollStatusChange = (e, id) => {\n    dispatch(\n      standardPayrollStatus({\n        _id: id,\n        status: e.target.value,\n      })\n    ).then((data) => {\n      if (!data?.error) {\n        getchstandardPayrollData();\n      }\n    });\n  };\n\n\n  const sidebarId = sidebarListData?.find((data) => data?.slug === `standardPayroll`)?._id;\n  const standardPayrollPermission = usePermissions(sidebarId).canRead;\n\n\n\n\n  return (\n\n    <GlobalLayout onChange={onChange}>\n      <div className=\"flex justify-start items-center  my-1\">\n        <button\n          className=\"bg-header px-3 py-2 border border-header rounded-l-md flex justify-center items-center space-x-2 text-white\"\n        >\n          <span className=\"text-[12px]\">Standard payroll</span>\n        </button>\n        <button\n          onClick={() => {\n            if (!standardPayrollPermission) {\n              return null;\n            } else {\n              navigate(\"/admin/payroll-list\")\n            }\n          }\n          }\n          className=\" px-3 border border-black py-2 rounded-r-md flex justify-center items-center space-x-2 text-black\"\n        >\n          <span className=\"text-[12px]\">Actual Payslip</span>\n        </button>\n      </div>\n      <div className=\"bg-grey-100 w-full\">\n        <div className=\"w-full md:flex justify-between items-center py-1 sm:space-y-0 space-y-2\">\n          <div className=\"md:flex justify-between grid grid-cols-1 gap-2 items-center  text-[14px] rounded-md\">\n            {userType === \"admin\" && (\n              <div className=\"flex justify-center items-center  text-[14px] rounded-md\">\n                <Controller\n                  control={control}\n                  name=\"PDCompanyId\"\n                  rules={{ required: \"Company is required\" }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      defaultValue={\"\"}\n                      disabled={loading}\n                      className={`${inputAntdSelectClassNameFilter} `}\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Company</Select.Option>\n                      {companyList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.fullName}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>\n            )}\n            {(userType === \"admin\" ||\n              userType === \"company\" ||\n              userType === \"companyDirector\") && (\n                <div className=\"flex justify-center items-center  text-[14px] rounded-md\">\n\n                  <Select\n                    defaultValue={\"\"}\n                    disabled={loading}\n                    value={branchId}\n                    onChange={handleBranchChange}\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchListloading ? (<Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>) : (branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n\n                </div>\n              )}\n            <div className=\"\">\n\n              <Select\n\n                className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Select Status\"\n                disabled={loading}\n                value={status}\n                onChange={handleStatusChange}\n                showSearch\n                filterOption={(input, option) =>\n                  String(option?.children).toLowerCase().includes(input.toLowerCase())\n                }\n              >\n                <Select.Option value=\"\">Select Status</Select.Option>\n                <Select.Option value=\"Draft\" > Draft  </Select.Option>\n                <Select.Option value=\"Active\" > Active  </Select.Option>\n                <Select.Option value=\"InActive\" > InActive  </Select.Option>\n\n              </Select>\n\n            </div>\n            <div className=\"w-full my-2\">\n              <button\n                onClick={() => {\n                  handleResetFilters()\n                }}\n                className=\"bg-header py-[8px] w-full rounded-md  flex px-5 justify-center items-center  text-white\">\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n            </div>\n          </div>\n          {canCreate &&\n            <div className=\"flex justify-end items-center \">\n              <Tooltip placement=\"topLeft\" title=\"Create standardPayroll\">\n                <button\n                  onClick={() => navigate(\"/admin/standardPayroll/create\")}\n                  className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n                >\n                  <FaPlus />\n                  <span className=\"text-[12px]\">Create standardPayroll</span>\n                </button>\n              </Tooltip>\n            </div>}\n        </div>\n        <div className=\"w-full\">\n          <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"tableHead w-[10%]\">\n                    S.No.\n                  </th>\n                  <th className=\"tableHead\">Name</th>\n                  <th className=\"tableHead\">\n                    Created By\n                  </th>\n                  <th className=\"tableHead\">\n                    CTC\n                  </th>\n                  <th className=\"tableHead\">\n                    Monthly Salary\n                  </th>\n                  <th className=\"tableHead\">\n                    Basic Salary\n                  </th>\n                  <th className=\"tableHead\">\n                    Status\n                  </th>\n                  {(canRead || canUpdate) &&\n                    <th className=\"tableHead w-[10%]\">\n                      Action\n                    </th>}\n                </tr>\n              </thead>\n              {loading ?\n                <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={10}\n                    className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr> :\n                <tbody>\n                  {standardPayrollListData && standardPayrollListData?.length > 0 ? (\n                    standardPayrollListData?.map((element, index) => (\n                      <tr\n                        className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                          } border-[#DDDDDD] text-[#374151]`}\n                      >\n                        <td className=\"tableData\">\n                          {index + 1 + (currentPage - 1) * limit}\n                        </td>\n                        <td className=\"tableData\">\n                          {element?.employeName}\n                        </td>\n                        <td className=\"tableData\">\n                          {element?.createdBy}\n                        </td>\n                        <td className=\"tableData\">\n                          {convertIntoAmount(element?.ctc)}\n                        </td>\n                        <td className=\"tableData\">\n                          {convertIntoAmount(element?.baseSalary) ? (convertIntoAmount(element?.baseSalary)) : \"-\"}\n                        </td>\n                        <td className=\"tableData\">\n                          {convertIntoAmount(element?.basicSalary) ? (convertIntoAmount(element?.basicSalary)) : \"-\"}\n                        </td>\n                        <td className=\"tableData\">\n                          <select\n                            className=\"border-[1px] px-2 py-1.5 rounded-lg text-[12px]\"\n                            value={element?.status}\n                            disabled={element?.status === \"InActive\"}\n                            onChange={(e) =>\n                              handlePayrollStatusChange(e, element?._id)\n                            }\n                          >\n                            <option disabled value=\"Draft\"> Draft </option>\n                            <option value=\"Active\" > Active </option>\n                            <option value=\"InActive\" > InActive </option>\n                          </select>\n                        </td>\n                        {(canRead || canUpdate) &&\n                          <td className=\"tableData\">\n                            <Tooltip placement=\"topLeft\" title=\"View\">\n                              <button\n                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                type=\"button\"\n                                onClick={() => {\n                                  navigate(`/admin/standardPayroll/view/${encrypt(element?._id)}`)\n                                }}\n                              >\n                                <FaEye\n                                  className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                  size={16}\n                                />\n                              </button>\n                            </Tooltip>\n                            <Dropdown\n                              menu={{\n                                items: [\n                                  canUpdate && {\n                                    key: 'edit',\n                                    label: (\n                                      <span className=\"flex items-center\">\n                                        <FaPenToSquare className=\"mr-2 text-[#3c8dbc]\" />\n                                        Edit\n                                      </span>\n                                    ),\n                                    onClick: () =>\n                                      navigate(`/admin/standardPayroll/edit/${encrypt(element?._id)}`),\n                                  },\n                                  canDelete && {\n                                    key: 'delete',\n                                    label: (\n                                      <span className=\"flex items-center text-red-500\">\n                                        <RiDeleteBin5Line className=\"mr-2\" />\n                                        Delete\n                                      </span>\n                                    ),\n                                    onClick: () => handleDelete(element?._id),\n                                  },\n                                ],\n                              }}\n                              trigger={['click']}\n                            >\n                              <Tooltip placement=\"topLeft\" title=\"More Actions\">\n                                <button\n                                  className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                  type=\"button\"\n                                >\n                                  <PiDotsThreeOutlineVerticalBold\n                                    className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                    size={16}\n                                  />\n                                </button>\n                              </Tooltip>\n                            </Dropdown>\n                          </td>\n                        }\n                      </tr>\n                    ))\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={15}\n                        className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>}\n            </table>\n          </div>\n          <CustomPagination\n            totalCount={standardPayrollListTotal}\n            pageSize={limit}\n            currentPage={currentPage}\n            onChange={onPaginationChange}\n          />\n        </div>\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default StandardPayrollList;"],"names":["_sidebarListData$find","register","control","setValue","formState","errors","useForm","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","userCompanyId","userBranchId","userType","getUserIds","standardPayrollListData","standardPayrollListTotal","loading","useSelector","state","standardPayroll","PageRoleData","rolePermission","sidebarListData","dynamicSidebar","dispatch","useDispatch","navigate","useNavigate","companyList","company","branchList","branchListloading","branch","companyId","useWatch","name","defaultValue","canCreate","canRead","canUpdate","canDelete","usePermissions","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialBranchId","initialStatus","currentPage","setCurrentPage","useState","limit","setLimit","status","setStatus","searchText","setSearchText","branchId","setBranchId","useEffect","params","URLSearchParams","set","getchstandardPayrollData","reqData","pageSize","reqPayload","text","sort","isPagination","directorId","_id","getstandardPayrollList","branchSearch","companySearch","dynamicSidebarSearch","sidebarId","find","data","slug","standardPayrollPermission","_jsxs","GlobalLayout","onChange","e","children","className","_jsx","onClick","Controller","rules","required","render","_ref","field","Select","_objectSpread","disabled","inputAntdSelectClassNameFilter","filterOption","input","option","String","toLowerCase","includes","Option","value","map","type","fullName","showSearch","ListLoader","PDPlan","placeholder","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","element","index","employeName","createdBy","convertIntoAmount","ctc","baseSalary","basicSalary","handlePayrollStatusChange","id","standardPayrollStatus","target","then","error","encrypt","FaEye","size","Dropdown","menu","items","key","label","FaPenToSquare","RiDeleteBin5Line","Swal","icon","showCancelButton","cancelButtonText","result","isConfirmed","standardPayrollDelete","Number","handleDelete","trigger","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","page"],"sourceRoot":""}