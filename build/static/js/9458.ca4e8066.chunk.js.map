{"version":3,"file":"static/js/9458.ca4e8066.chunk.js","mappings":"8cA+wCA,QA7uCA,WACE,MAAM,QACJA,EACAC,WAAW,OAAEC,GAAQ,SACrBC,EAAQ,MACRC,IACEC,EAAAA,EAAAA,OAEGC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAEnCC,GAAWC,EAAAA,EAAAA,OACX,sBACJC,EAAqB,8BACrBC,EAA6B,sBAC7BC,IACEC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,UAE3B,mBAAEC,EAAoBC,QAASC,IAAeL,EAAAA,EAAAA,IACjDC,GAAUA,EAAMK,aAGZC,EAAUC,IAAed,EAAAA,EAAAA,UAAS,KAClCe,EAAUC,IAAehB,EAAAA,EAAAA,WAAS,IAMnC,aAAEiB,EAAcP,QAASQ,IAAwBZ,EAAAA,EAAAA,IAAaC,GAAUA,EAAMY,WAC9E,WAAEC,EAAYV,QAASW,IAAsBf,EAAAA,EAAAA,IAAaC,GAAUA,EAAMe,SAC1E,gBAAEC,IAAoBjB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMiB,cACnD,YAAEC,IAAgBnB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMmB,UAC9CC,EAAYC,IAAiB5B,EAAAA,EAAAA,UAAS,IACvC6B,EAAiBC,KAAKC,MAC1BC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAE7BC,EAAaC,IAAkBrC,EAAAA,EAAAA,UAAS,IACxCsC,EAAqBC,IAA0BvC,EAAAA,EAAAA,UAAS,KACzD,WAAEwC,KAAelC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMkC,QAC9CC,IAAYC,EAAAA,EAAAA,IAAS,CACzBnD,UACAoD,KAAM,cACNC,aAAc,KAEVC,IAAWH,EAAAA,EAAAA,IAAS,CACxBnD,UACAoD,KAAM,aACNC,aAAc,KAEVE,IAASJ,EAAAA,EAAAA,IAAS,CACtBnD,UACAoD,KAAM,SACNC,aAAc,KAEVG,IAAYL,EAAAA,EAAAA,IAAS,CACzBnD,UACAoD,KAAM,YACNC,aAAc,KAQVI,IAAaN,EAAAA,EAAAA,IAAS,CAC1BnD,UACAoD,KAAM,aACNC,aAAc,KAaVK,KAXYP,EAAAA,EAAAA,IAAS,CACzBnD,UACAoD,KAAM,YACNC,aAAcM,MAAQC,SAAS,EAAG,YAEpBT,EAAAA,EAAAA,IAAS,CACvBnD,UACAoD,KAAM,UACNC,aAAcM,SAGCR,EAAAA,EAAAA,IAAS,CACxBnD,UACAoD,KAAM,WACNC,aAAc,MAGVQ,IAAgBV,EAAAA,EAAAA,IAAS,CAC7BnD,UACAoD,KAAM,gBACNC,aAAc,KAGVS,IAAQX,EAAAA,EAAAA,IAAS,CACrBnD,UACAoD,KAAM,QACNC,aAAc,KAEVjC,IAAa+B,EAAAA,EAAAA,IAAS,CAC1BnD,UACAoD,KAAM,aACNC,aAAc,KAGVvB,IAASqB,EAAAA,EAAAA,IAAS,CACtBnD,UACAoD,KAAM,SACNC,aAAc,KAGVU,IAAOZ,EAAAA,EAAAA,IAAS,CACpBnD,UACAoD,KAAM,OACNC,aAAc,KAGVW,IAAYb,EAAAA,EAAAA,IAAS,CACzBnD,UACAoD,KAAM,YACNC,aAAc,MAOhBY,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAQC,WAAW,KACvBpB,EAAuBZ,IACtB,KAEH,MAAO,KACLiC,aAAaF,KAEd,CAAC/B,IAgC2BkC,MAC7B,MAEMC,EAAiB,GACvB,IAAK,IAAIC,EAHS,KAGSA,GAFX,KAE4BA,IAC1CD,EAAeE,KAAK,GAAD9B,OAAI6B,EAAI,KAAA7B,OAAI6B,EAAO,KAKnBF,GAxCvB,MA0CMI,GAAS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAGIC,GAAU,CAAC,UAAW,UAAW,UAAW,WAI5CC,GAAuB,WAC3B,MAAO,CACL/B,YAAaA,EACbtC,SAAUA,EACVsE,WAAY,CACVC,KAAM/B,EACNgC,MAAM,EACNC,eAPkCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAQlCG,UAC+B,WAAf,OAAd9C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACZlC,GAC6B,aAAf,OAAdb,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgB8C,UACxBG,WAAY,GACZC,SAC+B,aAAf,OAAdlD,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WACe,WAAf,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WACa,qBAAf,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACd9B,GAC6B,mBAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgBkD,SACxBC,cAAe,GACfC,UAAW3D,GACX4D,WAAY,GACZC,YAAa,GACbC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,UAAWvC,GACXwC,OAAQzC,GACRG,SAAUA,GACVuC,UAAWxB,GAAOyB,KAAMC,GACfA,GAAQrC,IAEbA,GACA,GACJsC,aAAc1B,GAAQwB,KAAMC,GACnBA,GAAQrC,IAEbA,GACA,GACJD,cAAeA,GACfwC,aAAcjF,GACdkF,SAAU,GACVC,UAAW9C,GACX+C,WAAYzC,GACZ0C,QAASzC,IAGf,GACAC,EAAAA,EAAAA,WAAU,KACRyC,GAAuB5D,IACtB,CAACF,EAAaE,EAAqBxC,IACtC,MAAMqG,GAAsBA,KAC1BlG,GACEmG,EAAAA,EAAAA,IAAc,CACZzB,UAC+B,WAAf,OAAd9C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACZlC,GAC6B,aAAf,OAAdb,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgB8C,UACxBI,SAAU,CAAC,QAAS,UAAW,mBAAmBsB,SAClC,OAAdxE,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UAEd9B,GAC6B,mBAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgBkD,SACtBc,aAAc,GACdf,WAAY,GACZT,KAAM,GACNC,MAAM,EACNkB,QAAQ,EACRjB,cAAc,EACd+B,UAAU,EACVC,YAAY,MAKZL,GAAyBA,KAC7BjG,GAASuG,EAAAA,EAAAA,IAAsBrC,IAAqB,OAGtDV,EAAAA,EAAAA,WAAU,OAAW,KAErBA,EAAAA,EAAAA,WAAU,KAEuB,aAAf,OAAd5B,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WACa,qBAAf,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WAEhB3E,GACEwG,EAAAA,EAAAA,IAAa,CACXpC,KAAM,GACNC,MAAM,EACNkB,QAAQ,EACRjB,cAAc,EACdI,UAC+B,WAAf,OAAd9C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACZlC,GAC6B,aAAf,OAAdb,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgB8C,aAI9BhF,EAAS,YAAawD,MAAQC,SAAS,EAAG,UAC1CzD,EAAS,UAAWwD,QACnB,IAEH,MAIMuD,GAAeC,UACnBT,MAoJIU,GAAQ,CACZ,CACEC,IAAK,IACLC,OAAOC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,SAAC,oBACpCA,UACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+DAA8DC,SAAA,EAC3EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4DAA2DC,SAAA,EACzC,WAAf,OAAdpF,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WACa,aAAf,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WACa,qBAAf,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,aACdsC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTvE,KAAK,aACLpD,QAASA,EACT4H,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBH,EAAAA,EAAAA,MAACK,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTN,UAAS,wCACTS,YAAY,gBACZC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQZ,UACZc,cACA1B,SAASuB,EAAMG,eACnBd,SAAA,EAEDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAM,GAAEhB,SAAC,kBACb,OAAVzE,SAAU,IAAVA,QAAU,EAAVA,GAAY0F,IAAKC,IAChBjB,EAAAA,EAAAA,MAACK,EAAAA,EAAOS,OAAM,CAACC,MAAc,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAAStD,IAAIoC,SAAA,CAChC,IACO,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASC,SAAU,eAM7B1I,EAAO2I,aACNtB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAChCvH,EAAO2I,WAAWC,cAK7BpB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTvE,KAAK,aACLpD,QAASA,EACT4H,OAAQmB,IAAA,IAAC,MAAEjB,GAAOiB,EAAA,OAChBxB,EAAAA,EAAAA,KAACQ,EAAAA,EACC,CACAiB,YAAU,EACVxB,UAAU,6CACVS,YAAY,yBACZgB,QAAStC,GACTuC,QAAoB,OAAXjH,QAAW,IAAXA,OAAW,EAAXA,EAAayG,IAAKvC,IAClB,CAAEsC,MAAOtC,EAAKd,IAAKiC,MAAOnB,EAAKyC,YAExCH,MAAOX,EAAMW,OAAS,GACtBU,SAAWC,GAAQtB,EAAMqB,SAASC,QAIvClJ,EAAOuD,aACN8D,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAChCvH,EAAOuD,WAAWqF,cA8GzBvB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTvE,KAAK,aACLpD,QAASA,EACT4H,OAAQyB,IAAA,IAAAC,EAAA,IAAC,MAAExB,GAAOuB,EAAA,OAChB3B,EAAAA,EAAAA,MAACK,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTN,UAAS,uCACTU,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQZ,UACZc,cACA1B,SAASuB,EAAMG,eAEpBU,QAASA,KACPxI,GACE8I,EAAAA,EAAAA,IAAW,CACT1E,KAAM,GACNC,MAAM,EACNkB,QAAQ,EACRjB,cAAc,EACdI,UAC+B,WAAf,OAAd9C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACZlC,GAC6B,aAAf,OAAdb,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgB8C,UACxBI,SAAU,CACR,QACA,UACA,mBACAsB,SAAuB,OAAdxE,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACvB9B,GAC6B,mBAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgBkD,aAI5B4D,SAAWV,IACTX,EAAMqB,SAASV,IAEjBR,YAAY,oBAAmBR,SAAA,EAE/BF,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAM,GAAEhB,SAAC,sBACvBtG,GACCoG,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACgB,UAAQ,EAAA/B,UACrBF,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,MAGmC,QAFhCH,GAEhBI,EAAAA,EAAAA,IAA6BzI,UAAmB,IAAAqI,OAAA,EAAhDA,EAAkDZ,IAC/CC,IACCpB,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAAoBC,MAAc,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAAStD,IAAIoC,SAC5C,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASvF,MADe,OAAPuF,QAAO,IAAPA,OAAO,EAAPA,EAAStD,gBAU3CkC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTvE,KAAK,SACLpD,QAASA,EACT4H,OAAQ+B,IAAA,IAAAC,EAAA,IAAC,MAAE9B,GAAO6B,EAAA,OAChBjC,EAAAA,EAAAA,MAACK,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACT+B,KAAK,WACLrC,UAAS,4CACTU,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQZ,UACZc,cACA1B,SAASuB,EAAMG,eAEpBU,QAASA,KACPxI,GACEqJ,EAAAA,EAAAA,IAAa,CACX3E,UAC+B,aAAf,OAAd9C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACE,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgB8C,UACtBI,SAC+B,aAAf,OAAdlD,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WACe,WAAf,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WACa,qBAAf,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACdhF,EAAM,cACuB,mBAAf,OAAdiC,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgBkD,SACxBkB,QAAS,GACTnB,WAAY,GACZyE,eAAgB,GAChBC,WAAY,GAEZnF,KAAM,GACNC,MAAM,EACNkB,QAAQ,EACRjB,cAAc,MAIpBoE,SAAWV,IACTX,EAAMqB,SAASV,IAEjBR,YAAY,gBAAeR,SAAA,EAE3BF,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAM,GAAEhB,SAAC,mBACvB5F,GACC0F,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACgB,UAAQ,EAAA/B,UAACF,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,MACM,QADaG,GACrDF,EAAAA,EAAAA,IAA6B9H,UAAW,IAAAgI,OAAA,EAAxCA,EAA0ClB,IAAI,CAACC,EAASsB,KACvD1C,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAAoBC,MAAc,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAAStD,IAAIoC,SAC5C,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASC,UADe,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAAStD,gBAUzCkC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACT3H,QAASA,EACToD,KAAK,OACLwE,OAAQsC,IAAA,IAAAC,EAAA,IAAC,MAAErC,GAAOoC,EAAA,OAChBxC,EAAAA,EAAAA,MAACK,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTzE,aAAc,GACd4F,QAASA,KACPxI,GACE2J,EAAAA,EAAAA,IAAe,CACbjF,UAC+B,WAAf,OAAd9C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACZhF,EAAM,eACuB,aAAf,OAAdiC,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgB8C,UACxBI,SAC+B,aAAf,OAAdlD,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WACe,WAAf,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,WACa,qBAAf,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACdhF,EAAM,cACuB,mBAAf,OAAdiC,QAAc,IAAdA,OAAc,EAAdA,EAAgB+C,UACA,OAAd/C,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,IACF,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgBkD,SAExBc,aAAc,GACdf,WAAY,GACZT,KAAM,GACNC,MAAM,EACNkB,QAAQ,EACRjB,cAAc,MAIpByC,UAAU,uCACVU,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQZ,UACZc,cACA1B,SAASuB,EAAMG,eACnBd,SAAA,EAEDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAM,GAAEhB,SAAC,sBACvB/F,GACC6F,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACgB,UAAQ,EAAA/B,UAACF,EAAAA,EAAAA,KAACkC,EAAAA,EAAU,MACQ,QADWU,GACrDT,EAAAA,EAAAA,IAA6BjI,UAAa,IAAA0I,OAAA,EAA1CA,EAA4CzB,IAAI,CAAC2B,EAAMJ,KACtD1C,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAW,OAAJ4B,QAAI,IAAJA,OAAI,EAAJA,EAAMhF,IAAIoC,SACzB,OAAJ4C,QAAI,IAAJA,OAAI,EAAJA,EAAMjH,qBAkEvBsE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UACE+C,QAASA,KACPnK,EAAS,cAAe,IACxBA,EAAS,aAAc,IACvBA,EAAS,aAAc,IACvBA,EAAS,aAAc,IACvBA,EAAS,OAAQ,IACjBA,EAAS,SAAU,IAWnB+G,MAEFM,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,aAEhCF,EAAAA,EAAAA,KAAA,UACE+C,QAASA,KACPpD,MAEFM,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,qBAQ1C,OACEF,EAAAA,EAAAA,KAACgD,EAAAA,EAAY,CAACpB,SA5lBEqB,IAChBpI,EAAcoI,IA2lBmB/C,UAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACfF,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPjD,UAAU,kBACVJ,MAAOA,GACPsD,iBAAkB,CAAC,GACnBC,WAAYC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OACvBrD,EAAAA,EAAAA,KAACuD,EAAAA,IAAmB,CAClBC,KAAM,GACNC,MAAO,CACLC,MAAO,QACPC,UAAWL,EAAW,iBAAmB,eACzCM,WAAY,6BAKpBzD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oEAAmEC,SAAA,EAChFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QACE6D,QAAQ,WACR5D,UAAU,mCAAkCC,SAC7C,oBAGDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACLsD,GAAG,WACH5C,MAAOnI,EACP6I,SArzBgBqB,IAC5BjK,EAAY+K,OAAOd,IACnB3H,EAAeyI,OAAO,KAozBV9D,UAAU,mKAAkKC,SAE3K8D,EAAAA,GAAe7C,IAAKqC,IACnBxD,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAAYC,MAAOsC,EAAKtD,SACnCsD,GADiBA,UAO1BrD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UACE+C,QAASA,KA1iBHnD,WAAa,IAADqE,EAAAC,EAC9B,MAAMC,EAAM,IAAIC,EAAAA,GAAM,CACpBC,YAAa,YACbC,KAAM,OAERH,EAAII,YAAY,IAChB,MAWMC,QAAgC,OAAfC,EAAAA,QAAe,IAAfA,EAAAA,OAAe,EAAfA,EAAAA,EAAiBhF,sBACtCrC,IAAqB,KAGvB,IAAKhE,IAA0BoL,EAAU,OACzC,MAAME,EAAe,OAARF,QAAQ,IAARA,GAAc,QAANP,EAARO,EAAU5F,YAAI,IAAAqF,GAAM,QAANC,EAAdD,EAAgBU,YAAI,IAAAT,OAAZ,EAARA,EAAsB/C,IAAI,CAACvC,EAAM8D,KAAW,IAADkC,EAAAC,EACtD,MAAO,CACLnC,EAAQ,GACJ,OAAJ9D,QAAI,IAAJA,GAAgB,QAAZgG,EAAJhG,EAAMkG,kBAAU,IAAAF,OAAZ,EAAJA,EAAkBvD,WAAY,KAC1B,OAAJzC,QAAI,IAAJA,GAAoB,QAAhBiG,EAAJjG,EAAMmG,sBAAc,IAAAF,OAAhB,EAAJA,EAAsBhJ,OAAQ,KAC1B,OAAJ+C,QAAI,IAAJA,OAAI,EAAJA,EAAMoG,WAAY,IAClBC,MAAMC,QAAY,OAAJtG,QAAI,IAAJA,OAAI,EAAJA,EAAMuG,aAChBvG,EAAKuG,YAAYhE,IAAKiE,IAAW,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAK/D,WAAY,KAAKgE,KAAK,OACrD,OAAJzG,QAAI,IAAJA,OAAI,EAAJA,EAAMuG,cAAe,KACrB,OAAJvG,QAAI,IAAJA,OAAI,EAAJA,EAAMtC,gBAAiB,KACnB,OAAJsC,QAAI,IAAJA,OAAI,EAAJA,EAAMF,YAAa,KACf,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMC,eAAgB,KAElB,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMH,SAAU,QAGpB6G,EAAAA,EAAAA,IAAUnB,EAAK,CACboB,OAAQ,GACRC,KAAM,CAlCQ,CACd,QACA,eACA,aACA,YACA,gBACA,iBACA,aACA,gBACA,WA0BAd,KAAMA,EACNe,OAAQ,CAAEC,WAAY,IACtBC,OAAQ,CACNC,YAAa,EACbC,SAAU,GACVC,OAAQ,SACRC,OAAQ,QAEVC,WAAY,CACVC,UAAW,CAAC,IAAK,IAAK,KACtBC,UAAW,CAAC,EAAG,EAAG,GAClBC,UAAW,QAEbC,mBAAoB,CAClBH,UAAW,CAAC,IAAK,IAAK,QAG1B9B,EAAIkC,KAAK,uBAifKC,IAEFrG,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,kBAEhCF,EAAAA,EAAAA,KAAA,UACE+C,QAASA,KAtoBDnD,WAAa,IAAD2G,EAAAC,EAChC,MAAMC,EAAW,IAAIC,EAAAA,SACfC,EAAYF,EAASG,aAAa,kBAExCD,EAAUE,QAAU,CAClB,CAAEC,OAAQ,QAAShH,IAAK,MAAOiH,MAAO,IACtC,CAAED,OAAQ,cAAehH,IAAK,aAAciH,MAAO,IACnD,CAAED,OAAQ,aAAchH,IAAK,aAAciH,MAAO,IAClD,CAAED,OAAQ,YAAahH,IAAK,WAAYiH,MAAO,IAC/C,CAAED,OAAQ,gBAAiBhH,IAAK,OAAQiH,MAAO,IAC/C,CAAED,OAAQ,iBAAkBhH,IAAK,gBAAiBiH,MAAO,IACzD,CAAED,OAAQ,aAAchH,IAAK,YAAaiH,MAAO,IACjD,CAAED,OAAQ,gBAAiBhH,IAAK,eAAgBiH,MAAO,IACvD,CAAED,OAAQ,SAAUhH,IAAK,SAAUiH,MAAO,KAG1BJ,EAAUK,OAAO,GACzBC,SAAUC,IAClBA,EAAKC,KAAO,CACVrE,KAAM,UACNsE,QAAS,QACTC,QAAS,CAAEC,KAAM,aAEnBJ,EAAKK,KAAO,CAAEC,MAAM,GACpBN,EAAKO,UAAY,CAAEC,SAAU,SAAUhC,WAAY,UACnDwB,EAAKS,OAAS,CACZC,IAAK,CAAEnE,MAAO,QACdoE,KAAM,CAAEpE,MAAO,QACfqE,OAAQ,CAAErE,MAAO,QACjBsE,MAAO,CAAEtE,MAAO,WAIpB,MAAMe,QAAgC,OAAfC,EAAAA,QAAe,IAAfA,EAAAA,OAAe,EAAfA,EAAAA,EAAiBhF,sBACtCrC,IAAqB,KAIvB,IAAKhE,IAA0BoL,EAAU,OACzC,MAAMwD,EAAkB,OAARxD,QAAQ,IAARA,GAAc,QAAN+B,EAAR/B,EAAU5F,YAAI,IAAA2H,GAAM,QAANC,EAAdD,EAAgB5B,YAAI,IAAA6B,OAAZ,EAARA,EAAsBrF,IAAI,CAACvC,EAAM8D,KAAW,IAADuF,EAAAC,EACzD,MAAO,CACLC,IAAKzF,EAAQ,EACb0F,YAAgB,OAAJxJ,QAAI,IAAJA,GAAgB,QAAZqJ,EAAJrJ,EAAMkG,kBAAU,IAAAmD,OAAZ,EAAJA,EAAkB5G,WAAY,IAC1CxH,YAAgB,OAAJ+E,QAAI,IAAJA,GAAoB,QAAhBsJ,EAAJtJ,EAAMmG,sBAAc,IAAAmD,OAAhB,EAAJA,EAAsBrM,OAAQ,IAC1CmJ,UAAc,OAAJpG,QAAI,IAAJA,OAAI,EAAJA,EAAMoG,WAAY,IAC5BnJ,KAAMoJ,MAAMC,QAAY,OAAJtG,QAAI,IAAJA,OAAI,EAAJA,EAAMuG,aACtBvG,EAAKuG,YAAYhE,IAAKiE,IAAW,OAAHA,QAAG,IAAHA,OAAG,EAAHA,EAAK/D,WAAY,KAAKgE,KAAK,OACrD,OAAJzG,QAAI,IAAJA,OAAI,EAAJA,EAAMuG,cAAe,IACzB7I,eAAmB,OAAJsC,QAAI,IAAJA,OAAI,EAAJA,EAAMtC,gBAAiB,IACtCoC,WAAe,OAAJE,QAAI,IAAJA,OAAI,EAAJA,EAAMF,YAAa,IAC9B2J,cAAkB,OAAJzJ,QAAI,IAAJA,OAAI,EAAJA,EAAMC,eAAgB,IACpCJ,QAAY,OAAJG,QAAI,IAAJA,OAAI,EAAJA,EAAMH,SAAU,OAGrB,OAAPuJ,QAAO,IAAPA,GAAAA,EAASM,QAASC,IACJ5B,EAAU6B,OAAOD,GACzBtB,SAAUC,IACZA,EAAKO,UAAY,CAAEC,SAAU,SAAUhC,WAAY,QACnDwB,EAAKS,OAAS,CACZC,IAAK,CAAEnE,MAAO,QACdoE,KAAM,CAAEpE,MAAO,QACfqE,OAAQ,CAAErE,MAAO,QACjBsE,MAAO,CAAEtE,MAAO,aAMtBkD,EAAU8B,WAAa,CACrBC,KAAM,KACNC,GAAI,MAINlC,EAASmC,KAAKC,cAAcC,KAAMC,IAChC,MAAMC,EAAO,IAAIC,KAAK,CAACF,GAAS,CAC9BjG,KAAM,sEAEFoG,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOC,IAAIC,gBAAgBP,GAChCE,EAAKM,SAAW,sBAChBN,EAAKO,WAsjBOC,IAEFzJ,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,6BAKtCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uDAAsDC,SAAA,EACnEC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,+CAA8CC,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kGAAiGC,SAAA,EAC7GF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uDAAsDC,SAAC,WAIrEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAAC,iBAG9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAAC,gBAG9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAAC,eAI9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAAC,mBAI9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UAC3DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,SAAC,sBAE9BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAAC,gBAG9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAAC,mBAI9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAAC,gBAKjE7G,GACC2G,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACpCF,EAAAA,EAAAA,KAAA,MACE2J,QAAS,GACT1J,UAAU,2EAA0EC,UAEpFF,EAAAA,EAAAA,KAAC4J,EAAAA,EAAO,SAIZ5J,EAAAA,EAAAA,KAAA,SAAAE,SACG9G,IAA8C,OAArBA,QAAqB,IAArBA,OAAqB,EAArBA,EAAuBsE,QAAS,EACnC,OAArBtE,QAAqB,IAArBA,OAAqB,EAArBA,EAAuB+H,IAAI,CAACC,EAASsB,KAAK,IAAAmH,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACxC/J,EAAAA,EAAAA,MAAA,MACEF,UAAS,kBAAA9E,OAAoBuH,EAAQ,IAAM,EAAI,kBAAoB,WAAU,gDAC5BxC,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAC1DwC,EAAQ,GAAKrH,EAAc,GAAKtC,KAmBnCiH,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UACnD,OAAPkB,QAAO,IAAPA,GAAmB,QAAZyI,EAAPzI,EAAS0D,kBAAU,IAAA+E,OAAZ,EAAPA,EAAqBxI,WAAY,OAGpCrB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UACnD,OAAPkB,QAAO,IAAPA,GAAuB,QAAhB0I,EAAP1I,EAAS2D,sBAAc,IAAA+E,OAAhB,EAAPA,EAAyBjO,OAAQ,OAEpCmE,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UACnD,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAAS4D,WAAY,OAExBhF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UAC3DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,IAAS,OAAPkB,QAAO,IAAPA,GAAuB,QAAhB2I,EAAP3I,EAAS+D,YAAY,UAAE,IAAA4E,OAAhB,EAAPA,EAAyB1I,YAAgB,KACxC,OAAPD,QAAO,IAAPA,GAAoB,QAAb4I,EAAP5I,EAAS+D,mBAAW,IAAA6E,OAAb,EAAPA,EAAsBtM,QAAS,GAC9ByC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yFAAwFC,SAAA,CACpG,IAAI,IACH,KACFC,EAAAA,EAAAA,MAAA,OACE4C,QAASA,KAnhCV3B,KAC3BrH,EAAYqH,GAAoB,IAChCnH,GAAY,IAkhCkBkQ,CAA2B,OAAP/I,QAAO,IAAPA,OAAO,EAAPA,EAAS+D,cAE/BlF,UAAU,kGAAiGC,SAAA,EAEnG,OAAPkB,QAAO,IAAPA,GAAoB,QAAb6I,EAAP7I,EAAS+D,mBAAW,IAAA8E,OAAb,EAAPA,EAAsBvM,QAAS,EAAG,UAIvC,SAKNsC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UACnD,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAAS9E,gBAAiB,OAG7B0D,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UACnD,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAAS1C,YAAa,OAGzBsB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UACnD,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASvC,eAAgB,OAG5BmB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oCAAmCC,UAC/CF,EAAAA,EAAAA,KAAA,QACEC,UAAS,iDAAA9E,OAC+B,cAAb,OAAPiG,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QACvB,yBACoB,cAAb,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QACP,0BAEA,uBADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,2BAEA,2BADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,2BAEA,0BADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,yBAEA,wBADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,2BAEA,sBADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,2BAEA,0BADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,yBAEA,sBADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,yBAEA,eADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,0BAEA,eADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,wBAEA,uBADO,OAAP2C,QAAO,IAAPA,OAAO,EAAPA,EAAS3C,QAEP,yBACA,sBAAqB,kEAEnDyB,SAEU,OAAPkB,QAAO,IAAPA,GAAe,QAAR8I,EAAP9I,EAAS3C,cAAM,IAAAyL,OAAR,EAAPA,EACGE,QAAQ,KAAM,KACfpJ,cACAoJ,QAAQ,QAAUC,GAASA,EAAKC,yBAQ3CtK,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCF,EAAAA,EAAAA,KAAA,MACE2J,QAAS,GACT1J,UAAU,2EAA0EC,SACrF,6BAQXF,EAAAA,EAAAA,KAACuK,EAAAA,EAAK,CACJtK,UAAU,sCACVuK,MAAM,YACNC,KAAMzQ,EACN0Q,SAAUA,IAAMzQ,GAAY,GAC5B0Q,OAAQ,KAAKzK,UAEbC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,+CAA8CC,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kGAAiGC,SAAA,EAC7GF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SAAC,WAI1DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,mBAInDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,WACnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,gBAGnC,GAAnBpG,EAAS4D,QACRsC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACpCF,EAAAA,EAAAA,KAAA,MACE2J,QAAS,GACT1J,UAAU,gEAA+DC,UAEzEF,EAAAA,EAAAA,KAAC4J,EAAAA,EAAO,SAIZ5J,EAAAA,EAAAA,KAAA,SAAAE,SACGpG,IAAoB,OAARA,QAAQ,IAARA,OAAQ,EAARA,EAAU4D,QAAS,EACtB,OAAR5D,QAAQ,IAARA,OAAQ,EAARA,EAAUqH,IAAI,CAACC,EAASsB,KAAK,IAAAkI,EAAAC,EAAA,OAC3B1K,EAAAA,EAAAA,MAAA,MACEF,UAAS,kBAAA9E,OAAoBuH,EAAQ,IAAM,EAAI,kBAAoB,WAAU,gDAC5BxC,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAC/CwC,EAAQ,KAmBX1C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SACxC,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASC,YAGZrB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,UACxC,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAAS0J,QAAS,OAGrB3K,EAAAA,EAAAA,MAAA,MAAIF,UAAU,qCAAoCC,SAAA,EACxC,OAAPkB,QAAO,IAAPA,GAAe,QAARwJ,EAAPxJ,EAAS2J,cAAM,IAAAH,OAAR,EAAPA,EAAiBI,OAAQ,IAAK,KACvB,OAAP5J,QAAO,IAAPA,GAAe,QAARyJ,EAAPzJ,EAAS2J,cAAM,IAAAF,OAAR,EAAPA,EAAiBI,SAAU,aAWlCjL,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCF,EAAAA,EAAAA,KAAA,MACE2J,QAAS,GACT1J,UAAU,gEAA+DC,SAC1E,kCAUfF,EAAAA,EAAAA,KAACkL,EAAAA,EAAgB,CACfC,WAAY7R,EACZP,SAAUA,EACVsC,YAAaA,EACbuG,SA9lCoBwJ,IAC1B9P,EAAe8P,UAkmCnB,C","sources":["pages/reportsManager/taskReports/stopped_task_report/StoppedTaskReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { stoppedTaskReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\n\nfunction StoppedTaskReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const {\n    stoppedTaskReportList,\n    stoppedTaskReportFunc_loading,\n    totalstoppedTaskCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const [empArray, setEmpArray] = useState([]);\n  const [empModal, setEmpModal] = useState(false);\n  const handleEmployeeModal = (element) => {\n    setEmpArray(element ? element : []);\n    setEmpModal(true);\n  };\n\n  const { taskTypeList, loading: taskTypeListLoading } = useSelector((state) => state.taskType);\n  const { clientList, loading: clientListLoading } = useSelector((state) => state.client);\n  const { clientGroupList } = useSelector((state) => state.clientGroup);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n  const daterange = useWatch({\n    control,\n    name: \"daterange\",\n    defaultValue: \"\",\n  });\n  // const employeeIds = useWatch({\n  //   control,\n  //   name: \"employeeId\",\n  //   defaultValue: [],\n  // });\n\n  const employeeId = useWatch({\n    control,\n    name: \"employeeId\",\n    defaultValue: \"\",\n  });\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n    defaultValue: dayjs().subtract(1, \"month\"),\n  });\n  const endDate = useWatch({\n    control,\n    name: \"endDate\",\n    defaultValue: dayjs(),\n  });\n\n  const priority = useWatch({\n    control,\n    name: \"priority\",\n    defaultValue: \"\",\n  });\n\n  const financialYear = useWatch({\n    control,\n    name: \"financialYear\",\n    defaultValue: \"\",\n  });\n\n  const month = useWatch({\n    control,\n    name: \"month\",\n    defaultValue: \"\",\n  });\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const client = useWatch({\n    control,\n    name: \"client\",\n    defaultValue: [],\n  });\n\n  const task = useWatch({\n    control,\n    name: \"task\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1));\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const combinedMonth = [...months, ...quarter];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentIds: [],\n        clientIds: client,\n        employeIds: [],\n        taskTypeIds: [],\n        groupIds: [],\n        startDate: \"\",\n        endDate: \"\",\n        dateRange: daterange,\n        status: Status,\n        priority: priority,\n        monthName: months.find((data) => {\n          return data == month;\n        })\n          ? month\n          : \"\",\n        monthQuaters: quarter.find((data) => {\n          return data == month;\n        })\n          ? month\n          : \"\",\n        financialYear: financialYear,\n        departmentId: department,\n        clientId: \"\",\n        employeId: employeeId,\n        taskTypeId: task,\n        groupId: groupName,\n      },\n    };\n  };\n  useEffect(() => {\n    fetchOverAllTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchOverAllTaskReport = () => {\n    dispatch(stoppedTaskReportFunc(requestPayLoadReturn(true)));\n  };\n\n  useEffect(() => { }, []);\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchOverAllTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"StopTaskReport\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Client Name\", key: \"clientName\", width: 30 },\n      { header: \"Department\", key: \"department\", width: 25 },\n      { header: \"Task Name\", key: \"taskName\", width: 30 },\n      { header: \"Employee Name\", key: \"name\", width: 30 },\n      { header: \"Financial Year\", key: \"financialYear\", width: 20 },\n      { header: \"Month Name\", key: \"monthName\", width: 20 },\n      { header: \"Month Quaters\", key: \"monthQuarter\", width: 20 },\n      { header: \"Status\", key: \"status\", width: 15 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.stoppedTaskReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n\n    if (!stoppedTaskReportList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1,\n        clientName: data?.clientData?.fullName || \"-\",\n        department: data?.departmentData?.name || \"-\",\n        taskName: data?.taskName || \"-\",\n        name: Array.isArray(data?.employeData)\n          ? data.employeData.map((emp) => emp?.fullName || \"-\").join(\", \")\n          : data?.employeData || \"-\",\n        financialYear: data?.financialYear || \"-\",\n        monthName: data?.monthName || \"-\",\n        monthQuarter: data?.monthQuaters || \"-\",\n        status: data?.status || \"-\",\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"StopTaskReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n    const headers = [\n      \"S.No.\",\n      \" Client Name\",\n      \"Department\",\n      \"Task Name\",\n      \"Employee Name\",\n      \"financial Year\",\n      \"Month Name\",\n      \"Month Quaters\",\n      \"Status\",\n    ];\n    const response = await reportsServices?.stoppedTaskReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!stoppedTaskReportList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        data?.clientData?.fullName || \"-\",\n        data?.departmentData?.name || \"-\",\n        data?.taskName || \"-\",\n        Array.isArray(data?.employeData)\n          ? data.employeData.map((emp) => emp?.fullName || \"-\").join(\", \")\n          : data?.employeData || \"-\",\n        data?.financialYear || \"-\",\n        data?.monthName || \"-\",\n        data?.monthQuaters || \"-\",\n\n        data?.status || \"-\",\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`StopTaskReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1 2xl:flex justify-between items-center\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div className=\"\">\n              <Controller\n                name=\"employeeId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    // mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport \"\n                    placeholder=\"Please select employee\"\n                    onFocus={handleEmployeeFocus}\n                    options={employeList?.map((data) => {\n                      return { value: data._id, label: data.fullName };\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n              {errors.employeeId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.employeeId.message}\n                </p>\n              )}\n            </div>\n            {/* <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Please select Task Status\"\n                    options={CLIENT_TASK_STATUS_ARR?.map((array) => {\n                      return { value: array, label: array };\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div> */}\n\n            {/* <div>\n              <Controller\n                name=\"priority\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    placeholder=\"Select Priority\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Priority</Select.Option>\n                    {PRIORITY?.map((array) => {\n                      return (\n                        <Select.Option value={array}>{array}</Select.Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              />\n            </div>\n\n            <div>\n              <Controller\n                control={control}\n                name=\"financialYear\"\n                rules={{ required: \"Financial year is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    placeholder={\"Select Financial year\"}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">\n                      Select Financial year\n                    </Select.Option>\n                    {financialYears.map((year, index) => (\n                      <Select.Option key={index} value={year}>\n                        {year}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </div>\n\n            <div>\n              <Controller\n                control={control}\n                name=\"month\"\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    placeholder=\"Select month \"\n                    className='inputAntdSelectClassNameFilterReport'\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select month </Select.Option>\n                    {combinedMonth.map((month, index) => (\n                      <Select.Option key={index} value={month}>\n                        {month}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </div> */}\n            <div className=\"\">\n              <Controller\n                name=\"department\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        deptSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\n                            \"admin\",\n                            \"company\",\n                            \"companyDirector\",\n                          ].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"client\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    mode=\"multiple\"\n                    className={`inputAntdMultiSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        clientSearch({\n                          companyId:\n                            userInfoglobal?.userType === \"company\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.companyId,\n                          branchId:\n                            userInfoglobal?.userType === \"company\" ||\n                              userInfoglobal?.userType === \"admin\" ||\n                              userInfoglobal?.userType === \"companyDirector\"\n                              ? watch(\"PDBranchId\")\n                              : userInfoglobal?.userType === \"companyBranch\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.branchId,\n                          groupId: \"\",\n                          directorId: \"\",\n                          organizationId: \"\",\n                          industryId: \"\",\n                          // departmentId: department,\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select client\"\n                  >\n                    <Select.Option value=\"\"> Select Client</Select.Option>\n                    {clientListLoading ?\n                      <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(clientList)?.map((element, index) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName}\n                        </Select.Option>\n                      )))}\n                  </Select>\n                )}\n              />\n            </div>\n\n\n            <div className=\"\">\n              <Controller\n                control={control}\n                name=\"task\"\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    onFocus={() => {\n                      dispatch(\n                        taskTypeSearch({\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? watch(\"PDCompanyId\")\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId:\n                            userInfoglobal?.userType === \"company\" ||\n                              userInfoglobal?.userType === \"admin\" ||\n                              userInfoglobal?.userType === \"companyDirector\"\n                              ? watch(\"PDBranchId\")\n                              : userInfoglobal?.userType === \"companyBranch\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.branchId,\n                          // departmentId: watch(\"PDDepartmentId\")?.value,\n                          departmentId: \"\",\n                          directorId: \"\",\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                        })\n                      );\n                    }}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\"> Select Task Name</Select.Option>\n                    {taskTypeListLoading ?\n                      <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(taskTypeList)?.map((type, index) => (\n                        <Select.Option value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      )))}\n                  </Select>\n                )}\n              />\n            </div>\n            {/* <Controller\n  name=\"groupName\"\n  control={control}\n \n  render={({ field }) => (\n    <Select\n      {...field}\n      className=\"inputAntdSelectClassNameFilterReport\"\n      options={[\n        { label: \"Select Group Type\", value: \"\" },\n        ...clientGroupList?.map((el) => ({\n          label: `${el.fullName} (${el.groupName})`,\n          value: el._id,\n        })),\n      ]}\n      placeholder=\"Select Group Type\"\n      onFocus={handleFocusClientGrp}\n      classNamePrefix=\"react-select\"\n      isSearchable\n       onChange={(value) => {\n                    field.onChange(value);\n                  }}\n      value={field?.value\n       \n      }\n    />\n  )}\n/> */}\n            {/* <div>\n              <Controller\n                name=\"startDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs().subtract(1, \"month\")}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"endDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs()}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div> */}\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PdCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"employeeId\", \"\");\n                setValue(\"task\", \"\");\n                setValue(\"client\", []);\n                // setValue(\"status\", \"\");\n                // setValue(\"daterange\", \"\");\n                // setValue(\"shift\", \"\");\n                // setValue(\"workType\", \"\");\n                // setValue(\"startDate\", \"\");\n                // setValue(\"endDate\", \"\");\n                // setValue(\"priority\", \"\");\n                // setValue(\"financialYear\", \"\");\n                // setValue(\"month\", \"\");\n                // setValue(\"groupName\", \"\");\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1 justify-between items-center\">\n            <div className=\"flex py-1 items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Client Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Department\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Task Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Employee Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  <div className=\"flex gap-1\">financial Year</div>\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Month Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Month Quaters\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Status\n                </th>\n              </tr>\n            </thead>\n            {stoppedTaskReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {stoppedTaskReportList && stoppedTaskReportList?.length > 0 ? (\n                  stoppedTaskReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                                      {element.profileImage ? (\n                                        <img\n                                          alt=\"\"\n                                          src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                                          className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                                        />\n                                      ) : (\n                                        <img\n                                          alt=\"\"\n                                          src={`/images/avatar.jpg`}\n                                          className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                                        />\n                                      )}\n                                    </td> */}\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.clientData?.fullName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.departmentData?.name || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.taskName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        <div className=\"flex gap-2\">\n                          <div> {element?.employeData[0]?.fullName}</div>{\" \"}\n                          {element?.employeData?.length > 1 ? (\n                            <div className=\"text-header flex justify-center items-center gap-1 rounded-full  text-semibold text-sm\">\n                              {\" \"}\n                              +{\" \"}\n                              <div\n                                onClick={() => {\n                                  handleEmployeeModal(element?.employeData);\n                                }}\n                                className=\"border justify-center items-center flex h-7 w-7 bg-header  text-white text-[12px] rounded-full \"\n                              >\n                                {element?.employeData?.length - 1}{\" \"}\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n                        </div>\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.financialYear || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.monthName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.monthQuaters || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap border-none p-2\">\n                        <span\n                          className={`\n                                            ${element?.status === \"Assigned\"\n                              ? \"bg-blue-500 text-white\"\n                              : element?.status === \"Accepted\"\n                                ? \"bg-green-500 text-white\"\n                                : element?.status ===\n                                  \"Pending_at_client\"\n                                  ? \"bg-yellow-300 text-black\"\n                                  : element?.status ===\n                                    \"Pending_at_department\"\n                                    ? \"bg-purple-300 text-black\"\n                                    : element?.status ===\n                                      \"Pending_at_colleague\"\n                                      ? \"bg-teal-300 text-black\"\n                                      : element?.status ===\n                                        \"Pending_at_manager\"\n                                        ? \"bg-orange-300 text-black\"\n                                        : element?.status ===\n                                          \"Work_in_progress\"\n                                          ? \"bg-indigo-500 text-white\"\n                                          : element?.status ===\n                                            \"Pending_for_approval\"\n                                            ? \"bg-pink-300 text-black\"\n                                            : element?.status ===\n                                              \"Pending_for_fees\"\n                                              ? \"bg-gray-400 text-black\"\n                                              : element?.status ===\n                                                \"Completed\"\n                                                ? \"bg-green-600 text-white\"\n                                                : element?.status ===\n                                                  \"Task_Stop\"\n                                                  ? \"bg-red-600 text-white\"\n                                                  : element?.status ===\n                                                    \"reAssign_to_other\"\n                                                    ? \"bg-cyan-700 text-white\"\n                                                    : \"bg-white text-black\"\n                            } border-header border-[1px] px-2 py-1.5 rounded-lg text-[12px]`}\n                        // onClick={() => handleStatusClick(element)}\n                        >\n                          {element?.status\n                            ?.replace(/_/g, \" \")\n                            .toLowerCase()\n                            .replace(/\\b\\w/g, (char) => char.toUpperCase())}\n                          {/* {statusMapping[element?.status] ||\n                                              \"Unknown Status\"} */}\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n          <Modal\n            className=\"antmodalclassName !w-[60%] !h-[50%]\"\n            title=\"Employees\"\n            open={empModal}\n            onCancel={() => setEmpModal(false)}\n            footer={null}\n          >\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                    S.No.\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Employee Name\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th>\n                </tr>\n              </thead>\n              {empArray.length == 0 ? (\n                <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={15}\n                    className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr>\n              ) : (\n                <tbody>\n                  {empArray && empArray?.length > 0 ? (\n                    empArray?.map((element, index) => (\n                      <tr\n                        className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                          } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                      >\n                        <td className=\"whitespace-nowrap  border-none p-2\">\n                          {index + 1}\n                        </td>\n\n                        {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                                                      {element.profileImage ? (\n                                                        <img\n                                                          alt=\"\"\n                                                          src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                                                          className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                                                        />\n                                                      ) : (\n                                                        <img\n                                                          alt=\"\"\n                                                          src={`/images/avatar.jpg`}\n                                                          className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                                                        />\n                                                      )}\n                                                    </td> */}\n\n                        <td className=\"whitespace-nowrap  border-none p-2\">\n                          {element?.fullName}\n                        </td>\n\n                        <td className=\"whitespace-nowrap  border-none p-2\">\n                          {element?.email || \"-\"}\n                        </td>\n\n                        <td className=\"whitespace-nowrap  border-none p-2\">\n                          {element?.mobile?.code || \"-\"}{\" \"}\n                          {element?.mobile?.number || \"-\"}\n                        </td>\n\n                        {/* <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                                                      <div onClick={()=>{handleDepartmentModal(element)}} className=\"flex justify-center items-center rounded-md h-10 w-10 border-2 border-cyan-500\">\n                                                        {element?.departmentData?.length || 0}\n                                                      </div>\n                                                    </td> */}\n                      </tr>\n                    ))\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={15}\n                        className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              )}\n            </table>\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={totalstoppedTaskCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default StoppedTaskReport;\n"],"names":["control","formState","errors","setValue","watch","useForm","pageSize","setPageSize","useState","dispatch","useDispatch","stoppedTaskReportList","stoppedTaskReportFunc_loading","totalstoppedTaskCount","useSelector","state","reports","departmentListData","loading","depLoading","department","empArray","setEmpArray","empModal","setEmpModal","taskTypeList","taskTypeListLoading","taskType","clientList","clientListLoading","client","clientGroupList","clientGroup","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","daterange","employeeId","priority","dayjs","subtract","financialYear","month","task","groupName","useEffect","timer","setTimeout","clearTimeout","generateFinancialYears","financialYears","year","push","months","quarter","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","departmentIds","clientIds","employeIds","taskTypeIds","groupIds","startDate","endDate","dateRange","status","monthName","find","data","monthQuaters","departmentId","clientId","employeId","taskTypeId","groupId","fetchOverAllTaskReport","handleEmployeeFocus","employeSearch","includes","isBranch","isDirector","stoppedTaskReportFunc","branchSearch","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","Option","value","map","element","fullName","PDBranchId","message","_ref2","allowClear","onFocus","options","onChange","val","_ref3","_sortByPropertyAlphab","deptSearch","disabled","ListLoader","sortByPropertyAlphabetically","_ref4","_sortByPropertyAlphab2","mode","clientSearch","organizationId","industryId","index","_ref5","_sortByPropertyAlphab3","taskTypeSearch","type","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref6","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","htmlFor","id","Number","pazeSizeReport","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","body","docs","_data$clientData2","_data$departmentData2","clientData","departmentData","taskName","Array","isArray","employeData","emp","join","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$clientData","_data$departmentData","sno","clientName","monthQuarter","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","_element$clientData","_element$departmentDa","_element$employeData$","_element$employeData","_element$employeData2","_element$status","handleEmployeeModal","replace","char","toUpperCase","Modal","title","open","onCancel","footer","_element$mobile","_element$mobile2","email","mobile","code","number","CustomPagination","totalCount","page"],"sourceRoot":""}