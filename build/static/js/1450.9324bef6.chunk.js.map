{"version":3,"file":"static/js/1450.9324bef6.chunk.js","mappings":"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","sources":["pages/visitorManagement/visitreason/EditVisitReason.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { decrypt } from \"../../../config/Encryption\";\nimport { useEffect } from \"react\";\nimport {\n  domainName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputLabelClassName,\n} from \"../../../constents/global\";\n\n\n\n\n\nimport { Select } from \"antd\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport { getVisitReasonDetails, updateVisitReasonType } from \"./visitReasonFeatures/_visitReason_type_reducers\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\n\n\nconst EditVisitReason = () => {\n  const { loading: VisitReasonLoading } = useSelector((state) => state.visitReason);\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { visitReasonIdEnc } = useParams();\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const VisitReasonTypeId = decrypt(visitReasonIdEnc);\n  const { VisitReasonDetails } = useSelector((state) => state.visitReason);\n\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector(\n    (state) => state.branch\n  );\n  useEffect(() => {\n    dispatch(employeSearch());\n  }, []);\n  useEffect(() => {\n    let reqData = {\n      _id: VisitReasonTypeId,\n    };\n    dispatch(getVisitReasonDetails(reqData));\n  }, []);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  useEffect(() => {\n    if (VisitReasonDetails) {\n      // setValue(\"PDCompanyId\", VisitReasonDetails?.companyId);\n      // setValue(\"PDBranchId\", VisitReasonDetails?.branchId);\n      setValue(\"reason\", VisitReasonDetails?.title);\n      setValue(\"status\", VisitReasonDetails?.status);\n\n    }\n  }, [VisitReasonDetails]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: VisitReasonTypeId,\n      companyId: VisitReasonDetails?.companyId,\n      directorId: VisitReasonDetails?.directorId,\n      branchId: VisitReasonDetails?.branchId,\n      title: data?.reason,\n      isDeleted: false,\n      status: data?.status,\n    };\n    dispatch(updateVisitReasonType(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            {/* {userInfoglobal?.userType === \"admin\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Company <span className=\"text-red-600\">*</span>\n              </label>\n              <select\n                {...register(\"PDCompanyId\", {\n                  required: \"company is required\",\n                })}\n                className={` ${inputClassName} ${errors.PDCompanyId\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n              >\n                <option className=\"\" value=\"\">\n                  Select Comapany\n                </option>\n                {companyList?.map((type) => (\n                  <option value={type?._id}>{type?.fullName}</option>\n                ))}\n              </select>\n              {errors.PDCompanyId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDCompanyId.message}\n                </p>\n              )}\n            </div>}\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Branch <span className=\"text-red-600\">*</span>\n              </label>\n              <select\n                {...register(\"PDBranchId\", {\n                  required: \"Branch is required\",\n                })}\n                className={` ${inputClassName} ${errors.PDBranchId\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n              >\n                <option className=\"\" value=\"\">\n                  Select Branch\n                </option>\n                {branchList?.map((type) => (\n                  <option value={type?._id}>{type?.fullName}</option>\n                ))}\n              </select>\n              {errors.PDBranchId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDBranchId.message}\n                </p>\n              )}\n            </div>} */}\n\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Visit Reason <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"reason\", {\n                  required: \"Visit Reason is required\",\n                })}\n                className={`${inputClassName} ${errors.reason ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Visit Reason\"\n              />\n              {errors.reason && (\n                <p className=\"text-red-500 text-sm\">{errors.reason.message}</p>\n              )}\n            </div>\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Status <span className=\"text-red-600\">*</span></label>\n              <Controller\n                name=\"status\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.status ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Status\"\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    <Select.Option value={true}>Active</Select.Option>\n                    <Select.Option value={false}>In Active</Select.Option>\n                  </Select>\n                )}\n              />\n              {errors.status && <p className=\"text-red-500 text-sm\">{errors.status.message}</p>}\n            </div>\n\n            {/* <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Status</label>\n              <select\n                {...register(\"status\")}\n                className={`${inputClassName} ${errors.status ? \"border-[1px] \" : \"border-gray-300\"}`}\n              >\n                <option value={true}>Active</option>\n                <option value={false}>InActive</option>\n              </select>\n              {errors.status && (\n                <p className=\"text-red-500 text-sm\">{errors.status.message}</p>\n              )}\n            </div> */}\n\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={VisitReasonLoading}\n              className={`${VisitReasonLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 mt-3 rounded`}\n            >\n              {VisitReasonLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default EditVisitReason;\n"],"names":["EditVisitReason","loading","VisitReasonLoading","useSelector","state","visitReason","register","handleSubmit","control","setValue","formState","errors","useForm","dispatch","useDispatch","navigate","useNavigate","visitReasonIdEnc","useParams","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","VisitReasonTypeId","decrypt","VisitReasonDetails","companyList","company","branchList","branch","useEffect","employeSearch","reqData","_id","getVisitReasonDetails","useWatch","name","defaultValue","title","status","userType","companySearch","text","sort","isPagination","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","directorId","branchId","reason","isDeleted","updateVisitReasonType","then","error","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","Controller","render","_ref","field","Select","inputAntdSelectClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","disabled","Loader"],"sourceRoot":""}