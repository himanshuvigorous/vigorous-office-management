{"version":3,"file":"static/js/4573.90064d35.chunk.js","mappings":"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","sources":["pages/global/other/resignation/CreateEmployeeResignation.js"],"sourcesContent":["import { Controller, useForm } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {  inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport moment from \"moment\";\nimport { createResignFunc } from \"./resignationFeatures/resignation_reducers\";\nimport dayjs from \"dayjs\";\nimport getUserIds from \"../../../../constents/getUserIds\";\nimport Loader from \"../../../../global_layouts/Loader\";\n\n\nconst CreateEmployeeResignation = () => {\n    const {loading:employeeResignationLoading } = useSelector((state) => state.resignation);\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm();\n    const { userCompanyId,userType, userBranchId ,userEmployeId} = getUserIds();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      companyId: userCompanyId || \"\",\n      branchId: userBranchId || \"\",\n      employeId : userEmployeId,\n      directorId:\"\",\n      title: data?.title,\n      description: data?.description,\n      applyDate: dayjs(data?.applyDate).format(\"YYYY-MM-DD\"),\n      type:\"resignation\"\n    };\n    dispatch(createResignFunc(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  if (userType !== \"employee\") {\n    return (\n      <GlobalLayout>\n        <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n          <p className=\"text-center font-semibold\">\n            You are not an employee. This page is viewable for employees only.\n          </p>\n        </div>\n      </GlobalLayout>\n    )\n  }\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2\">\n\n\n\n \n\n\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2\">\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Title <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"title\", {\n                  required: \"Title is required\",\n                })}\n                className={`${inputClassName} ${errors.title ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Title\"\n              />\n              {errors.title && (\n                <p className=\"text-red-500 text-sm\">{errors.title.message}</p>\n              )}\n            </div>\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Description <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"description\", {\n                  required: \"Description is required\",\n                })}\n                className={`${inputClassName} ${errors.description ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Description\"\n              />\n              {errors.description && (\n                <p className=\"text-red-500 text-sm\">{errors.description.message}</p>\n              )}\n            </div>\n\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2\">\n\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Apply Date <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"applyDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker field={field} errors={errors} disabledDate={(current) => {\n                    return current && current.isBefore(moment().endOf('day'), 'day');\n                  }} />\n                )}\n              />\n              {errors.applyDate && (\n                <p className=\"text-red-500 text-sm\">Apply Date is required</p>\n              )}\n            </div>\n\n          </div>\n\n          <div className=\"flex justify-end\">\n          <button\n                         type=\"submit\"\n                         disabled={employeeResignationLoading}\n                         className={`${employeeResignationLoading ? 'bg-gray-400': 'bg-header' } text-white p-2 px-4 rounded`}\n                       >\n                       {employeeResignationLoading ? <Loader /> : 'Submit'}\n                       </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default CreateEmployeeResignation;\n"],"names":["CreateEmployeeResignation","loading","employeeResignationLoading","useSelector","state","resignation","register","handleSubmit","control","formState","errors","useForm","userCompanyId","userType","userBranchId","userEmployeId","getUserIds","dispatch","useDispatch","navigate","useNavigate","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","branchId","employeId","directorId","title","description","applyDate","dayjs","format","type","createResignFunc","then","error","concat","inputLabelClassName","_objectSpread","required","inputClassName","placeholder","message","Controller","name","render","_ref","field","CustomDatePicker","disabledDate","current","isBefore","moment","endOf","disabled","Loader"],"sourceRoot":""}