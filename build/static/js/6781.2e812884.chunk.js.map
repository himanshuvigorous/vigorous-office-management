{"version":3,"file":"static/js/6781.2e812884.chunk.js","mappings":"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","sources":["pages/reportsManager/finance_report/bankStatementReport/BankStatementSummayReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {convertIntoAmount, domainName,} from \"../../../../constents/global\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, DatePicker } from \"antd\";\nimport dayjs from \"dayjs\";\nimport { bankStatementReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { useParams } from \"react-router-dom\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\n\nfunction BankStatementSummayReport() {\n\n  \n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const { bankId } = useParams()\n\n  const [pageSize, setPageSize] = useState(10);\n \n  const [bankfinalSettledData, setBankFinalSettledData] = useState(0)\n\n  \n  const dispatch = useDispatch();\n  const {\n    bankStatementReportList,\n    bankStatementReport_loading,\n    bankStatementReportCount,\n  } = useSelector((state) => state.reports);\n  const time = useWatch({\n    control,\n    name: \"time\",\n    defaultValue: [],\n  });\n\n  const openingBalance = useMemo(() => {\n    if (\n      bankStatementReportList?.allTransactions &&\n      bankStatementReportList.allTransactions.length > 0\n    ) {\n      return bankStatementReportList.allTransactions[0].previousBalance;\n    }\n    return undefined;\n  }, [bankStatementReportList]);\n\n\n  const FormattindataFuncton = (initialData) =>{\n      if (!Array.isArray(initialData?.allTransactions) || initialData?.allTransactions?.length === 0) {\n        return [];\n  }\n\n        let acc = initialData[0]?.openingBalance ?? 0;\n    let mapOutput = [];\n\n    initialData?.allTransactions.forEach((element) => {\n    \n      const output = {\n         key:\"statement\",\n        clientName: element?.clientName ? element?.clientName : element?.groupName ? element?.groupName : '-',\n        date: element?.createdAt ? dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') : '-',\n        dateofValue: element?.date ? dayjs(element?.date).format('DD-MM-YYYY hh:mm a') : '-',\n        amountDebit: element?.debit_credit=='debit' ? element?.amount : 0,\n        amountCredit: element?.debit_credit=='credit' ? element?.amount : 0,\n        acc: element?.currentBalance,\n        Description: element?.naration || \"-\",\n        reference: element?.references ? `${element?.references} ${element?.references === 'receipt' ? element?.receiptNumber : ''}` : \"-\"\n      };\n\n      mapOutput.push(output);\n    });\n    \n    mapOutput.push({\n      key:\"total\",\n          clientName: \"Total\",\n          date: null,\n          dateofValue: null,\n          amountDebit:initialData?.summary?.totalDebit,\n          amountCredit:  initialData?.summary?.totalCredit  ,\n          acc:initialData?.summary?.closingBalance  ,\n          Description: \"\",\n          reference: ''\n        });\n\n        return mapOutput\n      }\n\n\n\n\n\n\n\n useEffect(() => {\n\n    setBankFinalSettledData(FormattindataFuncton(bankStatementReportList))\n \n}, [bankStatementReportList]);\n  const { RangePicker } = DatePicker;\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        \"companyId\": \"\",\n        \"directorId\": \"\",\n        \"branchId\": \"\",\n        \"clientIds\": [],\n        \"groupIds\": '',\n        \"bankId\": bankId,\n        startDate: time?.length > 0 ? dayjs(time[0]).format(\"YYYY-MM-DD\") : '',\n        endDate: time?.length > 0 ?  dayjs(time[1]).format(\"YYYY-MM-DD\"): '',\n        \"references\": \"\",\n        \"debit_credit\": \"\",\n        \"amountFrom\": \"\",\n        \"amountTo\": \"\",\n        \"text\": \"\",\n        \"sort\": false,\n        \"isPagination\": pagination\n\n      },\n\n    };\n  };\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const fetchClientServiceTaskReport = () => {\n    dispatch(bankStatementReportFunc(requestPayLoadReturn(true)));\n  };\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"BankSummaryDetails\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Entry Date\", key: \"entryDate\", width: 20 },\n      { header: \"value Date\", key: \"valueDate\", width: 20 },\n      { header: \"Group/Client\", key: \"groupClient\", width: 40 },\n      { header: \"Description\", key: \"description\", width: 20 },\n      { header: \"Reference\", key: \"reference\", width: 25 },\n      { header: \"Debit\", key: \"debit\", width: 15 },\n      { header: \"Credit\", key: \"credit\", width: 15 },\n      { header: \"Balance\", key: \"balance\", width: 15 },\n    ];\n\n    // Header styling\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    // API Call\n    const response = await reportsServices?.bankStatementReportFunc?.(\n      requestPayLoadReturn(false)\n    );\n\n  const transactions = FormattindataFuncton(response?.data) || [];\n    transactions?.forEach((element, index) => {\n      worksheet.addRow({\n        sno: index + 1 ,\n        entryDate:element?.date ?? \"-\",\n        valueDate: element?.dateofValue ?? \"-\",\n        groupClient: element?.clientName ?? \"-\",\n        description: element?.Description ?? \"-\",\n        reference: element?.reference ?? \"-\",\n        debit: element.amountDebit,\n        credit: element.amountCredit,\n        balance: element.acc,\n      });\n\n    });\n\n\n\n    worksheet.eachRow({ includeEmpty: false }, (row, rowNumber) => {\n      if (rowNumber === 1) return; // Skip header\n\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Enable autofilter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"H1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"BankSummaryDetails.xlsx\";\n      link.click();\n    });\n  };\n\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n\n    doc.setFontSize(16);\n    doc.text(\"Client Group Statement Report\", 40, 30);\n\n    const headers = [\n      \"S.No.\",\n      \"Entry Date\",\n      \"Value Date\",\n      \"Group/Client\",\n      \"Description\",\n      \"Reference\",\n      \"Debit\",\n      \"Credit\",\n      \"Balance\",\n    ];\n\n    const response = await reportsServices?.bankStatementReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    const transactions = FormattindataFuncton(response?.data)?? [];\n   const body =  transactions?.map((element, index) => {\n    return [  index + 1 ,\n        element?.date ?? \"-\",\n         element?.dateofValue ?? \"-\",\n        element?.clientName ?? \"-\",\n        element?.Description ?? \"-\",\n       element?.reference ?? \"-\",\n        element?.amountDebit,\n      element?.amountCredit,\n       element?.acc,]\n    });\n\n    autoTable(doc, {\n      startY: 50,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [64, 64, 64],\n        textColor: [255, 255, 255],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n\n    doc.save(\"BankSummaryDetails.pdf\");\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec]\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n            {/* {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n              <div className=\"\">\n                <Controller\n                  name=\"PDBranchId\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`inputAntdSelectClassNameFilterReport `}\n                      placeholder=\"Select Branch\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children)\n                          .toLowerCase()\n                          .includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Branch</Select.Option>\n                      {branchList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.fullName}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.PDBranchId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDBranchId.message}\n                  </p>\n                )}\n              </div>\n            )} */}\n\n            <Controller\n              name=\"time\"\n              control={control}\n              render={({ field }) => (\n                <RangePicker\n                  {...field}\n                  value={field.value}\n                  onChange={(value) => field.onChange(value)}\n                  format=\"YYYY-MM-DD\"\n                  // onOk={onOk}\n                  getPopupContainer={() => document.body} // important: avoids layout issues\n                  popupClassName=\"vertical-range-calendar\"\n                  className=\"custom-range-picker\"\n\n                />\n              )}\n            />\n\n\n\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue('time', [])\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 flex justify-end items-center\">\n            {/* <div className=\"flex items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div> */}\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"max-w-[300px] rounded overflow-hidden shadow-md p-2 mb-2 bg-white\">\n      <h2 className=\"text-md font-semibold mb-1\">Bank Details</h2>\n      <div className=\"mb-1\">\n        <span className=\"font-bold text-[14px] text-header\">Bank Name: </span>\n        <span className=\"text-gray-800 text-[13px]\">{bankStatementReportList?.bankName}</span>\n      </div>\n      <div className=\"mb-1\">\n        <span className=\"font-bold text-[14px] text-header\">Bankholder: </span>\n        <span className=\"text-gray-800 text-[13px]\">{bankStatementReportList?.bankholderName}</span>\n      </div>\n      <div className=\"mb-1\">\n        <span className=\"font-bold text-[14px] text-header\">IFSC: </span>\n        <span className=\"text-gray-800 text-[13px]\">{bankStatementReportList?.ifscCode}</span>\n      </div>\n      <div className=\"mb-1\">\n        <span className=\"font-bold text-[14px] text-header\">Branch Name: </span>\n        <span className=\"text-gray-800 text-[13px]\">{bankStatementReportList?.branchName}</span>\n      </div>\n    </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Entry Date\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Value Date\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">Group/Client</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Description\t</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">References</th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Debit\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Credit\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Balance\n                </th>\n              </tr>\n            </thead>\n            {bankStatementReport_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {bankfinalSettledData &&\n                  bankfinalSettledData?.length > 0 ? (\n                  bankfinalSettledData?.map((element, index) => {\n                    return <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.date ??  '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.dateofValue ?? '-'}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.clientName ?? \"--\"}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.Description || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.reference ?? \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                        {convertIntoAmount(element?.amountDebit) ?? '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap  text-center border-none p-2\">\n                        {convertIntoAmount(element?.amountCredit) ?? '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap  text-center border-none p-2\">\n                        { element?.acc ? element?.acc.toFixed(2) : '-'}\n                      </td>\n                    </tr>\n                  })\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n\n        </div>\n        {/* <CustomPagination\n          totalCount={bankStatementReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        /> */}\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default BankStatementSummayReport;\n"],"names":["control","formState","errors","setValue","watch","useForm","bankId","useParams","pageSize","setPageSize","useState","bankfinalSettledData","setBankFinalSettledData","dispatch","useDispatch","bankStatementReportList","bankStatementReport_loading","bankStatementReportCount","useSelector","state","reports","time","useWatch","name","defaultValue","FormattindataFuncton","useMemo","allTransactions","length","previousBalance","initialData","_initialData$allTrans","_initialData$0$openin","_initialData$","_initialData$summary","_initialData$summary2","_initialData$summary3","Array","isArray","openingBalance","mapOutput","forEach","element","output","key","clientName","groupName","date","createdAt","dayjs","format","dateofValue","amountDebit","debit_credit","amount","amountCredit","acc","currentBalance","Description","naration","reference","references","concat","receiptNumber","push","summary","totalDebit","totalCredit","closingBalance","useEffect","RangePicker","DatePicker","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","domainName","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","CompanyId","timer","setTimeout","clearTimeout","requestPayLoadReturn","pagination","arguments","undefined","reqPayload","startDate","endDate","fetchClientServiceTaskReport","bankStatementReportFunc","userType","branchSearch","text","sort","status","isPagination","companyId","_id","subtract","handleSubmit","async","items","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","_objectSpread","value","onChange","getPopupContainer","document","body","popupClassName","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref2","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","_FormattindataFuncton","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","transactions","data","map","index","_element$date2","_element$dateofValue2","_element$clientName2","_element$Description2","_element$reference2","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_reportsServices$bank","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","type","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","call","_element$date","_element$dateofValue","_element$clientName","_element$Description","_element$reference","addRow","sno","entryDate","valueDate","groupClient","description","debit","credit","balance","eachRow","includeEmpty","row","rowNumber","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","generateExcel","bankName","bankholderName","ifscCode","branchName","colSpan","Loader2","_element$date3","_element$dateofValue3","_element$clientName3","_element$reference3","_convertIntoAmount","_convertIntoAmount2","convertIntoAmount","toFixed"],"sourceRoot":""}