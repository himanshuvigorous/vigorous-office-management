{"version":3,"file":"static/js/8422.3ddeea5d.chunk.js","mappings":"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","sources":["pages/client/clientManagement/ImportCliebtsModal.js","pages/client/clientManagement/ClientManagement.js","pages/hr/onBoarding/ValidationResultsModal.js"],"sourcesContent":["import { Modal, Select } from 'antd';\nimport React, { useEffect, useRef ,useState } from 'react';\nimport { Controller, useForm, useWatch } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ListLoader from '../../../global_layouts/ListLoader';\nimport { branchSearch } from '../../branch/branchManagement/branchFeatures/_branch_reducers';\nimport { companySearch } from '../../company/companyManagement/companyFeatures/_company_reducers';\nimport { domainName, inputAntdSelectClassName, inputLabelClassName, sortByPropertyAlphabetically } from '../../../constents/global';\nimport Loader from '../../../global_layouts/Loader';\nimport { importClients } from './clientFeatures/_client_reducers';\nimport { downloadExcelFunc } from '../../../redux/_reducers/_reports_reducers';\nimport ValidationResultsModal from '../../hr/onBoarding/ValidationResultsModal';\nimport { employeExcelDownloadFunc } from '../../hr/onBoarding/onBoardingFeatures/_onBoarding_reducers';\n\nconst ImportCliebtsModal = ({ isOpen, onClose, fetchList }) => {\n    const {\n        register,\n        handleSubmit,\n        control,\n        setValue,\n        reset,\n        formState: { errors },\n    } = useForm({\n        defaultValues: {\n            filePath: []\n        }\n    });\n    const branchId = useWatch({\n        control,\n        name: \"PDBranchId\",\n        defaultValue: \"\",\n    });\n    const companyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: \"\",\n    });\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n    const dispatch = useDispatch();\n    const { branchList, branchListloading } = useSelector((state) => state.branch);\n    const { companyList, companyListLoading } = useSelector((state) => state.company);\n    const fileInputRef = useRef(null);\n    const { importClientsData : validationResults } = useSelector((state) => state.client);\n\n    //   const handleFileChange = (event) => {\n    //     const file = event.target.files[0];\n    //     setValue(\"filepath\" , file)\n    //     // if (file) {\n    //     //   const formData = new FormData();\n    //     //   formData.append(\"filePath\", file);\n    //     //   formData.append(\"companyId\", \"68036597fc0a68c5b308b82f\");\n    //     //   formData.append(\"branchId\", \"680b206ba0a321a0c689a3df\");\n    //     //   formData.append(\"directorId\", \"\");\n\n    //     //   // Dispatch Redux action\n    //     //   dispatch(importDirectOnBoarding(formData));\n    //     // }\n    //   };\n\n    const handleDownloadExcel = () => {\n        dispatch(employeExcelDownloadFunc({\"userType\": \"client\"})).then((res) => {\n            if (!res?.error) {\n                window.location.href=res?.payload?.downloadUrl\n            }\n           \n        })\n    }\n\n\n    useEffect(() => {\n        if (userInfoglobal?.userType === \"admin\") {\n            dispatch(\n                companySearch({\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                })\n            );\n        }\n    }, []);\n\n    useEffect(() => {\n        if (\n            (userInfoglobal?.userType === \"admin\" && companyId) ||\n            (userInfoglobal?.userType === \"company\" && userInfoglobal?._id) ||\n            userInfoglobal?.userType === \"companyDirector\"\n        ) {\n            setValue(\"PDBranchId\", \"\");\n            dispatch(\n                branchSearch({\n                    companyId:\n                        userInfoglobal?.userType === \"admin\"\n                            ? companyId\n                            : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                })\n            );\n        }\n    }, [companyId]);\n    const onFormSubmit = (data) => {\n        const formData = new FormData();\n        formData.append(\"filePath\", data?.filePath[0]);\n        formData.append(\"companyId\", userInfoglobal?.userType === \"admin\"\n            ? companyId\n            : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId);\n        formData.append(\"branchId\", userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.branchId);\n        formData.append(\"directorId\", \"\");\n        dispatch(importClients(formData)).then((res) => {\n            if (!res?.error) {\n                setIsModalVisible(true);\n                fetchList()\n                onClose()\n                reset()\n            }\n        })\n    }\n\n\n    return (\n       <>\n        <ValidationResultsModal\n          open={isModalVisible}\n          onClose={() => setIsModalVisible(false)}\n          summary={validationResults?.data?.summary}\n          details={validationResults?.data?.details}\n          \n      />\n        <Modal\n        className=\"antmodalclassName\"\n            visible={isOpen}\n            onCancel={() => {\n                fileInputRef.current.value = ''\n                reset({\n                    PDBranchId: '',\n                    \"filePath\": []\n\n                });\n                onClose();\n\n\n            }}\n\n            footer={null}\n            title=\"Import Clients\"\n            width={600}\n            height={400}\n            zIndex={1050}\n\n        >\n            <form autoComplete=\"off\" onSubmit={handleSubmit(onFormSubmit)} className=\"\">\n                <div className=\"grid grid-col-1 md:grid-cols-2 gap-4\">\n                    {userInfoglobal?.userType === \"admin\" && (\n                        <div>\n                            <label className={`${inputLabelClassName}`}>Company <span className=\"text-red-600\">*</span></label>\n                            <Controller\n                                control={control}\n                                name=\"PDCompanyId\"\n                                rules={{ required: \"Company is required\" }}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        defaultValue={\"\"}\n                                        className={`${inputAntdSelectClassName} `}\n                                    >\n                                        <Select.Option value=\"\">Select Company</Select.Option>\n                                        {companyListLoading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                                            (companyList?.map((type) => (\n                                                <Select.Option key={type?._id} value={type?._id}>\n                                                    {type?.fullName}\n                                                </Select.Option>\n                                            )))\n                                        }\n                                    </Select>\n                                )}\n                            />\n                            {errors.PDCompanyId && (\n                                <p className=\"text-red-500 text-sm\">\n                                    {errors.PDCompanyId.message}\n                                </p>\n                            )}\n                        </div>\n                    )}\n\n                    {(userInfoglobal?.userType === \"admin\" ||\n                        userInfoglobal?.userType === \"company\" ||\n                        userInfoglobal?.userType === \"companyDirector\") && (\n                            <div>\n                                <label className={`${inputLabelClassName}`}>Branch <span className=\"text-red-600\">*</span></label>\n                                <Controller\n                                    control={control}\n                                    name=\"PDBranchId\"\n                                    rules={{ required: \"Branch is required\" }}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            getPopupContainer={() => document.body}\n                                            dropdownStyle={{ zIndex: 2000 }}\n\n                                            className={`${inputAntdSelectClassName} `}\n                                        >\n                                            <Select.Option value=\"\">Select Branch</Select.Option>\n                                            {branchListloading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                                                (sortByPropertyAlphabetically(branchList, 'fullName')?.map((type) => (\n                                                    <Select.Option key={type?._id} value={type?._id}>\n                                                        {type?.fullName}\n                                                    </Select.Option>\n                                                )))\n                                            }\n                                        </Select>\n                                    )}\n                                />\n                                {errors.PDBranchId && (\n                                    <p className=\"text-red-500 text-sm\">\n                                        {errors.PDBranchId.message}\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                    <Controller\n                        name=\"filePath\"\n                        control={control}\n\n                        rules={{\n                            validate: (files) => files?.length > 0 || 'File is required',\n                        }}\n                        render={({ field }) => (\n                            <div className='flex flex-col gap-2'>\n                                <label className={`${inputLabelClassName}`}>Upload File <span className=\"text-red-600\">*</span></label>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => document.getElementById('hiddenFileInput').click()}\n                                    className=\"bg-blue-500 text-white px-4 py-2 rounded\"\n                                >\n                                    Upload\n                                </button>\n                                <input\n                                    type=\"file\"\n                                    id=\"hiddenFileInput\"\n                                    ref={fileInputRef}\n                                    accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                    style={{ display: 'none' }}\n                                    onChange={(e) => field.onChange(e.target.files)}\n                                />\n                                {field?.value?.length > 0 && (\n                                    <p className=\"text-green-600 text-sm\">\n                                        {field.value[0].name}\n                                    </p>\n                                )}\n                                {errors.filePath && (\n                                    <p className=\"text-red-500 text-sm\">{errors.filePath.message}</p>\n                                )}\n                            </div>\n                        )}\n                    />\n                </div>\n                <div className=\"flex justify-between items-center gap-2 mt-4\">\n                <button type=\"button\" onClick={() => handleDownloadExcel()} target='_blank' className={`bg-header text-white p-2 px-4 rounded`} >DownLoad Excel</button>\n\n                    <button\n                        type=\"submit\"\n\n                        className={`bg-header text-white p-2 px-4 rounded`}\n                    >\n                        {'Submit'}\n                    </button>\n\n                </div>\n            </form>\n        </Modal>\n       </>\n    );\n};\n\nexport default ImportCliebtsModal;","import  { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {  FaPenToSquare, FaUser } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { decrypt, encrypt } from \"../../../config/Encryption\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport { FaAngleUp, FaAngleDown, FaEye } from \"react-icons/fa\";\nimport { domainName, handleSortLogic, inputAntdSelectClassNameFilter, pazeSizeReport } from \"../../../constents/global\";\nimport { getClientList, deleteClientFunc, statusClientFunc } from \"../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { Progress, Select, Switch, Tooltip, Dropdown } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport { regeneratePassfunc } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\"\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport ImportCliebtsModal from \"./ImportCliebtsModal\";\nimport { TfiReload } from \"react-icons/tfi\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport moment from \"moment\";\n\nfunction ClientManagement() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { clientList, totalEmployeCount, loading } = useSelector((state) => state.client);\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n  const [sortedList, setSortedList] = useState([]);\n  const [importClientsModal, setImportClientModal] = useState(false);\n\n\n\n  useEffect(() => {\n    if (clientList) {\n      handleSort();\n    }\n  }, [clientList]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n const initialPage = parseInt(searchParams.get('page')) || 1;\n  const initialLimit = parseInt(searchParams.get('limit')) || 10;\n  const initialBranchId = searchParams.get('branchId') || '';\n  const initialStatus = searchParams.get('status') || '';\n\n const [currentPage, setCurrentPage] = useState(initialPage);\n  const [limit, setLimit] = useState(initialLimit);\n  const [status, setStatus] = useState(initialStatus);\n    const [searchText, setSearchText] = useState('');\n      const [branchId, setBranchId] = useState(initialBranchId);\n\n\n useEffect(() => {\n    const params = new URLSearchParams();\n    if (currentPage > 1) params.set('page', currentPage);\n    if (limit !== 10) params.set('limit', limit);\n    if (branchId) params.set('branchId', branchId);\n    if (status) params.set('status', status);\n    setSearchParams(params);\n  }, [currentPage, limit, branchId,  status,  searchText]);\n  useEffect(() => {\n    fetchClientListData();\n  }, [currentPage, limit, branchId,  status,  searchText]);\n\n  const handleResetFilters = () => {\n    setCurrentPage(1);\n    setLimit(10);\n    setBranchId('');\n    setStatus('');\n    setSearchText('');\n  };\n  const onChange = (e) => {\n    setSearchText(e);\n  \n  };\n  const handlePageSizeChange = (e) => {\n    setLimit(Number(e));\n    setCurrentPage(Number(1))\n  };\n  const onPaginationChange = (page) => setCurrentPage(page)\n  const handleBranchChange = (value) => {\n    setBranchId(value);\n    setCurrentPage(1); \n  }\n  const handleStatusChange = (value) => {\n    setStatus(value);\n    setCurrentPage(1);\n  };\n\n\n\n\n  const fetchClientListData = () => {\n    let reqData = {\n      page: currentPage,\n      limit: limit,\n      reqPayload: {\n        companyId: userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\"  || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n\n        \"directorId\": \"\",\n        \"organizationId\": \"\",\n        \"industryId\": \"\",\n        \"text\": searchText,\n        \"sort\": true,\n        \"status\": status === 'true' ? true : status === 'false' ? false : '',\n        \"isPagination\": true,\n      },\n    };\n    dispatch(getClientList(reqData));\n  };\n\n\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [])\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteClientFunc(reqData)).then((data) => {\n          // fetchClientListData()\n          if (currentPage > 1 && clientList?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n\n          } else {\n            fetchClientListData();\n          }\n\n        })\n      }\n    });\n  };\n  const handleRegeneratePassword = (element) => {\n    Swal.fire({\n      title: 'Regenerate Password',\n      text: `Are you sure to change password of ${element?.fullName}?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Confirm'\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(regeneratePassfunc({ _id: element?._id })).then((data) => {\n          if (!data?.error) {\n            Swal.fire(\n              'Password Regenerated!',\n              'Password has been Regenerated.',\n              'success'\n            );\n\n          } else {\n            Swal.fire(\n              'Error!',\n              'Failed to Password Regenerated Successfully.',\n              'error'\n            );\n          }\n        });\n      }\n    });\n  }\n  const handleSort = (key, order) => {\n    const sortedList = handleSortLogic(key, order, clientList);\n    setSortedList(sortedList);\n  };\n\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <section>\n        <div className=\"bg-grey-100 w-full p-1\">\n          <div className=\"xl:flex justify-between items-center xl:space-y-0 space-y-2 py-1\">\n            <div className=\"grid md:flex sm:grid-cols-3 grid-cols-1 flex-wrap md:gap-3 gap-1.5\">\n               {(userInfoglobal?.userType == 'company' || userInfoglobal?.userType == 'companyDirector') && (\n                  <div>\n                    <Select\n                      value={branchId}\n                      onChange={handleBranchChange}\n                      defaultValue=\"\"\n                      disabled={loading}\n                      className={`${inputAntdSelectClassNameFilter} `}\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Branch</Select.Option>\n                      {branchListloading ? (\n                        <Select.Option disabled><ListLoader /></Select.Option>\n                      ) : (\n                        branchList?.map((type) => (\n                          <Select.Option key={type?._id} value={type?._id}>\n                            {type?.fullName}\n                          </Select.Option>\n                        ))\n                      )}\n                    </Select>\n                  </div>\n                )}\n              <div>\n                    <Select\n                     value={status}\n                    onChange={handleStatusChange}\n                    disabled={loading}\n                      className={`${inputAntdSelectClassNameFilter} `}\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select status</Select.Option>\n                      <Select.Option value=\"true\">Active</Select.Option>\n                      <Select.Option value=\"false\">Inactive</Select.Option>\n                    </Select>\n              </div>\n              <button\n                onClick={() => {\n              handleResetFilters();\n                }}\n                className=\"bg-header py-[6px] rounded-md md:flex hidden px-5 justify-center items-center  text-white\">\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n            </div>\n\n            {canCreate &&\n              <div className=\"flex justify-end items-center gap-2\">\n                <button\n                  onClick={() => {\n                   handleResetFilters()\n                  }}\n                  className=\"bg-header   py-[6px] rounded-md md:hidden flex px-5 justify-center items-center  text-white md:mt-0\">\n                  <span className=\"text-[12px]\">Reset</span>\n                </button>\n                <Tooltip placement=\"topLeft\"  title='Add Client'>\n                  <button\n                    onClick={() => {\n                      navigate(\"/admin/client/create\");\n                    }}\n                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white whitespace-nowrap\"\n                  >\n                    <FaPlus />\n                    <span className=\"text-[12px]\">Add Client</span>\n                  </button>\n                </Tooltip>\n                <Tooltip placement=\"topLeft\"  title='import Clients'>\n                  <button\n                    onClick={() => setImportClientModal(true)}\n                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white whitespace-nowrap\"\n                  >\n                    <FaPlus />\n                    <span className=\"text-[12px]\">importClients</span>\n                  </button>\n                </Tooltip>\n              </div>\n            }\n          </div>\n          <div className=\"flex justify-between items-center gap-2\">\n\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-light text-gray-500\">\n                Rows per page:\n              </span>\n              <Select\n                value={limit}\n                disabled={loading}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n            <div className=\"bg-white !min-w-[100px] mt-2 p-2 rounded-xl shadow-sm text-sm flex items-center justify-between\">\n              <span className=\"text-gray-600 font-medium\">Total Client:</span>\n              <span className=\"text-header font-semibold\">{totalEmployeCount}</span>\n            </div>\n          </div>\n          <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n            {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n              <thead className=\"\">\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize bg-header text-white font-[500]  h-[40px]\">\n                  <th className=\"tableHead w-[5%]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>S.No.</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n\n\n\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"tableHead\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Profile</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"tableHead w-[10%]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Profile Image</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </div>\n                    </div>\n                  </th>\n                  {/* <th className=\"tableHead w-[10%]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Client Id</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"userName\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"userName\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th> */}\n                  <th className=\"tableHead\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Group</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"groupName\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"groupName\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"tableHead w-[10%]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Client Name</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"fullName\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"fullName\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"tableHead w-[10%]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Organization</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"organizationName\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"organizationName\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"tableHead\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Mb. No.</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"mobile.number\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"mobile.number\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"tableHead\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Email Id</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"email\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"email\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  <th className=\"tableHead\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>PAN Number</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"clientProfile.penNumber\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"clientProfile.penNumber\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th>\n                  {/* <th className=\"tableHead\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Created At</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"createdAt\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"createdAt\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th> */}\n                  {/* <th className=\"tableHead\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Created By</span>\n                      <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp\n                          onClick={() => handleSort(\"createdBy\", \"asc\")}\n                        />\n                        <FaAngleDown\n                          onClick={() => handleSort(\"createdBy\", \"desc\")}\n                        />\n                      </div>\n                    </div>\n                  </th> */}\n                  <th className=\"tableHead\">Status</th>\n                  {(canUpdate || canDelete || canRead) && <th className=\"tableHead w-[5%]\">\n                    Action\n                  </th>}\n                </tr>\n              </thead>\n              {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={10}\n                  className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr> :\n                <tbody>\n                  {sortedList && sortedList?.length > 0 ? (\n                    sortedList?.map((element, index) => (\n                      <tr\n                        className={`${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                          } border-b-[1px] border-[#DDDDDD] text-[#374151]`}\n                      >\n                        <td className=\"tableData\">\n                          {index + 1 + ((currentPage - 1) * limit)}\n                        </td>\n                        <td className=\"tableData\">\n                          <span\n\n                          >\n                            <Progress size={\n                              50\n                            } strokeWidth={10} type=\"circle\" percent={element?.profileCompletion} strokeColor={{\n                              '0%': '#E74C3C',\n                              '50%': '#108ee9',\n                              '100%': '#87d068',\n                            }} />\n\n                          </span>\n                        </td>\n\n                        <td className=\"tableData \">\n                          {element.profileImage ? (\n                            <img\n                              alt=\"\"\n                              src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                              className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                            />\n                          ) : (\n                            <div className=\"w-9 h-9 rounded-full bg-gray-500 flex items-center justify-center\">\n                              <FaUser className=\"w-5 h-5 text-white\" />\n                            </div>\n                          )}\n                        </td>\n\n                        {/* <td className=\"tableData\">\n                          {element?.userName || '-'}\n                        </td> */}\n                        <td className=\"tableData max-w-[150px] min-w-[150px]\">\n                          {element?.groupName || '-'}\n                        </td>\n                        <td className=\"min-w-[200px]\" style={{\n                          whiteSpace: 'normal',\n                          padding: '0.5rem',\n                          fontSize: '12.8px',\n                          textAlign: 'left',\n                        }}>\n                          {element?.fullName || '-'}\n                        </td>\n\n                        <td className=\"tableData\">\n                          {element?.organizationName || '-'}\n                        </td>\n\n                        <td className=\"tableData\">\n                          {element?.mobile?.code + element?.mobile?.number || '-'}\n                        </td>\n                        <td className=\"tableData\">\n                          {element?.email || '-'}\n                        </td>\n                        <td className=\"tableData\">\n                          {element?.clientProfile?.penNumber || '-'}\n                        </td>\n                        {/* <td className=\"tableData\">\n                          {dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || '-'}\n                        </td>\n                        <td className=\"tableData\">\n                          {element?.createdBy || '-'}\n                        </td> */}\n\n\n                        <td className=\"tableData\">\n                          <Tooltip placement=\"topLeft\"  title={`${element?.status ? 'Tap to Inactive' : 'Tap to Active'}`}>\n                            <Switch\n                              checked={element?.status}\n                              onChange={() => {\n                                Swal.fire({\n                                  title: 'Are you sure?',\n                                  text: `Do you want to ${element?.status ? 'deactivate' : 'activate'} this client?`,\n                                  icon: 'warning',\n                                  showCancelButton: true,\n                                  confirmButtonText: 'Yes, change it!',\n                                  cancelButtonText: 'Cancel',\n                                  reverseButtons: true\n                                }).then((result) => {\n                                  if (result.isConfirmed) {\n                                    dispatch(\n                                      statusClientFunc({ _id: element?._id, status: !element?.status })\n                                    ).then((data) => {\n                                      if (!data?.error) {\n                                        fetchClientListData();\n                                      }\n                                    });\n                                  }\n                                });\n                              }}\n                              style={{\n                                backgroundColor: element?.status ? \"#4caf50\" : \"#f44336\",\n                                transition: \"background-color 0.3s ease\",\n                              }}\n                              height={20}\n                              width={40}\n                            />\n                          </Tooltip>\n                        </td>\n                        {(canUpdate || canDelete || canRead) && <td className=\"tableData\">\n                          <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                            {canRead && <Tooltip placement=\"topLeft\"  title='View Details'>\n                              <button\n                                onClick={() => {\n                                  navigate(\n                                    `/admin/client/clientView/${encrypt(element?._id)}`\n                                  );\n                                }}\n                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                type=\"button\"\n                              >\n                                <FaEye\n                                  className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                  size={16}\n                                />\n                              </button>\n                            </Tooltip>\n                            }\n                            <Dropdown\n                              menu={{\n                                items: [\n                                  {\n                                    key: 'regenerate-password',\n                                    label: (\n                                      <span\n                                        onClick={() => handleRegeneratePassword(element)}\n                                        className=\"flex items-center text-blue-700 hover:text-blue-600\"\n                                      >\n                                        <TfiReload className=\"mr-2\" size={14} />\n                                        Regenerate Password\n                                      </span>\n                                    ),\n                                  },\n                                  canUpdate && {\n                                    key: 'edit',\n                                    label: (\n                                      <span\n                                        onClick={() =>\n                                          navigate(`/admin/client/edit/${encrypt(element?._id)}`)\n                                        }\n                                        className=\"flex items-center text-[#3c8dbc] hover:text-[#337ab7]\"\n                                      >\n                                        <FaPenToSquare className=\"mr-2\" size={16} />\n                                        Edit\n                                      </span>\n                                    ),\n                                  },\n                                  canDelete && {\n                                    key: 'delete',\n                                    label: (\n                                      <span\n                                        onClick={() =>\n                                          handleDelete(element?._id)\n                                        }\n                                        className=\"flex items-center text-rose-500 hover:text-rose-500\"\n                                      >\n                                        <RiDeleteBin5Line className=\"mr-2\" size={16} />\n                                        Delete\n                                      </span>\n                                    ),\n                                  },\n\n\n                                      ...(canRead\n                                        ? [{\n                                          key: 'createdAt',\n                                          label: (\n                                            <span\n                                              className=\"flex justify-start items-center gap-1\"\n                                              // onClick={() => handleOpenChat(element)}\n                                              >\n                                              {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                            <span className=\"font-bold text-header\">Created At :</span>\n                                             <span className=\"text-[12px]\">{moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || 'N/A'}</span>\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n\n                                        ...(canRead\n                                        ? [{\n                                          key: 'createdBy',\n                                          label: (\n                                            <span\n                                              className=\"flex justify-start items-center gap-1\"\n                                             // onClick={() => handleOpenChat(element)}\n                                              >\n                                              {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                              <span className=\"font-bold text-header\">Created By :</span>\n                                              <span className=\"text-[12px]\">{element?.createdBy || 'N/A'}</span>\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n\n\n\n                                ].filter(Boolean), // Removes false/null if `canUpdate` is false\n                              }}\n                              trigger={['click']}\n                            >\n                              <Tooltip placement=\"topLeft\"  title=\"Actions\">\n                                <button\n                                  className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                  type=\"button\"\n                                >\n                                  <PiDotsThreeOutlineVerticalBold\n                                    className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                    size={16}\n                                  />\n                                </button>\n                              </Tooltip>\n                            </Dropdown>\n\n                          </span>\n                        </td>}\n                      </tr>\n                    ))\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5 \">\n                      <td\n                        colSpan={8}\n                        className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>}\n            </table>}\n\n          </div>\n\n\n\n        </div>\n        {clientList?.length > 0 && (\n          <CustomPagination\n            totalCount={totalEmployeCount}\n            pageSize={limit}\n            currentPage={currentPage}\n            onChange={onPaginationChange}\n          />)}\n        <ImportCliebtsModal fetchList={fetchClientListData} isOpen={importClientsModal} onClose={() => setImportClientModal(false)} />\n      </section>\n    </GlobalLayout>\n  );\n}\nexport default ClientManagement;","import React from 'react';\nimport { Modal, Table, Typography, List, Divider, Empty, Tag } from 'antd';\n\nconst ValidationResultsModal = ({\n  open,\n  onClose,\n  summary = {\n    totalRecords: 0,\n    successful: 0,\n    failed: 0,\n    duplicates: 0,\n    validationErrors: 0,\n    underage: 0\n  },\n  details = {\n    successfulImports: [],\n    duplicates: [],\n    validationErrors: [],\n    underage: []\n  }\n}) => {\n  const { Text, Title } = Typography;\n\n  // Summary cards\n  const summaryItems = [\n    { label: 'Total Records', value: summary.totalRecords, color: 'default' },\n    { label: 'Successful', value: summary.successful, color: 'success' },\n    { label: 'Failed', value: summary.failed, color: 'danger' },\n    { label: 'Duplicates', value: summary.duplicates, color: 'warning' },\n    { label: 'Validation Errors', value: summary.validationErrors, color: 'error' },\n    { label: 'Underage', value: summary.underage, color: 'error' },\n  ];\n\n  // Validation errors columns\n  const validationErrorColumns = [\n    {\n      title: 'Row Number',\n      dataIndex: 'rowNumber',\n      key: 'rowNumber',\n      width: 100,\n    },\n    {\n      title: 'Name',\n      dataIndex: ['row', 'fullName'],\n      key: 'fullName',\n    },\n    {\n      title: 'Email',\n      dataIndex: ['row', 'email'],\n      key: 'email',\n    },\n    {\n      title: 'Mobile',\n      key: 'mobile',\n      render: (_, record) => (\n        <span>\n          {record.row.primaryMobileCode} {record.row.primaryMobileNumber}\n        </span>\n      ),\n    },\n    {\n      title: 'Errors',\n      key: 'errors',\n      render: (_, record) => (\n        <List\n          size=\"small\"\n          dataSource={record.errors}\n          renderItem={(error) => (\n            <List.Item>\n              <Text type=\"danger\">\n                <strong>{error.field}:</strong> {error.message}\n              </Text>\n            </List.Item>\n          )}\n        />\n      ),\n    },\n  ];\n\n  // Duplicates columns\n  const duplicateColumns = [\n    {\n      title: 'Name',\n      dataIndex: 'fullName',\n      key: 'fullName',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'Mobile',\n      key: 'mobile',\n      render: (record) => (\n        <span>\n          {record.primaryMobileCode} {record.primaryMobileNumber}\n        </span>\n      ),\n    },\n  ];\n\n  // Underage columns\n  const underageColumns = [\n    {\n      title: 'Name',\n      dataIndex: 'fullName',\n      key: 'fullName',\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n    },\n    {\n      title: 'Date of Birth',\n      dataIndex: 'dateOfBirth',\n      key: 'dateOfBirth',\n    },\n  ];\n\n  return (\n    <Modal\n      title=\"Import Validation Results\"\n      open={open}\n      onCancel={onClose}\n      footer={null}\n      width={1200}\n      centered\n    >\n      {/* Summary Section */}\n      <div style={{ marginBottom: 24 }}>\n        <Title level={5} style={{ marginBottom: 16 }}>Import Summary</Title>\n        <div style={{ display: 'flex', gap: 16, flexWrap: 'wrap' }}>\n          {summaryItems.map((item) => (\n            <div \n              key={item.label}\n              style={{\n                border: '1px solid #d9d9d9',\n                borderRadius: 8,\n                padding: '8px 16px',\n                minWidth: 150,\n                textAlign: 'center'\n              }}\n            >\n              <Text type=\"secondary\">{item.label}</Text>\n              <div>\n                <Text strong style={{ color: item.value > 0 ? (item.color === 'success' ? '#52c41a' : '#ff4d4f') : 'inherit' }}>\n                  {item.value}\n                </Text>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Validation Errors Section */}\n      {details.validationErrors?.length > 0 && (\n        <>\n          <Divider orientation=\"left\">\n            Validation Errors ({details.validationErrors?.length})\n          </Divider>\n          <Table\n            columns={validationErrorColumns}\n            dataSource={details.validationErrors}\n            rowKey={(record) => `validation-error-${record.rowNumber}`}\n            pagination={false}\n            size=\"small\"\n            bordered\n            scroll={{ x: true }}\n            style={{ marginBottom: 24 }}\n          />\n        </>\n      )}\n\n      {/* Duplicates Section */}\n      {details.duplicates?.length > 0 && (\n        <>\n          <Divider orientation=\"left\">Duplicate Entries ({details.duplicates?.length})</Divider>\n          <Table\n            columns={duplicateColumns}\n            dataSource={details.duplicates}\n            rowKey=\"email\"\n            pagination={false}\n            size=\"small\"\n            bordered\n            scroll={{ x: true }}\n            style={{ marginBottom: 24 }}\n          />\n        </>\n      )}\n\n      {/* Underage Section */}\n      {details.underage?.length > 0 && (\n        <>\n          <Divider orientation=\"left\">\n            Underage Entries ({details.underage?.length})\n          </Divider>\n          <Table\n            columns={underageColumns}\n            dataSource={details.underage}\n            rowKey=\"email\"\n            pagination={false}\n            size=\"small\"\n            bordered\n            scroll={{ x: true }}\n          />\n        </>\n      )}\n\n      {/* Successfully Imported Section */}\n      {details.successfulImports?.length > 0 && (\n        <>\n          <Divider orientation=\"left\">\n            Successfully Imported ({details.successfulImports?.length})\n          </Divider>\n          <Table\n            columns={duplicateColumns} // Reusing the same columns as duplicates\n            dataSource={details.successfulImports}\n            rowKey=\"email\"\n            pagination={false}\n            size=\"small\"\n            bordered\n            scroll={{ x: true }}\n          />\n        </>\n      )}\n\n      {/* Empty State */}\n      {details.validationErrors?.length === 0 && \n        details.duplicates?.length === 0 && \n        details.underage?.length === 0 && \n        details.successfulImports?.length === 0 && (\n        <Empty\n          image={Empty.PRESENTED_IMAGE_SIMPLE}\n          description=\"No import results to display\"\n          style={{ margin: '24px 0' }}\n        />\n      )}\n    </Modal>\n  );\n};\n\nexport default ValidationResultsModal;"],"names":["_ref","_validationResults$da","_validationResults$da2","isOpen","onClose","fetchList","register","handleSubmit","control","setValue","reset","formState","errors","useForm","defaultValues","filePath","branchId","useWatch","name","defaultValue","companyId","isModalVisible","setIsModalVisible","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","dispatch","useDispatch","branchList","branchListloading","useSelector","state","branch","companyList","companyListLoading","company","fileInputRef","useRef","importClientsData","validationResults","client","useEffect","userType","companySearch","text","sort","status","isPagination","_id","branchSearch","_jsxs","_Fragment","children","_jsx","ValidationResultsModal","open","summary","data","details","Modal","className","visible","onCancel","current","value","PDBranchId","footer","title","width","height","zIndex","autoComplete","onSubmit","formData","FormData","append","importClients","then","res","error","inputLabelClassName","Controller","rules","required","render","_ref2","field","Select","_objectSpread","inputAntdSelectClassName","Option","disabled","ListLoader","map","type","fullName","PDCompanyId","message","_ref3","_sortByPropertyAlphab","getPopupContainer","document","body","dropdownStyle","sortByPropertyAlphabetically","validate","files","length","_ref4","_field$value","onClick","getElementById","click","id","ref","accept","style","display","onChange","e","target","employeExcelDownloadFunc","_res$payload","window","location","href","payload","downloadUrl","navigate","useNavigate","clientList","totalEmployeCount","loading","canCreate","canRead","canUpdate","canDelete","usePermissions","sortedList","setSortedList","importClientsModal","setImportClientModal","handleSort","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialLimit","initialBranchId","initialStatus","currentPage","setCurrentPage","limit","setLimit","setStatus","searchText","setSearchText","setBranchId","params","URLSearchParams","set","fetchClientListData","handleResetFilters","reqData","page","reqPayload","getClientList","key","order","handleSortLogic","GlobalLayout","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","Tooltip","placement","FaPlus","Number","pazeSizeReport","size","FaAngleUp","FaAngleDown","colSpan","Loader2","element","index","_element$mobile","_element$mobile2","_element$clientProfil","Progress","strokeWidth","percent","profileCompletion","strokeColor","profileImage","alt","src","process","FaUser","groupName","whiteSpace","padding","fontSize","textAlign","organizationName","mobile","code","number","email","clientProfile","penNumber","Switch","checked","Swal","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","isConfirmed","statusClientFunc","backgroundColor","transition","encrypt","FaEye","Dropdown","menu","items","label","confirmButtonColor","cancelButtonColor","regeneratePassfunc","handleRegeneratePassword","TfiReload","FaPenToSquare","deleteClientFunc","handleDelete","RiDeleteBin5Line","moment","createdAt","format","createdBy","filter","Boolean","trigger","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","pageSize","ImportCliebtsModal","_details$validationEr","_details$validationEr2","_details$duplicates","_details$duplicates2","_details$underage","_details$underage2","_details$successfulIm","_details$successfulIm2","_details$validationEr3","_details$duplicates3","_details$underage3","_details$successfulIm3","totalRecords","successful","failed","duplicates","validationErrors","underage","successfulImports","Text","Title","Typography","summaryItems","color","validationErrorColumns","dataIndex","_","record","row","primaryMobileCode","primaryMobileNumber","List","dataSource","renderItem","Item","duplicateColumns","centered","marginBottom","level","gap","flexWrap","item","border","borderRadius","minWidth","strong","Divider","orientation","Table","columns","rowKey","rowNumber","pagination","bordered","scroll","x","Empty","image","PRESENTED_IMAGE_SIMPLE","description","margin"],"sourceRoot":""}