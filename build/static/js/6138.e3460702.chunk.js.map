{"version":3,"file":"static/js/6138.e3460702.chunk.js","mappings":"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","sources":["global_layouts/Loader/Loader.js","pages/taskManagement/employeeAddTask/ChatBox.js","pages/taskManagement/employeeAddTask/EmployeeTaskList.js"],"sourcesContent":["import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { statusMapping } from \"../../../constents/global\";\nimport moment from \"moment\";\nimport { RxCross1 } from \"react-icons/rx\";\n\nconst ChatBox = ({ onClose, comment }) => {\n  const [messages, setMessages] = useState([]);\n  const [open, setOpen] = useState('translate-y-full');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    setOpen(\"translate-y-0\");\n    return () => {\n      setOpen(\"translate-y-full\");\n    };\n  }, [messages]);\n\n  useEffect(() => {\n    if (comment) {\n      const commentData = comment.map((comment) => ({\n        sender: comment?.creatorData?.fullName,\n        text: comment?.message,\n        status: comment?.status,\n        createdAt: comment?.createdAt || Date.now(),\n      }));\n      setMessages(commentData);\n    }\n  }, [comment]);\n\n  const handleClose = () => {\n    // Trigger the closing animation after 300ms\n    setTimeout(() => {\n      setOpen(\"translate-y-full\"); // This will trigger the closing animation\n      setTimeout(() => {\n        onClose(); // Call the onClose function after the animation\n      }, 300); // Ensure onClose is called after the animation ends (500ms)\n    }, 50); // 300ms delay before starting the animation\n  };\n\n  return (\n    <div\n      className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-end items-end px-2 z-[1501]\"\n      onClick={handleClose}\n    >\n      <div\n        className={`bg-white rounded-lg w-full max-w-md max-h-[80vh] shadow-xl overflow-hidden transform transition-all duration-500 ease-in-out ${open}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"p-2 bg-header text-white rounded-lg shadow-md text-center text-md font-semibold flex justify-between items-center\">\n          Task Comments\n          <RxCross1 className=\"cursor-pointer\" onClick={handleClose} />\n        </div>\n\n        <div className=\"p-4 h-[60vh] overflow-y-auto space-y-2\">\n          {messages.length > 0 ? (\n            messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`flex flex-col ${msg.sender === \"You\" ? \"items-end\" : \"items-start\"}`}\n              >\n                <div className=\"p-1 w-[100%] max-w-[100%]\">\n                  <div className=\"text-sm font-semibold mb-2 text-gray-600 \">\n                    {msg.sender}\n                  </div>\n\n                  <div\n                    className={`pl-4 border-l border-gray-200 ${\n                      msg.status === \"Assigned\"\n                        ? \"border-blue-500 text-white\"\n                        : msg.status === \"Accepted\"\n                        ? \"border-green-500 text-white\"\n                        : msg.status === \"Pending_at_client\"\n                        ? \"border-yellow-400 text-black\"\n                        : msg.status === \"Completed\"\n                        ? \"border-green-800 text-white\"\n                        : \"border-gray-300 text-black\"\n                    }`}\n                  >\n                    <p className=\"text-sm mb-2 text-gray-800 \">{msg.text}</p>\n                    <div\n                      className={`text-xs mb-2 px-2 py-1 rounded-full inline-block shadow-xl ${\n                        msg.status === \"Assigned\"\n                          ? \"bg-blue-500 text-white\"\n                          : msg.status === \"Accepted\"\n                          ? \"bg-green-500 text-white\"\n                          : msg.status === \"Pending_at_client\"\n                          ? \"bg-yellow-400 text-black\"\n                          : msg.status === \"Completed\"\n                          ? \"bg-green-800 text-white\"\n                          : \"bg-gray-300 text-black\"\n                      }`}\n                    >\n                      {statusMapping[msg.status] || \"No Status\"}\n                    </div>\n                  </div>\n                  {/* Date and Time at Bottom Left */}\n                  <div className=\"text-xs text-gray-500 mt-2\">\n                    {moment(msg.createdAt).format(\"MMM DD, YYYY - h:mm A\")}\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p className=\"text-center text-gray-500\">No comments available.</p>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n","import React, { useEffect, useState } from \"react\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Swal from \"sweetalert2\";\nimport { FaAngleUp, FaAngleDown, FaEye, FaPlus } from \"react-icons/fa\";\nimport { HiChatAlt, HiOutlineFilter } from \"react-icons/hi\";\nimport { domainName, inputAntdSelectClassNameFilter, showSwal, statusMapping } from \"../../../constents/global\";\nimport Loader from \"../../../global_layouts/Loader/Loader\";\nimport {\n  getTaskList,\n} from \"./addTaskFeatures/_addTask_reducers\";\nimport moment from \"moment\";\n\nimport ChatBox from \"./ChatBox\";\nimport { BsEye } from \"react-icons/bs\";\nimport { decrypt, encrypt } from \"../../../config/Encryption\";\nimport { Dropdown, Select, Tooltip } from \"antd\";\nimport { BiCheckDouble } from \"react-icons/bi\";\nimport { statusupdatetaskFunc } from \"../addTask/addTaskFeatures/_addTask_reducers\";\nimport { PiDotsThreeOutlineVerticalBold } from 'react-icons/pi';\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport { GrValidate } from \"react-icons/gr\";\nimport { MdDelete, MdOutlineTask, MdOutlineAssignment, MdRemove } from \"react-icons/md\";\nimport { TbPencilMinus } from \"react-icons/tb\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport { CLIENT_TASK_STATUS_ARR } from \"../../../constents/ActionConstent\";\n\n\nfunction EmployeeTaskList() {\n  const {\n    register,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  \n  const { taskList, totalTaskCount, loading } = useSelector(\n    (state) => state.employeeTask\n  );\n\n  const [comments, setComments] = useState(null);\n  \n  const [isChatModalOpen, setIsChatModalOpen] = useState(false);\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n \n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initialPage = parseInt(searchParams.get('page')) || 1;\n  const initialLimit = parseInt(searchParams.get('limit')) || 10;\n  const initialStatus = decrypt(searchParams.get('status')) || '';\n  const initialOverdue = decrypt(searchParams.get('overdue')) || '';\n\n const [currentPage, setCurrentPage] = useState(initialPage);\n  const [limit, setLimit] = useState(initialLimit);\n  const [status, setStatus] = useState(initialStatus);\n  const [isOverDue, setIsOverDue] = useState(initialOverdue);\n  const [searchText, setSearchText] = useState('');\n\n useEffect(() => {\n    const params = new URLSearchParams();\n    if (currentPage > 1) params.set('page', currentPage);\n    if (limit !== 10) params.set('limit', limit);\n    if (status) params.set('status', encrypt(status));\n    if (isOverDue) params.set('overdue', encrypt(isOverDue));\n    setSearchParams(params);\n  }, [currentPage, limit, status, isOverDue, searchText] );\n  useEffect(() => {\n    userInfoglobal?.userType !== \"admin\" && userInfoglobal?.userType !== \"company\" && fetchClientListData();\n  }, [isOverDue, searchText, currentPage, limit, status]);\n\n  const fetchClientListData = () => {\n    let reqData = {\n      page: currentPage,\n      limit: limit,\n      reqPayload: {\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        directorId: \"\",\n        clientId: \"\",\n        // \"employeId\": '67695d80a8929f2cf7967ff8',\n        employeId:\n          (userInfoglobal\n            ?.userType !== \"admin\" && userInfoglobal\n              ?.userType !== \"company\")\n            ? userInfoglobal?._id\n            : \"\",\n        taskTypeId: \"\",\n        groupId: \"\",\n        text: searchText,\n        sort: true,\n        status: status,\n        isOverDue: isOverDue,\n        isPagination: true,\n      },\n    };\n    dispatch(getTaskList(reqData));\n  };\n\n\n\n  if (userInfoglobal?.userType !== \"employee\" ) {\n    return (\n      <GlobalLayout>\n        <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n          <p className=\"text-center font-semibold\">\n            You are not an employee. This page is viewable for employees only.\n          </p>\n        </div>\n      </GlobalLayout>\n    );\n  }\n\n  const handleOpenChat = (data) => {\n\n    setIsChatModalOpen(true); // Open chat modal\n    setComments(data?.taskStatusCommentData); // Set task info if required\n  };\n\n  const handleCloseChat = () => {\n    setIsChatModalOpen(false);\n    setComments(null);\n  };\n\n\n  const handleTaskAccept = (data) => {\n    Swal.fire({\n      title: 'Add a Comment',\n      input: 'textarea',\n      inputLabel: 'Comment (optional)',\n      inputPlaceholder: 'Type your comment here...',\n      inputAttributes: {\n        'aria-label': 'Type your comment here'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Submit',\n      preConfirm: (comment) => {\n        return comment;\n      }\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const comment = result.value || '';\n        dispatch(statusupdatetaskFunc({\n          _id: data?.taskData?._id,\n          description: comment,\n          status: \"Accepted\",\n          attachment: [],\n        })\n        ).then((response) => {\n          if (!response?.error) {\n            fetchClientListData();\n            Swal.fire('Success', 'Task accepted successfully!', 'success');\n          } else {\n            Swal.fire('Error', 'Something went wrong!', 'error');\n          }\n        });\n      }\n    });\n  };\n\n  const handleResetFilters = () => {\n    setCurrentPage(1);\n    setLimit(10);   \n    setStatus('');\n    setIsOverDue('');\n    setSearchText('');\n  };\n  \n  const handleStatusChange = (value) => {\n    setStatus(value);\n    setCurrentPage(1);\n  };\n\n  const handleOverdueChange = (value) => {\n    setIsOverDue(value);\n    setCurrentPage(1);\n  };\n\n  const onChange = (e) => {\n\n    setSearchText(e);\n  };\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      {loading ? (\n        <Loader />\n      ) : (\n        <section>\n          <div className=\"\">\n            <div class=\"sm:flex justify-between items-center py-1 lg:space-y-0 space-y-2 overflow-y-auto\">\n              <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-2 sm:gap-3 gap-1.5\">\n                <div>\n              \n                      <Select\n                        defaultValue={\"\"}\n                        value={isOverDue}\n                        onChange={handleOverdueChange}\n                        disabled={loading}\n                        className={`${inputAntdSelectClassNameFilter} `}\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children).toLowerCase().includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">All Task</Select.Option>\n                        <Select.Option value=\"true\">Overdue Task</Select.Option>\n                        <Select.Option value=\"false\">Other Task</Select.Option>\n                      </Select>\n                    \n               \n                </div>\n                <div className=\"\">\n         \n                      <Select\n                       \n                        className={`${inputAntdSelectClassNameFilter} ${errors.shift ? \"border-[1px]\" : \"border-gray-300\"}`}\n                        placeholder=\"Select Status\"\n                        value={status}\n                        onChange={handleStatusChange}\n                        disabled={loading}\n                        showSearch\n                        filterOption={\n                          (input, option) =>\n                          option?.label?.toLowerCase().includes(input.toLowerCase())\n                        }                       \n                      >\n                         <Select.Option value=\"\">Select Status</Select.Option>\n                        {CLIENT_TASK_STATUS_ARR\n                          .filter(status => status !== 'Completed' && status !== 'Task_Stop')\n                          .map(status => (\n                            <Select.Option key={status} value={status}>{status}</Select.Option>\n                          ))\n                        }\n                      </Select>\n                  \n                </div>\n              </div>\n              <div className=\"flex justify-end items-center gap-2 \">\n                <button\n                  onClick={() => {\n                    handleResetFilters()\n                  }}\n                  className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                  <span className=\"text-[12px]\">Reset</span>\n                </button>\n\n                <Tooltip placement=\"topLeft\"  title='Add Task'>\n                  <button\n                    onClick={() => {\n                      navigate(\"/admin/task-type/employee-task\");\n                    }}\n                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n                  >\n                    <FaPlus />\n                    <span className=\"text-[12px]\">Add Task</span>\n                  </button>\n                </Tooltip>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n              <thead className=\"\">\n                <tr className=\"border-b border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-medium h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap min-w-[35px]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>S.No.</span>\n                      <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </button>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap min-w-[100px]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Client Name</span>\n                      <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </button>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap min-w-[100px]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Department</span>\n                      <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </button>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap min-w-[120px]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Task Name</span>\n                      <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </button>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap min-w-[100px]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Financial Year</span>\n                      <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </button>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap min-w-[90px]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Period</span>\n                      <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </button>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap hidden 2xl:table-cell min-w-[100px]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Assigned Date</span>\n                      <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </button>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap hidden 2xl:table-cell min-w-[100px]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Due Date</span>\n                      <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </button>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap hidden 2xl:table-cell min-w-[100px]\">\n                    <div className=\"flex justify-start items-center space-x-1\">\n                      <span>Last Updated At</span>\n                      <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                        <FaAngleUp />\n                        <FaAngleDown />\n                      </button>\n                    </div>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap min-w-[90px]\">\n                    <span>Status</span>\n                  </th>\n                  <th className=\"border-none p-2 whitespace-nowrap min-w-[70px]\">\n                    <span>Action</span>\n                  </th>\n                </tr>\n              </thead>\n              {loading ? (\n                <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={12}\n                    className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                  >\n                    <ListLoader />\n                  </td>\n                </tr>\n              ) : <tbody>\n                {taskList && taskList?.length > 0 ? (\n                  taskList?.map((element, index) => (\n                    <tr\n                      className={`text-[13px] ${element?.taskData?.isOverDue\n                        ? \"bg-rose-300 text-black\"\n                        : element?.taskData?.priority === \"high\"\n                          ? \"bg-[#FFE5B4] text-gray-800\"\n                          : element?.taskData?.priority === \"medium\"\n                            ? \"bg-green-300 text-black\"\n                            : \"bg-white text-[#374151]\"\n                        }`}\n                    >\n                      <td className=\"border-none p-2 min-w-[35px]\">\n                        {index + 1 + (currentPage - 1) * limit}\n                      </td>\n                      <td className=\"border-none p-2 min-w-[100px]\">\n                        {element?.taskData?.clientData?.fullName || '-'}\n                      </td>\n                      <td className=\"border-none p-2 min-w-[100px]\">\n                        {element?.taskData?.departmentData?.name || '-'}\n                      </td>\n                      <td className=\"border-none p-2 min-w-[120px]\">\n                        {element?.taskData?.taskName || '-'}\n                      </td>\n                      <td className=\"border-none p-2 min-w-[100px]\">\n                        {element?.taskData?.financialYear || '-'}\n                      </td>\n                      <td className=\"border-none p-2 min-w-[90px]\">\n                        {element?.taskData?.type === 'Monthly' && element?.taskData?.monthName}\n                        {element?.taskData?.type === 'Quaterly' && element?.taskData?.monthQuaters}\n                        {element?.taskData?.type === 'Yearly' && \"Yearly\"}\n                      </td>\n                      <td className=\"border-none p-2 hidden 2xl:table-cell min-w-[100px]\">\n                        {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"border-none p-2 hidden 2xl:table-cell min-w-[100px]\">\n                        {moment(element?.taskData?.dueDate).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"border-none p-2 hidden 2xl:table-cell min-w-[100px]\">\n                        {moment(element?.updatedAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"border-none p-2 min-w-[90px]\">\n                        <span\n                          className={`\n        px-2 py-1.5 rounded-lg text-[12px] cursor-pointer whitespace-nowrap hover:opacity-80 border border-header\n        ${element?.taskData?.status === \"Assigned\"\n                              ? \"bg-blue-600 text-white\"\n                              : element?.taskData?.status === \"Accepted\"\n                                ? \"bg-green-600 text-white\"\n                                : element?.taskData?.status === \"Pending_at_client\"\n                                  ? \"bg-yellow-500 text-black\"\n                                  : element?.taskData?.status === \"Pending_at_department\"\n                                    ? \"bg-purple-600 text-white\"\n                                    : element?.taskData?.status === \"Pending_at_colleague\"\n                                      ? \"bg-teal-500 text-white\"\n                                      : element?.taskData?.status === \"Pending_at_manager\"\n                                        ? \"bg-orange-600 text-white\"\n                                        : element?.taskData?.status === \"Work_in_progress\"\n                                          ? \"bg-indigo-600 text-white\"\n                                          : element?.taskData?.status === \"Pending_for_approval\"\n                                            ? \"bg-pink-500 text-white\"\n                                            : element?.taskData?.status === \"Pending_for_fees\"\n                                              ? \"bg-gray-500 text-white\"\n                                              : element?.taskData?.status === \"Completed\"\n                                                ? \"bg-green-800 text-white\"\n                                                : element?.taskData?.status === \"Task_Stop\"\n                                                  ? \"bg-red-700 text-white\"\n                                                  : element?.taskData?.status === \"reAssign_to_other\"\n                                                    ? \"bg-cyan-700 text-white\"\n                                                    : element?.taskData?.status === \"Rejected\"\n                                                      ? \"bg-rose-800 text-white\"\n                                                      : \"bg-gray-200 text-black\"\n                            }\n      `}\n                        >\n                          {element?.taskData?.status\n                            ?.replace(/_/g, ' ')\n                            .toLowerCase()\n                            .replace(/\\b\\w/g, char => char.toUpperCase())}\n                        </span>\n                      </td>\n                      <td className=\"border-none p-2 min-w-[70px]\">\n                        <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                          <button\n                            onClick={() => {\n                              handleTaskAccept(element)\n                            }}\n                            disabled={element?.taskData?.status !== \"Assigned\"}\n                            className={`px-2 py-1.5 text-xs rounded-md bg-transparent  border-[1.5px] ${element?.taskData?.status === \"Assigned\" ? \"border-black\" : 'border-gray-300'} `}\n                            type=\"button\"\n                          >\n                            <BiCheckDouble\n                              className={element?.taskData?.status === \"Assigned\" ? \" hover:text-header  text-header \" : \"text-gray-400\"}\n                              size={16}\n                            />\n                          </button>\n                          <Tooltip placement=\"topLeft\"  title=\"View\">\n                            <button\n                              onClick={() => {\n                                navigate(\n                                  `/admin/task/view/${encrypt(element?.taskData?._id)}/${encrypt(`employee`)}`\n                                );\n                              }}\n                              className=\"px-2 py-1.5 text-xs rounded-md bg-transparent !border-[1.5px] border-header \"\n                              type=\"button\"\n                            >\n                              <BsEye\n                                className=\" hover:text-header  text-header \"\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>\n\n\n                          <Dropdown\n                            menu={{\n                              items: [\n                                {\n                                  key: 'responsive-date-info',\n                                  label: (\n                                    <div className=\"2xl:hidden block\">\n                                      <div className=\"flex flex-col space-y-1.5\">\n                                        <span\n                                          onClick={() =>\n                                            showSwal(dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                          }\n                                          className=\"flex items-center text-slate-800 hover:text-slate-700\"\n                                        >\n                                          <MdOutlineAssignment className=\"mr-2\" size={16} />\n                                          Assigned Date\n                                        </span>\n                                        <span\n                                          onClick={() =>\n                                            showSwal(dayjs(element?.taskData?.dueDate).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                          }\n                                          className=\"flex items-center text-purple-800 hover:text-purple-700\"\n                                        >\n                                          <MdOutlineTask className=\"mr-2\" size={16} />\n                                          Due Date\n                                        </span>\n                                        <span\n                                          onClick={() =>\n                                            showSwal(dayjs(element?.updatedAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                          }\n                                          className=\"flex items-center text-teal-700 hover:text-teal-600\"\n                                        >\n                                          <GrValidate className=\"mr-2\" size={15} />\n                                          Last Updated On\n                                        </span>\n                                        <span\n                                          onClick={() =>\n                                            showSwal(element?.createdBy || \"Data not available\")\n                                          }\n                                          className=\"flex items-center text-sky-800 hover:text-sky-700\"\n                                        >\n                                          <TbPencilMinus className=\"mr-2\" size={16} />\n                                          Created By\n                                        </span>\n                                      </div>\n                                    </div>\n                                  ),\n                                },\n                                {\n                                  key: 'view-message',\n                                  label: (\n                                    <span\n                                      onClick={() => handleOpenChat(element)}\n                                      className=\"flex items-center text-header hover:text-header\"\n                                    >\n                                      <HiChatAlt className=\"mr-2\" size={16} />\n                                      View Message\n                                    </span>\n                                  ),\n                                },\n                                // {\n                                //   key: 'CreateAt',\n                                //   label: (\n                                //     <span\n                                //       className=\"flex justify-start items-center gap-1\"\n                                //     // onClick={() => handleOpenChat(element)}\n                                //     >\n                                //       {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                //       {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                                //     </span>\n                                //   ),\n                                // },\n                                // {\n                                //   key: 'createdBy',\n                                //   label: (\n                                //     <span\n                                //       className=\"flex justify-start items-center gap-1\"\n                                //     // onClick={() => handleOpenChat(element)}\n                                //     >\n                                //       {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                //       {element?.createdBy}\n                                //     </span>\n                                //   ),\n                                // }\n\n                              ],\n                            }}\n                            trigger={['click']}\n                          >\n                            <Tooltip placement=\"topLeft\"  title=\"More Actions\">\n                              <button\n                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border-[1px] border-header\"\n                                type=\"button\"\n                              >\n                                <PiDotsThreeOutlineVerticalBold\n                                  className=\"text-header hover:text-header\"\n                                  size={16}\n                                />\n                              </button>\n                            </Tooltip>\n                          </Dropdown>\n\n\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5 \">\n                    <td\n                      colSpan={12}\n                      className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n            </table>\n          </div>\n\n        </section>\n      )}\n\n      <CustomPagination\n                          totalCount={totalTaskCount}\n                          pageSize={limit}\n                          currentPage={currentPage}\n                          onChange={onPaginationChange}\n                      />\n\n      {isChatModalOpen && (\n        <ChatBox\n          isOpen={isChatModalOpen}\n          onClose={() => handleCloseChat()}\n          comment={comments}\n        />\n      )}\n    </GlobalLayout>\n  );\n}\nexport default EmployeeTaskList;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { Controller, useForm, useWatch } from \"react-hook-form\";\n// import GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\n// import { useNavigate } from \"react-router-dom\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import Swal from \"sweetalert2\";\n// import { FaAngleUp, FaAngleDown, FaEye, FaPlus } from \"react-icons/fa\";\n// import { HiChatAlt, HiOutlineFilter } from \"react-icons/hi\";\n// import { domainName, inputAntdSelectClassNameFilter, showSwal, statusMapping } from \"../../../constents/global\";\n// import Loader from \"../../../global_layouts/Loader/Loader\";\n// import {\n//   getTaskList,\n// } from \"./addTaskFeatures/_addTask_reducers\";\n// import moment from \"moment\";\n\n// import ChatBox from \"./ChatBox\";\n// import { BsEye } from \"react-icons/bs\";\n// import { encrypt } from \"../../../config/Encryption\";\n// import { Dropdown, Select, Tooltip } from \"antd\";\n// import { BiCheckDouble } from \"react-icons/bi\";\n// import { statusupdatetaskFunc } from \"../addTask/addTaskFeatures/_addTask_reducers\";\n// import { PiDotsThreeOutlineVerticalBold } from 'react-icons/pi';\n// import ListLoader from \"../../../global_layouts/ListLoader\";\n// import { GrValidate } from \"react-icons/gr\";\n// import { MdDelete, MdOutlineTask, MdOutlineAssignment, MdRemove } from \"react-icons/md\";\n// import { TbPencilMinus } from \"react-icons/tb\";\n// import dayjs from \"dayjs\";\n\n\n// function EmployeeTaskList() {\n//   const {\n//     register,\n//     setValue,\n//     control,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const userInfoglobal = JSON.parse(\n//     localStorage.getItem(`user_info_${domainName}`)\n//   );\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const { taskList, totalTaskCount, loading } = useSelector(\n//     (state) => state.employeeTask\n//   );\n//   const [searchText, setSearchText] = useState(\"\");\n//   const [comments, setComments] = useState(null);\n//   const limit = 10;\n//   const [isChatModalOpen, setIsChatModalOpen] = useState(false);\n//   const onPaginationChange = (page) => {\n//     setCurrentPage(page);\n//   };\n\n//   const CompanyId = useWatch({\n//     control,\n//     name: \"PDCompanyId\",\n//     defaultValue: \"\",\n//   });\n//   const BranchId = useWatch({\n//     control,\n//     name: \"PDBranchId\",\n//     defaultValue: \"\",\n//   });\n//   const isOverDue = useWatch({\n//     control,\n//     name: \"PDOverdue\",\n//     defaultValue: \"\",\n//   });\n//   const Status = useWatch({\n//     control,\n//     name: \"status\",\n//     defaultValue: \"\",\n//   });\n//   useEffect(() => {\n//     userInfoglobal?.userType !== \"admin\" && userInfoglobal?.userType !== \"company\" && fetchClientListData();\n//   }, [isOverDue, searchText, Status]);\n\n//   const fetchClientListData = () => {\n//     let reqData = {\n//       page: currentPage,\n//       limit: limit,\n//       reqPayload: {\n//         companyId:\n//           userInfoglobal?.userType === \"admin\"\n//             ? CompanyId\n//             : userInfoglobal?.userType === \"company\"\n//               ? userInfoglobal?._id\n//               : userInfoglobal?.companyId,\n//         branchId:\n//           userInfoglobal?.userType === \"company\" ||\n//             userInfoglobal?.userType === \"admin\" ||\n//             userInfoglobal?.userType === \"companyDirector\"\n//             ? BranchId\n//             : userInfoglobal?.userType === \"companyBranch\"\n//               ? userInfoglobal?._id\n//               : userInfoglobal?.branchId,\n\n//         directorId: \"\",\n//         clientId: \"\",\n//         // \"employeId\": '67695d80a8929f2cf7967ff8',\n//         employeId:\n//           (userInfoglobal\n//             ?.userType !== \"admin\" && userInfoglobal\n//               ?.userType !== \"company\")\n//             ? userInfoglobal?._id\n//             : \"\",\n//         taskTypeId: \"\",\n//         groupId: \"\",\n//         text: searchText,\n//         sort: true,\n//         status: Status,\n//         isOverDue: isOverDue,\n//         isPagination: false,\n//       },\n//     };\n//     dispatch(getTaskList(reqData));\n//   };\n\n\n\n//   if (userInfoglobal?.userType !== \"employee\" ) {\n//     return (\n//       <GlobalLayout>\n//         <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n//           <p className=\"text-center font-semibold\">\n//             You are not an employee. This page is viewable for employees only.\n//           </p>\n//         </div>\n//       </GlobalLayout>\n//     );\n//   }\n\n//   const handleOpenChat = (data) => {\n\n//     setIsChatModalOpen(true); // Open chat modal\n//     setComments(data?.taskStatusCommentData); // Set task info if required\n//   };\n\n//   const handleCloseChat = () => {\n//     setIsChatModalOpen(false);\n//     setComments(null);\n//   };\n\n\n//   const handleTaskAccept = (data) => {\n//     Swal.fire({\n//       title: 'Add a Comment',\n//       input: 'textarea',\n//       inputLabel: 'Comment (optional)',\n//       inputPlaceholder: 'Type your comment here...',\n//       inputAttributes: {\n//         'aria-label': 'Type your comment here'\n//       },\n//       showCancelButton: true,\n//       confirmButtonText: 'Submit',\n//       preConfirm: (comment) => {\n//         return comment;\n//       }\n//     }).then((result) => {\n//       if (result.isConfirmed) {\n//         const comment = result.value || '';\n//         dispatch(statusupdatetaskFunc({\n//           _id: data?.taskData?._id,\n//           description: comment,\n//           status: \"Accepted\",\n//           attachment: [],\n//         })\n//         ).then((response) => {\n//           if (!response?.error) {\n//             fetchClientListData();\n//             Swal.fire('Success', 'Task accepted successfully!', 'success');\n//           } else {\n//             Swal.fire('Error', 'Something went wrong!', 'error');\n//           }\n//         });\n//       }\n//     });\n//   };\n\n//   const onChange = (e) => {\n\n//     setSearchText(e);\n//   };\n\n//   return (\n//     <GlobalLayout onChange={onChange}>\n//       {loading ? (\n//         <Loader />\n//       ) : (\n//         <section>\n//           <div className=\"\">\n//             <div class=\"sm:flex justify-between items-center py-1 lg:space-y-0 space-y-2 overflow-y-auto\">\n//               <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-2 sm:gap-3 gap-1.5\">\n//                 <div>\n//                   <Controller\n//                     control={control}\n//                     name=\"PDOverdue\"\n//                     render={({ field }) => (\n//                       <Select\n//                         {...field}\n//                         defaultValue={\"\"}\n//                         disabled={loading}\n//                         className={`${inputAntdSelectClassNameFilter} `}\n//                         showSearch\n//                         filterOption={(input, option) =>\n//                           String(option?.children).toLowerCase().includes(input.toLowerCase())\n//                         }\n//                       >\n//                         <Select.Option value={''}>All Task</Select.Option>\n//                         <Select.Option value={true}>Overdue Task</Select.Option>\n//                         <Select.Option value={false}>Other Task</Select.Option>\n//                       </Select>\n//                     )}\n//                   />\n//                 </div>\n//                 <div className=\"\">\n//                   <Controller\n//                     name=\"status\"\n//                     control={control}\n//                     render={({ field }) => (\n//                       <Select\n//                         {...field}\n//                         className={`${inputAntdSelectClassNameFilter} ${errors.shift ? \"border-[1px]\" : \"border-gray-300\"}`}\n//                         placeholder=\"Select Status\"\n//                         disabled={loading}\n//                         showSearch\n//                         filterOption={(input, option) =>\n//                           option?.label?.toLowerCase().includes(input.toLowerCase())\n//                         }\n//                         options={[\n//                           { label: \"Select Status\", value: \"\" },\n//                           ...[\n//                             \"Assigned\", \"Accepted\", \"reAssign_to_other\", \"Pending_at_client\",\n//                             \"Pending_at_department\", \"Pending_at_colleague\", \"Pending_at_manager\",\n//                             \"Work_in_progress\", \"Pending_for_approval\", \"Pending_for_fees\",\n//                             \"Completed\", \"Task_Stop\"\n//                           ].map(status => ({\n//                             label: status,\n//                             value: status,\n//                           }))\n//                         ]}\n//                       />\n//                     )}\n//                   />\n//                 </div>\n//               </div>\n//               <div className=\"flex justify-end items-center gap-2 \">\n//                 <button\n//                   onClick={() => {\n//                     setValue(\"PDOverdue\", \"\");\n//                     setValue(\"PDBranchId\", '');\n//                     setValue(\"PdDepartmentId\", \"\");\n//                     setValue(\"PdCompanyId\", \"\");\n//                     setValue(\"status\", \"\");\n//                   }}\n//                   className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n//                   <span className=\"text-[12px]\">Reset</span>\n//                 </button>\n\n//                 <Tooltip placement=\"topLeft\"  title='Add Task'>\n//                   <button\n//                     onClick={() => {\n//                       navigate(\"/admin/task-type/employee-task\");\n//                     }}\n//                     className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n//                   >\n//                     <FaPlus />\n//                     <span className=\"text-[12px]\">Add Task</span>\n//                   </button>\n//                 </Tooltip>\n//               </div>\n//             </div>\n//           </div>\n//           <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n//             <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n//               <thead className=\"\">\n//                 <tr className=\"border-b border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-medium h-[40px]\">\n//                   <th className=\"border-none p-2 whitespace-nowrap min-w-[35px]\">\n//                     <div className=\"flex justify-start items-center space-x-1\">\n//                       <span>S.No.</span>\n//                       <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n//                         <FaAngleUp />\n//                         <FaAngleDown />\n//                       </button>\n//                     </div>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap min-w-[100px]\">\n//                     <div className=\"flex justify-start items-center space-x-1\">\n//                       <span>Client Name</span>\n//                       <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n//                         <FaAngleUp />\n//                         <FaAngleDown />\n//                       </button>\n//                     </div>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap min-w-[100px]\">\n//                     <div className=\"flex justify-start items-center space-x-1\">\n//                       <span>Department</span>\n//                       <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n//                         <FaAngleUp />\n//                         <FaAngleDown />\n//                       </button>\n//                     </div>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap min-w-[120px]\">\n//                     <div className=\"flex justify-start items-center space-x-1\">\n//                       <span>Task Name</span>\n//                       <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n//                         <FaAngleUp />\n//                         <FaAngleDown />\n//                       </button>\n//                     </div>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap min-w-[100px]\">\n//                     <div className=\"flex justify-start items-center space-x-1\">\n//                       <span>Financial Year</span>\n//                       <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n//                         <FaAngleUp />\n//                         <FaAngleDown />\n//                       </button>\n//                     </div>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap min-w-[90px]\">\n//                     <div className=\"flex justify-start items-center space-x-1\">\n//                       <span>Period</span>\n//                       <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n//                         <FaAngleUp />\n//                         <FaAngleDown />\n//                       </button>\n//                     </div>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap hidden 2xl:table-cell min-w-[100px]\">\n//                     <div className=\"flex justify-start items-center space-x-1\">\n//                       <span>Assigned Date</span>\n//                       <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n//                         <FaAngleUp />\n//                         <FaAngleDown />\n//                       </button>\n//                     </div>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap hidden 2xl:table-cell min-w-[100px]\">\n//                     <div className=\"flex justify-start items-center space-x-1\">\n//                       <span>Due Date</span>\n//                       <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n//                         <FaAngleUp />\n//                         <FaAngleDown />\n//                       </button>\n//                     </div>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap hidden 2xl:table-cell min-w-[100px]\">\n//                     <div className=\"flex justify-start items-center space-x-1\">\n//                       <span>Last Updated At</span>\n//                       <button className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n//                         <FaAngleUp />\n//                         <FaAngleDown />\n//                       </button>\n//                     </div>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap min-w-[90px]\">\n//                     <span>Status</span>\n//                   </th>\n//                   <th className=\"border-none p-2 whitespace-nowrap min-w-[70px]\">\n//                     <span>Action</span>\n//                   </th>\n//                 </tr>\n//               </thead>\n//               {loading ? (\n//                 <tr className=\"bg-white bg-opacity-5 \">\n//                   <td\n//                     colSpan={12}\n//                     className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n//                   >\n//                     <ListLoader />\n//                   </td>\n//                 </tr>\n//               ) : <tbody>\n//                 {taskList && taskList?.length > 0 ? (\n//                   taskList?.map((element, index) => (\n//                     <tr\n//                       className={`text-[13px] ${element?.taskData?.isOverDue\n//                         ? \"bg-rose-300 text-black\"\n//                         : element?.taskData?.priority === \"high\"\n//                           ? \"bg-[#FFE5B4] text-gray-800\"\n//                           : element?.taskData?.priority === \"medium\"\n//                             ? \"bg-green-300 text-black\"\n//                             : \"bg-white text-[#374151]\"\n//                         }`}\n//                     >\n//                       <td className=\"border-none p-2 min-w-[35px]\">\n//                         {index + 1 + (currentPage - 1) * limit}\n//                       </td>\n//                       <td className=\"border-none p-2 min-w-[100px]\">\n//                         {element?.taskData?.clientData?.fullName || '-'}\n//                       </td>\n//                       <td className=\"border-none p-2 min-w-[100px]\">\n//                         {element?.taskData?.departmentData?.name || '-'}\n//                       </td>\n//                       <td className=\"border-none p-2 min-w-[120px]\">\n//                         {element?.taskData?.taskName || '-'}\n//                       </td>\n//                       <td className=\"border-none p-2 min-w-[100px]\">\n//                         {element?.taskData?.financialYear || '-'}\n//                       </td>\n//                       <td className=\"border-none p-2 min-w-[90px]\">\n//                         {element?.taskData?.type === 'Monthly' && element?.taskData?.monthName}\n//                         {element?.taskData?.type === 'Quaterly' && element?.taskData?.monthQuaters}\n//                         {element?.taskData?.type === 'Yearly' && \"Yearly\"}\n//                       </td>\n//                       <td className=\"border-none p-2 hidden 2xl:table-cell min-w-[100px]\">\n//                         {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n//                       </td>\n//                       <td className=\"border-none p-2 hidden 2xl:table-cell min-w-[100px]\">\n//                         {moment(element?.taskData?.dueDate).format(\"DD-MM-YYYY hh:mm a\")}\n//                       </td>\n//                       <td className=\"border-none p-2 hidden 2xl:table-cell min-w-[100px]\">\n//                         {moment(element?.updatedAt).format(\"DD-MM-YYYY hh:mm a\")}\n//                       </td>\n//                       <td className=\"border-none p-2 min-w-[90px]\">\n//                         <span\n//                           className={`\n//         px-2 py-1.5 rounded-lg text-[12px] cursor-pointer hover:opacity-80 border border-header\n//         ${element?.taskData?.status === \"Assigned\"\n//                               ? \"bg-blue-600 text-white\"\n//                               : element?.taskData?.status === \"Accepted\"\n//                                 ? \"bg-green-600 text-white\"\n//                                 : element?.taskData?.status === \"Pending_at_client\"\n//                                   ? \"bg-yellow-500 text-black\"\n//                                   : element?.taskData?.status === \"Pending_at_department\"\n//                                     ? \"bg-purple-600 text-white\"\n//                                     : element?.taskData?.status === \"Pending_at_colleague\"\n//                                       ? \"bg-teal-500 text-white\"\n//                                       : element?.taskData?.status === \"Pending_at_manager\"\n//                                         ? \"bg-orange-600 text-white\"\n//                                         : element?.taskData?.status === \"Work_in_progress\"\n//                                           ? \"bg-indigo-600 text-white\"\n//                                           : element?.taskData?.status === \"Pending_for_approval\"\n//                                             ? \"bg-pink-500 text-white\"\n//                                             : element?.taskData?.status === \"Pending_for_fees\"\n//                                               ? \"bg-gray-500 text-white\"\n//                                               : element?.taskData?.status === \"Completed\"\n//                                                 ? \"bg-green-800 text-white\"\n//                                                 : element?.taskData?.status === \"Task_Stop\"\n//                                                   ? \"bg-red-700 text-white\"\n//                                                   : element?.taskData?.status === \"reAssign_to_other\"\n//                                                     ? \"bg-cyan-700 text-white\"\n//                                                     : element?.taskData?.status === \"Rejected\"\n//                                                       ? \"bg-rose-800 text-white\"\n//                                                       : \"bg-gray-200 text-black\"\n//                             }\n//       `}\n//                         >\n//                           {element?.taskData?.status\n//                             ?.replace(/_/g, ' ')\n//                             .toLowerCase()\n//                             .replace(/\\b\\w/g, char => char.toUpperCase())}\n//                         </span>\n//                       </td>\n//                       <td className=\"border-none p-2 min-w-[70px]\">\n//                         <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n//                           <button\n//                             onClick={() => {\n//                               handleTaskAccept(element)\n//                             }}\n//                             disabled={element?.taskData?.status !== \"Assigned\"}\n//                             className={`px-2 py-1.5 text-xs rounded-md bg-transparent  border-[1.5px] ${element?.taskData?.status === \"Assigned\" ? \"border-black\" : 'border-gray-300'} `}\n//                             type=\"button\"\n//                           >\n//                             <BiCheckDouble\n//                               className={element?.taskData?.status === \"Assigned\" ? \" hover:text-header  text-header \" : \"text-gray-400\"}\n//                               size={16}\n//                             />\n//                           </button>\n//                           <Tooltip placement=\"topLeft\"  title=\"View\">\n//                             <button\n//                               onClick={() => {\n//                                 navigate(\n//                                   `/admin/task/view/${encrypt(element?.taskData?._id)}/${encrypt(`employee`)}`\n//                                 );\n//                               }}\n//                               className=\"px-2 py-1.5 text-xs rounded-md bg-transparent !border-[1.5px] border-header \"\n//                               type=\"button\"\n//                             >\n//                               <BsEye\n//                                 className=\" hover:text-header  text-header \"\n//                                 size={16}\n//                               />\n//                             </button>\n//                           </Tooltip>\n\n\n//                           <Dropdown\n//                             menu={{\n//                               items: [\n//                                 {\n//                                   key: 'responsive-date-info',\n//                                   label: (\n//                                     <div className=\"2xl:hidden block\">\n//                                       <div className=\"flex flex-col space-y-1.5\">\n//                                         <span\n//                                           onClick={() =>\n//                                             showSwal(dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n//                                           }\n//                                           className=\"flex items-center text-slate-800 hover:text-slate-700\"\n//                                         >\n//                                           <MdOutlineAssignment className=\"mr-2\" size={16} />\n//                                           Assigned Date\n//                                         </span>\n//                                         <span\n//                                           onClick={() =>\n//                                             showSwal(dayjs(element?.taskData?.dueDate).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n//                                           }\n//                                           className=\"flex items-center text-purple-800 hover:text-purple-700\"\n//                                         >\n//                                           <MdOutlineTask className=\"mr-2\" size={16} />\n//                                           Due Date\n//                                         </span>\n//                                         <span\n//                                           onClick={() =>\n//                                             showSwal(dayjs(element?.updatedAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n//                                           }\n//                                           className=\"flex items-center text-teal-700 hover:text-teal-600\"\n//                                         >\n//                                           <GrValidate className=\"mr-2\" size={15} />\n//                                           Last Updated On\n//                                         </span>\n//                                         <span\n//                                           onClick={() =>\n//                                             showSwal(element?.createdBy || \"Data not available\")\n//                                           }\n//                                           className=\"flex items-center text-sky-800 hover:text-sky-700\"\n//                                         >\n//                                           <TbPencilMinus className=\"mr-2\" size={16} />\n//                                           Created By\n//                                         </span>\n//                                       </div>\n//                                     </div>\n//                                   ),\n//                                 },\n//                                 {\n//                                   key: 'view-message',\n//                                   label: (\n//                                     <span\n//                                       onClick={() => handleOpenChat(element)}\n//                                       className=\"flex items-center text-header hover:text-header\"\n//                                     >\n//                                       <HiChatAlt className=\"mr-2\" size={16} />\n//                                       View Message\n//                                     </span>\n//                                   ),\n//                                 },\n//                                 // {\n//                                 //   key: 'CreateAt',\n//                                 //   label: (\n//                                 //     <span\n//                                 //       className=\"flex justify-start items-center gap-1\"\n//                                 //     // onClick={() => handleOpenChat(element)}\n//                                 //     >\n//                                 //       {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n//                                 //       {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n//                                 //     </span>\n//                                 //   ),\n//                                 // },\n//                                 // {\n//                                 //   key: 'createdBy',\n//                                 //   label: (\n//                                 //     <span\n//                                 //       className=\"flex justify-start items-center gap-1\"\n//                                 //     // onClick={() => handleOpenChat(element)}\n//                                 //     >\n//                                 //       {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n//                                 //       {element?.createdBy}\n//                                 //     </span>\n//                                 //   ),\n//                                 // }\n\n//                               ],\n//                             }}\n//                             trigger={['click']}\n//                           >\n//                             <Tooltip placement=\"topLeft\"  title=\"More Actions\">\n//                               <button\n//                                 className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border-[1px] border-header\"\n//                                 type=\"button\"\n//                               >\n//                                 <PiDotsThreeOutlineVerticalBold\n//                                   className=\"text-header hover:text-header\"\n//                                   size={16}\n//                                 />\n//                               </button>\n//                             </Tooltip>\n//                           </Dropdown>\n\n\n//                         </span>\n//                       </td>\n//                     </tr>\n//                   ))\n//                 ) : (\n//                   <tr className=\"bg-white bg-opacity-5 \">\n//                     <td\n//                       colSpan={12}\n//                       className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n//                     >\n//                       Record Not Found\n//                     </td>\n//                   </tr>\n//                 )}\n//               </tbody>}\n//             </table>\n//           </div>\n\n//         </section>\n//       )}\n\n//       {isChatModalOpen && (\n//         <ChatBox\n//           isOpen={isChatModalOpen}\n//           onClose={() => handleCloseChat()}\n//           comment={comments}\n//         />\n//       )}\n//     </GlobalLayout>\n//   );\n// }\n// export default EmployeeTaskList;\n"],"names":["_jsx","className","children","Spin","size","_ref","onClose","comment","messages","setMessages","useState","open","setOpen","messagesEndRef","useRef","useEffect","_messagesEndRef$curre","current","scrollIntoView","behavior","commentData","map","_comment$creatorData","sender","creatorData","fullName","text","message","status","createdAt","Date","now","handleClose","setTimeout","onClick","_jsxs","concat","e","stopPropagation","RxCross1","length","msg","index","statusMapping","moment","format","ref","register","setValue","control","formState","errors","useForm","navigate","useNavigate","dispatch","useDispatch","userInfoglobal","JSON","parse","localStorage","getItem","domainName","taskList","totalTaskCount","loading","useSelector","state","employeeTask","comments","setComments","isChatModalOpen","setIsChatModalOpen","CompanyId","useWatch","name","defaultValue","BranchId","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialLimit","initialStatus","decrypt","initialOverdue","currentPage","setCurrentPage","limit","setLimit","setStatus","isOverDue","setIsOverDue","searchText","setSearchText","params","URLSearchParams","set","encrypt","userType","fetchClientListData","reqData","page","reqPayload","companyId","_id","branchId","directorId","clientId","employeId","taskTypeId","groupId","sort","isPagination","getTaskList","GlobalLayout","onChange","Loader","class","Select","value","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","shift","placeholder","_option$label","label","CLIENT_TASK_STATUS_ARR","filter","Tooltip","placement","title","FaPlus","FaAngleUp","FaAngleDown","colSpan","ListLoader","element","_element$taskData","_element$taskData2","_element$taskData3","_element$taskData4","_element$taskData4$cl","_element$taskData5","_element$taskData5$de","_element$taskData6","_element$taskData7","_element$taskData8","_element$taskData9","_element$taskData0","_element$taskData1","_element$taskData10","_element$taskData11","_element$taskData12","_element$taskData13","_element$taskData14","_element$taskData15","_element$taskData16","_element$taskData17","_element$taskData18","_element$taskData19","_element$taskData20","_element$taskData21","_element$taskData22","_element$taskData23","_element$taskData24","_element$taskData25","_element$taskData25$s","_element$taskData26","_element$taskData27","_element$taskData28","taskData","priority","clientData","departmentData","taskName","financialYear","type","monthName","monthQuaters","dueDate","updatedAt","replace","char","toUpperCase","data","Swal","inputLabel","inputPlaceholder","inputAttributes","showCancelButton","confirmButtonText","preConfirm","then","result","isConfirmed","_data$taskData","statusupdatetaskFunc","description","attachment","response","error","BiCheckDouble","_element$taskData29","BsEye","Dropdown","menu","items","key","showSwal","dayjs","MdOutlineAssignment","_element$taskData30","MdOutlineTask","GrValidate","createdBy","TbPencilMinus","handleOpenChat","taskStatusCommentData","HiChatAlt","trigger","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","pageSize","ChatBox","isOpen"],"sourceRoot":""}