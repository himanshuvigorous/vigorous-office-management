{"version":3,"file":"static/js/8773.10935249.chunk.js","mappings":"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","sources":["pages/financeManagement/advance/AdvanceModalList.js","pages/financeManagement/advance/AdvanceList.js"],"sourcesContent":["import { Modal, Tooltip } from \"antd\";\nimport { encrypt } from \"../../../config/Encryption\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { BsEyeFill, BsFileEarmarkPdfFill } from \"react-icons/bs\";\nimport moment from \"moment\";\nimport Swal from \"sweetalert2\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteadvance } from \"./advanceFeature/_advance_reducers\";\nimport { useEffect, useState } from \"react\";\nimport { convertIntoAmount } from \"../../../constents/global\";\n\nfunction AdvanceModalList({ isModalOpen, onClose, getadvancerequest, advanceListData }) {\n\n    const [listData, setListData] = useState([])\n    const dispatch = useDispatch();\n\n    const handleOk = () => {\n        onClose()\n    };\n    const handleCancel = () => {\n        onClose()\n    };\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id,\n        };\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n            zIndex: 1580\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteadvance(reqData)).then((data) => {\n                    getadvancerequest()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const filterData = advanceListData?.find((item) => item?._id === isModalOpen?.data?._id)\n        // setListData(isModalOpen?.type === \"up\" ? filterData?.deductionList : filterData?.depositList)\n        setListData(filterData?.alltransections)\n\n    }, [advanceListData])\n\n    return (\n        <>\n            <Modal className=\"antmodalclassName\" width={1000} footer={false} title={`${isModalOpen?.data?.groupName} (${isModalOpen?.data?.groupUserName}) Transactions`} open={true} onOk={handleOk} onCancel={handleCancel}>\n                <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                    <thead className=\"\">\n                        <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                            <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n\n                            <th className=\"p-2 whitespace-nowrap\">payment Type</th>\n                            <th className=\"p-2 whitespace-nowrap\">Amount</th>\n                            <th className=\"p-2 whitespace-nowrap\">Date</th>\n                            <th className=\"p-2 whitespace-nowrap w-[10%]\">Action</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {listData && listData?.length > 0 ? (\n                            listData?.map((element, index) => (\n                                <tr\n                                    className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                                        } text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                                >\n                                    <td className=\"whitespace-nowrap p-2\">\n                                        {index + 1}\n                                    </td>\n\n                                    <td className=\"whitespace-nowrap p-2\">\n                                        {/* {element?.paymentType} */}\n\n                                        {element?.paymentType === \"deduction\" ? (\n                                            <span\n                                                className={`${\"bg-red-200 border-red-500\"} border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                                            >\n                                                {element?.paymentType}\n                                            </span>\n                                        ) : (\n                                            <span\n                                                className={`${\"bg-[#E0FFBE] border-green-500\"} border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                                            >\n                                                {element?.paymentType}\n                                            </span>\n                                        )}\n                                    </td>\n                                    <td className=\"whitespace-nowrap p-2\">{convertIntoAmount(element?.amount || \"-\")}</td>\n                                    <td className=\"whitespace-nowrap p-2\">{moment(element?.date).format(\"DD/MM/YYYY\")}</td>\n                                    <td className=\"whitespace-nowrap p-2\">\n                                        <span className=\"py-1.5 flex justify-start items-center space-x-2.5\">\n                                            {/* <button\n                            onClick={() => {\n                              navigate(\n                                `/admin/advance/edit/${encrypt(element?._id)}`\n                              );\n                            }}\n                          \n                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                            type=\"button\"\n                          >\n                            <FaPenToSquare\n                              className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                              size={16}\n                            />\n                          </button> */}\n\n                                            {/* <Tooltip placement=\"topLeft\"  title='Delete'>\n                                                {element?.paymentType === \"deposit\" &&\n                                                    <button\n                                                        onClick={() => handleDelete(element?._id)}\n                                                        className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                                        type=\"button\"\n                                                    >\n                                                        <RiDeleteBin5Line\n                                                            className=\"text-red-600 hover:text-red-500\"\n                                                            size={16}\n                                                        />\n                                                    </button>\n                                                }</Tooltip> */}\n                                            <Tooltip placement=\"topLeft\"  title='View'>\n                                                <button\n                                                    onClick={() => {\n                                                        if (element?.receiptPDFPath) {\n                                                            const pdfLink = `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public${element?.receiptPDFPath}`;\n                                                            const link = document.createElement(\"a\");\n                                                            link.href = pdfLink;\n                                                            link.target = \"_blank\";\n                                                            link.rel = \"noopener noreferrer\";\n                                                            document.body.appendChild(link);\n                                                            link.click();\n                                                            document.body.removeChild(link);\n                                                        }\n                                                    }}\n\n                                                    className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                                    type=\"button\"\n                                                >\n                                                    <BsFileEarmarkPdfFill\n                                                        className=\" text-rose-700\"\n                                                        size={16}\n                                                    />\n                                                </button>\n                                            </Tooltip>\n                                        </span>\n                                    </td>\n                                </tr>\n                            ))\n                        ) : (\n                            <tr className=\"bg-white bg-opacity-5\">\n                                <td\n                                    colSpan={5}\n                                    className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                                >\n                                    Record Not Found\n                                </td>\n                            </tr>\n                        )}\n                    </tbody>\n                </table>\n            </Modal>\n        </>\n    )\n}\n\nexport default AdvanceModalList\n","import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport { convertIntoAmount, domainName, inputAntdSelectClassNameFilter, showSwal, } from \"../../../constents/global\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport AdvanceModalList from \"./AdvanceModalList\";\nimport moment from \"moment\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport { Dropdown, Select, Tooltip } from \"antd\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport { getadvanceList } from \"./advanceFeature/_advance_reducers\";\nimport { PiDotsThreeOutlineVerticalBold } from 'react-icons/pi';\nimport { GrValidate } from \"react-icons/gr\";\nimport { TbPencilMinus } from \"react-icons/tb\";\nimport dayjs from \"dayjs\";\nimport { decrypt, encrypt } from \"../../../config/Encryption\";\n\n\nfunction AdvanceList() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { advanceListData, totaladvanceListCount, loading } = useSelector(\n    (state) => state.advance\n  );\n  const [isModalOpen, setIsModalOpen] = useState({\n    isOpen: false,\n    data: null,\n    type: null,\n   \n  });\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );    \n    const { branchList, branchListloading } = useSelector(\n      (state) => state.branch\n    );\n    const [searchParams, setSearchParams] = useSearchParams();\n    const initialPage = parseInt(searchParams.get(\"page\")) || 1;\n    const initialLimit = 10;\n    const initialBranchId = searchParams.get(\"branchId\") || \"\";  \n    const [currentPage, setCurrentPage] = useState(initialPage);\n    const [limit, setLimit] = useState(initialLimit);\n     const [searchText, setSearchText] = useState(\"\");\n    const [branchId, setBranchId] = useState(initialBranchId);  \n    useEffect(() => {\n      const params = new URLSearchParams();\n      if (currentPage > 1) params.set(\"page\", currentPage);\n  \n      if (branchId) params.set(\"branchId\", branchId);  \n      setSearchParams(params);\n    }, [currentPage, limit, branchId, searchText]);\n\n    useEffect(() => {\n      getadvancerequest();\n    }, [currentPage, limit, branchId, searchText]);\n\n    const handleResetFilters = () => {\n      setCurrentPage(1);\n      setBranchId(\"\");\n      setSearchText(\"\");  \n    };\n    const onChange = (e) => {\n      setSearchText(e);\n    };\n  \n    const onPaginationChange = (page) => setCurrentPage(page);\n    const handleBranchChange = (value) => {\n      setBranchId(value);\n      setCurrentPage(1);\n    }; \n\n  const getadvancerequest = () => {\n    const data = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqData: {\n        directorId: \"\",\n        companyId:\n            userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        \"text\": searchText,\n        \"type\": \"\",\n        \"sort\": true,\n        \"status\": \"\",\n        \"isPagination\": true,\n      }\n    };\n    dispatch(getadvanceList(data))\n\n  };\n\n  useEffect(() => {\n    if (\n      \n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [])\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  const openModal = (item, type) => {\n    setIsModalOpen({\n      isOpen: true,\n      data: item,\n      type: type,\n    });\n\n  }\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n\n  return (\n    <GlobalLayout onChange={onChange}>\n\n      <>\n        <div className=\"\">\n          <div class=\"sm:flex justify-between items-center py-1 lg:space-y-0 space-y-2 overflow-y-auto\">\n            <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-2 sm:gap-3 gap-1\">\n             \n              {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") &&\n                <div className=\"\">\n                  <Select\n                    value={branchId}\n                    onChange={handleBranchChange}\n                    defaultValue=\"\"\n                    disabled={loading}\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchListloading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      branchList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.fullName}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                </div>}\n            </div>\n            <div className=\"flex justify-end items-center gap-2 \">\n              <button\n                onClick={() => {\n                 handleResetFilters()\n                }}\n                className=\"bg-header  py-1.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n              {canCreate &&\n                <Tooltip placement=\"topLeft\"  title='Add Advance'>\n                  <button\n                    onClick={() => {\n                      navigate(\"/admin/advance/create\");\n                    }}\n                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n                  >\n                    <FaPlus />\n                    <span className=\"text-[12px]\">Add Advance</span>\n                  </button>\n                </Tooltip>}\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n          {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n            <thead className=\"\">\n              <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[#ffff] font-[500] h-[40px]\">\n                <th className=\"tableHead w-[10%]\">S.No.</th>\n                <th className=\"tableHead\">Group Name</th>\n                <th className=\"tableHead\">Group User Name</th>\n                <th className=\"tableHead\">Amount</th>\n                <th className=\"tableHead\">Date</th>\n                {/* <th className=\"tableHead\">Created At</th> */}\n                <th className=\"tableHead\">Transactions</th>\n                <th className=\"tableHead\">Action</th>\n              </tr>\n            </thead>\n            {loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {advanceListData && advanceListData?.length > 0 ? (\n                  advanceListData?.map((element, index) => (\n                    <tr\n                      className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-b-[1px] border-[#DDDDDD]`}\n                    >\n                      <td className=\"tableData\">\n                        {index + 1 + ((currentPage - 1) * limit)}\n                      </td>\n                      <td className=\"tableData\">{element?.groupName || '-'}</td>\n                      <td className=\"tableData\">{element?.groupUserName || '-'}</td>\n                      <td className=\"tableData\">{convertIntoAmount(element?.availableBalance || '-')}</td>\n                      <td className=\"tableData\">{moment(element?.date).format(\"DD-MM-YYYY hh:mm a\") || '-'}</td>\n                      {/* <td className=\"tableData\">{moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || '-'}</td> */}\n                      {canRead &&\n                        <td className=\"tableData\">\n                          <span className=\"py-1.5 flex justify-start items-center space-x-2.5\">\n                            {canRead && <button\n\n                              onClick={() => openModal(element, \"up\")}\n                              className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                            >\n                              <span className=\" hover:text-cyan-600 text-header\">\n\n                                View List\n                              </span>\n                            </button>\n                            }\n                          </span>\n                        </td>}\n                      <td className=\"tableData\">\n                        <span className=\"py-1.5 flex justify-start items-center space-x-2.5\">\n                          <Tooltip placement=\"topLeft\"  title='More Actions'>\n                            <Dropdown\n                              menu={{\n                                items: [\n                                  {\n                                    key: 'created-at',\n                                    label: (\n                                      <span\n                                        onClick={() =>\n                                          showSwal(dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                        }\n                                        className=\"flex items-center text-teal-800 hover:text-teal-700\"\n                                      >\n                                        <GrValidate className=\"mr-2\" size={16} />\n                                        Created At\n                                      </span>\n                                    ),\n                                  },\n                                  {\n                                    key: 'created-by',\n                                    label: (\n                                      <span\n                                        onClick={() =>\n                                          showSwal(element?.createdBy || \"Data not available\")\n                                        }\n                                        className=\"flex items-center text-sky-800 hover:text-sky-700\"\n                                      >\n                                        <TbPencilMinus className=\"mr-2\" size={16} />\n                                        Created By\n                                      </span>\n                                    ),\n                                  },\n                                ],\n                              }}\n                              trigger={['click']}\n                            >\n                              <button\n                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                type=\"button\"\n                              >\n                                <PiDotsThreeOutlineVerticalBold\n                                  className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                  size={16}\n                                />\n                              </button>\n                            </Dropdown>\n                          </Tooltip>\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={5}\n                      className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>}\n        </div>\n        {isModalOpen?.isOpen && (\n          <AdvanceModalList isModalOpen={isModalOpen} getadvancerequest={getadvancerequest} advanceListData={advanceListData} onClose={() => setIsModalOpen({\n            isOpen: false,\n            _id: null,\n            type: null,\n\n\n          })} />\n\n        )}\n        {advanceListData?.length > 0 &&\n          <CustomPagination\n            totalCount={totaladvanceListCount}\n            pageSize={limit}\n            currentPage={currentPage}\n            onChange={onPaginationChange}\n          />}\n      </>\n\n    </GlobalLayout>\n  );\n}\nexport default AdvanceList;\n"],"names":["_ref","_isModalOpen$data2","_isModalOpen$data3","isModalOpen","onClose","getadvancerequest","advanceListData","listData","setListData","useState","useDispatch","useEffect","filterData","find","item","_isModalOpen$data","_id","data","alltransections","_jsx","_Fragment","children","Modal","className","width","footer","title","concat","groupName","groupUserName","open","onOk","handleOk","onCancel","handleCancel","_jsxs","length","map","element","index","paymentType","convertIntoAmount","amount","moment","date","format","Tooltip","placement","onClick","receiptPDFPath","pdfLink","process","link","document","createElement","href","target","rel","body","appendChild","click","removeChild","type","BsFileEarmarkPdfFill","size","colSpan","navigate","useNavigate","dispatch","totaladvanceListCount","loading","useSelector","state","advance","setIsModalOpen","isOpen","userInfoglobal","JSON","parse","localStorage","getItem","domainName","branchList","branchListloading","branch","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialBranchId","currentPage","setCurrentPage","limit","setLimit","searchText","setSearchText","branchId","setBranchId","params","URLSearchParams","set","pageSize","reqData","directorId","companyId","userType","getadvanceList","branchSearch","text","sort","status","isPagination","companySearch","canCreate","canRead","canUpdate","canDelete","usePermissions","GlobalLayout","onChange","e","class","Select","value","defaultValue","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","ListLoader","fullName","FaPlus","Loader2","availableBalance","Dropdown","menu","items","key","label","showSwal","dayjs","createdAt","GrValidate","createdBy","TbPencilMinus","trigger","PiDotsThreeOutlineVerticalBold","AdvanceModalList","CustomPagination","totalCount","page"],"sourceRoot":""}