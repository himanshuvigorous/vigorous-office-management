{"version":3,"file":"static/js/885.0d275346.chunk.js","mappings":"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","sources":["pages/global/other/leavetypeManagment/CreateLeaveType.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport { createLeaveType } from \"./LeaveTypeFeatures/_leave_type_reducers\";\nimport { domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { Select } from \"antd\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\n\nconst CreateLeaveType = () => {\n  const { loading: leaveTyeloading } = useSelector(\n    (state) => state.leaveType\n  );\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n\n\n  const { companyList, companyListLoading } = useSelector((state) => state.company);\n  const { branchList, branchListloading } = useSelector(\n    (state) => state.branch\n  );\n  const [isDurationActive, setIsDurationActive] = useState(false);\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const isPaid = useWatch({\n    control,\n    name: \"isPaid\",\n    defaultValue: \"\",\n  });\n\n  const totalLeaves = useWatch({\n    control,\n    name: \"totalLeaves\",\n    defaultValue: \"\",\n  });\n\n  // useEffect(() => {\n  //   dispatch(employeSearch());\n  // }, [dispatch]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      employeId: \"\",\n      companyId: userInfoglobal?.userType === \"admin\" ? data?.PDCompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      directorId: userInfoglobal?.userType === \"companyDirector\" ? userInfoglobal?._id : userInfoglobal?.directorId,\n      branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ? data?.PDBranchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      \"name\": data?.leaveTypeName,\n      \"maxDays\": Number(data?.maxDays),\n      totalLeaves: Number(data?.totalLeaves),\n      duration: isDurationActive,\n      isPaid: data?.isPaid,\n      isCarryForword: (isPaid && isDurationActive) ? data?.isCarryForward : false,\n    };\n    dispatch(createLeaveType(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  const handleDurationChange = (value) => {\n    setIsDurationActive(value === \"true\");  // Convert to boolean\n    setValue(\"maxDays\", \"\");  // Reset maxDays when duration changes\n  };;\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId])\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            {userInfoglobal?.userType === \"admin\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Company Name <span className=\"text-red-600\">*</span>\n              </label>\n              <select\n                {...register(\"PDCompanyId\", {\n                  required: \"company is required\",\n                })}\n                className={` ${inputClassName} ${errors.PDCompanyId\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n                showSearch\n                filterOption={(input, option) =>\n                  String(option?.children).toLowerCase().includes(input.toLowerCase())\n                }\n              >\n                <option className=\"\" value=\"\">\n                  Select Comapany\n                </option>\n                {companyListLoading ? <Select.Option disabled>\n                  <ListLoader />\n                </Select.Option> : (companyList?.map((type) => (\n                  <option value={type?._id}>{type?.fullName}</option>\n                )))}\n              </select>\n              {errors.PDCompanyId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDCompanyId.message}\n                </p>\n              )}\n            </div>}\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Branch Name <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"PDBranchId\"\n                control={control}\n                rules={{ required: \"Branch is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Branch\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchListloading ? <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option> : (branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n              {errors.PDBranchId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDBranchId.message}\n                </p>\n              )}\n            </div>}\n\n            {/* Leave Type Name */}\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Leave Type Name <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"leaveTypeName\", {\n                  required: \"Leave Type Name is required\",\n                })}\n                className={`${inputClassName} ${errors.leaveTypeName ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Leave Type Name\"\n              />\n              {errors.leaveTypeName && (\n                <p className=\"text-red-500 text-sm\">{errors.leaveTypeName.message}</p>\n              )}\n            </div>\n\n             <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Total Annual Allowance <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"number\"\n                {...register(\"totalLeaves\", {\n                  required: \"Total Annual Allowance is required\",\n                })}\n                className={`${inputClassName} ${errors.totalLeaves ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Total Annual Allowance\"\n              />\n              {errors.totalLeaves && (\n                <p className=\"text-red-500 text-sm\">{errors.totalLeaves.message}</p>\n              )}\n            </div>\n\n            {/* Duration */}\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n              Application Limit <span className=\"text-red-600\">*</span>\n              </label>\n              {/* <select\n                {...register(\"duration\", {\n                  required: \"Duration is required\",\n                })}\n                className={`${inputClassName} ${errors.duration ? \"border-[1px] \" : \"border-gray-300\"}`}\n                onChange={handleDurationChange}\n              >\n                <option value=\"\">Select Duration</option>\n                <option value=\"true\">Active</option>\n                <option value=\"false\">Inactive</option>\n              </select> */}\n\n              <Controller\n                name=\"duration\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.duration ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Application Limit\"\n                    onChange={handleDurationChange}\n                  >\n                    <Select.Option value=\"\">Select Application Limit</Select.Option>\n                    <Select.Option value={\"true\"}>Active</Select.Option>\n                    <Select.Option value={\"false\"}>Inactive</Select.Option>\n                  </Select>\n                )}\n              />\n              {errors.duration && (\n                <p className=\"text-red-500 text-sm\">{errors.duration.message}</p>\n              )}\n            </div>\n\n            {/* Max Days (conditionally shown) */}\n          \n\n           \n\n\n            {/* Is Paid */}\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Is This a Paid Leave? <span className=\"text-red-600\">*</span></label>\n\n              <Controller\n                name=\"isPaid\"\n                control={control}\n                \n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.isPaid ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Option\"\n                  >\n                    <Select.Option value=\"\">Select Option</Select.Option>\n                    <Select.Option value={true}>Yes</Select.Option>\n                    <Select.Option value={false}>No</Select.Option>\n                  </Select>\n                )}\n              />\n              {/* <select\n                {...register(\"isPaid\", {\n                  required: \"This field is required\",\n                })}\n                className={`${inputClassName} ${errors.isPaid ? \"border-[1px] \" : \"border-gray-300\"}`}\n              >\n                <option value=\"\">Select Option</option>\n                <option value={true}>Yes</option>\n                <option value={false}>No</option>\n              </select> */}\n              {errors.isPaid && (\n                <p className=\"text-red-500 text-sm\">{errors.isPaid.message}</p>\n              )}\n            </div>\n\n            {isDurationActive && (\n              <div className=\"\">\n                <label className={`${inputLabelClassName}`}>Maximum Days Per Application ( In Month ) <span className=\"text-red-600\">*</span></label>\n                <input\n                  type=\"number\"\n                  {...register(\"maxDays\", {\n                    required: \"Maximum Days Per Application is required\",\n                    validate: (value) => {\n                      if (value > totalLeaves) {\n                        return \"Maximum Days Per Application cannot be greater than Total Annual Allowance\";\n                      }\n                      return true;\n                    },\n                    \n                  })}\n                  className={`${inputClassName} ${errors.maxDays ? \"border-[1px] \" : \"border-gray-300\"}`}\n                  placeholder=\"Enter Maximum Days Per Application\"\n                />\n                {errors.maxDays && (\n                  <p className=\"text-red-500 text-sm\">{errors.maxDays.message}</p>\n                )}\n              </div>\n            )}\n\n            {/* Is Carry Forward */}\n            {(isPaid && isDurationActive) && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Allow Carry Forward? <span className=\"text-red-600\">*</span></label>\n              {/* <select\n                {...register(\"isCarryForward\", {\n                  required: \"This field is required\",\n                })}\n                className={`${inputClassName} ${errors.isCarryForward ? \"border-[1px] \" : \"border-gray-300\"}`}\n              >\n                <option value=\"\">Select Option</option>\n                <option value={true}>Yes</option>\n                <option value={false}>No</option>\n              </select> */}\n\n              <Controller\n                name=\"isCarryForward\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.isCarryForward ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Option\"\n                  >\n                    <Select.Option value=\"\">Select Option</Select.Option>\n                    <Select.Option value={true}>Yes</Select.Option>\n                    <Select.Option value={false}>No</Select.Option>\n                  </Select>\n                )}\n              />\n              {errors.isCarryForward && (\n                <p className=\"text-red-500 text-sm\">{errors.isCarryForward.message}</p>\n              )}\n            </div>}\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={leaveTyeloading}\n              className={`${leaveTyeloading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 mt-3 rounded`}\n            >\n              {leaveTyeloading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default CreateLeaveType;\n"],"names":["CreateLeaveType","loading","leaveTyeloading","useSelector","state","leaveType","register","handleSubmit","control","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","companyList","companyListLoading","company","branchList","branchListloading","branch","isDurationActive","setIsDurationActive","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","CompanyId","useWatch","name","defaultValue","isPaid","totalLeaves","handleDurationChange","value","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","companySearch","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","employeId","PDCompanyId","directorId","branchId","PDBranchId","leaveTypeName","Number","maxDays","duration","isCarryForword","isCarryForward","createLeaveType","then","error","inputLabelClassName","_objectSpread","required","inputClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","Select","Option","disabled","ListLoader","map","type","fullName","message","Controller","rules","render","_ref","field","inputAntdSelectClassName","placeholder","_ref2","onChange","_ref3","validate","_ref4","Loader"],"sourceRoot":""}