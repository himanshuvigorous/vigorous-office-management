{"version":3,"file":"static/js/1716.2be1178c.chunk.js","mappings":"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","sources":["global_layouts/Loader/Loader.js","pages/client/clientService/ClientServiceList.js"],"sourcesContent":["import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n","import { useNavigate } from \"react-router-dom\"\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\";\nimport Swal from \"sweetalert2\"\nimport { encrypt } from \"../../../config/Encryption\"\nimport { FaPlus, FaPenToSquare } from \"react-icons/fa6\"\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { domainName, inputAntdSelectClassNameFilter, inputClassNameSearch, sortByPropertyAlphabetically } from \"../../../constents/global\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\"\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { getClientServiceList, clientServiceSearch, deleteClientService } from \"../clientService/clientServiceFeatures/_client_service_reducers\"\nimport Loader from \"../../../global_layouts/Loader/Loader\";\nimport { Select, Tooltip } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport dayjs from \"dayjs\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\n\n\nfunction ClientServiceList() {\n    const { register, setValue, control, formState: { errors } } = useForm();\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const { ClientServiceList, totalClientServiceCount, loading } = useSelector(state => state.clientService)\n    const { companyList } = useSelector((state) => state.company);\n    const { branchList, loading: branchSearchLoading } = useSelector((state) => state.branch);\n    const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchText, setSearchText] = useState(\"\");\n    // const [status, setStatus] = useState(\"\");\n\n    const CompanyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: \"\",\n    });\n    const BranchId = useWatch({\n        control,\n        name: \"PDBranchId\",\n        defaultValue: \"\",\n    });\n\n    const status = useWatch({\n        control,\n        name: 'status',\n        defaultValue: ''\n    });\n\n    const limit = 10;\n\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n\n    const filters = [CompanyId, BranchId, status, searchText].join(\"-\");\n    const [isFirstRender ,setisFirstRender] = useState(false)\n    \n    useEffect(() => {\n        if (!isFirstRender) {\n          setisFirstRender(state=>true);\n          return;\n        }\n        if (currentPage === 1) {\n          fetchClientServiceList();\n        } else {\n          setCurrentPage(1);\n        }\n      }, [filters])\n\n    useEffect(() => {\n        fetchClientServiceList()\n    }, [currentPage])\n\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n    const fetchClientServiceList = () => {\n        const reqData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                companyId:\n                    userInfoglobal?.userType === \"admin\"\n                        ? CompanyId\n                        :\n                        userInfoglobal?.userType === \"company\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.companyId,\n                branchId:\n                    userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\"\n                        ? userInfoglobal?._id\n                        : userInfoglobal?.branchId,\n                \"directorId\": \"\",\n                \"text\": searchText,\n                \"sort\": true,\n                status: status === \"true\" ? true : status === \"false\" ? false : \"\",\n                \"isPagination\": true,\n            }\n        }\n        dispatch(getClientServiceList(reqData))\n    }\n\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteClientService(reqData)).then((data) => {\n                    // fetchClientServiceList()\n                    if (currentPage > 1 && ClientServiceList?.docs?.length == 1) {\n                        setCurrentPage(Number(currentPage - 1));\n\n                    } else {\n                        fetchClientServiceList();\n                    }\n                })\n            }\n        });\n    };\n\n    useEffect(() => {\n        if (\n            CompanyId ||\n            userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n        ) {\n            dispatch(\n                branchSearch({\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                    companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n                })\n            );\n        }\n    }, [CompanyId])\n\n    useEffect(() => {\n        if (userInfoglobal?.userType === \"admin\") {\n            dispatch(\n                companySearch({\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                })\n            );\n        }\n    }, []);\n\n    // const handleOnChange = async (event) => {\n    //     const searchValue = event.target.value;\n    //     setValue(\"search\", searchValue);\n\n    //     let reqData = {\n    //         searchValue: searchValue,\n    //         size: 3,\n    //         pageNo: 1,\n    //     };\n\n    //     if (searchValue.length >= 1) {\n\n    //         dispatch(clientServiceSearch(reqData));\n    //     }\n    // };\n\n    const onChange = (e) => {\n\n        setSearchText(e);\n    };\n\n    return (\n        <GlobalLayout onChange={onChange}>\n\n            <section>\n                <div className=\"sm:flex justify-between items-center md:space-y-0 space-y-2 py-1\">\n                    <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-2 sm:gap-3 gap-1\">\n                        {userInfoglobal?.userType === \"admin\" &&\n                            <div className=\"\">\n\n                                <select\n                                    {...register(\"PDCompanyId\", {\n                                        required: \"company is required\",\n                                    })}\n                                    className={` ${inputClassNameSearch} ${errors.PDCompanyId\n                                        ? \"border-[1px] \"\n                                        : \"border-gray-300\"\n                                        }`}\n                                >\n                                    <option className=\"\" value=\"\">\n                                        Select Company\n                                    </option>\n                                    {companyList?.map((type) => (\n                                        <option value={type?._id}>{type?.fullName}</option>\n                                    ))}\n                                </select>\n                                {errors.PDCompanyId && (\n                                    <p className=\"text-red-500 text-sm\">\n                                        {errors.PDCompanyId.message}\n                                    </p>\n                                )}\n                            </div>}\n                        {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") &&\n                            <div className=\"\">\n                                <Controller\n                                    name=\"PDBranchId\"\n                                    control={control}\n                                    rules={{ required: \"Branch is required\" }}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            className={`w-full ${inputAntdSelectClassNameFilter} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                                            placeholder=\"Select Branch\"\n                                        >\n                                            <Select.Option value=\"\">Select Branch</Select.Option>\n                                            {/* {branchList?.map((type) => (\n                                                <Select.Option key={type?._id} value={type?._id}>\n                                                    {type?.fullName}\n                                                </Select.Option>\n                                            ))} */}\n                                            {branchSearchLoading ? (\n                                                <Select.Option disabled>\n                                                    <ListLoader />\n                                                </Select.Option>\n                                            ) : (\n                                                sortByPropertyAlphabetically(branchList)?.map((type) => (\n                                                    <Select.Option key={type?._id} value={type?._id}>\n                                                        {type?.fullName}\n                                                    </Select.Option>\n                                                ))\n                                            )}\n                                        </Select>\n                                    )}\n                                />\n                                {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n                            </div>}\n                        <Controller\n                            name=\"status\"\n                            control={control}\n                            rules={{}}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.status\n                                        ? \"border-[1px] \"\n                                        : \"border-gray-300\"\n                                        }`}\n                                    placeholder=\"Select Status\"\n                                    showSearch\n                                    filterOption={(input, option) =>\n                                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                    }\n                                >\n                                    <Select.Option value=\"\">Select Status</Select.Option>\n                                    <Select.Option value=\"true\"> Active </Select.Option>\n                                    <Select.Option value=\"false\"> InActive </Select.Option>\n                                </Select>\n                            )}\n                        />\n                    </div>\n                    <div className=\"flex justify-end items-center gap-2 \">\n                        <button\n                            onClick={() => {\n                                setValue(\"status\", \"\");\n                                setValue(\"PDBranchId\", '');\n                                setValue(\"PdDepartmentId\", \"\");\n                                setValue(\"PdCompanyId\", \"\");\n                            }}\n                            className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                        {(canRead && canCreate) &&\n                            <Tooltip placement=\"topLeft\"  title='Add Client Service'>\n                                <button\n                                    onClick={() => {\n                                        navigate(\"/admin/client-service/create\");\n                                    }}\n                                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n                                >\n                                    <FaPlus />\n                                    <span className=\"text-[12px]\">Add Client Service</span>\n                                </button>\n                            </Tooltip>}\n                    </div>\n                </div>\n                <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n                    {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                        <thead className=''>\n                            <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                                <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                    S.No.\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap w-[20%]'>\n                                    Name\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    Created At\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    Created By\n                                </th>\n                                <th className='border-none p-2 whitespace-nowrap'>\n                                    Status\n                                </th>\n                                {(canUpdate || canDelete) &&\n                                    <th className='border-none p-2 whitespace-nowrap w-[20%]'>\n                                        Action\n                                    </th>}\n                            </tr>\n                        </thead>\n                        {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                            <td\n                                colSpan={10}\n                                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                            >\n                                <Loader2 />\n                            </td>\n                        </tr> :\n                            <tbody>\n                                {ClientServiceList && ClientServiceList?.docs?.length > 0 ?\n                                    ClientServiceList?.docs?.map((element, index) => (\n                                        <tr className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151] text-[14px]`}>\n                                            <td className='whitespace-nowrap border-none p-2 '>{index + 1 + ((currentPage - 1) * limit)}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.name ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\") ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.createdBy ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                <span\n                                                    className={`${element?.status\n                                                        ? \"bg-[#E0FFBE] border-green-500\"\n                                                        : \"bg-red-200 border-red-500\"\n                                                        } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                                                >\n                                                    {element?.status ? \"Active\" : \"Inactive\" ?? \"-\"}\n                                                </span>\n                                            </td>\n                                            {(canUpdate || canDelete) && <td className='whitespace-nowrap border-none p-2'>\n                                                <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                    {canUpdate && <Tooltip placement=\"topLeft\"  title='Edit'>\n                                                        <button\n                                                            onClick={() => {\n                                                                navigate(`/admin/client-service/edit/${encrypt(element?._id)}`);\n                                                            }}\n                                                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <FaPenToSquare className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                    {canDelete && <Tooltip placement=\"topLeft\"  title='Delete'>\n                                                        <button onClick={() => handleDelete(element?._id)} className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <RiDeleteBin5Line className='text-red-600 hover:text-red-500' size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                </span>\n                                            </td>}\n                                        </tr>\n                                    ))\n                                    : (<tr className=\"bg-white bg-opacity-5 \" >\n                                        <td colSpan={6} className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\">Record Not Found</td>\n                                    </tr>)}\n                            </tbody>}\n                    </table>}\n                </div>\n\n                <CustomPagination\n                    totalCount={totalClientServiceCount}\n                    pageSize={limit}\n                    currentPage={currentPage}\n                    onChange={onPaginationChange}\n                />\n\n            </section>\n\n        </GlobalLayout>\n    )\n}\nexport default ClientServiceList"],"names":["_jsx","className","children","Spin","size","_ClientServiceList$do2","_ClientServiceList$do3","register","setValue","control","formState","errors","useForm","navigate","useNavigate","dispatch","useDispatch","ClientServiceList","totalClientServiceCount","loading","useSelector","state","clientService","companyList","company","branchList","branchSearchLoading","branch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","useState","searchText","setSearchText","CompanyId","useWatch","name","defaultValue","BranchId","status","filters","join","isFirstRender","setisFirstRender","useEffect","fetchClientServiceList","canCreate","canRead","canUpdate","canDelete","usePermissions","reqData","page","limit","reqPayload","companyId","userType","_id","branchId","getClientServiceList","branchSearch","text","sort","isPagination","companySearch","GlobalLayout","onChange","e","_jsxs","_objectSpread","required","inputClassNameSearch","PDCompanyId","value","map","type","fullName","message","Controller","rules","render","_ref","_sortByPropertyAlphab","field","Select","inputAntdSelectClassNameFilter","PDBranchId","placeholder","Option","disabled","ListLoader","sortByPropertyAlphabetically","_ref2","showSearch","filterOption","input","option","String","toLowerCase","includes","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","docs","length","element","index","_element$name","_dayjs$format","_element$createdBy","_Inactive","dayjs","createdAt","format","createdBy","encrypt","FaPenToSquare","id","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteClientService","data","_ClientServiceList$do","Number","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","pageSize"],"sourceRoot":""}