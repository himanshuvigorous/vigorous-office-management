{"version":3,"file":"static/js/3913.88697dc0.chunk.js","mappings":"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","sources":["pages/hr/onBoarding/EditOnBoarding.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Controller, useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  domainName,\n  formButtonClassName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputDisabledClassName,\n  inputerrorClassNameAutoComplete,\n  inputLabelClassName,\n  inputLabelClassNameReactSelect,\n  sortByPropertyAlphabetically,\n} from \"../../../constents/global.js\";\nimport getUserIds from \"../../../constents/getUserIds\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { decrypt } from \"../../../config/Encryption.js\";\nimport {\n  getOnBoardingDetails,\n  resetOnBoarding,\n  updateOnBoarding,\n} from \"./onBoardingFeatures/_onBoarding_reducers.js\";\nimport { designationSearch } from \"../../designation/designationFeatures/_designation_reducers.js\";\nimport {\n  countrySearch,\n  secCountrySearch,\n} from \"../../global/address/country/CountryFeatures/_country_reducers.js\";\nimport {\n  secStateSearch,\n  stateSearch,\n} from \"../../global/address/state/featureStates/_state_reducers.js\";\nimport {\n  citySearch,\n  secCitySearch,\n} from \"../../global/address/city/CityFeatures/_city_reducers.js\";\nimport { deptSearch } from \"../../department/departmentFeatures/_department_reducers.js\";\nimport moment from \"moment\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers.js\";\nimport ReactSelect from \"react-select\";\nimport { leaveTypeSearch } from \"../../global/other/leavetypeManagment/LeaveTypeFeatures/_leave_type_reducers.js\";\nimport { AutoComplete, Input, Select } from \"antd\";\nimport { AiFillDelete, AiOutlineClose } from \"react-icons/ai\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker.js\";\nimport { assignMultipleLeave, deleteAssignedLeaveEmployee } from \"../leaveRequestManagment/AssignLeaves/AssignLeaveFeatures/_assign_leave_reducers.js\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers.js\";\nimport dayjs from \"dayjs\";\nimport CustomMobileCodePicker from \"../../../global_layouts/MobileCode/MobileCodePicker.js\";\nimport EditSalaryDetailsModule from \"../employeeSalary/employeeSalaryModule/EditSalaryDetailsModule.js\";\nimport { deleteDocument, fileUploadFunc, updateDocument } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers.js\";\nimport { createEmployeeSalaryDetails, updateEmployeeSalaryDetails } from \"../employeeSalary/employeeSalaryModule/employeeSalaryFeatures/_employee_salary_reducers.js\";\nimport Swal from \"sweetalert2\";\nimport ImageUploader from \"../../../global_layouts/ImageUploader/ImageUploader.js\";\nimport Loader from \"../../../global_layouts/Loader.js\";\nimport ListLoader from \"../../../global_layouts/ListLoader.js\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2.js\";\nimport { RolesPermissionSearch } from \"../../global/RolesAccess/RolesPermission/rolePermissiomnFeatures/_rolePermission_reducers.js\";\nimport { timeSlotSearch } from \"../../timeSlot/timeSlotsFeatures/_timeSlots_reducers.js\";\n\nconst EditOnBoarding = () => {\n  const navigate = useNavigate();\n  const { onBoardingIdEnc } = useParams();\n  const onBoardingId = decrypt(onBoardingIdEnc);\n  const [step, setStep] = useState(1);\n  const { loading: onBoardingLaoding } = useSelector(\n    (state) => state.onBoarding\n  );\n  const [sameAsCurrentAddress, setSameAsCurrentAddress] = useState(false);\n  const { countryListData, secCountryList } = useSelector(\n    (state) => state.country\n  );\n  const { rolesPermissionList } = useSelector((state) => state.rolePermission);\n  const [editPageLoader, setEditPageLoader] = useState(true);\n  const { designationList, loading: desLoading } = useSelector((state) => state.designation);\n  const { departmentListData, loading: depLoading } = useSelector((state) => state.department);\n  const { stateListData, secStateList } = useSelector((state) => state.states);\n  const { cityListData, secCityList } = useSelector((state) => state.city);\n  const { onBoardingDetailsData } = useSelector((state) => state.onBoarding);\n  const { leaveListData } = useSelector((state) => state.leaveType);\n  const [isFirstEffectComplete, setIsFirstEffectComplete] = useState(false);\n  const [financialDateDiffrence, setFinancialDateDiffrence] = useState({\n    main: 0,\n    current: 0\n  });\n\n\n\n\n  const { employeeDocumentList, } = useSelector(\n    (state) => state.employeeDocument\n  );\n  const [banks, setBanks] = useState([{ id: 1 }]);\n  const [documents, setDocuments] = useState([\n    { id: 1, documentType: \"\", documentNo: \"\", file: [] },\n  ]);\n  const { loadingUpdateFile } = useSelector((state) => state.fileUpload);\n  const [financialInfo, setFinancialInfo] = useState([\n    {\n      id: 1,\n      name: \"\",\n      year: \"\",\n      file: [],\n    },\n  ]);\n        const { timeSlotsListData } = useSelector(state => state.timeSlots)\n  const [formErrors, setFormErrors] = useState([]);\n  const [formErrorsBank, setFormErrorsBank] = useState([]);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    reset,\n    getValues,\n    clearErrors,\n    setError,\n    resetField,\n    control,\n    formState: { errors },\n    watch,\n  } = useForm({\n    defaultValues: {\n    },\n  });\n  const isProbationPeriodActive = useWatch({\n    control,\n    name: \"isProbationPeriod\",\n    defaultValue: \"\",\n  });\n  const dateOfJoining = useWatch({\n    control,\n    name: \"dateOfJoining\",\n    defaultValue: \"\",\n  });\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"family\",\n  });\n  const {\n    fields: emergencyContactFields,\n    append: appendEmergencyContact,\n    remove: removeEmergencyContact,\n  } = useFieldArray({\n    control,\n    name: \"emergencyContact\",\n  });\n  const {\n    fields: educationDetails,\n    append: appendEducational,\n    remove: removeEducational,\n  } = useFieldArray({\n    control,\n    name: \"educationDetails\",\n  });\n  const {\n    fields: employmentDetails,\n    append: appendEmployment,\n    remove: removeEmployment,\n  } = useFieldArray({\n    control,\n    name: \"employmentDetails\",\n  });\n  const {\n    fields: incrementDetails,\n    append: appendIncrement,\n    remove: removeIncrement,\n  } = useFieldArray({\n    control,\n    name: \"incrementDetails\",\n  });\n  const {\n    fields: assignLeaveDetails,\n    append: appendassignLeave,\n    remove: removeassignLeave,\n  } = useFieldArray({\n    control,\n    name: \"assignLeaveDetails\",\n  });\n\n  const dispatch = useDispatch();\n  const financStartDate = useWatch({\n    control,\n    name: \"financStartDate\",\n    defaultValue: \"\",\n  });\n  const financEndDate = useWatch({\n    control,\n    name: \"financEndDate\",\n    defaultValue: \"\",\n  });\n  const IsPf = useWatch({\n    control,\n    name: \"isPF\",\n    defaultValue: \"\",\n  });\n  const isESIC = useWatch({\n    control,\n    name: \"isESIC\",\n    defaultValue: \"\",\n  });\n  const isTl = useWatch({ name: \"isTl\", control });\n  const isHr = useWatch({ name: \"isHr\", control });\n\n  useEffect(() => {\n    if (isHr && isTl) {\n      setValue(\"isTl\", false);\n      setValue(\"isHr\", true);\n    }\n    if (isTl && isHr) {\n      setValue(\"isHr\", false);\n      setValue(\"isTl\", true);\n    }\n  }, [isTl, isHr, setValue]);\n  useEffect(() => {\n    dispatch(\n      countrySearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n\n    setIsFirstEffectComplete(true);\n  }, []);\n\n\n  useEffect(() => {\n    if (isFirstEffectComplete) {\n\n      const reqData = {\n        _id: onBoardingId,\n      };\n      dispatch(getOnBoardingDetails(reqData)).then(() => {\n        setEditPageLoader(false)\n      })\n      setIsFirstEffectComplete(false);\n    }\n\n   \n  }, [isFirstEffectComplete]);\n\n  useEffect(()=>{\n return ()=>{\n    dispatch(resetOnBoarding())\n    }\n  },[])\n\n\n  const [employeeList, setEmployeeList] = useState([])\n\n  const reportingOption = () => {\n    const reqPayload = {\n      text: \"\",\n      status: true,\n      sort: true,\n      isTL: \"\",\n      isHR: \"\",\n      isManager: true,\n      isPagination: false,\n      departmentId: \"\",\n      designationId: \"\",\n      companyId: onBoardingDetailsData?.companyId,\n      branchId: onBoardingDetailsData?.branchId,\n      isBranch: true\n\n    };\n\n    dispatch(employeSearch(reqPayload)).then((res) => {\n\n      const optionList = res?.payload?.data?.docs?.map(\n        (options) => {\n          return ({\n            value: options?._id,\n            label: (\n              <div className=\"flex gap-2 items-center\">\n                {options?.fullName}\n                <div className=\"text-[10px] text-gray-500\">\n                  {options?.userType === \"companyDirector\"\n                    ? \"Director\"\n                    : options?.userType === \"companyBranch\"\n                      ? \"Branch Head\"\n                      : options?.userType === 'employee' ? <div className=\"flex  gap-1   !p-0 !m-0 rounded-sm\">\n                        <div className=\"!p-0 !m-0\">{options?.departmentData?.name}</div>\n                        (<div className=\"!p-0 !m-0\">{options?.designationData?.name}</div>)\n                      </div> : ''}\n                </div>\n              </div>\n            ),\n          })\n        }\n      );\n      setEmployeeList(optionList)\n    })\n\n  }\n\n\n\n  useEffect(() => {\n    if (onBoardingDetailsData) { \n      reset();\n      setValue(\"PDAddress\", onBoardingDetailsData?.addresses?.primary?.street);\n      setValue(\"PDCity\", onBoardingDetailsData?.addresses?.primary?.city);\n      setValue(\"PDcountry\", onBoardingDetailsData?.addresses?.primary?.country);\n      setValue(\"PDState\", onBoardingDetailsData?.addresses?.primary?.state);\n      setValue(\"PDPin\", onBoardingDetailsData?.addresses?.primary?.pinCode);\n\n      setValue(\n        \"PDSecAddress\",\n        onBoardingDetailsData?.addresses?.secondary?.street\n      );\n      setValue(\n        \"PDSecCountry\",\n        onBoardingDetailsData?.addresses?.secondary?.country\n      );\n      setValue(\n        \"PDSecState\",\n        onBoardingDetailsData?.addresses?.secondary?.state\n      );\n      setValue(\"PDSecCity\", onBoardingDetailsData?.addresses?.secondary?.city);\n      setValue(\n        \"PDSecPinCode\",\n        onBoardingDetailsData?.addresses?.secondary?.pinCode\n      );\n      setValue(\"PDFullName\", onBoardingDetailsData?.fullName);\n       setValue(\"landlineNo\", onBoardingDetailsData?.landlineNumber);\n       setValue(\"seatNo\", onBoardingDetailsData?.seatNumber);\n       \n      setValue(\"PDEmail\", onBoardingDetailsData?.email);\n      setValue(\"PDmobileCode\", onBoardingDetailsData?.mobile?.code);\n      setValue(\"PDOfficeemail\", onBoardingDetailsData?.officeEmail);\n    \n      setValue(\"PDCompanyId\", onBoardingDetailsData?.companyId);\n      dispatch(\n        deptSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: onBoardingDetailsData?.companyId,\n          branchId: onBoardingDetailsData?.branchId,\n        })\n      ).then(data => {\n        if (!data?.error) {\n          setValue(\"PDDepartmentId\", onBoardingDetailsData?.departmentId)\n        }\n      })\n\n      dispatch(RolesPermissionSearch({\n        companyId: onBoardingDetailsData?.companyId,\n        branchId: onBoardingDetailsData?.branchId,\n        text: \"\",\n        sort: true,\n        status: \"\",\n        isPagination: false,\n      })).then((data) => {\n        if (!data?.error) {\n          setValue(\"sidebarRole\", onBoardingDetailsData?.pageRoleId)\n        }\n      })\n      dispatch(\n        designationSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          departmentId: onBoardingDetailsData?.departmentId,\n          companyId: onBoardingDetailsData?.companyId,\n        })\n      ).then((res) => {\n        if (!res.error) {\n          setValue(\"PDDesignationId\", onBoardingDetailsData?.designationId);\n        }\n      })\n      setValue(\"PDDepartmentname\", onBoardingDetailsData?.departmentData?.name);\n      setValue(\"PDDesignationname\", onBoardingDetailsData?.designationData?.name);\n      setValue(\"workType\", onBoardingDetailsData?.workType);\n      setValue(\"PDMobileNo\", onBoardingDetailsData?.mobile?.number);\n      setValue(\"gender\", onBoardingDetailsData?.generalInfo?.gender);\n      setValue(\"BloodGroup\", onBoardingDetailsData?.generalInfo?.bloodGroup);\n      onBoardingDetailsData?.generalInfo?.dateOfBirth && setValue(\n        \"dateOfBirth\",\n        dayjs(onBoardingDetailsData?.generalInfo?.dateOfBirth))\n      setValue(\n        \"maritalStatus\",\n        onBoardingDetailsData?.generalInfo?.maritalStatus\n      );\n      onBoardingDetailsData?.generalInfo?.dateOfJoining && setValue(\n        \"dateOfJoining\",\n        dayjs(onBoardingDetailsData?.generalInfo?.dateOfJoining)\n      );\n      setValue(\"isProbationPeriod\", onBoardingDetailsData?.generalInfo?.isProbationPeriod == true ? \"Yes\" : onBoardingDetailsData?.generalInfo?.isProbationPeriod == false ? \"No\" : \"\");\n      setValue(\"isProbationPeriodLeave\", onBoardingDetailsData?.generalInfo?.isProbationPeriodLeave == true ? \"Yes\" : onBoardingDetailsData?.generalInfo?.isProbationPeriodLeave == false ? \"No\" : \"\");\n      setValue(\n        \"probationPeriod\",\n        onBoardingDetailsData?.generalInfo?.probationPeriod\n      );\n\n      const bankData = onBoardingDetailsData?.bankData?.length\n        ? onBoardingDetailsData?.bankData.map((bank) => ({\n          _id: bank?._id || \"\",\n          accountType: bank?.accountType || \"\",\n          bankName: bank?.bankName || \"\",\n          branchName: bank?.branchName || \"\",\n          bankholderName: bank?.bankholderName || \"\",\n          accountNumber: bank?.accountNumber || \"\",\n          ifscCode: bank?.ifscCode || \"\",\n          file: bank?.filePath || [],\n        }))\n        : [\n          {\n            _id: \"\",\n            accountType: \"\",\n            bankName: \"\",\n            branchName: \"\",\n            bankholderName: \"\",\n            accountNumber: \"\",\n            ifscCode: \"\",\n            file: [],\n          },\n        ];\n\n      setBanks([...bankData]);\n      const documentData = onBoardingDetailsData?.documentData?.length\n        ? onBoardingDetailsData?.documentData.map((document) => ({\n          _id: document?._id || \"\",\n          documentType: document?.name || \"\",\n          documentNo: document?.number || \"\",\n          file: document?.filePath || [],\n        }))\n        : [\n          {\n            _id: \"\",\n            documentType: \"\",\n            documentNo: \"\",\n            file: [],\n          },\n        ];\n\n      setDocuments([...documentData]);\n     \n      dispatch(timeSlotSearch({\n            directorId: '',\n            companyId: onBoardingDetailsData?.companyId,\n        branchId: onBoardingDetailsData?.branchId,\n            text: \"\",\n            sort: true,\n            status: \"\",\n            isPagination: false,\n          })).then((res) => {\n            if (!res.error) {\n              setValue(\"shift\", onBoardingDetailsData?.shift);\n            }\n          })\n\n      dispatch(employeSearch({\n        text: \"\",\n        status: true,\n        sort: true,\n        isTL: \"\",\n        isHR: \"\",\n        isPagination: false,\n        departmentId: \"\",\n        designationId: \"\",\n        companyId: onBoardingDetailsData?.companyId,\n        branchId: onBoardingDetailsData?.branchId,\n        isBranch: true,\n        isDirector: true\n      })).then((data) => {\n        if (!data?.error) {\n          const selectedEmployee = data?.payload?.data?.docs?.find((ele) => ele?._id === onBoardingDetailsData?.reporting_to)\n          setValue(\"reportingEmployee\", {\n            value: selectedEmployee?._id,\n            label: (\n              <div className=\"flex gap-2 items-center\">\n                {selectedEmployee?.fullName}\n                <div className=\"text-[10px] text-gray-500\">\n                  {selectedEmployee?.userType === \"companyDirector\"\n                    ? \"Director\"\n                    : selectedEmployee?.userType === \"companyBranch\"\n                      ? \"Branch Head\"\n                      : selectedEmployee?.userType === \"employee\" ? (\n                        <div className=\"flex gap-1 !p-0 !m-0 rounded-sm\">\n                          <div className=\"!p-0 !m-0\">{selectedEmployee?.departmentData?.name}</div>\n                          (<div className=\"!p-0 !m-0\">{selectedEmployee?.designationData?.name}</div>)\n                        </div>\n                      ) : \"\"}\n                </div>\n              </div>\n            )\n          })\n        }\n      })\n\n      if(onBoardingDetailsData?.familyDetails){\n        remove();\n        onBoardingDetailsData?.familyDetails?.forEach((famDetail) => {\n        \n        const formattedEmpDetail = {\n          ...famDetail,\n          contactNumber: { code: famDetail?.contactNumber?.code, number: famDetail?.contactNumber?.number }\n\n        };\n        append(formattedEmpDetail);\n      });}\n\n\n\n\n      if(onBoardingDetailsData?.educationDetails){\n        \n         removeEducational();\n        onBoardingDetailsData?.educationDetails?.forEach((eduDetail) => {\n       \n        const formattedEduDetail = {\n\n          ...eduDetail,\n          from: dayjs(eduDetail.from),\n          to: dayjs(eduDetail.to),\n        };\n        appendEducational(formattedEduDetail);\n      });}\n\n      \n      if(onBoardingDetailsData?.employementDetails){\n        removeEmployment();\n        onBoardingDetailsData?.employementDetails?.forEach((empDetail) => {\n\n        const formattedEmpDetail = {\n          ...empDetail,\n          from: dayjs(empDetail.from),\n          to: dayjs(empDetail.to),\n        };\n        appendEmployment(formattedEmpDetail);\n      });}\n\n     if(onBoardingDetailsData?.emergencyContact){\n       removeEmergencyContact();\n       onBoardingDetailsData?.emergencyContact?.forEach((emrConDetail) => {\n     \n        const formattedEduDetail = {\n          ...emrConDetail,\n        };\n        appendEmergencyContact(formattedEduDetail);\n      });}\n      const FirstassignLeave = onBoardingDetailsData?.assignLeaves?.[0];\n      if (FirstassignLeave) {\n        setValue(\"financStartDate\", FirstassignLeave.financStartDate ?  dayjs(FirstassignLeave.financStartDate) : null);\n        setValue(\"financEndDate\",FirstassignLeave.financEndDate ?  dayjs(FirstassignLeave.financEndDate):null);\n        setValue(\"leaveTypePolicy\", FirstassignLeave.leavePolicy);\n      }\n      dispatch(leaveTypeSearch({\n        directorId: \"\",\n        companyId: onBoardingDetailsData?.companyId,\n        branchId: onBoardingDetailsData?.branchId,\n        \"text\": \"\",\n        \"sort\": true,\n        \"status\": \"\",\n        \"isPagination\": false,\n        isPaid: true,\n      })).then((res) => {\n        if (!res.error) {\n          setValue(\"assignLeaveDetails\", [])\n\n          onBoardingDetailsData?.assignLeaves?.length > 0 ? onBoardingDetailsData?.assignLeaves?.filter(data => data?.leaveTypeIsPaid)?.forEach((item, index) => {\n            const formattedLeave = {\n              _id: item?._id,\n              leave: item?.leaveTypeId,\n              totalLeave: item?.totalLeaves\n            }\n\n            appendassignLeave(formattedLeave)\n            setValue(`assignLeaveDetails[${index}].maxValue`, Math.ceil(item?.totalLeaves))\n          }) : appendassignLeave(\n            {\n              leave: \"\",\n            }\n          )\n\n        }\n      })\n\n      setValue(\n        \"SMLinkedIn\",\n        onBoardingDetailsData?.socialLinks?.find(\n          (link) => link.name === \"LinkedIn\"\n        )?.link?.replace(/^https?:\\/\\//, '') || ''\n      );\n      setValue(\n        \"SMGithub\",\n        onBoardingDetailsData?.socialLinks?.find(\n          (link) => link.name === \"GitHub\"\n        )?.link?.replace(/^https?:\\/\\//, '') || ''\n      );\n\n      setValue(\"ProfileImage\", onBoardingDetailsData?.profileImage);\n      setValue(\"salaryId\", onBoardingDetailsData?.salaryData?._id);\n      setValue(\"currentPackage\", onBoardingDetailsData?.salaryData?.currentPackage);\n      setValue(\"esicNumber\", onBoardingDetailsData?.salaryData?.esicNumber);\n      setValue(\"currentSalary\", onBoardingDetailsData?.salaryData?.currentSalary);\n      setValue(\"perDaySalary\", onBoardingDetailsData?.salaryData?.perDaySalary);\n      setValue(\"basicSalaryPercentage\", onBoardingDetailsData?.salaryData?.basicSalaryPercentage);\n      setValue(\"calculatedBasicSalary\", onBoardingDetailsData?.salaryData?.basicSalary);\n      setValue(\"isPF\", onBoardingDetailsData?.salaryData?.isPF ? 'true' : 'false');\n      setValue(\"isESIC\", onBoardingDetailsData?.salaryData?.isESIC ? 'true' : 'false');\n      setValue(\"uanNumber\", onBoardingDetailsData?.salaryData?.uanNumber);\n      setValue(\"pfType\", onBoardingDetailsData?.salaryData?.pfType);\n      setValue(\"pfAppliedOn\", onBoardingDetailsData?.salaryData?.pfAppliedOn);\n      setValue(\"salarystartDate\", dayjs(onBoardingDetailsData?.salaryData?.lastIncrementDate));\n      setValue(\"salaryEndDate\", dayjs(onBoardingDetailsData?.salaryData?.nextIncrementDate));\n      setValue(\"openingBalance\", onBoardingDetailsData?.openingBalance);\n      setValue(\"esicType\", onBoardingDetailsData?.salaryData?.esicType);\n      setValue(\"esicAppliedOn\", onBoardingDetailsData?.salaryData?.esicAppliedOn);\n      setValue(\"esicInPercentage\", onBoardingDetailsData?.salaryData?.esicInPercentage);\n      setValue(\"esicMaxUpTo\", onBoardingDetailsData?.salaryData?.esicMaxUpTo);\n      setValue(\"pfInPercentage\", onBoardingDetailsData?.salaryData?.pfInPercentage);\n      setValue(\"pfMaxUpTo\", onBoardingDetailsData?.salaryData?.pfMaxUpTo);\n    }\n  }, [onBoardingDetailsData]);\nuseEffect(() => {\n  if (financStartDate && financEndDate) {\n    const dateObj1 = dayjs(financStartDate, \"MM/YYYY\")?.startOf('month');\n    const dateObj2 = dayjs(financEndDate, \"MM/YYYY\")?.endOf('month');\n    const today = dayjs();\n\n    let baseDate;\n\n    if (dateOfJoining) {\n      const doj = dayjs(dateOfJoining);\n      if (dateObj1.isBefore(doj, 'month')) {\n        baseDate = doj.date() <= 15\n          ? doj.startOf('month')\n          : doj.startOf('month').add(1, 'month');\n      } else {\n        baseDate = dateObj1.clone().startOf('month');\n      }\n    } else {\n      baseDate = today.date() <= 15\n        ? today.startOf('month')\n        : today.startOf('month').add(1, 'month');\n    }\n\n    const diffInMonths = dateObj2.diff(dateObj1, 'month') + 1;\n    const diffInCurrent = dateObj2.diff(baseDate, 'month') + 1;\n\n    setFinancialDateDiffrence({\n      main: diffInMonths,\n      current: diffInCurrent\n    });\n  } else {\n    setFinancialDateDiffrence({\n      main: 0,\n      current: 0\n    });\n  }\n}, [financStartDate, financEndDate, dateOfJoining]);\n\n  useEffect(() => {\n    if (onBoardingDetailsData) {\n      setValue('assignLeaveDetails', [{}])\n    }\n  }, [dateOfJoining, financEndDate, financStartDate])\n\n  useEffect(() => {\n    if (onBoardingDetailsData && leaveListData) {\n      const selectedleave = leaveListData?.filter((type) =>\n        onBoardingDetailsData?.assignLeaves?.includes(type._id)\n      );\n\n      if (selectedleave) {\n        setValue(\"leaveTypeId\", selectedleave);\n      }\n    }\n  }, [onBoardingDetailsData, leaveListData]);\n  const handleDepartmentChange = (event) => {\n    setValue(\"PDDepartmentId\", event);\n    setValue(\"PDDesignationId\", \"\");\n    dispatch(\n      designationSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        departmentId: event,\n        companyId: onBoardingDetailsData?.companyId,\n      })\n    );\n  };\n  const onSubmit = (data) => {\n\n    if (step === 1) {\n      const finalPayload = {\n        _id: onBoardingId,\n        generalInfo: {\n          gender: data?.gender,\n          bloodGroup: data?.BloodGroup,\n          dateOfBirth: data?.dateOfBirth ? dayjs(data?.dateOfBirth).format(\"YYYY-MM-DD\") : '',\n          maritalStatus: data?.maritalStatus,\n          designationName: data?.designation,\n          dateOfJoining: data?.dateOfJoining ? dayjs(data?.dateOfJoining).format(\"YYYY-MM-DD\") : '',\n          isProbationPeriod: data?.isProbationPeriod == \"Yes\" ? true : false,\n          isProbationPeriodLeave: data?.isProbationPeriodLeave == \"Yes\" ? true : false,\n          probationPeriod: data?.isProbationPeriod ? data?.probationPeriod : \"\",\n        },\n        pageRoleId: data?.sidebarRole,\n        companyId: onBoardingDetailsData?.companyId,\n        directorId: onBoardingDetailsData?.directorId,\n        branchId: onBoardingDetailsData?.branchId,\n        landlineNumber: data?.landlineNo,\n        seatNumber: +data?.seatNo,\n        employeId: onBoardingDetailsData?.employeId,\n        applicationId: onBoardingDetailsData?.applicationId,\n        departmentId: data?.PDDepartmentId,\n        designationId: data?.PDDesignationId,\n        officeEmail: data?.PDOfficeemail,\n        openingBalance:Number(data?.openingBalance),\n        assignLeaves: Array.isArray(data?.leaveTypeId)\n          ? data?.leaveTypeId?.map((item) => item._id)\n          : data?.leaveTypeId\n            ? [data?.leaveTypeId.value]\n            : [],\n        reporting_to: typeof data.reportingEmployee === 'object' ? data?.reportingEmployee?.value: data.reportingEmployee = 'object' ? data?.reportingEmployee :'' ,\n        firstName: \"\",\n        lastName: \"\",\n        fullName: data?.PDFullName,\n        shift: data?.shift,\n        workType: data?.workType,\n        profileImage: data?.ProfileImage,\n        email: data?.PDEmail,\n        mobile: {\n          code: data?.PDmobileCode,\n          number: data?.PDMobileNo,\n        },\n        status: data?.status,\n        addresses: {\n          primary: {\n            street: data?.PDAddress,\n            city: data?.PDCity,\n            state: data?.PDState,\n            country: data?.PDcountry,\n            pinCode: data?.PDPin,\n          },\n          secondary: {\n            street: data?.PDSecAddress,\n            city: data?.PDSecCity,\n            state: data?.PDSecState,\n            country: data?.PDSecCountry,\n            pinCode: data?.PDSecPinCode,\n          },\n        },\n      };\n      dispatch(updateOnBoarding(finalPayload)).then((output) => {\n        if (!output.error) {\n          dispatch(resetOnBoarding());\n          const reqData = {\n            _id: onBoardingId,\n          };\n          dispatch(getOnBoardingDetails(reqData));\n        }\n      });\n    }\n    else if (step === 3) {\n      const finalPayload = {\n        ...onBoardingDetailsData,\n        familyDetails: data?.family,\n      };\n\n      dispatch(updateOnBoarding(finalPayload)).then((output) => {\n        if (!output.error) {\n          dispatch(resetOnBoarding());\n          const reqData = {\n            _id: onBoardingId,\n          };\n          dispatch(getOnBoardingDetails(reqData));\n        }\n      });\n    } else if (step === 4) {\n      const finalPayload = {\n        ...onBoardingDetailsData,\n        emergencyContact: data?.emergencyContact,\n      };\n      dispatch(updateOnBoarding(finalPayload)).then((output) => {\n        if (!output.error) {\n          dispatch(resetOnBoarding());\n\n          // navigate(\n          //   `/admin/onBoarding`\n          // );\n          const reqData = {\n            _id: onBoardingId,\n          };\n          dispatch(getOnBoardingDetails(reqData));\n        }\n      });\n    } else if (step === 5) {\n      const finalPayload = {\n        ...onBoardingDetailsData,\n\n        educationDetails: data?.educationDetails,\n      };\n      dispatch(updateOnBoarding(finalPayload)).then((output) => {\n        if (!output.error) {\n          dispatch(resetOnBoarding());\n          \n          // navigate(\n          //   `/admin/onBoarding`\n          // );\n\n          const reqData = {\n            _id: onBoardingId,\n          };\n          dispatch(getOnBoardingDetails(reqData));\n        }\n      });\n    } else if (step === 6) {\n      const finalPayload = {\n        ...onBoardingDetailsData,\n\n        employementDetails: data?.employmentDetails,\n      };\n      dispatch(updateOnBoarding(finalPayload)).then((output) => {\n        if (!output.error) {\n          dispatch(resetOnBoarding());\n          \n          // navigate(\n          //   `/admin/onBoarding`\n          // );\n          const reqData = {\n            _id: onBoardingId,\n          };\n          dispatch(getOnBoardingDetails(reqData));\n        }\n      });\n    } else if (step === 7) {\n      const finalPayload = {\n        ...onBoardingDetailsData,\n        socialLinks: [\n          {\n            name: \"LinkedIn\",\n            link: data?.SMLinkedIn ? data?.SMLinkedIn?.startsWith(\"http\") ? data?.SMLinkedIn : `https://${data?.SMLinkedIn}` : null,\n          },\n          {\n            name: \"GitHub\",\n            link: data?.SMGithub ? data?.SMGithub?.startsWith(\"http\") ? data?.SMLinkedIn : `https://${data?.SMGithub}` : null,\n\n          },\n        ],\n      };\n      dispatch(updateOnBoarding(finalPayload)).then((output) => {\n        if (!output.error) {\n          dispatch(resetOnBoarding());\n          \n          // navigate(\n          //   `/admin/onBoarding`\n          // );\n          const reqData = {\n            _id: onBoardingId,\n          };\n          dispatch(getOnBoardingDetails(reqData));\n        }\n      });\n    } else if (step === 8) {\n\n\n      const leavePayload = data?.assignLeaveDetails?.map((item) => ({\n        \"_id\": item?._id,\n        \"leaveTypeId\": item?.leave,\n        \"totalLeaves\": Number(item?.totalLeave)\n      }));\n      const reqData = {\n        \"companyId\": onBoardingDetailsData?.companyId,\n        \"directorId\": onBoardingDetailsData?.directorId,\n        \"branchId\": onBoardingDetailsData?.branchId,\n        \"employeId\": onBoardingDetailsData?.employeId,\n        \"financStartDate\": dayjs(data?.financStartDate)?.format(\"YYYY-MM\"),\n        \"financEndDate\": dayjs(data?.financEndDate)?.format(\"YYYY-MM\"),\n        \"leavePolicy\": data?.leaveTypePolicy,\n        \"leaveData\": leavePayload\n      }\n\n\n      dispatch(assignMultipleLeave(reqData)).then((output) => {\n        if (!output.error) {\n          const reqData = {\n            _id: onBoardingId,\n          };\n          dispatch(getOnBoardingDetails(reqData));\n        }\n      });\n    }\n    if (step === 9) {\n      if (data?.salaryId) {\n        const finalPayload = {\n          _id: data?.salaryId,\n          companyId: onBoardingDetailsData?.companyId,\n          directorId: onBoardingDetailsData?.directorId,\n          branchId: onBoardingDetailsData?.branchId,\n          employeId: onBoardingDetailsData?.employeId,\n          currentPackage: Number(data?.currentPackage),\n          currentSalary: Number(data?.currentSalary),\n          perDaySalary: Number(data?.perDaySalary),\n          basicSalaryPercentage: Number(data?.basicSalaryPercentage),\n          basicSalary: Number(data?.calculatedBasicSalary),\n          isESIC: data?.isESIC === 'true' ? true : false,\n          esicNumber: (isESIC === 'true' || isESIC === true) ? data?.esicNumber : '',\n          esicType: (isESIC === 'true' || isESIC === true) ? data?.esicType : '',\n           esicAppliedOn: (isESIC === 'true' || isESIC === true) ? data?.esicAppliedOn : '',\n          esicInPercentage: (isESIC === 'true' || isESIC === true) ? +data?.esicInPercentage : '',\n          esicMaxUpTo: (isESIC === 'true' || isESIC === true) ? +data?.esicMaxUpTo : '',\n          isPF: data?.isPF === 'true' ? true : false,\n          uanNumber: data?.uanNumber,\n          pfType: (IsPf === 'true' || IsPf === true) ? data?.pfType : '',\n          pfAppliedOn: (IsPf === 'true' || IsPf === true) ? data?.pfAppliedOn : '',\n          pfInPercentage: (IsPf === 'true' || IsPf === true) ? +data?.pfInPercentage : '',\n          pfMaxUpTo: (IsPf === 'true' || IsPf === true) ? +data?.pfMaxUpTo : '',\n          \"lastIncrementDate\": dayjs(data?.salarystartDate),\n          \"nextIncrementDate\": dayjs(data?.salaryEndDate)\n        };\n        dispatch(updateEmployeeSalaryDetails(finalPayload)).then((data) => {\n          if (!data.error) {\n            const reqData = {\n              _id: onBoardingId,\n            };\n            dispatch(getOnBoardingDetails(reqData));\n\n          }\n        });\n      } else {\n        const finalPayload = {\n          companyId: onBoardingDetailsData?.companyId,\n          directorId: onBoardingDetailsData?.directorId,\n          branchId: onBoardingDetailsData?.branchId,\n          employeId: onBoardingDetailsData?.employeId,\n          currentPackage: Number(data?.currentPackage),\n          currentSalary: Number(data?.currentSalary),\n          perDaySalary: Number(data?.perDaySalary),\n          // isESIC: data?.isESIC,\n          // esicNumber: (isESIC === 'true' || isESIC === true) ? data?.esicNumber : '',\n          // isPF:   data?.isPF ,\n          // uanNumber: data?.uanNumber,\n          // pfType: (IsPf === 'true' || IsPf === true) ? data?.pfType : '',\n           basicSalaryPercentage: Number(data?.basicSalaryPercentage),\n          basicSalary: Number(data?.calculatedBasicSalary),\n          isESIC: data?.isESIC === 'true' ? true : false,\n          esicNumber: (isESIC === 'true' || isESIC === true) ? data?.esicNumber : '',\n          isPF: data?.isPF === 'true' ? true : false,\n          uanNumber: data?.uanNumber,\n          pfType: (IsPf === 'true' || IsPf === true) ? data?.pfType : '',\n          \"lastIncrementDate\": dayjs(data?.salarystartDate),\n          \"nextIncrementDate\": dayjs(data?.salaryEndDate)\n        };\n        dispatch(createEmployeeSalaryDetails(finalPayload)).then((data) => {\n          if (!data.error) {\n            const reqData = {\n              _id: onBoardingId,\n            };\n            dispatch(getOnBoardingDetails(reqData));\n\n          }\n        });\n      }\n\n    }\n    if (step === 10) {\n      if (validateForm()) {\n        const documentPayload = documents.map((doc, index) => {\n          if (doc?._id) {\n            return {\n              userId: onBoardingDetailsData?.employeId,\n              _id: doc?._id,\n              name: doc?.documentType,\n              number: doc?.documentNo,\n              filePath: doc?.file,\n            };\n          } else {\n            return {\n              userId: onBoardingDetailsData?.employeId,\n              name: doc?.documentType,\n              number: doc?.documentNo,\n              filePath: doc?.file,\n            };\n          }\n        });\n\n        const finalPayload = {\n          documents: documentPayload,\n          type: \"documents\",\n        };\n        dispatch(updateDocument(finalPayload)).then((data) => {\n          if (!data.error) {\n            const reqData = {\n              _id: onBoardingId,\n            };\n            dispatch(getOnBoardingDetails(reqData));\n          }\n        })\n      }\n    }\n\n    if (step === 11) {\n      if (validateBankForm()) {\n        const bankPayload = banks.map((bank, index) => {\n          if (bank?._id) {\n            return {\n              userId: onBoardingDetailsData?.employeId,\n              _id: bank?._id,\n              bankholderName: bank?.bankholderName,\n              bankName: bank?.bankName,\n              accountNumber: bank?.accountNumber,\n              branchName: bank?.branchName,\n              ifscCode: bank?.ifscCode,\n              accountType: bank?.accountType,\n              filePath: bank?.file,\n            };\n          } else {\n            return {\n              userId: onBoardingDetailsData?.employeId,\n              bankholderName: bank?.bankholderName,\n              bankName: bank?.bankName,\n              accountNumber: bank?.accountNumber,\n              branchName: bank?.branchName,\n              ifscCode: bank?.ifscCode,\n              accountType: bank?.accountType,\n              filePath: bank?.file,\n            };\n          }\n        });\n\n        const finalPayload = {\n          bank: bankPayload,\n          type: \"bank\",\n        };\n        dispatch(updateDocument(finalPayload)).then((data) => {\n          if (!data.error) {\n            const reqData = {\n              _id: onBoardingId,\n            };\n            dispatch(getOnBoardingDetails(reqData));\n            navigate(-1)\n          }\n        })\n      }\n    }\n  };\n  const navTabClick = (clickedStep) => {\n    setStep(clickedStep);\n  };\n\n  // const handleDepartmentChange = (event) => {\n  //   setValue(\"PDDepartmentId\", event.target.value);\n  //   setValue(\"PDDesignationId\", \"\");\n  //   dispatch(\n  //     designationSearch({\n  //       text: \"\",\n  //       sort: true,\n  //       status: true,\n  //       isPagination: false,\n  //       departmentId: event.target.value,\n  //     })\n  //   );\n  // };\n  useEffect(() => {\n    if (sameAsCurrentAddress) {\n      const currentAddress = {\n        address: getValues(\"PDAddress\"),\n        country: getValues(\"PDcountry\"),\n        state: getValues(\"PDState\"),\n        city: getValues(\"PDCity\"),\n        pinCode: getValues(\"PDPin\"),\n      };\n      setValue(\"PDSecAddress\", currentAddress.address);\n      setValue(\"PDSecPinCode\", currentAddress.pinCode);\n      setValue(\"PDSecCountry\", currentAddress.country);\n      setValue(\"PDSecState\", currentAddress.state);\n      setValue(\"PDSecCity\", currentAddress.city);\n    } else {\n      setValue(\"PDSecAddress\", \"\");\n      setValue(\"PDSecCountry\", \"\");\n      setValue(\"PDSecState\", \"\");\n      setValue(\"PDSecCity\", \"\");\n      setValue(\"PDSecPinCode\", \"\");\n    }\n  }, [sameAsCurrentAddress]);\n\n  const handleAddressCheckbox = (checked) => {\n    setSameAsCurrentAddress(checked);\n  };\n  const { Option } = Select;\n  const currentPackage = useWatch({ name: \"currentPackage\", control })\n\n  // Logic to calculate currentSalary and perDaySalary based on currentPackage\n  useEffect(() => {\n    if (currentPackage) {\n      // Calculate current salary and per day salary\n      const calculatedSalary = currentPackage / 12; // assuming 12 months in a year\n      const perDaySalary = calculatedSalary / 30; // assuming 30 days in a month\n\n      setValue(\"currentSalary\", calculatedSalary.toFixed(2));\n      setValue(\"perDaySalary\", perDaySalary.toFixed(2));\n    }\n  }, [currentPackage, setValue]);\n\n  const handleAddMore = () => {\n    setDocuments([...documents, { id: Date.now() }]);\n  };\n  const handleBankAddMore = () => {\n    setBanks([...banks, { id: Date.now() }]);\n  };\n  const handleInputChangeBank = (index, field, value) => {\n    const updatedBanks = [...banks];\n    const newFormErrors = [...formErrorsBank];\n\n    if (field === \"ifscCode\") {\n      const ifscPattern = /^[A-Z]{4}0[A-Z0-9]{6}$/;\n\n      if (!ifscPattern.test(value)) {\n        if (!newFormErrors[index]) newFormErrors[index] = {};\n        newFormErrors[index][field] = \"Invalid IFSC code. Example: SBIN0001234\";\n      } else {\n        if (newFormErrors[index]?.[field]) {\n          delete newFormErrors[index][field];\n        }\n      }\n    }\n\n    if (field === \"accountNumber\") {\n      const accountPattern = /^\\d{6,18}$/;\n\n      if (!accountPattern.test(value)) {\n        if (!newFormErrors[index]) newFormErrors[index] = {};\n        newFormErrors[index][field] =\n          \"Invalid account number. Must be 6 to 18 digits.\";\n      } else {\n        if (newFormErrors[index]?.[field]) {\n          delete newFormErrors[index][field];\n        }\n      }\n    }\n\n    updatedBanks[index][field] = value;\n    setBanks(updatedBanks);\n    setFormErrorsBank(newFormErrors);\n  };\n\n  // const handleBankFileChange = (index, file) => {\n  //   dispatch(\n  //     fileUploadFunc({\n  //       filePath: file,\n  //       isVideo: false,\n  //       isMultiple: false,\n  //     })\n  //   ).then((data) => {\n  //     if (!data.error) {\n  //       const updatedBanks = [...banks];\n  //       updatedBanks[index].file = [data?.payload?.data];\n  //       setDocuments(updatedBanks);\n  //       const newFormErrors = [...formErrorsBank];\n  //       if (newFormErrors[index]?.file) {\n  //         delete newFormErrors[index].file;\n  //       }\n  //       setFormErrorsBank(newFormErrors);\n  //     }\n  //   });\n  // };\n  const handleBankFileChange = (index, file) => {\n\n    if (!file) return;\n\n    // Variable to track the newly selected file\n    let selectedFile = file;\n\n    // Create a preview of the file\n    const fileReader = new FileReader();\n    let filePreviewUrl = '';\n\n    fileReader.onload = (e) => {\n      filePreviewUrl = e.target.result;\n\n      // Show SweetAlert to confirm upload\n      Swal.fire({\n        title: 'Preview your file',\n        html: `\n            <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n              <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n              <img id=\"filePreview\" src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">\n              <br>\n              <button id=\"changeImageBtn\" style=\"  margin-top: 15px;\n    padding: 10px 18px;\n    cursor: pointer;\n    background-color: #074173;\n    color: white;\n    font-size: 16px;\n    font-weight: 600;\n    border: none;\n    border-radius: 8px;\n    transition: background-color 0.3s, transform 0.2s;\n    box-shadow: 0 4px 8px rgba(0, 123, 255, 0.2);\">Change Image</button>\n              <input type=\"file\" id=\"fileInput\" style=\"display: none;\" accept=\"image/*\">\n            </div>\n          `,\n        showCancelButton: true,\n        confirmButtonText: 'Confirm!',\n        cancelButtonText: 'Cancel',\n        didOpen: () => {\n          // Attach the change image functionality to the button\n          const changeImageBtn = document.getElementById('changeImageBtn');\n          const fileInput = document.getElementById('fileInput');\n          const filePreview = document.getElementById('filePreview');\n\n          changeImageBtn.addEventListener('click', () => {\n            fileInput.click(); // Trigger file input click\n          });\n\n          // When a new file is selected\n          fileInput.addEventListener('change', (event) => {\n            const newFile = event.target.files[0];\n            if (newFile) {\n              selectedFile = newFile; // Update the selected file\n              const newFileReader = new FileReader();\n              newFileReader.onload = (e) => {\n                filePreview.src = e.target.result; // Update preview\n              };\n              newFileReader.readAsDataURL(newFile);\n            }\n          });\n        }\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            fileUploadFunc({\n              filePath: selectedFile,\n              isVideo: false,\n              isMultiple: false,\n            })\n          ).then((data) => {\n            if (!data.error) {\n              const updatedBanks = [...banks];\n              updatedBanks[index].file = [data?.payload?.data];\n              setBanks(updatedBanks);\n              const newFormErrors = [...formErrorsBank];\n              if (newFormErrors[index]?.file) {\n                delete newFormErrors[index].file;\n              }\n              setFormErrorsBank(newFormErrors);\n            }\n          });\n        } else {\n          // Handle the cancel case\n\n        }\n      });\n    };\n\n    // Read the file to generate the preview\n    fileReader.readAsDataURL(file);\n  }\n  const handleDeleteBankImage = (index, file) => {\n    const updatedBanks = [...banks];\n    updatedBanks[index].file = [];\n    setBanks(updatedBanks);\n  };\n  const handleBankDelete = (bank, index) => {\n    if (bank?._id) {\n      dispatch(deleteDocument({ _id: bank?._id })).then((data) => {\n        if (!data.error) {\n          setBanks((prevBanks) =>\n            prevBanks.filter((_, index2) => index2 !== index)\n          );\n        }\n      });\n    } else {\n      setBanks((prevBanks) =>\n        prevBanks.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n  const validateBankForm = () => {\n    let errors = [];\n    banks.forEach((bank, index) => {\n      let error = {};\n      if (!bank.accountType) {\n        error.accountType = \"Account Type is required.\";\n      }\n      if (!bank.bankholderName) {\n        error.bankholderName = \"Account Holder name is required.\";\n      }\n      if (!bank.accountNumber) {\n        error.accountNumber = \"Account No is required.\";\n      }\n      if (!bank.bankName) {\n        error.bankName = \"Bank Name is required.\";\n      }\n      if (!bank.branchName) {\n        error.branchName = \"Branch Name is required.\";\n      }\n      if (!bank.ifscCode) {\n        error.ifscCode = \"Ifsc code is required.\";\n      }\n      // if (!bank.file || bank.file.length === 0) {\n      //   error.file = \"Bank file is required.\";\n      // }\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n\n\n    setFormErrorsBank(errors);\n    return errors.every((error) => Object.keys(error).length === 0);\n  };\n\n  const handleInputChange = (index, field, value) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index][field] = value;\n    setDocuments(updatedDocuments);\n    const newFormErrors = [...formErrors];\n    if (newFormErrors[index]?.[field]) {\n      delete newFormErrors[index][field];\n    }\n    setFormErrors(newFormErrors);\n  };\n\n  // const handleFileChange = (index, file) => {\n  //   dispatch(\n  //     fileUploadFunc({\n  //       filePath: file,\n  //       isVideo: false,\n  //       isMultiple: false,\n  //     })\n  //   ).then((data) => {\n  //     if (!data.error) {\n  //       const updatedDocuments = [...documents];\n  //       updatedDocuments[index].file = [data?.payload?.data];\n  //       setDocuments(updatedDocuments);\n  //       const newFormErrors = [...formErrors];\n  //       if (newFormErrors[index]?.file) {\n  //         delete newFormErrors[index].file;\n  //       }\n  //       setFormErrors(newFormErrors);\n  //     }\n  //   });\n  // };\n  const handleFileChange = (index, file) => {\n    if (!file) return;\n\n    // Variable to track the newly selected file\n    let selectedFile = file;\n\n    // Create a preview of the file\n    const fileReader = new FileReader();\n    let filePreviewUrl = '';\n\n    fileReader.onload = (e) => {\n      filePreviewUrl = e.target.result;\n\n      // Show SweetAlert to confirm upload\n      Swal.fire({\n        title: 'Preview your file',\n        html: `\n            <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n              <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n              <img id=\"filePreview\" src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">\n              <br>\n              <button id=\"changeImageBtn\" style=\"  margin-top: 15px;\n    padding: 10px 18px;\n    cursor: pointer;\n    background-color:#074173;\n    color: white;\n    font-size: 16px;\n    font-weight: 600;\n    border: none;\n    border-radius: 8px;\n    transition: background-color 0.3s, transform 0.2s;\n    box-shadow: 0 4px 8px rgba(0, 123, 255, 0.2);\">Change Image</button>\n              <input type=\"file\" id=\"fileInput\" style=\"display: none;\" accept=\"image/*\">\n            </div>\n          `,\n        showCancelButton: true,\n        confirmButtonText: 'Confirm!',\n        cancelButtonText: 'Cancel',\n        didOpen: () => {\n          // Attach the change image functionality to the button\n          const changeImageBtn = document.getElementById('changeImageBtn');\n          const fileInput = document.getElementById('fileInput');\n          const filePreview = document.getElementById('filePreview');\n\n          changeImageBtn.addEventListener('click', () => {\n            fileInput.click(); // Trigger file input click\n          });\n\n          // When a new file is selected\n          fileInput.addEventListener('change', (event) => {\n            const newFile = event.target.files[0];\n            if (newFile) {\n              selectedFile = newFile; // Update the selected file\n              const newFileReader = new FileReader();\n              newFileReader.onload = (e) => {\n                filePreview.src = e.target.result; // Update preview\n              };\n              newFileReader.readAsDataURL(newFile);\n            }\n          });\n        }\n      }).then((result) => {\n        if (result.isConfirmed) {\n          // Use the updated selectedFile (which could be the original or changed file)\n          dispatch(\n            fileUploadFunc({\n              filePath: selectedFile,\n              isVideo: false,\n              isMultiple: false,\n            })\n          ).then((data) => {\n            if (!data.error) {\n              const updatedDocuments = [...documents];\n              updatedDocuments[index].file = [data?.payload?.data];\n              setDocuments(updatedDocuments);\n              const newFormErrors = [...formErrors];\n              if (newFormErrors[index]?.file) {\n                delete newFormErrors[index].file;\n              }\n              setFormErrors(newFormErrors);\n            }\n          });\n        } else {\n          // Handle the cancel case\n\n        }\n      });\n    };\n\n    // Read the file to generate the preview\n    fileReader.readAsDataURL(file);\n  };\n  const handleDeleteDoctImage = (index, file) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index].file = [];\n    setDocuments(updatedDocuments);\n  };\n  const handleDelete = (document, index) => {\n    if (document?._id) {\n      dispatch(deleteDocument({ _id: document?._id })).then((data) => {\n        if (!data.error) {\n          setDocuments((prevDocuments) =>\n            prevDocuments.filter((_, index2) => index2 !== index)\n          );\n        }\n      });\n    } else {\n      setDocuments((prevDocuments) =>\n        prevDocuments.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n\n  const validateForm = () => {\n    let errors = [];\n    documents.forEach((document, index) => {\n      let error = {};\n      if (!document.documentType) {\n        error.documentType = \"Document Type is required.\";\n      }\n      if (!document.documentNo) {\n        error.documentNo = \"Document No is required.\";\n      }\n      if (!document.file || document.file.length === 0) {\n        error.file = \"Document file is required.\";\n      }\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n\n    setFormErrors(errors);\n    return errors.every((error) => Object.keys(error).length === 0); // returns true if no errors\n  };\n\n\n  return (\n    <GlobalLayout>\n      {editPageLoader ? <div className=\"h-full w-full flex justify-center items-center\"><Loader2 /></div> : <div className=\"grid grid-cols-12 gap-2\">\n        <form\n          onSubmit={handleSubmit(onSubmit)}\n          className=\"space-y-2  col-span-12 shadow-2xl rounded-xl\"\n        >\n          <div className=\"flex bg-header justify-start items-center rounded-t-lg gap-5 px-3 pt-2 overflow-x-auto overflow-y-hidden text-nowrap\">\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(1)}\n              className={`flex relative flex-col items-center  pb-2 ${step === 1 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 1 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold text-nowrap\">\n                Primary Details\n              </span>\n            </button>\n            {/* <button\n              type=\"button\"\n              onClick={() => navTabClick(2)}\n              className={`flex flex-col items-center relative pb-2 ${step === 2 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 2 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\">General Details</span>\n            </button> */}\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(8)}\n              className={`flex flex-col items-center relative pb-2 ${step === 8 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 8 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\">Assign Leave</span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(9)}\n              className={`flex flex-col items-center relative pb-2 ${step === 9 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 9 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\">Salary</span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(3)}\n              className={`flex flex-col items-center relative pb-2 ${step === 3 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 3 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\">Family Details </span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(4)}\n              className={`flex flex-col items-center relative pb-2 ${step === 4 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 4 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\">Emergency Contacts</span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(5)}\n              className={`flex flex-col items-center relative pb-2 ${step === 5 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 5 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\">Educational Details</span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(6)}\n              className={`flex flex-col items-center relative pb-2 ${step === 6 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 6 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\"> Past Employment</span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(7)}\n              className={`flex flex-col items-center relative pb-2 ${step === 7 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 7 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\">Social Media</span>\n            </button>\n\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(10)}\n              className={`flex flex-col items-center relative pb-2 ${step === 10 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 10 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\">Document</span>\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => navTabClick(11)}\n              className={`flex flex-col items-center relative pb-2 ${step === 11 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n            >\n              {step === 11 && (\n                <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n              )}\n              <span className=\"text-sm font-semibold\">bank</span>\n            </button>\n          </div>\n          {step === 1 && (\n            <div>\n              <Controller\n                name=\"ProfileImage\"\n                control={control}\n                render={({ field }) => (\n                  <ImageUploader\n                    setValue={setValue} // Pass setValue to the ImageUploader\n                    name=\"image\" // The field name in React Hook Form\n                    field={field}\n\n                  />\n                )}\n              />\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 md:my-1 px-3\">\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>\n                    Department<span className=\"text-red-600\">*</span>\n                  </label>\n                  <Controller\n                    name=\"PDDepartmentId\"\n                    control={control}\n                    rules={{ required: \"Department is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`${inputAntdSelectClassName} ${errors.PDDepartmentId ? '' : 'border-gray-300'}`}\n                        showSearch\n                       filterOption={(input, option) =>\n                                String(option?.children).toLowerCase().includes(input.toLowerCase())\n                              }\n                        onChange={(value) => {\n                          field.onChange(value);\n                          handleDepartmentChange(value); // Custom handler if needed\n                        }}\n                        placeholder=\"Select Department\"\n                      >\n                        <Option value=\"\">Select Department</Option>\n                        {depLoading ? <Select.Option disabled><ListLoader /></Select.Option> : (sortByPropertyAlphabetically(departmentListData)?.map((element) => (\n                          <Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Option>\n                        )))}\n                      </Select>\n                    )}\n                  />\n\n                  {errors.PDDepartmentname && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDDepartmentname.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>\n                    Designation<span className=\"text-red-600\">*</span>\n                  </label>\n                  <Controller\n                    name=\"PDDesignationId\"\n                    control={control}\n                    rules={{ required: \"Designation is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`${inputAntdSelectClassName} ${errors.PDDesignationId ? '' : 'border-gray-300'}`}\n                        showSearch\n                       filterOption={(input, option) =>\n                                String(option?.children).toLowerCase().includes(input.toLowerCase())\n                              }\n                        placeholder=\"Select Designation\"\n                      >\n                        <Option value=\"\">Select Designation</Option>\n                        {desLoading ? <Select.Option disabled><ListLoader /></Select.Option> : (sortByPropertyAlphabetically(designationList)?.map((type) => (\n                          <Option key={type?._id} value={type?._id}>\n                            {type?.name}\n                          </Option>\n                        )))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDDesignationname && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDDesignationname.message}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>\n                    Full Name <span className=\"text-red-600\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    {...register(\"PDFullName\", {\n                      required: \"Full Name is required\",\n                    })}\n                    className={`placeholder: ${inputClassName} ${errors.PDFullName ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Enter Full Name\"\n                  />\n                  {errors.PDFullName && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDFullName.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>\n                    Email<span className=\"text-red-600\">*</span>\n                  </label>\n                  <input\n                    type=\"text\"\n                    {...register(\"PDEmail\", {\n                      required: \"Email is required\",\n                      pattern: {\n                        value:\n                          /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                        message: \"Please enter a valid email address\",\n                      },\n                    })}\n                    className={` ${inputClassName} ${errors.PDEmail ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Enter Email\"\n                  />\n                  {errors.PDEmail && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDEmail.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>\n                    Office Email\n                  </label>\n                  <input\n                    type=\"text\"\n                    {...register(\"PDOfficeemail\", {\n                      pattern: {\n                        value:\n                          /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                        message: \"Please enter a valid email address\",\n                      },\n                    })}\n                    className={` ${inputClassName} ${errors.PDOfficeemail\n                      ? \"border-[1px] \"\n                      : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Enter Office Email\"\n                  />\n                  {errors.PDOfficeemail && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDOfficeemail.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>Reporting Person</label>\n                  <Controller\n                    name=\"reportingEmployee\"\n                    control={control}\n                    render={({ field }) => (\n                      // <ReactSelect\n                      //   {...field}\n                      //   onFocus={() => {\n                      //     const reqPayload = {\n                      //       text: \"\",\n                      //       status: true,\n                      //       sort: true,\n                      //       isTL: \"\",\n                      //       isHR: \"\",\n                      //       isManager: true,\n                      //       isPagination: false,\n                      //       departmentId: \"\",\n                      //       designationId: \"\",\n                      //       companyId: onBoardingDetailsData?.companyId,\n                      //       branchId: onBoardingDetailsData?.branchId,\n                      //     };\n\n                      //     dispatch(employeSearch(reqPayload));\n                      //   }}\n                      //   isClearable\n                      //   options={employeList?.map((employee) => ({\n                      //     value: employee?._id,\n                      //     label: employee?.fullName,\n                      //   }))}\n                      //   classNamePrefix=\"react-select\"\n                      //   className={`${inputLabelClassNameReactSelect} ${errors.employee ? \"border-[1px] \" : \"border-gray-300\"\n                      //     }`}\n                      //   placeholder=\"Select Employee\"\n                      // />\n\n                      <Select\n\n                        style={{ width: '100%' }}\n                        className={`${inputAntdSelectClassName}`}\n                        value={field?.value}\n                        getOptionLabel={(e) => e.label}\n      getOptionValue={(e) => e.value}\n                        onChange={(value) => {\n                          field.onChange(value)\n                        }\n                        }\n                        allowClear\n                        onFocus={reportingOption}\n                        options={employeeList}\n                        placeholder=\"Select Reporting Person\"\n                        showSearch\n                       filterOption={(input, option) =>\n                                String(option?.children).toLowerCase().includes(input.toLowerCase())\n                              }\n                      />\n\n                    )}\n                  />\n                  {errors.employee && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.employee.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"flex gap-3\">\n                  <div className=\"w-[150px]\">\n                    <label className={`${inputLabelClassName}`}>\n                      code<span className=\"text-red-600\">*</span>\n                    </label>\n                    <Controller\n                      control={control}\n                      name=\"PDmobileCode\"\n                      rules={{ required: \"code is required\" }}\n                      render={({ field }) => (\n                        <CustomMobileCodePicker\n                          field={field}\n                          errors={errors}\n                        />\n                      )}\n                    />\n                    {errors[`PDmobileCode`] && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors[`PDmobileCode`].message}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      Mobile No<span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                      type=\"number\"\n                      {...register(`PDMobileNo`, {\n                        required: \"Mobile No is required\",\n                        minLength: {\n                          value: 10,\n                          message: \"Must be exactly 10 digits\",\n                        },\n                        maxLength: {\n                          value: 10,\n                          message: \"Must be exactly 10 digits\",\n                        },\n                      })}\n                      className={` ${inputClassName} ${errors[`PDMobileNo`]\n                        ? \"border-[1px] \"\n                        : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Enter Mobile No\"\n                      maxLength={10}\n                      onInput={(e) => {\n                        if (e.target.value.length > 10) {\n                          e.target.value = e.target.value.slice(0, 10);\n                        }\n                      }}\n                    />\n                    {errors[`PDMobileNo`] && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors[`PDMobileNo`].message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 items-end mb-3\">\n                <div>\n                  {/* Select Gender */}\n                  <label className={`${inputLabelClassName}`}>\n                    Gender <span className=\"text-red-600\">*</span>\n                  </label>\n\n                  <Controller\n                    name=\"gender\"\n                    control={control}\n                    rules={{ required: \"Gender is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`mt-0 ${inputAntdSelectClassName} ${errors.gender ? '' : 'border-gray-300'}`}\n                        placeholder=\"Select Gender\"\n                      >\n                        <Option value=\"\">Select Gender</Option>\n                        <Option value=\"Male\">Male</Option>\n                        <Option value=\"Female\">Female</Option>\n                        <Option value=\"Other\">Other</Option>\n                      </Select>\n                    )}\n                  />\n\n                  {errors.gender && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.gender.message}\n                    </p>\n                  )}\n                </div>\n\n                <div>\n                  {/* Select Blood Group */}\n                  <label className={`${inputLabelClassName}`}>\n                    Blood Group\n                  </label>\n\n                  <Controller\n                    name=\"BloodGroup\"\n                    control={control}\n\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`mt-0 ${inputAntdSelectClassName} ${errors.BloodGroup ? '' : 'border-gray-300'}`}\n                        placeholder=\"Select Blood Group\"\n                      >\n                        <Option value=\"\">Select Blood Group</Option>\n                        {[\"A+\", \"A-\", \"B+\", \"B-\", \"AB+\", \"AB-\", \"O+\", \"O-\"].map((bloodType) => (\n                          <Option key={bloodType} value={bloodType}>\n                            {bloodType}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n\n                  {errors.BloodGroup && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.BloodGroup.message}\n                    </p>\n                  )}\n                </div>\n                <div>\n                  {/* Select Gender */}\n                  <label className={`${inputLabelClassName}`}>\n                    Sidebar Role <span className=\"text-red-600\">*</span>\n                  </label>\n\n                  <Controller\n                    name=\"sidebarRole\"\n                    control={control}\n                    rules={{ required: \"Sidebar Role is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`mt-0 ${inputAntdSelectClassName} ${errors.sidebarRole ? '' : 'border-gray-300'}`}\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children).toLowerCase().includes(input.toLowerCase())\n                        }\n                        placeholder=\"Select Sidebar Role\"\n                      >\n                        <Option value=\"\">Select Sidebar Role</Option>\n                        {rolesPermissionList && rolesPermissionList.length > 0 &&\n                          rolesPermissionList.map((data, index) => {\n                            return (\n                              <Option key={index} value={data?._id}>\n                                {data?.designationName}\n                              </Option>\n                            );\n                          })\n                        }\n\n\n                      </Select>\n                    )}\n                  />\n\n                  {errors.sidebarRole && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.sidebarRole.message}\n                    </p>\n                  )}\n                </div>\n\n\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>\n                    Date of Birth <span className=\"text-red-600\">*</span>\n                  </label>\n                  <Controller\n                    name=\"dateOfBirth\"\n                    control={control}\n                    render={({ field }) => (\n                      <CustomDatePicker field={field} errors={errors} disabledDate={(current) => {\n                        return current && current.isAfter(moment().endOf('day'), 'day');\n                      }} />\n                    )}\n                  />\n                  {errors.dateOfBirth && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.dateOfBirth.message}\n                    </p>\n                  )}\n                </div>\n\n\n                <div>\n                  {/* Select Marital Status */}\n                  <label className={`${inputLabelClassName}`}>\n                    Marital Status <span className=\"text-red-600\">*</span>\n                  </label>\n\n                  <Controller\n                    name=\"maritalStatus\"\n                    control={control}\n                    rules={{ required: \"Marital status is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`mt-0 ${inputAntdSelectClassName} ${errors.maritalStatus ? '' : 'border-gray-300'}`}\n                        placeholder=\"Select Marital Status\"\n                      >\n                        <Option value=\"\">Select Marital Status</Option>\n                        <Option value=\"Single\">Single</Option>\n                        <Option value=\"Married\">Married</Option>\n                        <Option value=\"Divorced\">Divorced</Option>\n                      </Select>\n                    )}\n                  />\n\n                  {errors.maritalStatus && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.maritalStatus.message}\n                    </p>\n                  )}\n                </div>\n                  <div className=\"w-full\">\n                                  <label className={`${inputLabelClassName}`}>\n                                    Opening Balance\n                                  </label>\n                                  <input\n                                    type=\"number\"\n                                    step=\"any\"\n                                    {\n                                      ...register('openingBalance',{\n                                      \n                                      })\n                                    }\n                                    disabled={onBoardingDetailsData?.openingBalance}\n                                    value={onBoardingDetailsData?.openingBalance}\n                                    // onChange={(e) =>\n                                    //   handleInputChangeBank(\n                                    //     index,\n                                    //     \"openingBalance\",\n                                    //     e.target.value\n                                    //   )\n                                    // }\n                                    className={`${onBoardingDetailsData?.openingBalance ? inputDisabledClassName:inputClassName } `}\n                                    placeholder=\"Enter Opening Balance\"\n                                  />\n                                \n                                </div>\n\n              </div>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 md:my-1 px-3\">\n                <div className=\"\">\n                  {/* Select probation */}\n                  <label className={`${inputLabelClassName}`}>\n                    Select probation <span className=\"text-red-600\">*</span>\n                  </label>\n\n                  <Controller\n                    name=\"isProbationPeriod\"\n                    control={control}\n                    rules={{ required: \"probation is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`${inputAntdSelectClassName} ${errors.isProbationPeriod ? '' : 'border-gray-300'}`}\n                        placeholder=\"Select probation\"\n                      >\n                        <Option value=\"\">Select probation</Option>\n                        <Option value={'Yes'}>Yes</Option>\n                        <Option value={'No'}>No</Option>\n                      </Select>\n                    )}\n                  />\n\n                  {errors.isProbationPeriod && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.isProbationPeriod.message}\n                    </p>\n                  )}\n                </div>\n                {(isProbationPeriodActive === \"Yes\" ||\n                  isProbationPeriodActive === true) && (\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Is Leave Applicable<span className=\"text-red-600\">*</span>\n                      </label>\n                      <Controller\n                        name=\"isProbationPeriodLeave\"\n                        control={control}\n                        // rules={{ required: \"probation Paid is required\" }}\n                        render={({ field }) => (\n                          <Select\n                            {...field}\n                            className={`${inputAntdSelectClassName} ${errors.isProbationPeriodLeave ? '' : 'border-gray-300'}`}\n                            placeholder=\">Select is Leave Applicable\"\n                          >\n                            <Option value=\"\">Select is Leave Applicable</Option>\n                            <Option value={'Yes'}>Yes</Option>\n                            <Option value={'No'}>No</Option>\n                          </Select>\n                        )}\n                      />\n                      {errors.isProbationPeriodLeave && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.isProbationPeriodLeave.message}\n                        </p>\n                      )}\n                    </div>\n                  )}\n                {(isProbationPeriodActive === \"Yes\" ||\n                  isProbationPeriodActive === true) && (\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        probation Period (days) <span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"number\"\n                        {...register(\"probationPeriod\", {\n                          required: \"probation Period is required\",\n                        })}\n                        className={`${inputClassName} ${errors.probationPeriod\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Enter probation Period\"\n                      />\n                      {errors.probationPeriod && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.probationPeriod.message}\n                        </p>\n                      )}\n                    </div>\n                  )}\n                <div>\n                  <label className={`${inputLabelClassName}`}>\n                    Date of Joining <span className=\"text-red-600\">*</span>\n                  </label>\n                  <Controller\n                    name=\"dateOfJoining\"\n                    control={control}\n                    render={({ field }) => (\n                      <CustomDatePicker field={field} errors={errors} />\n                    )}\n                  />\n\n                  {errors.dateOfJoining && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.dateOfJoining.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"\">\n                  {/* Select Shift */}\n                  <label className={`${inputLabelClassName}`}>\n                    Select Shift <span className=\"text-red-600\">*</span>\n                  </label>\n                  <Controller\n                    name=\"shift\"\n                    control={control}\n                    rules={{ required: \"Shift is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`${inputAntdSelectClassName} ${errors.shift ? '' : 'border-gray-300'}`}\n                        placeholder=\"Select Shift\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children).toLowerCase().includes(input.toLowerCase())\n                        }\n                      >\n                        <Option value=\"\">Select Shift</Option>\n                        {timeSlotsListData?.map((type) =>\n                          <Option key={type?._id} value={type?._id}>\n                            {type?.shiftName}\n                          </Option>\n                        )}\n                      </Select>\n                    )}\n                  />\n\n                  {errors.shift && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.shift.message}\n                    </p>\n                  )}\n                </div>\n\n                <div className=\"\">\n                  {/* Select Work Type */}\n                  <label className={`${inputLabelClassName}`}>\n                    Select Work Type <span className=\"text-red-600\">*</span>\n                  </label>\n\n                  <Controller\n                    name=\"workType\"\n                    control={control}\n                    rules={{ required: \"Work Type is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`${inputAntdSelectClassName} ${errors.workType ? '' : 'border-gray-300'}`}\n                        placeholder=\"Select Work Type\"\n                      >\n                        <Option value=\"\">Select Work Type</Option>\n                        {[\n                          { key: \"work_from_office\", value: \"Work From Office\" },\n                          { key: \"work_from_home\", value: \"Work From Home\" },\n                          { key: \"hybrid\", value: \"Hybrid\" },\n                          { key: \"remote\", value: \"Remote\" }\n                        ]?.map((type) => (\n                          <Option key={type.key} value={type.key}>\n                            {type.value}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n\n                  {errors.workType && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.workType.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"w-full\">\n                                      <label className={`${inputLabelClassName}`}>\n                                        Landline No (EPBX)\n                                      </label>\n                                      <input\n                                        type=\"text\"\n                                        {...register(`landlineNo`, {\n                                         \n                                        \n                                        })}\n                                        className={` ${inputClassName} ${errors[`landlineNo`]\n                                          ? \"border-[1px] \"\n                                          : \"border-gray-300\"\n                                          }`}\n                                        placeholder=\"Enter Landline No\"\n                                       \n                                      />\n                                      {errors[`landlineNo`] && (\n                                        <p className=\"text-red-500 text-sm\">\n                                          {errors[`landlineNo`].message}\n                                        </p>\n                                      )}\n                                    </div>\n                \n                                    <div className=\"w-full\">\n                                      <label className={`${inputLabelClassName}`}>\n                                        Seat No\n                                      </label>\n                                      <input\n                                        type=\"number\"\n                                        {...register(`seatNo`, {\n                                         \n                                        \n                                        })}\n                                        className={` ${inputClassName} ${errors[`seatNo`]\n                                          ? \"border-[1px] \"\n                                          : \"border-gray-300\"\n                                          }`}\n                                        placeholder=\"Enter Seat No\"\n                                       \n                                      />\n                                      {errors[`seatNo`] && (\n                                        <p className=\"text-red-500 text-sm\">\n                                          {errors[`seatNo`].message}\n                                        </p>\n                                      )}\n                                    </div>\n\n              </div>\n              <div className=\"mt-3\">\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 md:my-1 px-3\">\n                  <div className=\"col-span-2\">\n                    <label className={`${inputLabelClassName}`}>\n                      Primary Address<span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      {...register(\"PDAddress\", {\n                        required: \"Primary Address is required\",\n                      })}\n                      className={`${inputClassName} ${errors.PDAddress ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Enter Primary Address\"\n                    />\n                    {errors.PDAddress && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.PDAddress.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-8 md:my-1 px-3\">\n                  <div>\n                    <div className={`${inputLabelClassName}`}>\n                      Country <span className=\"text-red-600\">*</span>\n                    </div>\n                    <Controller\n                      control={control}\n                      name=\"PDcountry\"\n                      rules={{ required: \"Country is required\" }}\n                      render={({ field }) => (\n                        <AutoComplete\n                          {...field}\n                          onChange={(value) => {\n                            // Directly handle country change by using setValue from React Hook Form\n                            field.onChange(value); // Update the value in the form control\n                          }}\n                          className=\"w-full\"\n                          options={sortByPropertyAlphabetically(countryListData?.docs)?.map((type) => ({\n                            value: type?.name,\n                          }))}\n                        >\n                          <input\n                            placeholder=\"Enter Country\"\n                            onFocus={() => {\n                              dispatch(\n                                countrySearch({\n                                  isPagination: false,\n                                  text: \"\",\n                                  sort: true,\n                                  status: true,\n                                })\n                              );\n                            }}\n                            className={`${inputClassName} ${errors.PDcountry\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                              }`}\n                          />\n                        </AutoComplete>\n                      )}\n                    />\n                    {errors.PDcountry && (\n                      <p className={`${inputerrorClassNameAutoComplete}`}>\n                        {errors.PDcountry.message}\n                      </p>\n                    )}\n                  </div>\n                  <div>\n                    <div className={`${inputLabelClassName}`}>\n                      State <span className=\"text-red-600\">*</span>\n                    </div>\n                    <Controller\n                      control={control}\n                      name=\"PDState\"\n                      rules={{ required: \"State is required\" }}\n                      render={({ field }) => (\n                        <AutoComplete\n                          {...field}\n                          className=\"w-full\"\n                          onChange={(value) => field.onChange(value)} // Directly handle state change using React Hook Form's field.onChange\n                          options={sortByPropertyAlphabetically(stateListData?.docs)?.map((type) => ({\n                            value: type?.name,\n                          }))}\n                        >\n                          <input\n                            placeholder=\"Enter State\"\n                            onFocus={() => {\n                              dispatch(\n                                stateSearch({\n                                  isPagination: false,\n                                  text: \"\",\n                                  countryName: watch(\"PDcountry\"),\n                                  sort: true,\n                                  status: true,\n                                })\n                              );\n                            }}\n                            className={`${inputClassName} ${errors.PDState\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                              }`}\n                          />\n                        </AutoComplete>\n                      )}\n                    />\n                    {errors.PDState && (\n                      <p className={`${inputerrorClassNameAutoComplete}`}>\n                        {errors.PDState.message}\n                      </p>\n                    )}\n                  </div>\n\n                  {/* City Field */}\n                  <div>\n                    <div className={`${inputLabelClassName}`}>\n                      City <span className=\"text-red-600\">*</span>\n                    </div>\n                    <Controller\n                      control={control}\n                      name=\"PDCity\"\n                      rules={{ required: \"City is required\" }}\n                      render={({ field }) => (\n                        <AutoComplete\n                          {...field}\n                          className=\"w-full\"\n                          onChange={(value) => field.onChange(value)} // Directly handle city change using React Hook Form's field.onChange\n                          options={sortByPropertyAlphabetically(cityListData?.docs)?.map((type) => ({\n                            value: type?.name,\n                          }))}\n                        >\n                          <input\n                            placeholder=\"Enter City\"\n                            onFocus={() => {\n                              dispatch(\n                                citySearch({\n                                  isPagination: false,\n                                  text: \"\",\n                                  sort: true,\n                                  status: true,\n                                  stateName: watch(\"PDState\"),\n                                })\n                              );\n                            }}\n                            className={`${inputClassName} ${errors.PDCity\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                              }`}\n                          />\n                        </AutoComplete>\n                      )}\n                    />\n                    {errors.PDCity && (\n                      <p className={`${inputerrorClassNameAutoComplete}`}>\n                        {errors.PDCity.message}\n                      </p>\n                    )}\n                  </div>\n\n                  {/* Pin Code Field */}\n                  <div>\n                    <label className={`${inputLabelClassName}`}>\n                      Pin Code <span className=\"text-red-600\">*</span>\n                    </label>\n                    <Controller\n                      control={control}\n                      name=\"PDPin\"\n                      rules={{ required: \"Pin Code is required\" }}\n                      render={({ field }) => (\n                        <input\n                          {...field}\n                          type=\"number\"\n                          placeholder=\"Enter Pin Code\"\n                          maxLength={6}\n                          onInput={(e) => {\n                            if (e.target.value.length > 6) {\n                              e.target.value = e.target.value.slice(0, 6);\n                            }\n                          }}\n                          className={`${inputClassName} ${errors.PDPin ? \"border-[1px] \" : \"border-gray-300\"\n                            }`}\n                        />\n                      )}\n                    />\n                    {errors.PDPin && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.PDPin.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <div className=\"mt-3\">\n                <div className=\"mt-3\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 md:my-1 px-3\">\n                    <div className=\"col-span-2\">\n                      <label\n                        className={`${inputLabelClassName} flex justify-between items-center`}\n                      >\n                        <span>Secondary Address</span>\n                        <div className=\"flex items-center mt-2\">\n                          <input\n                            type=\"checkbox\"\n                            id=\"sameAsCurrentAddress\"\n                            onChange={(e) =>\n                              handleAddressCheckbox(e.target.checked)\n                            }\n                            className=\"mr-2\"\n                          />\n                          <label\n                            htmlFor=\"sameAsCurrentAddress\"\n                            className={`${inputLabelClassName}`}\n                          >\n                            same as Current Address\n                          </label>\n                        </div>\n                      </label>\n                      <input\n                        type=\"text\"\n                        {...register(\"PDSecAddress\")}\n                        className={`${inputClassName} ${errors.PDSecAddress\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Enter Secondary Address\"\n                      />\n                      {errors.PDSecAddress && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDSecAddress.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 gap-8 md:my-1 px-3\">\n                    {/* Secondary Address Fields (mirroring Primary Address) */}\n                    <div>\n                      <div className={`${inputLabelClassName}`}>\n                        Country\n                      </div>\n                      <Controller\n                        control={control}\n                        name=\"PDSecCountry\"\n\n                        render={({ field }) => (\n                          <AutoComplete\n                            {...field}\n                            className=\"w-full\"\n                            options={sortByPropertyAlphabetically(secCountryList?.docs)?.map((type) => ({\n                              value: type?.name,\n                            }))}\n                          >\n                            <input\n                              placeholder=\"Enter Country\"\n                              onFocus={() =>\n                                dispatch(\n                                  secCountrySearch({\n                                    isPagination: false,\n                                    text: \"\",\n                                    sort: true,\n                                    status: true,\n                                  })\n                                )\n                              }\n                              className={`${inputClassName} ${errors.PDSecCountry\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                            />\n                          </AutoComplete>\n                        )}\n                      />\n                      {errors.PDSecCountry && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDSecCountry.message}\n                        </p>\n                      )}\n                    </div>\n\n                    <div>\n                      <div className={`${inputLabelClassName}`}>\n                        State\n                      </div>\n                      <Controller\n                        control={control}\n                        name=\"PDSecState\"\n\n                        render={({ field }) => (\n                          <AutoComplete\n                            {...field}\n                            className=\"w-full\"\n                            onChange={(value) => field.onChange(value)} // Directly handle state change using React Hook Form's field.onChange\n                            options={sortByPropertyAlphabetically(stateListData?.docs)?.map((type) => ({\n                              value: type?.name,\n                            }))}\n                          >\n                            <input\n                              placeholder=\"Enter State\"\n                              onFocus={() => {\n                                dispatch(\n                                  stateSearch({\n                                    isPagination: false,\n                                    text: \"\",\n                                    countryName: watch(`PDSecCountry`),\n                                    sort: true,\n                                    status: true,\n                                  })\n                                );\n                              }}\n                              className={`${inputClassName} ${errors.PDState\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                            />\n                          </AutoComplete>\n                        )}\n                      />\n                      {errors.PDSecState && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDSecState.message}\n                        </p>\n                      )}\n                    </div>\n\n                    <div>\n                      <div className={`${inputLabelClassName}`}>\n                        City\n                      </div>\n                      <Controller\n                        control={control}\n                        name=\"PDSecCity\"\n\n                        render={({ field }) => (\n                          <AutoComplete\n                            {...field}\n                            className=\"w-full\"\n                            onChange={(value) => field.onChange(value)} // Directly handle city change using React Hook Form's field.onChange\n                            options={sortByPropertyAlphabetically(cityListData?.docs)?.map((type) => ({\n                              value: type?.name,\n                            }))}\n                          >\n                            <input\n                              placeholder=\"Enter City\"\n                              onFocus={() => {\n                                dispatch(\n                                  citySearch({\n                                    isPagination: false,\n                                    text: \"\",\n                                    sort: true,\n                                    status: true,\n                                    stateName: watch(`PDSecState`),\n                                  })\n                                );\n                              }}\n                              className={`${inputClassName} ${errors.PDCity\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                            />\n                          </AutoComplete>\n                        )}\n                      />\n                      {errors.PDSecCity && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDSecCity.message}\n                        </p>\n                      )}\n                    </div>\n\n                    <div>\n                      <label className={`${inputLabelClassName}`}>\n                        Pin Code\n                      </label>\n                      <Controller\n                        control={control}\n                        name=\"PDSecPinCode\"\n\n                        render={({ field }) => (\n                          <input\n                            {...field}\n                            type=\"number\"\n                            placeholder=\"Enter Pin Code\"\n                            maxLength={6}\n                            onInput={(e) => {\n                              if (e.target.value.length > 6) {\n                                e.target.value = e.target.value.slice(0, 6);\n                              }\n                            }}\n                            className={`${inputClassName} ${errors.PDSecPinCode\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                              }`}\n                          />\n                        )}\n                      />\n                      {errors.PDSecPinCode && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDSecPinCode.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n\n              <div className=\"flex justify-start m-4\">\n                <button\n                  type=\"submit\"\n                  disabled={onBoardingLaoding}\n                  className={`${onBoardingLaoding ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded`}\n                >\n                  {onBoardingLaoding ? <Loader /> : 'Submit'}\n                </button>\n\n              </div>\n            </div>\n          )}\n          {step === 3 && (\n            <div>\n              {fields.map((item, index) => (\n                <div key={index} className=\" rounded-md my-2 \">\n                  <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md px-3\">\n                    <div className=\"py-2 text-white font-semibold\">\n                      Family Details\n                    </div>\n                 \n                      <div className=\"flex justify-end\">\n                        <button\n                          type=\"button\"\n                          onClick={() => remove( index)}\n                          className=\"text-gray-300 hover:text-gray-200 flex items-center justify-center p-1 rounded-lg\"\n                        >\n                          <i className=\"fas fa-trash-alt\"></i>\n                        </button>\n                      </div>\n               \n                  </div>\n                  <div\n                    key={item.id}\n                    className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 px-3 md:my-4\"\n                  >\n                    <div className=\"flex gap-3\">\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Relation Type <span className=\"text-red-600\">*</span>\n                        </label>\n\n                        <Controller\n                          name={`family[${index}].relation`}\n                          control={control}\n                          rules={{ required: \"Relation type is required\" }}\n                          render={({ field }) => (\n                            <Select\n                              {...field}\n                              className={`mt-0 ${inputAntdSelectClassName} ${errors.family?.[index]?.relation ? '' : 'border-gray-300'}`}\n                              placeholder=\"Select Relation Type\"\n                            >\n                              <Option value=\"\">Select Relation Type</Option>\n                              {[\"Father\", \"Mother\", \"Spouse\", \"Child\", \"Sibling\", \"Other\"].map((relation) => (\n                                <Option key={relation} value={relation}>\n                                  {relation}\n                                </Option>\n                              ))}\n                            </Select>\n                          )}\n                        />\n\n                        {errors.family?.[index]?.relation && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.family[index].relation.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"flex gap-3\">\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Name <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          {...register(`family[${index}].name`, {\n                            required: \"Name is required\",\n                          })}\n                          className={`${inputClassName} ${errors.family?.[index]?.name\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                          placeholder=\"Enter Name\"\n                        />\n                        {errors.family?.[index]?.name && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.family[index].name.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n\n                    <div className=\"flex gap-3\">\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Age <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"number\"\n                          {...register(`family[${index}].age`, {\n                            required: \"Age is required\",\n                          })}\n                          className={`${inputClassName} ${errors.family?.[index]?.age\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                          placeholder=\"Enter Age\"\n                        />\n                        {errors.family?.[index]?.age && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.family[index].age.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n\n  \n\n                    <div className=\"flex gap-2\">\n                      <div className=\"w-32\">\n                        <label className={`${inputLabelClassName}`}>\n                          Mobile code <span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                          control={control}\n                          name={`family[${index}].contactNumber.code`}\n                          rules={{ required: \"code is required\" }}\n                          render={({ field }) => (\n                            <CustomMobileCodePicker\n                              field={field}\n                              errors={errors}\n                            />\n                          )}\n                        />\n\n                        {errors.family?.[index]?.contactNumber.code && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.family?.[index].contactNumber.code.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Mobile No <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"number\"\n                          {...register(\n                            `family[${index}].contactNumber.number`,\n                            {\n                              required: \"Mobile number is required\",\n                              minLength: {\n                                value: 10,\n                                message: \"Must be exactly 10 digits\",\n                              },\n                              maxLength: {\n                                value: 10,\n                                message: \"Must be exactly 10 digits\",\n                              },\n                            }\n                          )}\n                          className={`${inputClassName} ${errors?.family?.[index]?.contactNumber?.number\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                          placeholder=\"Enter Mobile No\"\n                          maxLength={10}\n                          onInput={(e) => {\n                            if (e.target.value.length > 10) {\n                              e.target.value = e.target.value.slice(0, 10);\n                            }\n                          }}\n                        />\n                      </div>\n\n                      {errors?.family?.[index]?.contactNumber?.number && (\n                        <p className=\"text-red-500 text-sm\">\n                          {\n                            errors?.family?.[index]?.contactNumber?.number\n                              ?.message\n                          }\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              <div className=\"flex justify-between px-3 py-2\">\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    append({\n                      relation: \"\",\n                      name: \"\",\n                      age: \"\",\n                      contactNumber: \"\",\n                    })\n                  }\n                  className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded\"\n                >\n                  Add More\n                </button>\n              </div>\n              <div className=\"flex justify-between px-3 pb-2\">\n                <button type=\"Submit\" className={`${formButtonClassName}`}>\n                  Submit Details\n                </button>\n              </div>\n            </div>\n          )}\n          {step === 4 && (\n            <div>\n              {emergencyContactFields.map((item, index) => (\n                <div key={index} className=\" rounded-md my-2 \">\n                  <div key={item.id} className=\"rounded-md\">\n                    <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md px-3\">\n                      <div className=\"py-2 text-white font-semibold\">\n                        Emergency Contact\n                      </div>\n                     \n                        <div className=\"flex justify-end\">\n                          <button\n                            type=\"button\"\n                            onClick={() => removeEmergencyContact(index)}\n                            className=\"text-gray-300 hover:text-gray-200 flex items-center justify-center p-1 rounded-lg\"\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                        </div>\n                     \n                    </div>\n                    <div className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 items-end mb-3\">\n                      <div className=\"flex gap-3\">\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Name <span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            {...register(`emergencyContact[${index}].name`, {\n                              required: \"Name is required\",\n                            })}\n                            className={`${inputClassName} ${errors.emergencyContact?.[index]?.name\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                              }`}\n                            placeholder=\"Enter Name\"\n                          />\n                          {errors.emergencyContact?.[index]?.name && (\n                            <p className=\"text-red-500 text-sm\">\n                              {errors.emergencyContact[index].name.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"flex gap-3\">\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Relationship <span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            {...register(\n                              `emergencyContact[${index}].relationship`,\n                              { required: \"Relationship is required\" }\n                            )}\n                            className={`${inputClassName} ${errors.emergencyContact?.[index]?.relationship\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                              }`}\n                            placeholder=\"Enter Relationship\"\n                          />\n                          {errors.emergencyContact?.[index]?.relationship && (\n                            <p className=\"text-red-500 text-sm\">\n                              {\n                                errors.emergencyContact[index].relationship\n                                  .message\n                              }\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"flex gap-3\">\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Email <span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"email\"\n                            {...register(`emergencyContact[${index}].email`, {\n                              required: \"Email is required\",\n                            })}\n                            className={`${inputClassName} ${errors.emergencyContact?.[index]?.email\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                              }`}\n                            placeholder=\"Enter Email\"\n                          />\n                          {errors.emergencyContact?.[index]?.email && (\n                            <p className=\"text-red-500 text-sm\">\n                              {errors.emergencyContact[index].email.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n                      <div className=\"\">\n                        <div className=\"flex gap-2\">\n                          <div className=\"\">\n                            <label className={`${inputLabelClassName}`}>\n                              Mobile code{\" \"}\n                              <span className=\"text-red-600\">*</span>\n                            </label>\n                            <Controller\n                              control={control}\n                              name={`emergencyContact[${index}].mobile.code`}\n                              rules={{ required: \"code is required\" }}\n                              render={({ field }) => (\n                                <CustomMobileCodePicker\n                                  field={field}\n                                  errors={errors}\n                                />\n                              )}\n                            />\n                            {/* <select\n                              {...register(\n                                `emergencyContact[${index}].mobile.code`,\n                                { required: \"Mobile code is required\" }\n                              )}\n                              className={`${inputClassName} ${errors.emergencyContact?.[index]?.mobile?.code\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                            >\n                              <option value=\"\">Select Country Code</option>\n                              <option value=\"+1\">+1</option>\n                              <option value=\"+44\">+44</option>\n                              <option value=\"+91\">+91</option>\n                            </select> */}\n                            {errors.emergencyContact?.[index]?.mobile.code && (\n                              <p className=\"text-red-500 text-sm\">\n                                {\n                                  errors.emergencyContact[index].mobile.code\n                                    .message\n                                }\n                              </p>\n                            )}\n                          </div>\n                          <div className=\"w-full\">\n                            <label className={`${inputLabelClassName}`}>\n                              Mobile No <span className=\"text-red-600\">*</span>\n                            </label>\n                            <input\n                              type=\"number\"\n                              {...register(\n                                `emergencyContact[${index}].mobile.number`,\n                                {\n                                  required: \"Mobile number is required\",\n                                  minLength: {\n                                    value: 10,\n                                    message: \"Must be exactly 10 digits\",\n                                  },\n                                  maxLength: {\n                                    value: 10,\n                                    message: \"Must be exactly 10 digits\",\n                                  },\n                                }\n                              )}\n                              className={`${inputClassName} ${errors.emergencyContact?.[index]?.mobile?.number\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                                }`}\n                              placeholder=\"Enter Mobile No\"\n                              maxLength={10}\n                              onInput={(e) => {\n                                if (e.target.value.length > 10) {\n                                  e.target.value = e.target.value.slice(0, 10);\n                                }\n                              }}\n                            />\n                          </div>\n                          {errors.emergencyContact?.[index]?.mobile?.number && (\n                            <p className=\"text-red-500 text-sm\">\n                              {\n                                errors.emergencyContact[index].mobile.number\n                                  .message\n                              }\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              <div className=\"flex justify-start px-3 py-2\">\n                <button\n                  type=\"button\"\n                  onClick={() =>\n                    appendEmergencyContact({\n                      name: \"\",\n                      relationship: \"\",\n                      email: \"\",\n                      mobile: {\n                        code: \"\",\n                        number: \"\",\n                      },\n                    })\n                  }\n                  className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded\"\n                >\n                  Add Emergency Contact\n                </button>\n              </div>\n\n              <div className=\"flex justify-between px-3 pb-2\">\n                <button type=\"Submit\" className={`${formButtonClassName}`}>\n                  Submit Details\n                </button>\n              </div>\n            </div>\n          )}\n          {step === 5 && (\n            <div>\n              {educationDetails.map((item, index) => (\n                <div key={index} className=\" rounded-md my-2 \">\n                  <div key={item.id} className=\"\">\n                    <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md px-3\">\n                      <div className=\"py-2 text-white font-semibold\">\n                        Education Details\n                      </div>\n                     \n                        <div className=\"flex justify-end\">\n                          <button\n                            type=\"button\"\n                            onClick={() => removeEducational(index)}\n                            className=\"text-gray-300 hover:text-gray-200 flex items-center justify-center p-1 rounded-lg\"\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                        </div>\n                    \n                    </div>\n                    <div className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 items-end mb-3\">\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Degree <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          {...register(`educationDetails[${index}].degree`, {\n                            required: \"Degree is required\",\n                          })}\n                          className={`${inputClassName} ${errors.educationDetails?.[index]?.degree\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        />\n                        {errors.educationDetails?.[index]?.degree && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.educationDetails[index].degree.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          University <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          {...register(\n                            `educationDetails[${index}].university`,\n                            {\n                              required: \"University is required\",\n                            }\n                          )}\n                          className={`${inputClassName} ${errors.educationDetails?.[index]?.university\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        />\n                        {errors.educationDetails?.[index]?.university && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.educationDetails[index].university.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          From <span className=\"text-red-600\">*</span>\n                        </label>\n\n                        <Controller\n                          name={`educationDetails[${index}].from`}\n                          control={control}\n                          render={({ field }) => (\n                            <CustomDatePicker field={field} errors={errors} />\n                          )}\n                        />\n                        {errors.educationDetails?.[index]?.from && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.educationDetails[index].from.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          To <span className=\"text-red-600\">*</span>\n                        </label>\n\n                        <Controller\n                          name={`educationDetails[${index}].to`}\n                          control={control}\n                          render={({ field }) => (\n                            <CustomDatePicker field={field} errors={errors} />\n                          )}\n                        />\n                        {errors.educationDetails?.[index]?.to && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.educationDetails[index].to.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"\">\n                        <label className={`${inputLabelClassName}`}>\n                          Marking Type\n                        </label>\n\n                        <Controller\n                          name={`educationDetails[${index}].isPercentage`}\n                          control={control}\n                          render={({ field }) => (\n                            <Select\n                              {...field}\n                              className={` ${inputAntdSelectClassName} ${errors.educationDetails?.[index]?.isPercentage ? \"border-[1px] \" : \"border-gray-300\"}`}\n                              placeholder=\"Select Marking Type\"\n                            >\n                              <Option value={true}>Percentage</Option>\n                              <Option value={false}>Grade</Option>\n                            </Select>\n                          )}\n                        />\n\n                        {errors.educationDetails?.[index]?.isPercentage && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.educationDetails?.[index]?.isPercentage.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"w-full \">\n                        <label className={`${inputLabelClassName}`}>\n                          Percentage / Grade{\" \"}\n                          <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"number\"\n                          {...register(`educationDetails[${index}].number`, {\n                            required: \"Percentage is required\",\n                            valueAsNumber: true,\n                          })}\n                          className={`${inputClassName} ${errors.educationDetails?.[index]?.number\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        />\n                        {errors.educationDetails?.[index]?.number && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.educationDetails[index].number.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div>\n                        <label className={`${inputLabelClassName}`}>\n                          Specification <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          {...register(\n                            `educationDetails[${index}].specification`,\n                            { required: \"Specification is required\" }\n                          )}\n                          className={`${inputClassName} ${errors.educationDetails?.[index]?.specification\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        />\n                        {errors.educationDetails?.[index]?.specification && (\n                          <p className=\"text-red-500 text-sm\">\n                            {\n                              errors.educationDetails[index].specification\n                                .message\n                            }\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              {/* Add Education Button */}\n              <button\n                type=\"button\"\n                onClick={() =>\n                  appendEducational({\n                    degree: \"\",\n                    university: \"\",\n                    from: \"\",\n                    to: \"\",\n                    isPercentage: false,\n                    number: \"\",\n                    specification: \"\",\n                  })\n                }\n                className={`${formButtonClassName} mx-3`}\n              >\n                Add Education\n              </button>\n\n              <div className=\"flex justify-between px-3 pb-2\">\n                <button type=\"Submit\" className={`${formButtonClassName}`}>\n                  Submit Details\n                </button>\n              </div>\n            </div>\n          )}\n          {step === 6 && (\n            <div>\n              {employmentDetails.map((item, index) => (\n                <div key={index} className=\" rounded-md my-2 \">\n                  <div key={item.id} className=\"\">\n                    <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md px-3\">\n                      <div className=\"py-2 text-white font-semibold\">\n                        Past Employment {\" \"}\n                      </div>\n                      \n                        <div className=\"flex justify-end\">\n                          <button\n                            type=\"button\"\n                            onClick={() => removeEmployment( index)}\n                            className=\"text-gray-300 hover:text-gray-200 flex items-center justify-center p-1 rounded-lg\"\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                        </div>\n                     \n                    </div>\n                    <div className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 items-end mb-3\">\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Organization Name{\" \"}\n                          <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          {...register(\n                            `employmentDetails[${index}].organizationName`,\n                            { required: \"Organization name is required\" }\n                          )}\n                          className={`${inputClassName} ${errors.employmentDetails?.[index]?.organizationName\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        />\n                        {errors.employmentDetails?.[index]\n                          ?.organizationName && (\n                            <p className=\"text-red-500 text-sm\">\n                              {\n                                errors.employmentDetails[index].organizationName\n                                  .message\n                              }\n                            </p>\n                          )}\n                      </div>\n\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Designation Name{\" \"}\n                          <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          {...register(\n                            `employmentDetails[${index}].designationName`,\n                            { required: \"Designation name is required\" }\n                          )}\n                          className={`${inputClassName} ${errors.employmentDetails?.[index]?.designationName\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        />\n                        {errors.employmentDetails?.[index]?.designationName && (\n                          <p className=\"text-red-500 text-sm\">\n                            {\n                              errors.employmentDetails[index].designationName\n                                .message\n                            }\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          From <span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                          name={`employmentDetails[${index}].from`}\n                          control={control}\n                          render={({ field }) => (\n                            <CustomDatePicker field={field} errors={errors} />\n                          )}\n                        />\n\n                        {errors.employmentDetails?.[index]?.from && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.employmentDetails[index].from.message}\n                          </p>\n                        )}\n                      </div>\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          To <span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                          name={`employmentDetails[${index}].to`}\n                          control={control}\n                          render={({ field }) => (\n                            <CustomDatePicker field={field} errors={errors} />\n                          )}\n                        />\n\n                        {errors.employmentDetails?.[index]?.to && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.employmentDetails[index].to.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Annual CTC <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"number\"\n                          {...register(\n                            `employmentDetails[${index}].annualCTC`,\n                            {\n                              required: \"Annual CTC is required\",\n                              valueAsNumber: true,\n                            }\n                          )}\n                          className={`${inputClassName} ${errors.employmentDetails?.[index]?.annualCTC\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                        />\n                        {errors.employmentDetails?.[index]?.annualCTC && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.employmentDetails[index].annualCTC.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              <button\n                type=\"button\"\n                onClick={() =>\n                  appendEmployment({\n                    organizationName: \"\",\n                    designationName: \"\",\n                    from: \"\",\n                    to: \"\",\n                    annualCTC: \"\",\n                  })\n                }\n                className={`${formButtonClassName} mx-3`}\n              >\n                Add Employment\n              </button>\n\n              <div className=\"flex justify-between px-3 pb-2\">\n                <button type=\"Submit\" className={`${formButtonClassName}`}>\n                  Submit Details\n                </button>\n              </div>\n            </div>\n          )}\n          {step === 7 && (\n            <div>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8 md:my-1 px-3\">\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>\n                    LinkedIn Link\n                  </label>\n                  <div className=\"flex\">\n                    <input className=\"mt-1 block w-[70px] px-2 py-[12px] shadow-sm rounded-l-xl text-sm bg-gray-200 focus:outline-none\" disabled value={\"https://\"} />\n                    <input\n                      type=\"text\"\n                      {...register(\"SMLinkedIn\")}\n                      className={`mt-1 block w-full px-2 py-[12px] shadow-sm rounded-r-xl text-sm bg-white focus:outline-none ${errors.SMLinkedIn ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      placeholder=\"Enter Twitter Link\"\n                    />\n                  </div>\n                  {errors.SMLinkedIn && <p className=\"text-red-500 text-sm\">{errors.SMLinkedIn.message}</p>}\n                </div>\n                <div>\n                  <label className={`${inputLabelClassName}`}>\n                    Github Link\n                  </label>\n                  <div className=\"flex\">\n                    <input className=\"mt-1 block w-[70px] px-2 py-[12px] shadow-sm rounded-l-xl text-sm bg-gray-200 focus:outline-none\" disabled value={\"https://\"} />\n                    <input\n                      type=\"text\"\n                      {...register(\"SMGithub\")}\n                      className={`mt-1 block w-full px-2 py-[12px] shadow-sm rounded-r-xl text-sm bg-white focus:outline-none ${errors.SMGithub ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      placeholder=\"Enter Twitter Link\"\n                    />\n                  </div>\n                  {/* <input\n                    type=\"url\"\n                    {...register(\"SMGithub\")}\n                    className={` ${inputClassName} ${errors.SMGithub ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Enter Github Link\"\n                  /> */}\n                  {errors.SMGithub && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.SMGithub.message}\n                    </p>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"flex justify-between px-3 pb-2\">\n                <button type=\"submit\" className={`${formButtonClassName}`}>\n                  Submit\n                </button>\n              </div>\n            </div>\n          )}\n          {step === 8 && (\n            <div>\n              <div className=\"px-3 grid lg:grid-cols-3 grid-cols-1 gap-4 items-end mb-3\">\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>\n                    financial Start Date  <span className=\"text-red-600\">*</span>\n                  </label>\n                  <Controller\n                    name={'financStartDate'}\n                    control={control}\n                    rules={{ required: \"financStartDate is required\" }}\n                    render={({ field }) => (\n                      <CustomDatePicker format=\"MM/YYYY\" picker=\"month\" field={field} errors={errors} />\n                    )}\n                  />\n\n                  {errors.financStartDate && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.financStartDate?.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>\n                    financial End Date  <span className=\"text-red-600\">*</span>\n                  </label>\n                  <Controller\n                    name={'financEndDate'}\n                    control={control}\n                    rules={{ required: \"financEndDate is required\" }}\n                    render={({ field }) => (\n                      <CustomDatePicker format=\"MM/YYYY\" picker=\"month\" field={field} errors={errors} disabledDate={(current) => {\n                              const start = dayjs(watch('financStartDate'), \"MM/YYYY\");\n                              return start.isValid() && current.isBefore(start, 'month');\n                            }} />\n                    )}\n                  />\n\n                  {errors.financEndDate && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.financEndDate?.message}\n                    </p>\n                  )}\n                </div>\n                <div className=\"\">\n\n                  <label className={`${inputLabelClassName}`}>\n                    Select Leave Policy <span className=\"text-red-600\">*</span>\n                  </label>\n\n                  <Controller\n                    name=\"leaveTypePolicy\"\n                    control={control}\n                    rules={{ required: \"Leave Policy is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`${inputAntdSelectClassName} ${errors.leaveTypePolicy ? '' : 'border-gray-300'}`}\n                        placeholder=\"Select Leave Policy\"\n                      >\n                        <Option value=\"\">Select Leave Policy</Option>\n                        {[\n                          { key: \"carry_forward\", value: \"Carry Forward\" },\n                          { key: \"zero_out\", value: \"Zero Out\" },\n                          { key: \"paid_balance\", value: \"Paid Balance\" },\n                        ]?.map((type) => (\n                          <Option key={type.key} value={type.key}>\n                            {type.value}\n                          </Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n\n                  {errors.leaveTypePolicy && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.leaveTypePolicy.message}\n                    </p>\n                  )}\n                </div>\n\n\n              </div>\n              {assignLeaveDetails.map((item, index) => (\n                <div key={index} className=\" rounded-md my-2 \">\n                  <div key={item.id} className=\"\">\n                    <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md px-3\">\n                      <div className=\"py-2 text-white font-semibold\">\n                        Assign Leave{\" \"}\n                      </div>\n                      {(\n                        <div className=\"flex justify-end\">\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              if (item?._id) {\n                                dispatch(\n                                  deleteAssignedLeaveEmployee({\n                                    _id: item?._id,\n                                  })\n                                ).then((data) => {\n                                  if (!data?.error) {\n                                    dispatch(getOnBoardingDetails({ _id: onBoardingId }))\n                                    removeassignLeave(index)\n                                  }\n                                });\n                              } else { removeassignLeave(index) }\n                            }}\n                            className=\"text-gray-300 hover:text-gray-200 flex items-center justify-center p-1 rounded-lg\"\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 items-end mb-3\">\n                      <div className=\"flex gap-3\">\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Leave <span className=\"text-red-600\">*</span>\n                          </label>\n                          <Controller\n                            name={`assignLeaveDetails[${index}].leave`}\n                            control={control}\n                            rules={{ required: \"Leave is required\" }}\n                            render={({ field }) => (\n                              <Select\n                                {...field}\n                                className={`${inputAntdSelectClassName} ${errors.assignLeaveDetails?.[index]?.leave ? '' : 'border-gray-300'}`}\n                                placeholder=\"Select Leave\"\n                                value={field.value}\n                                onChange={(value) => {\n                                  const totalLeaves = leaveListData?.find((leave) => leave?._id === value)?.totalLeaves\n                                  const availableLeave = (totalLeaves / financialDateDiffrence?.main) * financialDateDiffrence?.current\n                                  setValue(`assignLeaveDetails[${index}].totalLeave`, Math.ceil(availableLeave))\n                                  setValue(`assignLeaveDetails[${index}].maxValue`, Math.ceil(availableLeave))\n                                  clearErrors(`assignLeaveDetails[${index}].totalLeave`);\n                                  field.onChange(value);\n                                }}\n                              >\n                                <Option value=\"\">Select Leave</Option>\n                                {leaveListData?.map((leaveOption) => (\n                                  <Option key={leaveOption._id} value={leaveOption._id}>\n                                    {leaveOption.name} ({leaveOption.totalLeaves})\n                                  </Option>\n                                ))}\n                              </Select>\n                            )}\n                          />\n\n                          {errors.assignLeaveDetails?.[index]?.leave && (\n                            <p className=\"text-red-500 text-sm\">\n                              {errors.assignLeaveDetails[index].leave.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n\n\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Total Leave <span className=\"text-red-600\">*</span>\n                        </label>\n\n                        <input\n                          type=\"number\"\n                           step=\"any\"\n                          {...register(`assignLeaveDetails[${index}].totalLeave`, {\n                            required: \"Total Leave is required\",\n                            valueAsNumber: true,\n                          })}\n                          max={+watch(`assignLeaveDetails[${index}].maxValue`)}\n                          className={`${inputClassName} ${errors.assignLeaveDetails?.[index]?.totalLeave\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                            }`}\n                          onInput={(e) => {\n                            const value = +e.target.value;\n                            const maxValue = +watch(`assignLeaveDetails[${index}].maxValue`);\n\n                            if (value > maxValue) {\n                              // Trigger error if value exceeds maxValue\n                              setError(`assignLeaveDetails[${index}].totalLeave`, {\n                                type: 'manual',\n                                message: `Total Leave cannot be more than ${maxValue}`,\n                              });\n                            } else {\n                              // Clear the error if value is valid\n                              clearErrors(`assignLeaveDetails[${index}].totalLeave`);\n                            }\n                          }}\n                        />\n\n                        {errors.assignLeaveDetails?.[index]?.totalLeave && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.assignLeaveDetails[index].totalLeave.message}\n                          </p>\n                        )}\n                      </div>\n\n\n                    </div>\n                  </div>\n                </div>\n              ))}\n\n              <button\n                type=\"button\"\n                onClick={() =>\n                  appendassignLeave({\n                    leave: \"\",\n                    totalLeave: 0,\n                  })\n                }\n                className={`${formButtonClassName} mx-3`}\n              >\n                Add leave\n              </button>\n\n              <div className=\"flex justify-between px-3 pb-2\">\n                <button type=\"Submit\" className={`${formButtonClassName}`}>\n                  Submit Details\n                </button>\n              </div>\n            </div>\n          )}\n          {[9, 10, 11].includes(step) && (\n            <EditSalaryDetailsModule incrementDetails={incrementDetails} appendIncrement={appendIncrement} removeIncrement={removeIncrement} EditSalaryDetailsModule={EditSalaryDetailsModule} setValue={setValue} handleDeleteDoctImage={handleDeleteDoctImage} handleDeleteBankImage={handleDeleteBankImage} formErrorsBank={formErrorsBank} currentPackage={currentPackage} step={step} errors={errors} register={register} watch={watch} control={control} setStep={setStep} navTabClick={navTabClick} isESIC={isESIC} IsPf={IsPf} formErrors={formErrors} handleAddMore={handleAddMore} documents={documents} setDocuments={setDocuments} banks={banks} setBanks={setBanks} handleInputChangeBank={handleInputChangeBank} handleBankFileChange={handleBankFileChange} loadingUpdateFile={loadingUpdateFile} handleInputChange={handleInputChange} employeeDocumentList={employeeDocumentList} handleFileChange={handleFileChange} handleDelete={handleDelete} onBoardingDetailsData={onBoardingDetailsData} />\n          )}\n        </form>\n      </div>}\n    </GlobalLayout>\n  );\n};\nexport default EditOnBoarding;"],"names":["EditOnBoarding","_errors$financStartDa","_errors$financEndDate","navigate","useNavigate","onBoardingIdEnc","useParams","onBoardingId","decrypt","step","setStep","useState","loading","onBoardingLaoding","useSelector","state","onBoarding","sameAsCurrentAddress","setSameAsCurrentAddress","countryListData","secCountryList","country","rolesPermissionList","rolePermission","editPageLoader","setEditPageLoader","designationList","desLoading","designation","departmentListData","depLoading","department","stateListData","secStateList","states","cityListData","secCityList","city","onBoardingDetailsData","leaveListData","leaveType","isFirstEffectComplete","setIsFirstEffectComplete","financialDateDiffrence","setFinancialDateDiffrence","main","current","employeeDocumentList","employeeDocument","banks","setBanks","id","documents","setDocuments","documentType","documentNo","file","loadingUpdateFile","fileUpload","financialInfo","setFinancialInfo","name","year","timeSlotsListData","timeSlots","formErrors","setFormErrors","formErrorsBank","setFormErrorsBank","register","handleSubmit","setValue","reset","getValues","clearErrors","setError","resetField","control","formState","errors","watch","useForm","defaultValues","isProbationPeriodActive","useWatch","defaultValue","dateOfJoining","fields","append","remove","useFieldArray","emergencyContactFields","appendEmergencyContact","removeEmergencyContact","educationDetails","appendEducational","removeEducational","employmentDetails","appendEmployment","removeEmployment","incrementDetails","appendIncrement","removeIncrement","assignLeaveDetails","appendassignLeave","removeassignLeave","dispatch","useDispatch","financStartDate","financEndDate","IsPf","isESIC","isTl","isHr","useEffect","countrySearch","isPagination","text","sort","status","reqData","_id","getOnBoardingDetails","then","resetOnBoarding","employeeList","setEmployeeList","reportingOption","reqPayload","isTL","isHR","isManager","departmentId","designationId","companyId","branchId","isBranch","employeSearch","res","_res$payload","_res$payload$data","_res$payload$data$doc","optionList","payload","data","docs","map","options","_options$departmentDa","_options$designationD","value","label","_jsxs","className","children","fullName","_jsx","userType","departmentData","designationData","_onBoardingDetailsDat","_onBoardingDetailsDat2","_onBoardingDetailsDat3","_onBoardingDetailsDat4","_onBoardingDetailsDat5","_onBoardingDetailsDat6","_onBoardingDetailsDat7","_onBoardingDetailsDat8","_onBoardingDetailsDat9","_onBoardingDetailsDat0","_onBoardingDetailsDat1","_onBoardingDetailsDat10","_onBoardingDetailsDat11","_onBoardingDetailsDat12","_onBoardingDetailsDat13","_onBoardingDetailsDat14","_onBoardingDetailsDat15","_onBoardingDetailsDat16","_onBoardingDetailsDat17","_onBoardingDetailsDat18","_onBoardingDetailsDat19","_onBoardingDetailsDat20","_onBoardingDetailsDat21","_onBoardingDetailsDat22","_onBoardingDetailsDat23","_onBoardingDetailsDat24","_onBoardingDetailsDat25","_onBoardingDetailsDat26","_onBoardingDetailsDat27","_onBoardingDetailsDat28","_onBoardingDetailsDat29","_onBoardingDetailsDat30","_onBoardingDetailsDat31","_onBoardingDetailsDat32","_onBoardingDetailsDat33","_onBoardingDetailsDat34","_onBoardingDetailsDat35","_onBoardingDetailsDat36","_onBoardingDetailsDat41","_onBoardingDetailsDat45","_onBoardingDetailsDat46","_onBoardingDetailsDat47","_onBoardingDetailsDat48","_onBoardingDetailsDat49","_onBoardingDetailsDat50","_onBoardingDetailsDat51","_onBoardingDetailsDat52","_onBoardingDetailsDat53","_onBoardingDetailsDat54","_onBoardingDetailsDat55","_onBoardingDetailsDat56","_onBoardingDetailsDat57","_onBoardingDetailsDat58","_onBoardingDetailsDat59","_onBoardingDetailsDat60","_onBoardingDetailsDat61","_onBoardingDetailsDat62","_onBoardingDetailsDat63","_onBoardingDetailsDat64","_onBoardingDetailsDat65","_onBoardingDetailsDat66","_onBoardingDetailsDat67","_onBoardingDetailsDat68","_onBoardingDetailsDat69","_onBoardingDetailsDat70","addresses","primary","street","pinCode","secondary","landlineNumber","seatNumber","email","mobile","code","officeEmail","deptSearch","error","RolesPermissionSearch","pageRoleId","designationSearch","workType","number","generalInfo","gender","bloodGroup","dateOfBirth","dayjs","maritalStatus","isProbationPeriod","isProbationPeriodLeave","probationPeriod","bankData","length","bank","accountType","bankName","branchName","bankholderName","accountNumber","ifscCode","filePath","documentData","document","_onBoardingDetailsDat37","_onBoardingDetailsDat38","_onBoardingDetailsDat39","_onBoardingDetailsDat40","timeSlotSearch","directorId","shift","isDirector","_data$payload","_data$payload$data","_data$payload$data$do","_selectedEmployee$dep","_selectedEmployee$des","selectedEmployee","find","ele","reporting_to","familyDetails","forEach","famDetail","_famDetail$contactNum","_famDetail$contactNum2","formattedEmpDetail","_objectSpread","contactNumber","eduDetail","formattedEduDetail","from","to","employementDetails","empDetail","emergencyContact","emrConDetail","FirstassignLeave","assignLeaves","leavePolicy","leaveTypeSearch","isPaid","_onBoardingDetailsDat42","_onBoardingDetailsDat43","_onBoardingDetailsDat44","filter","leaveTypeIsPaid","item","index","formattedLeave","leave","leaveTypeId","totalLeave","totalLeaves","concat","Math","ceil","socialLinks","link","replace","profileImage","salaryData","currentPackage","esicNumber","currentSalary","perDaySalary","basicSalaryPercentage","basicSalary","isPF","uanNumber","pfType","pfAppliedOn","lastIncrementDate","nextIncrementDate","openingBalance","esicType","esicAppliedOn","esicInPercentage","esicMaxUpTo","pfInPercentage","pfMaxUpTo","_dayjs","_dayjs2","dateObj1","startOf","dateObj2","endOf","today","baseDate","doj","isBefore","date","add","clone","diffInMonths","diff","diffInCurrent","selectedleave","type","_onBoardingDetailsDat71","includes","navTabClick","clickedStep","currentAddress","address","Option","Select","calculatedSalary","toFixed","validateBankForm","Object","keys","every","validateForm","GlobalLayout","Loader2","onSubmit","_data$leaveTypeId","_data$reportingEmploy","finalPayload","BloodGroup","format","designationName","sidebarRole","landlineNo","seatNo","employeId","applicationId","PDDepartmentId","PDDesignationId","PDOfficeemail","Number","Array","isArray","reportingEmployee","firstName","lastName","PDFullName","ProfileImage","PDEmail","PDmobileCode","PDMobileNo","PDAddress","PDCity","PDState","PDcountry","PDPin","PDSecAddress","PDSecCity","PDSecState","PDSecCountry","PDSecPinCode","updateOnBoarding","output","family","_data$SMLinkedIn","_data$SMGithub","SMLinkedIn","startsWith","SMGithub","_data$assignLeaveDeta","_dayjs3","_dayjs4","leavePayload","leaveTypePolicy","assignMultipleLeave","salaryId","calculatedBasicSalary","salarystartDate","salaryEndDate","updateEmployeeSalaryDetails","createEmployeeSalaryDetails","doc","userId","updateDocument","onClick","Controller","render","_ref","field","ImageUploader","inputLabelClassName","rules","required","_ref2","_sortByPropertyAlphab","inputAntdSelectClassName","showSearch","filterOption","input","option","String","toLowerCase","onChange","event","placeholder","disabled","ListLoader","sortByPropertyAlphabetically","element","PDDepartmentname","message","_ref3","_sortByPropertyAlphab2","PDDesignationname","inputClassName","pattern","_ref4","style","width","getOptionLabel","e","getOptionValue","allowClear","onFocus","employee","_ref5","CustomMobileCodePicker","minLength","maxLength","onInput","target","slice","_ref6","_ref7","bloodType","_ref8","_ref9","CustomDatePicker","disabledDate","isAfter","moment","_ref0","inputDisabledClassName","_ref1","_ref10","_ref11","_ref12","shiftName","_ref13","_ref14","key","_ref15","_sortByPropertyAlphab3","AutoComplete","inputerrorClassNameAutoComplete","_ref16","_sortByPropertyAlphab4","stateSearch","countryName","_ref17","_sortByPropertyAlphab5","citySearch","stateName","_ref18","handleAddressCheckbox","checked","htmlFor","_ref19","_sortByPropertyAlphab6","secCountrySearch","_ref20","_sortByPropertyAlphab7","_ref21","_sortByPropertyAlphab8","_ref22","Loader","_errors$family2","_errors$family2$index","_errors$family3","_errors$family3$index","_errors$family4","_errors$family4$index","_errors$family5","_errors$family5$index","_errors$family6","_errors$family6$index","_errors$family7","_errors$family7$index","_errors$family8","_errors$family9","_errors$family9$index","_errors$family9$index2","_errors$family0","_errors$family0$index","_errors$family0$index2","_errors$family1","_errors$family1$index","_errors$family1$index2","_errors$family1$index3","_ref23","_errors$family","_errors$family$index","relation","age","_ref24","formButtonClassName","_errors$emergencyCont","_errors$emergencyCont2","_errors$emergencyCont3","_errors$emergencyCont4","_errors$emergencyCont5","_errors$emergencyCont6","_errors$emergencyCont7","_errors$emergencyCont8","_errors$emergencyCont9","_errors$emergencyCont0","_errors$emergencyCont1","_errors$emergencyCont10","_errors$emergencyCont11","_errors$emergencyCont12","_errors$emergencyCont13","_errors$emergencyCont14","_errors$emergencyCont15","_errors$emergencyCont16","_errors$emergencyCont17","_errors$emergencyCont18","relationship","_ref25","_errors$educationDeta","_errors$educationDeta2","_errors$educationDeta3","_errors$educationDeta4","_errors$educationDeta5","_errors$educationDeta6","_errors$educationDeta7","_errors$educationDeta8","_errors$educationDeta9","_errors$educationDeta0","_errors$educationDeta1","_errors$educationDeta10","_errors$educationDeta13","_errors$educationDeta14","_errors$educationDeta15","_errors$educationDeta16","_errors$educationDeta17","_errors$educationDeta18","_errors$educationDeta19","_errors$educationDeta20","_errors$educationDeta21","_errors$educationDeta22","_errors$educationDeta23","_errors$educationDeta24","degree","university","_ref26","_ref27","_ref28","_errors$educationDeta11","_errors$educationDeta12","isPercentage","valueAsNumber","specification","_errors$employmentDet","_errors$employmentDet2","_errors$employmentDet3","_errors$employmentDet4","_errors$employmentDet5","_errors$employmentDet6","_errors$employmentDet7","_errors$employmentDet8","_errors$employmentDet9","_errors$employmentDet0","_errors$employmentDet1","_errors$employmentDet10","_errors$employmentDet11","_errors$employmentDet12","_errors$employmentDet13","_errors$employmentDet14","organizationName","_ref29","_ref30","annualCTC","_ref31","picker","_ref32","start","isValid","_ref33","_ref34","_errors$assignLeaveDe3","_errors$assignLeaveDe4","_errors$assignLeaveDe5","_errors$assignLeaveDe6","_errors$assignLeaveDe7","_errors$assignLeaveDe8","deleteAssignedLeaveEmployee","_ref35","_errors$assignLeaveDe","_errors$assignLeaveDe2","_leaveListData$find","availableLeave","leaveOption","max","maxValue","EditSalaryDetailsModule","handleDeleteDoctImage","updatedDocuments","handleDeleteBankImage","updatedBanks","handleAddMore","Date","now","handleInputChangeBank","newFormErrors","_newFormErrors$index","test","_newFormErrors$index2","handleBankFileChange","selectedFile","fileReader","FileReader","filePreviewUrl","onload","result","Swal","title","html","showCancelButton","confirmButtonText","cancelButtonText","didOpen","changeImageBtn","getElementById","fileInput","filePreview","addEventListener","click","newFile","files","newFileReader","src","readAsDataURL","isConfirmed","fileUploadFunc","isVideo","isMultiple","_data$payload2","_newFormErrors$index3","handleInputChange","_newFormErrors$index4","handleFileChange","_data$payload3","_newFormErrors$index5","handleDelete","deleteDocument","prevDocuments","_","index2"],"sourceRoot":""}