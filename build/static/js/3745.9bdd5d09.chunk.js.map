{"version":3,"file":"static/js/3745.9bdd5d09.chunk.js","mappings":"gQA2GA,QAjGA,WAEE,MAAM,SAAEA,EAAQ,aAAEC,EAAY,SAAEC,EAAUC,WAAW,OAAEC,KAAaC,EAAAA,EAAAA,OAC7DC,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,GACzCC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEX,gBAAEC,IAAoBC,EAAAA,EAAAA,KACtBC,GAAeC,EAAAA,EAAAA,IAAQH,IACvB,kBAAEI,IAAsBC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,iBA2C3D,OAzCAC,EAAAA,EAAAA,WAAU,KACUC,WAChB,IACE,MAAMC,EAAU,CACdC,IAAKT,SAEDN,GAASgB,EAAAA,EAAAA,IAAqBF,IAAUG,KAAMC,IAClDpB,GAAe,IAEnB,CAAE,MAAOqB,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAGFE,IACC,KAEHT,EAAAA,EAAAA,WAAU,KACJJ,IACFf,EAAS,YAA8B,OAAjBe,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBc,WACzC7B,EAAS,WAA6B,OAAjBe,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBe,UACxC9B,EAAS,iBAAmC,OAAjBe,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBgB,MAC9C/B,EAAS,SAA2B,OAAjBe,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBiB,UAEvC,CAACjB,KAkBFkB,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,SACT/B,GAqCA6B,EAAAA,EAAAA,KAACG,EAAAA,EAAM,KApCPH,EAAAA,EAAAA,KAAA,OAAKI,UAAU,QAAOF,UACpBG,EAAAA,EAAAA,MAAA,QAAMC,aAAa,MAAMF,UAAU,OAAOG,SAAUzC,EAnB1C0B,IAChB,MAAMgB,EAAe,CACnBnB,IAAKT,EACLgB,UAA4B,OAAjBd,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBc,UAC9Ba,WAAY,GACZZ,SAA2B,OAAjBf,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBe,SAC7BC,KAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMkB,eACZX,OAAY,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMO,QAGhBzB,GAASqC,EAAAA,EAAAA,IAAiBH,IAAejB,KAAMC,IACxCA,EAAKC,OAAOjB,EAAS,+BAQqD0B,SAAA,EACzEF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,gDAA+CF,UAC5DG,EAAAA,EAAAA,MAAA,OAAKD,UAAU,SAAQF,SAAA,EACrBG,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAAQ,OAAKC,EAAAA,IAAsBX,SAAA,CAAC,0BACpBF,EAAAA,EAAAA,KAAA,QAAMI,UAAU,eAAcF,SAAC,UAEvDF,EAAAA,EAAAA,KAAA,SAAAc,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,KAAK,QACDlD,EAAS,iBAAkB,CAC7BmD,SAAU,uCACV,IACFZ,UAAS,gBAAAQ,OAAkBK,EAAAA,GAAc,KAAAL,OAAI3C,EAAOyC,eAChD,gBACA,mBAEJQ,YAAY,iCAEbjD,EAAOyC,iBACNV,EAAAA,EAAAA,KAAA,KAAGI,UAAU,uBAAsBF,SAChCjC,EAAOyC,eAAeS,gBAK/BnB,EAAAA,EAAAA,KAAA,OAAKI,UAAU,oBAAmBF,UAChCF,EAAAA,EAAAA,KAAA,UACEe,KAAK,SACLX,UAAU,6CAA4CF,SACvD,mBAWf,C,6DC9FA,QATA,WACI,OACGF,EAAAA,EAAAA,KAAA,OAAKI,UAAU,4CAA2CF,UAExDF,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAACC,KAAK,WAGpB,C","sources":["pages/visitorManagement/visitorCategories/UpdateVisitorCategories.js","global_layouts/Loader/Loader.js"],"sourcesContent":["import { useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { decrypt } from \"../../../config/Encryption\";\nimport { inputClassName, inputLabelClassName } from \"../../../constents/global\";\nimport { getVisitorCatDetails, updateVisitorCat } from \"./visitorCategoryFeatures/_visitor_categories_reducers\";\nimport Loader from \"../../../global_layouts/Loader/Loader\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\n\nfunction UpdateVisitorCategories() {\n\n  const { register, handleSubmit, setValue, formState: { errors } } = useForm();\n  const [pageLoading, setPageLoading] = useState(true);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { visitorCatIdEnc } = useParams();\n  const visitorCatId = decrypt(visitorCatIdEnc);\n  const { visitorCatDetails } = useSelector((state) => state.visitorCategory);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const reqData = {\n          _id: visitorCatId,\n        };\n        await dispatch(getVisitorCatDetails(reqData)).then((data) => {\n          setPageLoading(false);\n        });\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (visitorCatDetails) {\n      setValue(\"companyId\", visitorCatDetails?.companyId);\n      setValue(\"branchId\", visitorCatDetails?.branchId);\n      setValue(\"visitorCatName\", visitorCatDetails?.name);\n      setValue(\"status\", visitorCatDetails?.status);\n    }\n  }, [visitorCatDetails]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: visitorCatId,\n      companyId: visitorCatDetails?.companyId,\n      directorId: '',\n      branchId: visitorCatDetails?.branchId,\n      name: data?.visitorCatName,\n      status: data?.status,\n    };\n\n    dispatch(updateVisitorCat(finalPayload)).then((data) => {\n      if (!data.error) navigate(\"/admin/visitor-category\");\n    });\n  };\n\n  return (\n    <GlobalLayout>\n      {!pageLoading ? (\n        <div className=\"gap-4\">\n          <form autoComplete=\"off\" className=\"mt-0\" onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n              <div className=\"w-full\">\n                <label className={`${inputLabelClassName}`}>\n                  Visitor Category Name <span className=\"text-red-600\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  {...register(\"visitorCatName\", {\n                    required: \"Visitor Category Name is required\",\n                  })}\n                  className={`placeholder: ${inputClassName} ${errors.visitorCatName\n                    ? \"border-[1px] \"\n                    : \"border-gray-300\"\n                    }`}\n                  placeholder=\"Enter Visitor Category Name\"\n                />\n                {errors.visitorCatName && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.visitorCatName.message}\n                  </p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-end \">\n              <button\n                type=\"submit\"\n                className=\"bg-header text-white p-2 px-4 rounded mt-4\"\n              >\n                Submit\n              </button>\n            </div>\n          </form>\n        </div>\n      ) : (\n        <Loader />\n      )}\n    </GlobalLayout>\n  );\n}\n\nexport default UpdateVisitorCategories;","import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n"],"names":["register","handleSubmit","setValue","formState","errors","useForm","pageLoading","setPageLoading","useState","dispatch","useDispatch","navigate","useNavigate","visitorCatIdEnc","useParams","visitorCatId","decrypt","visitorCatDetails","useSelector","state","visitorCategory","useEffect","async","reqData","_id","getVisitorCatDetails","then","data","error","console","fetchData","companyId","branchId","name","status","_jsx","GlobalLayout","children","Loader","className","_jsxs","autoComplete","onSubmit","finalPayload","directorId","visitorCatName","updateVisitorCat","concat","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","Spin","size"],"sourceRoot":""}