{"version":3,"file":"static/js/311.15737b55.chunk.js","mappings":"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","sources":["pages/global/address/country/EditCountry.js"],"sourcesContent":["import { Controller, useForm } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { decrypt } from \"../../../../config/Encryption\";\nimport { useEffect } from \"react\";\nimport { getCountryByIdFunc, updateCountryFunc, getCountryListFunc } from \"./CountryFeatures/_country_reducers\";\nimport { inputAntdSelectClassName, inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport { Select } from \"antd\";\nimport Loader from \"../../../../global_layouts/Loader\";\n\nfunction EditCountry() {\n  const { loading: countryLoading } = useSelector((state) => state.country);\n  const { register, handleSubmit, setValue, control, watch, formState: { errors } } = useForm();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { countryIdEnc } = useParams();\n  const countryId = decrypt(countryIdEnc);\n  const { countryByIdData } = useSelector((state) => state.country);\n\n  // Watch the mobile number code field\n  const countryMobileNumberValue = watch(\"countryMobileNumberCode\");\n\n  // Effect to handle the '+' prefix for mobile code\n  useEffect(() => {\n    if (countryMobileNumberValue) {\n      // If value doesn't start with '+', add it\n      if (!countryMobileNumberValue.startsWith('+')) {\n        setValue(\"countryMobileNumberCode\", `+${countryMobileNumberValue.replace(/\\+/g, '')}`);\n      }\n    }\n  }, [countryMobileNumberValue, setValue]);\n\n  useEffect(() => {\n    let reqData = {\n      _id: countryId,\n    };\n    dispatch(getCountryByIdFunc(reqData));\n  }, []);\n\n  useEffect(() => {\n    if (countryByIdData && countryByIdData?.data) {\n      setValue(\"name\", countryByIdData?.data?.name);\n      setValue(\"countryCode\", countryByIdData?.data?.countryCode);\n      // Ensure the mobile code has '+' when setting initial value\n      const mobileCode = countryByIdData?.data?.countryMobileNumberCode;\n      setValue(\"countryMobileNumberCode\", mobileCode?.startsWith('+') ? mobileCode : `+${mobileCode}`);\n      setValue(\"status\", countryByIdData?.data?.status);\n    }\n  }, [countryByIdData]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: countryId,\n      \"name\": data.name,\n      \"countryCode\": data?.countryCode,\n      // Ensure the mobile code has '+' when submitting\n      \"countryMobileNumberCode\": data?.countryMobileNumberCode?.startsWith('+') \n        ? data?.countryMobileNumberCode \n        : `+${data?.countryMobileNumberCode}`,\n      \"status\": data?.status\n    };\n    dispatch(updateCountryFunc(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-0 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-1 gap-2 md:my-2 capitalize\">\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Country Name <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"name\", {\n                  required: \"Country Name is required\",\n                })}\n                className={`${inputClassName} ${errors.name ? \"border-[1px] \" : \"border-gray-300\"\n                  } `}\n                placeholder=\"Select Country Name\"\n              />\n              {errors.name && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.name.message}\n                </p>\n              )}\n            </div>\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Country Code <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"countryCode\", {\n                  required: \"Country Code is required\",\n                })}\n                className={`${inputClassName} ${errors.countryCode ? \"border-[1px] \" : \"border-gray-300\"\n                  } `}\n                placeholder=\"Select Country Code\"\n              />\n              {errors.countryCode && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.countryCode.message}\n                </p>\n              )}\n            </div>\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Country Mobile Code <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"countryMobileNumberCode\", {\n                  required: \"Country Mobile Code is required\",\n                  validate: (value) => {\n                    // Ensure the value is a valid mobile code (starts with + and has numbers)\n                    if (!/^\\+[0-9]+$/.test(value)) {\n                      return \"Mobile code must start with + followed by numbers\";\n                    }\n                    return true;\n                  }\n                })}\n                className={`${inputClassName} ${errors.countryMobileNumberCode ? \"border-[1px] \" : \"border-gray-300\"\n                  } `}\n                placeholder=\"+123\"\n              />\n              {errors.countryMobileNumberCode && (\n                <p className=\"text-red-500 text-sm\">{errors.countryMobileNumberCode.message}</p>\n              )}\n            </div>\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Status <span className=\"text-red-600\">*</span></label>\n              <Controller\n                name=\"status\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.status ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Status\"\n                  >\n                    <Select.Option value={true}>Active</Select.Option>\n                    <Select.Option value={false}>In Active</Select.Option>\n                  </Select>\n                )}\n              />\n              {errors.status && <p className=\"text-red-500 text-sm\">{errors.status.message}</p>}\n            </div>\n          </div>\n          <div className=\"flex justify-end \">\n            <button\n              type=\"submit\"\n              disabled={countryLoading}\n              className={`${countryLoading ? 'bg-gray-400': 'bg-header' } text-white p-2 px-4 rounded mt-3`}\n            >\n              {countryLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default EditCountry;"],"names":["loading","countryLoading","useSelector","state","country","register","handleSubmit","setValue","control","watch","formState","errors","useForm","dispatch","useDispatch","navigate","useNavigate","countryIdEnc","useParams","countryId","decrypt","countryByIdData","countryMobileNumberValue","useEffect","startsWith","concat","replace","reqData","_id","getCountryByIdFunc","data","_countryByIdData$data","_countryByIdData$data2","_countryByIdData$data3","_countryByIdData$data4","name","countryCode","mobileCode","countryMobileNumberCode","status","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","_data$countryMobileNu","finalPayload","updateCountryFunc","then","error","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","validate","value","test","Controller","render","_ref","field","Select","inputAntdSelectClassName","Option","disabled","Loader"],"sourceRoot":""}