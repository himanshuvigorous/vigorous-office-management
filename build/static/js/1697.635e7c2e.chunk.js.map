{"version":3,"file":"static/js/1697.635e7c2e.chunk.js","mappings":"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","sources":["pages/taskManagement/taskType/TaskTypeList.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\n\nimport { deleteTaskType, getTaskTypeList, taskTypeSearch } from \"./taskFeatures/_task_reducers\"\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\"\nimport { convertIntoAmount, domainName, inputAntdSelectClassNameFilter, inputClassNameSearch } from \"../../../constents/global\"\nimport { FaPlus } from \"react-icons/fa\"\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { encrypt } from \"../../../config/Encryption\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport { Select, Tooltip } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport dayjs from \"dayjs\";\n\nfunction TaskTypeList() {\n    const { register, setValue, formState: { errors }, control } = useForm();\n    const { companyList } = useSelector((state) => state.company);\n    const { taskTypeList, totalTaskTypeCount, loading } = useSelector((state) => state.taskType);\n    const userInfoglobal = JSON.parse(\n        localStorage.getItem(`user_info_${domainName}`)\n    );\n    const [currentPage, setCurrentPage] = useState(1);\n    const [searchText, setSearchText] = useState(\"\");\n    // const [status, setStatus] = useState(\"\");\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const CompanyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: \"\",\n    });\n    const BranchId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: \"\",\n    });\n\n    const status = useWatch({\n        control,\n        name: 'status',\n        defaultValue: ''\n    });\n\n    useEffect(() => {\n        if (userInfoglobal?.userType === \"admin\") {\n            dispatch(\n                companySearch({\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                })\n            );\n        }\n    }, []);\n\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const limit = 10;\n\n    const filters = [status, searchText].join(\"-\");\n    const [isFirstRender ,setisFirstRender] = useState(false)\n    \n    useEffect(() => {\n        if (!isFirstRender) {\n          setisFirstRender(state=>true);\n          return;\n        }\n        if (currentPage === 1) {\n          fetTaskTypeList();\n        } else {\n          setCurrentPage(1);\n        }\n      }, [filters])\n\n    useEffect(() => {\n        fetTaskTypeList();\n    }, [currentPage]);\n\n    const fetTaskTypeList = () => {\n        const reqListData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                companyId:\n                    userInfoglobal?.userType === \"admin\"\n                        ? CompanyId\n                        :\n                        userInfoglobal?.userType === \"company\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.companyId,\n                branchId:\n                    userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\"\n                        ? userInfoglobal?._id\n                        : userInfoglobal?.branchId,\n                \"directorId\": \"\",\n                text: searchText,\n                sort: true,\n                status: status === \"true\" ? true : status === \"false\" ? false : \"\",\n                isPagination: true,\n            }\n        }\n        dispatch(getTaskTypeList(reqListData));\n    }\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteTaskType(reqData)).then((data) => {\n                    // !data.error && fetTaskTypeList();\n\n                    if (currentPage > 1 && taskTypeList?.length == 1) {\n                        setCurrentPage(Number(currentPage - 1));\n\n                    } else {\n                        !data.error && fetTaskTypeList();\n                    }\n                })\n            }\n        });\n    };\n\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n  \n\n    const onChange = (e) => {\n\n        setSearchText(e);\n    };\n\n    return (\n        <GlobalLayout onChange={onChange}>\n           \n            <div className=''>\n               \n                <div className='sm:flex justify-between items-center md:space-y-0 space-y-2 py-1'>\n                    <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-2 sm:gap-3 gap-1\">\n                        {userInfoglobal?.userType === \"admin\" && (\n                            <div className=\"\">\n                                <select\n                                    {...register(\"PDCompanyId\", {\n                                        required: \"company is required\",\n                                    })}\n                                    className={` ${inputClassNameSearch} ${errors.PDCompanyId ? \"border-[1px] \" : \"border-gray-300\"\n                                        }`}\n                                    showSearch\n                                    filterOption={(input, option) =>\n                                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                    }\n                                >\n                                    <option className=\"\" value=\"\">\n                                        Select Comapany\n                                    </option>\n                                    {companyList?.map((type) => (\n                                        <option value={type?._id}>{type?.fullName}</option>\n                                    ))}\n                                </select>\n                                {errors.PDCompanyId && (\n                                    <p className=\"text-red-500 text-sm\">\n                                        {errors.PDCompanyId.message}\n                                    </p>\n                                )}\n                            </div>\n                        )}\n                        <Controller\n                            name=\"status\"\n                            control={control}\n                            rules={{}}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.status\n                                        ? \"border-[1px] \"\n                                        : \"border-gray-300\"\n                                        }`}\n                                    placeholder=\"Select Status\"\n                                    showSearch\n                                    filterOption={(input, option) =>\n                                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                    }\n                                >\n                                    <Select.Option value=\"\">Select Status</Select.Option>\n                                    <Select.Option value=\"true\"> Active </Select.Option>\n                                    <Select.Option value=\"false\"> InActive </Select.Option>\n                                </Select>\n                            )}\n                        />\n                    </div>\n                    <div className=\"flex justify-end items-center gap-2 \">\n                        <button\n                            onClick={() => {\n                                setValue(\"status\", \"\");\n                                setValue(\"PDBranchId\", '');\n                                setValue(\"PdDepartmentId\", \"\");\n                                setValue(\"PdCompanyId\", \"\");\n                            }}\n                            className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                        {canCreate &&\n                            <Tooltip placement=\"topLeft\"  title='Add Task'>\n                                <button onClick={() => { navigate(\"/admin/task-type/create\") }} className='bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white'>\n                                    <FaPlus />\n                                    <span className='text-[12px] tracking-wide'>Add Task</span>\n                                </button>\n                            </Tooltip>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n                {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                    <thead className=''>\n                        <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                            <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                S.no.\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Name\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Department Name\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                HSNCode\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                fees\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                created At\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                created By\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                Status\n                            </th>\n                            {(canUpdate || canDelete) && <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                Action\n                            </th>}\n                        </tr>\n                    </thead>\n                    {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                            colSpan={10}\n                            className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                            <Loader2 />\n                        </td>\n                    </tr> :\n                        <tbody>\n                            {taskTypeList && taskTypeList?.length > 0 ?\n                                taskTypeList?.map((element, index) => (\n                                    <tr className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151] text-[14px]`}>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            {index + 1 + ((currentPage - 1) * limit)}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.name ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.departmentName ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.HSNCode ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{convertIntoAmount(element?.fees)?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.createdBy ?? \"-\"}</td>\n\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            <span className={`${element?.status ? 'bg-[#E0FFBE] border-green-500' : 'bg-red-200 border-red-500'\n                                                } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}>\n                                                {element?.status ? 'Active' : 'Inactive' ?? \"-\"}\n                                            </span>\n                                        </td>\n                                        {(canUpdate || canDelete) && <td className='whitespace-nowrap border-none p-2'>\n                                            <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                {canUpdate && <Tooltip placement=\"topLeft\"  title='Edit'>\n                                                    <button onClick={() => { navigate(`/admin/task-type/edit/${encrypt(element?._id)}`) }} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                        <FaPenToSquare className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} />\n                                                    </button>\n                                                </Tooltip>}\n                                                {canDelete && <Tooltip placement=\"topLeft\"  title='Delete'>\n                                                    <button onClick={() => handleDelete(element?._id)} className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                        <RiDeleteBin5Line className='text-red-600 hover:text-red-500' size={16} />\n                                                    </button>\n                                                </Tooltip>}\n                                            </span>\n                                        </td>}\n                                    </tr>\n                                ))\n                                : (<tr className=\"bg-white bg-opacity-5 \" >\n                                    <td colSpan={10} className=\"px-6 py-2 whitespace-nowrap font-[600] text-center text-sm text-gray-500\">Record Not Found</td>\n                                </tr>)}\n                        </tbody>}\n                </table>}\n            </div>\n            {taskTypeList?.length > 0 &&\n                <CustomPagination\n                    totalCount={totalTaskTypeCount}\n                    pageSize={limit}\n                    currentPage={currentPage}\n                    onChange={onPaginationChange}\n                />}\n        </GlobalLayout>\n    )\n}\nexport default TaskTypeList"],"names":["register","setValue","formState","errors","control","useForm","companyList","useSelector","state","company","taskTypeList","totalTaskTypeCount","loading","taskType","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","useState","searchText","setSearchText","navigate","useNavigate","dispatch","useDispatch","CompanyId","useWatch","name","defaultValue","BranchId","status","useEffect","userType","companySearch","text","sort","isPagination","filters","join","isFirstRender","setisFirstRender","fetTaskTypeList","reqListData","page","limit","reqPayload","companyId","_id","branchId","getTaskTypeList","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsxs","GlobalLayout","onChange","e","children","_jsx","className","_objectSpread","required","inputClassNameSearch","PDCompanyId","showSearch","filterOption","input","option","String","toLowerCase","includes","value","map","type","fullName","message","Controller","rules","render","_ref","field","Select","inputAntdSelectClassNameFilter","placeholder","Option","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","element","index","_element$name","_element$departmentNa","_element$HSNCode","_convertIntoAmount","_dayjs$format","_element$createdBy","_Inactive","departmentName","HSNCode","convertIntoAmount","fees","dayjs","createdAt","format","createdBy","encrypt","FaPenToSquare","size","id","reqData","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteTaskType","data","Number","error","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","pageSize"],"sourceRoot":""}