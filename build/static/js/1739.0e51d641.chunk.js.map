{"version":3,"file":"static/js/1739.0e51d641.chunk.js","mappings":"qbA82BA,QAv1BA,WACE,MAAM,QAAEA,EAASC,WAAW,OAAEC,GAAQ,SAAEC,IAAaC,EAAAA,EAAAA,MAC/CC,GAAWC,EAAAA,EAAAA,OACX,4BAAEC,EAA2B,qCAAEC,EAAoC,mCAAEC,IAAwCC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,UAC1I,YAAEC,IAAgBH,EAAAA,EAAAA,IAAaC,GAAUA,EAAMG,UAC9CC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IACvCC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAC9D,kBAAEC,IAAsBf,EAAAA,EAAAA,IAAaC,GAAUA,EAAMe,YACpDC,EAAaC,IAAkBX,EAAAA,EAAAA,UAAS,IACxCY,EAAqBC,IAA0Bb,EAAAA,EAAAA,UAAS,KACzD,WAAEc,IAAerB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMqB,SAC9C,mBAAEC,EAAoBC,QAASC,IAAezB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMyB,YAC3EC,GAAYC,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,cAAeC,aAAc,KACnEC,GAAWH,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,aAAcC,aAAc,KACjEE,GAASJ,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,SAAUC,aAAc,KAC3DG,GAAWL,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,WAAYC,aAAc,KAC/DI,GAAQN,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,QAASC,aAAc,KACzDK,GAAYP,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,YAAaC,aAAc,KACjEM,GAAaR,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,aAAcC,aAAc,KACnEO,GAAeT,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,iBACzCS,GAAYV,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,YAAaC,aAAcS,MAAQC,SAAS,EAAG,WACrFC,IAAUb,EAAAA,EAAAA,IAAS,CAAEtC,UAASuC,KAAM,UAAWC,aAAcS,SAC5DG,GAAUC,KAAepC,EAAAA,EAAAA,UAAS,KAOzCqC,EAAAA,EAAAA,WAAU,KAEuB,aAAf,OAAdpC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,WACa,qBAAf,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,WAEhBlD,GACEmD,EAAAA,EAAAA,IAAa,CACXC,KAAM,GACNC,MAAM,EACNC,QAAQ,EACRC,cAAc,EACdC,UAAwC,WAAf,OAAd3C,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACvBlB,EAC6B,aAAf,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACA,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IACF,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB2C,aAI5BxD,GACE0D,EAAAA,EAAAA,IAAW,CACTN,KAAM,GACNC,MAAM,EACNC,QAAQ,EACRC,cAAc,EACdC,UAAwC,aAAf,OAAd3C,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UAAuC,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IAAoB,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB2C,aAG9F1D,EAAS,YAAa8C,MAAQC,SAAS,EAAG,UAC1C/C,EAAS,UAAW8C,QACnB,KACHK,EAAAA,EAAAA,WAAU,KACRU,MACC,CACDrC,EACAE,EACAuB,MAEFE,EAAAA,EAAAA,WAAU,KACR,MAAMW,EAAQC,WAAW,KACvBpC,EAAuBf,IACtB,KAEH,MAAO,KACLoD,aAAaF,KAEd,CAAClD,IAEJ,MAAMqD,GAAuB,WAC3B,MAAO,CACLzC,YAAaA,EACbyB,SAAUA,GACViB,WAAY,CACVZ,KAAM5B,EACNyC,aAAc5B,EACdgB,MAAM,EACNE,eARkCW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GASlCG,WAAY5B,EACZ6B,OAAQ/B,EACRD,SAAUA,EACVK,UAAWA,EACPC,IAAMD,GAAW4B,OAAO,cACxB,GACJzB,QAASA,GACLF,IAAME,IAASyB,OAAO,cACtB,GACJC,UAAWhC,EACXgB,UAC+B,WAAf,OAAd3C,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACZlB,EAC6B,aAAf,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACA,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IACF,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB2C,UACxBiB,SAC+B,aAAf,OAAd5D,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,WACe,WAAf,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,WACa,qBAAf,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACdd,EAC6B,mBAAf,OAAdvB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACA,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IACF,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB4D,SACxBC,cAAe,GACfhC,aAAcA,GAGpB,EACMiC,GAAsBA,KAC1B3E,GACE4E,EAAAA,EAAAA,IAAc,CACZpB,UAC+B,WAAf,OAAd3C,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACZlB,EAC6B,aAAf,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACA,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IACF,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB2C,UACxBiB,SACE,CAAC,QAAS,UAAW,mBAAmBI,SAAuB,OAAdhE,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UAC7Dd,EAC6B,mBAAf,OAAdvB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACA,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IACF,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB4D,SACxB/B,aAAcA,GAA8B,GAC5CoC,WAAY,GACZ1B,KAAM,GACNC,MAAM,EACNC,QAAQ,EACRC,cAAc,EACdwB,UAAU,EACVC,YAAY,MAIZC,GAAoBA,KACxBjF,GACEkF,EAAAA,EAAAA,IAAe,CACbJ,WAAY,GACZtB,UAC+B,WAAf,OAAd3C,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACZlB,EAC6B,aAAf,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACA,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IACF,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB2C,UACxBiB,SAC+B,aAAf,OAAd5D,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,WACe,WAAf,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,WACa,qBAAf,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACdd,EAC6B,mBAAf,OAAdvB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACA,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IACF,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB4D,SACxBrB,KAAM,GACNC,MAAM,EACNC,OAAQ,GACRC,cAAc,MAOdI,GAA0BA,KAC9B3D,GAASmF,EAAAA,EAAAA,IAA6BpB,IAAqB,MAKvDqB,GAAeC,UACnB1B,MA4JI2B,GAAQ,CACZ,CACEC,IAAK,IACLC,OAAOC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,SAAC,oBACpCA,UACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4DAA2DC,SAAA,EAEzC,WAAf,OAAd9E,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,WACa,aAAf,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,WACa,qBAAf,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,aACd0C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACT3D,KAAK,aACLvC,QAASA,EACTmG,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBH,EAAAA,EAAAA,MAACK,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTN,UAAS,wCACTS,YAAY,gBACZC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQZ,UACZc,cACA5B,SAASyB,EAAMG,eACnBd,SAAA,EAEDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAM,GAAEhB,SAAC,kBACb,OAAVjE,QAAU,IAAVA,OAAU,EAAVA,EAAYkF,IAAKC,IAChBjB,EAAAA,EAAAA,MAACK,EAAAA,EAAOS,OAAM,CAACC,MAAc,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAASpD,IAAIkC,SAAA,CAChC,IACO,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASC,SAAU,eAM7BjH,EAAOkH,aACNtB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAChC9F,EAAOkH,WAAWC,cAK7BvB,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACT3D,KAAK,eACLvC,QAASA,EACTmG,OAAQmB,IAAA,IAAAC,EAAA,IAAC,MAAElB,GAAOiB,EAAA,OAChBrB,EAAAA,EAAAA,MAACK,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTN,UAAS,uCACTU,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQZ,UACZc,cACA5B,SAASyB,EAAMG,eAEpBU,QAASA,KACPnH,GACE0D,EAAAA,EAAAA,IAAW,CACTN,KAAM,GACNC,MAAM,EACNC,QAAQ,EACRC,cAAc,EACdC,UAC+B,WAAf,OAAd3C,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACZlB,EAC6B,aAAf,OAAdnB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACA,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IACF,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB2C,UACxBiB,SAAU,CACR,QACA,UACA,mBACAI,SAAuB,OAAdhE,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACvBd,EAC6B,mBAAf,OAAdvB,QAAc,IAAdA,OAAc,EAAdA,EAAgBqC,UACA,OAAdrC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4C,IACF,OAAd5C,QAAc,IAAdA,OAAc,EAAdA,EAAgB4D,aAI5B2C,SAAWT,IACTX,EAAMoB,SAAST,IAEjBR,YAAY,oBAAmBR,SAAA,EAE/BF,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAM,GAAEhB,SAAC,sBACvB7D,GACC2D,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACW,UAAQ,EAAA1B,UACrBF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,MAGmC,QAFhCJ,GAEhBK,EAAAA,EAAAA,IAA6B3F,UAAmB,IAAAsF,OAAA,EAAhDA,EAAkDN,IAC/CC,IACCpB,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAAoBC,MAAc,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAASpD,IAAIkC,SAC5C,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAAS3E,MADe,OAAP2E,QAAO,IAAPA,OAAO,EAAPA,EAASpD,gBAU3CgC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACT3D,KAAK,aACLvC,QAASA,EACTmG,OAAQ0B,IAAA,IAAC,MAAExB,GAAOwB,EAAA,OAChB/B,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACLwB,KAAK,WACLC,YAAU,EACVtB,YAAU,EACVC,aAAcA,CAACC,EAAOC,KAAM,IAAAoB,EAAA,OACpB,OAANpB,QAAM,IAANA,GAAa,QAAPoB,EAANpB,EAAQf,aAAK,IAAAmC,OAAP,EAANA,EAAelB,cAAc5B,SAASyB,EAAMG,gBAE9Cf,UAAU,6CACVS,YAAY,kBACZgB,QAASxC,GACTiD,QAAoB,OAAXpH,QAAW,IAAXA,OAAW,EAAXA,EAAaoG,IAAKC,IAClB,CACLrB,MAAOqB,EAAQC,SACfH,MAAOE,EAAQpD,OAGnBkD,MAAOX,EAAMW,OAAS,GACtBS,SAAWS,GAAQ7B,EAAMoB,SAASS,WAS1CpC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACT3D,KAAK,SACLvC,QAASA,EACTmI,MAAO,CAAC,EACRhC,OAAQiC,IAAA,IAAC,MAAE/B,GAAO+B,EAAA,OAEhBtC,EAAAA,EAAAA,KAACQ,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTyB,KAAK,WACLC,YAAU,EACVhC,UAAU,4CACVS,YAAY,gBACZyB,QAAS,CACP,CAAEpC,MAAO,gBAAiBmB,MAAO,IACjC,CAAEnB,MAAO,UAAWmB,MAAO,WAC3B,CAAEA,MAAO,aAAcnB,MAAO,eAC9B,CAAEmB,MAAO,YAAanB,MAAO,eAE/BmB,MAAOX,EAAMW,OAAS,GACtBS,SAAWS,GAAQ7B,EAAMoB,SAASS,YAK1CpC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACT3D,KAAK,QACLvC,QAASA,EACTmG,OAAQkC,IAAA,IAAC,MAAEhC,GAAOgC,EAAA,OAEhBvC,EAAAA,EAAAA,KAACQ,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTyB,KAAK,WACLC,YAAU,EAEVhC,UAAU,4CACVS,YAAY,mBACZgB,QAASlC,GACT2C,QAA0B,OAAjBxG,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBwF,IAAKrE,IACxB,CACLoE,MAAY,OAALpE,QAAK,IAALA,OAAK,EAALA,EAAOkB,IACd+B,MAAY,OAALjD,QAAK,IAALA,OAAK,EAALA,EAAO0F,aAGlBtB,MAAOX,EAAMW,OAAS,GACtBS,SAAWS,GAAQ7B,EAAMoB,SAASS,YAK1CpC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACT3D,KAAK,WACLvC,QAASA,EACTmG,OAAQoC,IAAA,IAAC,MAAElC,GAAOkC,EAAA,OAEhBzC,EAAAA,EAAAA,KAACQ,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTyB,KAAK,WACLC,YAAU,EACVhC,UAAU,4CACVS,YAAY,mBACZyB,QAAS,CACP,CAAEjB,MAAO,mBAAoBnB,MAAO,oBACpC,CAAEmB,MAAO,iBAAkBnB,MAAO,kBAClC,CAAEmB,MAAO,SAAUnB,MAAO,UAC1B,CAAEmB,MAAO,SAAUnB,MAAO,WAE5BmB,MAAOX,EAAMW,OAAS,GACtBS,SAAWS,GAAQ7B,EAAMoB,SAASS,YAK1CpC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACT3D,KAAK,YACLvC,QAASA,EACTmG,OAAQqC,IAAA,IAAC,MAAEnC,GAAOmC,EAAA,OAChB1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAgB,CACfC,QAAQ,EACRlG,aAAcS,MAAQC,SAAS,EAAG,SAClCyF,KAAM,SACNtC,MAAOA,EACPnG,OAAQA,UAKhB4F,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACT3D,KAAK,UACLvC,QAASA,EACTmG,OAAQyC,IAAA,IAAC,MAAEvC,GAAOuC,EAAA,OAChB9C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAgB,CACfC,QAAQ,EACRlG,aAAcS,MACd0F,KAAM,SACNtC,MAAOA,EACPnG,OAAQA,aAMlB+F,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UACE+C,QAASA,KACP1I,EAAS,aAAc,IACvBA,EAAS,cAAe,IACxBA,EAAS,SAAU,IACnBA,EAAS,aAAc,IACvBA,EAAS,eAAgB,IAEzBA,EAAS,YAAa,IACtBA,EAAS,QAAS,IAClBA,EAAS,WAAY,IACrBA,EAAS,YAAa8C,MAAQC,SAAS,EAAG,UAC1C/C,EAAS,UAAW8C,OACpBwC,MAEFM,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,aAEhCF,EAAAA,EAAAA,KAAA,UACE+C,QAASA,KACPpD,MAEFM,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,qBAO1C,OACEF,EAAAA,EAAAA,KAACgD,EAAAA,EAAY,CAACrB,SArbEsB,IAChB/H,EAAc+H,IAobmB/C,UAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACfF,EAAAA,EAAAA,KAACkD,EAAAA,EAAQ,CACPjD,UAAU,kBACVJ,MAAOA,GAIPsD,iBAAkB,CAAC,GACnBC,WAAYC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OACvBrD,EAAAA,EAAAA,KAACuD,EAAAA,IAAmB,CAClBV,KAAM,GACNW,MAAO,CACLC,MAAO,QACPC,UAAWJ,EAAW,iBAAmB,eACzCK,WAAY,6BAOpBxD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oEAAmEC,SAAA,EAChFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QAAM4D,QAAQ,WAAW3D,UAAU,mCAAkCC,SAAC,oBAGtEF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACLqD,GAAG,WACH3C,MAAO5D,GACPqE,SAxmBgBsB,IAC5B1F,GAAYuG,OAAOb,IACnBnH,EAAegI,OAAO,KAumBV7D,UAAU,mKAAkKC,SAE3K6D,EAAAA,GAAe5C,IAAK0B,IACnB7C,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAAYC,MAAO2B,EAAK3C,SACnC2C,GADiBA,UAO1B1C,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAElDF,EAAAA,EAAAA,KAAA,UACE+C,QAASA,KAzXHnD,WAAa,IAADoE,EAAAC,EAAAC,EAAAC,EAC9B,MAAMC,EAAM,IAAIC,EAAAA,GAAM,CACpBC,YAAa,YACbC,KAAM,OAIFC,GAAyC,OAA3B/J,QAA2B,IAA3BA,GAAkC,QAAPuJ,EAA3BvJ,EAA6BgK,GAAG,UAAE,IAAAT,GAAa,QAAbC,EAAlCD,EAAoCU,mBAAW,IAAAT,OAApB,EAA3BA,EAAiD5C,YAA0B,OAAdjG,QAAc,IAAdA,OAAc,EAAdA,EAAgBoJ,cAAe,eAC1GzF,EAAS,GAAAtD,OAAM0B,IAAMD,GAAW4B,OAAO,cAAa,QAAArD,OAAO0B,IAAME,IAASyB,OAAO,eAEvFsF,EAAIO,YAAY,IAChBP,EAAIzG,KAAK,YAADlC,OAAa+I,GAAe,GAAI,IACxCJ,EAAIO,YAAY,IAChBP,EAAIzG,KAAK,eAADlC,OAAgBsD,GAAa,GAAI,IAEzCqF,EAAIO,YAAY,IAChB,MACMC,QAAgC,OAAfC,EAAAA,QAAe,IAAfA,EAAAA,OAAe,EAAfA,EAAAA,EAAiBnF,6BAA6BpB,IAAqB,KAC1F,IAAK7D,IAAgCmK,EAAU,OAC/C,MAAME,EAAe,OAARF,QAAQ,IAARA,GAAc,QAANV,EAARU,EAAUG,YAAI,IAAAb,GAAM,QAANC,EAAdD,EAAgBc,YAAI,IAAAb,OAAZ,EAARA,EAAsBhD,IAAI,CAAC4D,EAAME,KAAW,IAADC,EACtD,MAAO,CACLD,EAAQ,GACJ,OAAJF,QAAI,IAAJA,GAAiB,QAAbG,EAAJH,EAAMI,mBAAW,IAAAD,OAAb,EAAJA,EAAmB7D,WAAY,MAC/BlE,IAAU,OAAJ4H,QAAI,IAAJA,OAAI,EAAJA,EAAMK,gBAAgBtG,OAAO,eAAiB,MACpD3B,IAAU,OAAJ4H,QAAI,IAAJA,OAAI,EAAJA,EAAMM,aAAavG,OAAO,YAAc,MAC9C3B,IAAU,OAAJ4H,QAAI,IAAJA,OAAI,EAAJA,EAAMO,cAAcxG,OAAO,YAAc,OAC/CyG,EAAAA,EAAAA,IAAoC,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMS,YAAc,OACpDD,EAAAA,EAAAA,IAAoC,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMU,aAAe,OACrDF,EAAAA,EAAAA,IAAoC,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMW,cAAgB,MAClD,OAAJX,QAAI,IAAJA,GAAAA,EAAMlH,OAAS,MAAQ,KACnB,OAAJkH,QAAI,IAAJA,GAAAA,EAAMvG,aAAe,UAAY,aAGrCmH,EAAAA,EAAAA,IAAUvB,EAAK,CACbwB,OAAQ,GACRC,KAAM,CAnBQ,CAAC,QAAS,gBAAiB,kBAAmB,gBAAiB,iBAAkB,eAAgB,gBAAiB,iBAAkB,oBAAqB,WAoBvKf,KAAMA,EACNgB,OAAQ,CAAEC,WAAY,IACtBC,OAAQ,CACNC,YAAa,EACbC,SAAU,GACVC,OAAQ,SACRC,OAAQ,QAEVC,WAAY,CACVC,UAAW,CAAC,IAAK,IAAK,KACtBC,UAAW,CAAC,EAAG,EAAG,GAClBC,UAAW,QAEbC,mBAAoB,CAClBH,UAAW,CAAC,IAAK,IAAK,QAG1BlC,EAAIsC,KAAK,0BAqUKC,IAEF1G,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,kBAEhCF,EAAAA,EAAAA,KAAA,UACE+C,QAASA,KApeDnD,WAAa,IAADgH,EAAAC,EAAAC,EAAAC,EAChC,MAAMC,EAAW,IAAIC,EAAAA,SACfC,EAAYF,EAASG,aAAa,uBAGxCD,EAAUE,QAAU,CAClB,CAAEC,OAAQ,OAAQvH,IAAK,MAAOwH,MAAO,IACrC,CAAED,OAAQ,gBAAiBvH,IAAK,OAAQwH,MAAO,IAC/C,CAAED,OAAQ,OAAQvH,IAAK,iBAAkBwH,MAAO,IAChD,CAAED,OAAQ,gBAAiBvH,IAAK,cAAewH,MAAO,IACtD,CAAED,OAAQ,iBAAkBvH,IAAK,eAAgBwH,MAAO,IACxD,CAAED,OAAQ,eAAgBvH,IAAK,YAAawH,MAAO,IACnD,CAAED,OAAQ,gBAAiBvH,IAAK,aAAcwH,MAAO,IACrD,CAAED,OAAQ,iBAAkBvH,IAAK,cAAewH,MAAO,IACvD,CAAED,OAAQ,oBAAqBvH,IAAK,mBAAoBwH,MAAO,IAC/D,CAAED,OAAQ,SAAUvH,IAAK,SAAUwH,MAAO,KAI5C,MAAM9C,GAAyC,OAA3B/J,QAA2B,IAA3BA,GAAkC,QAAPmM,EAA3BnM,EAA6BgK,GAAG,UAAE,IAAAmC,GAAa,QAAbC,EAAlCD,EAAoClC,mBAAW,IAAAmC,OAApB,EAA3BA,EAAiDxF,YAA0B,OAAdjG,QAAc,IAAdA,OAAc,EAAdA,EAAgBoJ,cAAe,eAC1GzF,EAAS,GAAAtD,OAAM0B,IAAMD,GAAW4B,OAAO,cAAa,QAAArD,OAAO0B,IAAME,IAASyB,OAAO,eAGvFoI,EAAUK,UAAU,EAAG,CAAC,YAAD9L,OAAa+I,KACpC0C,EAAUK,UAAU,EAAG,CAAC,eAAD9L,OAAgBsD,KACvCmI,EAAUK,UAAU,EAAG,CAAC,KAGNL,EAAUM,OAAO,GACzBC,SAAUC,IAClBA,EAAKC,KAAO,CACVC,KAAM,UACNC,QAAS,QACTC,QAAS,CAAEC,KAAM,aAEnBL,EAAKM,KAAO,CAAEC,MAAM,GACpBP,EAAKQ,UAAY,CAAEC,SAAU,SAAUpC,WAAY,UACnD2B,EAAKU,OAAS,CACZC,IAAK,CAAE7E,MAAO,QACd8E,KAAM,CAAE9E,MAAO,QACf+E,OAAQ,CAAE/E,MAAO,QACjBgF,MAAO,CAAEhF,MAAO,WAIpB,MAAMoB,QAAgC,OAAfC,EAAAA,QAAe,IAAfA,EAAAA,OAAe,EAAfA,EAAAA,EAAiBnF,6BAA6BpB,IAAqB,KAC1F,IAAK7D,IAAgCmK,EAAU,OAC/C,MAAM6D,EAAkB,OAAR7D,QAAQ,IAARA,GAAc,QAANkC,EAARlC,EAAUG,YAAI,IAAA+B,GAAM,QAANC,EAAdD,EAAgB9B,YAAI,IAAA+B,OAAZ,EAARA,EAAsB5F,IAAI,CAAC4D,EAAME,KAAW,IAADyD,EACzD,MAAO,CACLC,IAAK1D,EAAQ,EACbxI,MAAU,OAAJsI,QAAI,IAAJA,GAAiB,QAAb2D,EAAJ3D,EAAMI,mBAAW,IAAAuD,OAAb,EAAJA,EAAmBrH,WAAY,IACrC+D,eAAgBjI,IAAU,OAAJ4H,QAAI,IAAJA,OAAI,EAAJA,EAAMK,gBAAgBtG,OAAO,cACnDuG,YAAiB,OAAJN,QAAI,IAAJA,GAAAA,EAAMM,YACflI,IAAU,OAAJ4H,QAAI,IAAJA,OAAI,EAAJA,EAAMM,aAAavG,OAAO,WAChC,IACJwG,aAAkB,OAAJP,QAAI,IAAJA,GAAAA,EAAMO,aAChBnI,IAAU,OAAJ4H,QAAI,IAAJA,OAAI,EAAJA,EAAMO,cAAcxG,OAAO,WACjC,IACJ0G,WAAWD,EAAAA,EAAAA,IAAoC,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMS,WACjDC,YAAYF,EAAAA,EAAAA,IAAoC,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMU,YAClDC,aAAaH,EAAAA,EAAAA,IAAoC,OAAJR,QAAI,IAAJA,OAAI,EAAJA,EAAMW,aACnDkD,iBAAsB,OAAJ7D,QAAI,IAAJA,GAAAA,EAAMlH,OAAS,MAAQ,KACzCA,OAAY,OAAJkH,QAAI,IAAJA,GAAAA,EAAMvG,aAAe,UAAY,YAKtC,OAAPiK,QAAO,IAAPA,GAAAA,EAASI,QAASC,IACJ5B,EAAU6B,OAAOD,GACzBrB,SAAUC,IACZA,EAAKQ,UAAY,CAAEC,SAAU,SAAUpC,WAAY,QACnD2B,EAAKU,OAAS,CACZC,IAAK,CAAE7E,MAAO,QACd8E,KAAM,CAAE9E,MAAO,QACf+E,OAAQ,CAAE/E,MAAO,QACjBgF,MAAO,CAAEhF,MAAO,aAOtB,MAAMwF,EAAU9B,EAAU+B,SAC1B/B,EAAUgC,WAAa,CACrBC,KAAM,CAAEC,IAAK,EAAGC,OAAQ,GACxBC,GAAI,CAAEF,IAAKJ,EAASK,OAAQ,KAI9BrC,EAASuC,KAAKC,cAAcC,KAAMC,IAChC,MAAMC,EAAO,IAAIC,KAAK,CAACF,GAAS,CAC9B9B,KAAM,sEAEFiC,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOC,IAAIC,gBAAgBP,GAChCE,EAAKM,SAAW,kCAChBN,EAAKO,WAqYOC,IAEFpK,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,6BAKtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,UACnEC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,+DAA8DC,SAAA,EAC7EF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kGAAiGC,SAAA,EAC7GF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wDAAuDC,SAAC,WAGtEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uDAAsDC,UAClEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iBAGVF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,oDAAmDC,SAAC,mBAIlEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,qBAGpEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,mBAGpEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,oBAGpEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,UACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,SAAC,4BAE7CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,2BAGpEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,4BAGpEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,uBAOpEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAAC,gBAKjExF,GACCsF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACpCF,EAAAA,EAAAA,KAAA,MACEsK,QAAS,GACTrK,UAAU,2EAA0EC,UAEpFF,EAAAA,EAAAA,KAACuK,EAAAA,EAAO,SAIZvK,EAAAA,EAAAA,KAAA,SAAAE,SACGzF,IAC4B,OAA3BA,QAA2B,IAA3BA,OAA2B,EAA3BA,EAA6BiE,QAAS,EACX,OAA3BjE,QAA2B,IAA3BA,OAA2B,EAA3BA,EAA6B0G,IAAI,CAACC,EAAS6D,KAAK,IAAAuF,EAAA,OAC9CrK,EAAAA,EAAAA,MAAA,MACEF,UAAS,mCAAAxE,OAAqCwJ,EAAQ,IAAM,EAAI,eAAiB,WAAU,gDAC1C/E,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAChE+E,EAAQ,GAAKpJ,EAAc,GAAKyB,MAGnC0C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,UACjEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,SACjCkB,EAAQqJ,cACPzK,EAAAA,EAAAA,KAAA,OACE0K,IAAI,GACJC,IAAG,GAAAlP,OAAKmP,gCAAyC,YAAAnP,OAAW2F,EAAQqJ,cACpExK,UAAU,gEAGZD,EAAAA,EAAAA,KAAA,OACE0K,IAAI,GACJC,IAAG,qBACH1K,UAAU,oEAMlBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gEAA+DC,UACvD,QAAnBsK,EAAApJ,EAAQ+D,mBAAW,IAAAqF,OAAA,EAAnBA,EAAqBnJ,WAAY,OAGpCrB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAChE2K,IAAOzJ,EAAQgE,gBAAgBtG,OAC9B,kBAIJkB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAChEkB,EAAQiE,YACLlI,IAAMiE,EAAQiE,aAAavG,OAAO,sBAClC,OAGNkB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAChEkB,EAAQkE,aACLnI,IAAMiE,EAAQkE,cAAcxG,OAAO,sBACnC,OAGNkB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UAC1DqF,EAAAA,EAAAA,IAAgCnE,EAAQoE,YACvC,OAGJxF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UAC1DqF,EAAAA,EAAAA,IAAgCnE,EAAQqE,eAG3CzF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UAC1DqF,EAAAA,EAAAA,IAAgCnE,EAAQsE,gBAE3C1F,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,SAC1DkB,EAAQvD,OAAS,MAAQ,QAI5BmC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gDAA+CC,UAC3DF,EAAAA,EAAAA,KAAC8K,EAAAA,EAAO,CAACC,UAAU,UAAWC,MAAK,YAAAvP,OAAc2F,EAAQ5C,cAAe0B,UACtEF,EAAAA,EAAAA,KAAA,QACEC,UACE,MACE,OAAQmB,EAAQ5C,cACd,IAAK,UACH,MAAO,gCACT,IAAK,SACH,MAAO,4BACT,IAAK,QACH,MAAO,kCACT,IAAK,MACH,MAAO,8BACT,IAAK,UACH,MAAO,8BACT,IAAK,YACH,MAAO,kCACT,IAAK,aACH,MAAO,kCACT,QACE,MAAO,2BAEZ,EAnBD,GAoBA,yEACD0B,SAEAkB,EAAQ5C,yBAOnBwB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCF,EAAAA,EAAAA,KAAA,MACEsK,QAAS,GACTrK,UAAU,2EAA0EC,SACrF,+BASbF,EAAAA,EAAAA,KAACiL,EAAAA,EAAgB,CACfC,WAAYvQ,EACZ2C,SAAUA,GACVzB,YAAaA,EACb8F,SA1qBoBwJ,IAC1BrP,EAAeqP,UA8qBnB,C","sources":["pages/reportsManager/hrmsReports/attendanceReport/EmployeeAttendanceReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { convertMinutesToHoursAndMinutes, domainName, pazeSizeReport, sortByPropertyAlphabetically } from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { employeeAttendanceReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { timeSlotSearch } from \"../../../timeSlot/timeSlotsFeatures/_timeSlots_reducers\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\nfunction EmployeeAttendanceReport() {\n  const { control, formState: { errors }, setValue } = useForm();\n  const dispatch = useDispatch();\n  const { employeeAttendanceReportist, employeeAttendanceReportFunc_loading, totalemployeeAttendanceReportCount, } = useSelector((state) => state.reports);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { timeSlotsListData } = useSelector((state) => state.timeSlots);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const { departmentListData, loading: depLoading } = useSelector((state) => state.department);\n  const CompanyId = useWatch({ control, name: \"PDCompanyId\", defaultValue: \"\", });\n  const BranchId = useWatch({ control, name: \"PDBranchId\", defaultValue: \"\", });\n  const Status = useWatch({ control, name: \"status\", defaultValue: \"\", });\n  const workType = useWatch({ control, name: \"workType\", defaultValue: \"\", });\n  const shift = useWatch({ control, name: \"shift\", defaultValue: \"\", });\n  const daterange = useWatch({ control, name: \"daterange\", defaultValue: \"\", });\n  const employeeId = useWatch({ control, name: \"employeeId\", defaultValue: [], });\n  const departmentId = useWatch({ control, name: \"departmentId\", });\n  const startDate = useWatch({ control, name: \"startDate\", defaultValue: dayjs().subtract(1, \"month\"), });\n  const endDate = useWatch({ control, name: \"endDate\", defaultValue: dayjs(), });\n  const [pageSize, setPageSize] = useState(10);\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        })\n      );\n    }\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      })\n    )\n    setValue('startDate', dayjs().subtract(1, \"month\"));\n    setValue('endDate', dayjs());\n  }, []);\n  useEffect(() => {\n    fetchattendanceListData();\n  }, [\n    currentPage,\n    debouncedFilterText,\n    pageSize\n  ]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        isPresentDay: Status,\n        sort: true,\n        isPagination: pagination,\n        employeIds: employeeId,\n        shifts: shift,\n        workType: workType,\n        startDate: startDate\n          ? dayjs(startDate).format(\"YYYY-MM-DD\")\n          : '',\n        endDate: endDate\n          ? dayjs(endDate).format(\"YYYY-MM-DD\")\n          : '',\n        dateRange: daterange,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentIds: [],\n        departmentId: departmentId,\n      },\n    };\n  }\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId ? departmentId : '',\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: false,\n        isDirector: false,\n      })\n    )\n  };\n  const handleShiftFilter = () => {\n    dispatch(\n      timeSlotSearch({\n        directorId: \"\",\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        text: \"\",\n        sort: true,\n        status: \"\",\n        isPagination: false,\n      })\n    )\n  };\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const fetchattendanceListData = () => {\n    dispatch(employeeAttendanceReportFunc(requestPayLoadReturn(true)));\n  };\n  const onChange = (e) => {\n    setSearchText(e);\n  }\n  const handleSubmit = async () => {\n    fetchattendanceListData()\n  }\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Employee Attendance\");\n\n    // Define columns FIRST\n    worksheet.columns = [\n      { header: \"S.No\", key: \"sno\", width: 10 },\n      { header: \"Employee Name\", key: \"name\", width: 30 },\n      { header: \"Date\", key: \"attendanceDate\", width: 20 },\n      { header: \"Check-In Time\", key: \"checkInTime\", width: 20 },\n      { header: \"Check-Out Time\", key: \"checkOutTime\", width: 20 },\n      { header: \"Worked Hours\", key: \"workedHRS\", width: 20 },\n      { header: \"Pending Hours\", key: \"pendingHRS\", width: 20 },\n      { header: \"Overtime Hours\", key: \"overtimeHRS\", width: 20 },\n      { header: \"Location Verified\", key: \"locationVerified\", width: 20 },\n      { header: \"Status\", key: \"status\", width: 15 },\n    ];\n\n    // Add header information AFTER defining columns\n    const companyName = employeeAttendanceReportist?.at(0)?.companyData?.fullName || userInfoglobal?.companyName || \"Company Name\";\n    const dateRange = `${dayjs(startDate).format(\"DD-MM-YYYY\")} to ${dayjs(endDate).format(\"DD-MM-YYYY\")}`;\n    \n    // Insert header rows at the top\n    worksheet.insertRow(1, [`Company: ${companyName}`]);\n    worksheet.insertRow(2, [`Date Range: ${dateRange}`]);\n    worksheet.insertRow(3, [\"\"]); // Empty row for spacing\n\n    // Style the header row (now row 4 because we inserted 3 rows above)\n    const headerRow = worksheet.getRow(4);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.employeeAttendanceReportFunc(requestPayLoadReturn(false));\n    if (!employeeAttendanceReportist && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1,\n        name: data?.employeData?.fullName || \"-\",\n        attendanceDate: dayjs(data?.attendanceDate).format(\"DD-MM-YYYY\"),\n        checkInTime: data?.checkInTime\n          ? dayjs(data?.checkInTime).format(\"hh:mm A\")\n          : \"-\",\n        checkOutTime: data?.checkOutTime\n          ? dayjs(data?.checkOutTime).format(\"hh:mm A\")\n          : \"-\",\n        workedHRS: convertMinutesToHoursAndMinutes(data?.workedHRS),\n        pendingHRS: convertMinutesToHoursAndMinutes(data?.pendingHRS),\n        overtimeHRS: convertMinutesToHoursAndMinutes(data?.overtimeHRS),\n        locationVerified: data?.status ? \"Yes\" : \"No\",\n        status: data?.isPresentDay ? \"Present\" : \"Absent\",\n      };\n    });\n\n    // Add data rows starting from row 5\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter - CORRECTED RANGE\n    // The data headers are at row 4, and we need to include all data rows\n    const lastRow = worksheet.rowCount;\n    worksheet.autoFilter = {\n      from: { row: 4, column: 1 }, // A4\n      to: { row: lastRow, column: 10 } // J{lastRow}\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"Employee_Attendance_Report.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: 'landscape',\n      unit: 'pt'\n    });\n    \n    // Add company name and date range at the top\n    const companyName = employeeAttendanceReportist?.at(0)?.companyData?.fullName || userInfoglobal?.companyName || \"Company Name\";\n    const dateRange = `${dayjs(startDate).format(\"DD-MM-YYYY\")} to ${dayjs(endDate).format(\"DD-MM-YYYY\")}`;\n    \n    doc.setFontSize(18);\n    doc.text(`Company: ${companyName}`, 40, 30);\n    doc.setFontSize(14);\n    doc.text(`Date Range: ${dateRange}`, 40, 50);\n    \n    doc.setFontSize(16);\n    const headers = ['S.No.', 'Employee Name', 'Attendance Date', 'Check-In Time', 'Check-Out Time', 'Worked Hours', 'Pending Hours', 'Overtime Hours', 'Location Verified', 'Status'];\n    const response = await reportsServices?.employeeAttendanceReportFunc(requestPayLoadReturn(false));\n    if (!employeeAttendanceReportist && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        data?.employeData?.fullName || 'N/A',\n        dayjs(data?.attendanceDate).format('DD-MM-YYYY') || 'N/A',\n        dayjs(data?.checkInTime).format('HH:mm A') || 'N/A',\n        dayjs(data?.checkOutTime).format('HH:mm A') || 'N/A',\n        convertMinutesToHoursAndMinutes(data?.workedHRS) || 'N/A',\n        convertMinutesToHoursAndMinutes(data?.pendingHRS) || 'N/A',\n        convertMinutesToHoursAndMinutes(data?.overtimeHRS) || 'N/A',\n        data?.status ? 'Yes' : 'No',\n        data?.isPresentDay ? 'Present' : 'Absent'\n      ];\n    });\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: 'middle',\n        halign: 'left',\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: 'bold',\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`Attendance_Report.pdf`);\n  }\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div>\n              <Controller\n                name=\"departmentId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        deptSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\n                            \"admin\",\n                            \"company\",\n                            \"companyDirector\",\n                          ].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"employeeId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    showSearch\n                    filterOption={(input, option) =>\n                      option?.label?.toLowerCase().includes(input.toLowerCase())\n                    }\n                    className=\"inputAntdMultiSelectClassNameFilterReport \"\n                    placeholder=\"Select Employee\"\n                    onFocus={handleEmployeeFocus}\n                    options={employeList?.map((element) => {\n                      return {\n                        label: element.fullName,\n                        value: element._id,\n                      }\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n\n\n                )}\n              />\n\n            </div>\n\n            <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n\n                  <Select\n                    {...field}\n                    mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Select Status\"\n                    options={[\n                      { label: 'Select Status', value: '', },\n                      { label: 'Present', value: 'present', },\n                      { value: 'secondHalf', label: 'Second Half', },\n                      { value: 'firstHalf', label: 'First Half', },\n                    ]}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"shift\"\n                control={control}\n                render={({ field }) => (\n\n                  <Select\n                    {...field}\n                    mode=\"multiple\"\n                    allowClear\n\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Select Time Slot\"\n                    onFocus={handleShiftFilter}\n                    options={timeSlotsListData?.map((shift) => {\n                      return {\n                        value: shift?._id,\n                        label: shift?.shiftName,\n                      };\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"workType\"\n                control={control}\n                render={({ field }) => (\n\n                  <Select\n                    {...field}\n                    mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Select Work Type\"\n                    options={[\n                      { value: \"work_from_office\", label: \"Work From Office\" },\n                      { value: \"work_from_home\", label: \"Work From Home\" },\n                      { value: \"hybrid\", label: \"Hybrid\" },\n                      { value: \"remote\", label: \"Remote\" },\n                    ]}\n                    value={field.value || []} // ensures it's always an array\n                    onChange={(val) => field.onChange(val)} // handle change properly\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"startDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs().subtract(1, \"month\")}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"endDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs()}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"PdCompanyId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"employeeId\", \"\");\n                setValue(\"departmentId\", \"\");\n\n                setValue(\"daterange\", \"\");\n                setValue(\"shift\", \"\");\n                setValue(\"workType\", \"\");\n                setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n                setValue(\"endDate\", dayjs());\n                handleSubmit()\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit()\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n\n\n\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n\n                }}\n              />\n            )}\n          >\n          </Collapse>\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1 justify-between items-center\">\n            <div className=\"flex py-1 items-center gap-2\">\n              <span htmlFor=\"pageSize\" className=\"text-sm font-light text-gray-500\">\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto border-collapse\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[13px] bg-header text-white font-[600] h-[45px]\">\n                <th className=\"border-none px-4 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  <div className=\"flex justify-start items-center space-x-1\">\n                    <span>Profile</span>\n                  </div>\n                </th>\n                <th className=\"border-none px-4 py-3 whitespace-nowrap text-left\">\n                  Employee Name\n                </th>\n\n                <th className=\"border-none px-4 py-3 whitespace-nowrap text-center\">\n                  Attendance Date\n                </th>\n                <th className=\"border-none px-4 py-3 whitespace-nowrap text-center\">\n                  Check-In Time\n                </th>\n                <th className=\"border-none px-4 py-3 whitespace-nowrap text-center\">\n                  Check-Out Time\n                </th>\n                <th className=\"border-none px-4 py-3 whitespace-nowrap text-center\">\n                  <div className=\"flex justify-center gap-1\">Worked Hours (HH:MM)</div>\n                </th>\n                <th className=\"border-none px-4 py-3 whitespace-nowrap text-center\">\n                  Pending Hours (HH:MM)\n                </th>\n                <th className=\"border-none px-4 py-3 whitespace-nowrap text-center\">\n                  Overtime Hours (HH:MM)\n                </th>\n                <th className=\"border-none px-4 py-3 whitespace-nowrap text-center\">Location Verified</th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Created At\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Created By\n                </th> */}\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Status\n                </th>\n              </tr>\n            </thead>\n            {employeeAttendanceReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {employeeAttendanceReportist &&\n                  employeeAttendanceReportist?.length > 0 ? (\n                  employeeAttendanceReportist?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] hover:bg-gray-50 ${index % 2 === 0 ? \"bg-[#f8f9fa]\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap text-center border-none px-4 py-3\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-4 py-3\">\n                        <div className=\"flex justify-center\">\n                          {element.profileImage ? (\n                            <img\n                              alt=\"\"\n                              src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                              className=\"rounded-full min-w-8 min-h-8 w-8 h-8 ring-1 ring-amber-300\"\n                            />\n                          ) : (\n                            <img\n                              alt=\"\"\n                              src={`/images/avatar.jpg`}\n                              className=\"rounded-full min-w-8 min-h-8 w-8 h-8 ring-1 ring-amber-300\"\n                            />\n                          )}\n                        </div>\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-left border-none px-4 py-3 font-medium\">\n                        {element.employeData?.fullName || '-'}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-4 py-3\">\n                        {moment(element.attendanceDate).format(\n                          \"DD-MM-YYYY \"\n                        )}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-4 py-3\">\n                        {element.checkInTime\n                          ? dayjs(element.checkInTime).format(\"DD-MM-YYYY hh:mm A\")\n                          : \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-4 py-3\">\n                        {element.checkOutTime\n                          ? dayjs(element.checkOutTime).format(\"DD-MM-YYYY hh:mm A\")\n                          : \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {convertMinutesToHoursAndMinutes(element.workedHRS) ||\n                          \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {convertMinutesToHoursAndMinutes(element.pendingHRS)}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {convertMinutesToHoursAndMinutes(element.overtimeHRS)}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element.status ? \"Yes\" : \"No\"}\n                      </td>\n                  \n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        <Tooltip placement=\"topLeft\"  title={`status - ${element.isPresentDay}`}>\n                          <span\n                            className={\n                              (() => {\n                                switch (element.isPresentDay) {\n                                  case \"present\":\n                                    return \"bg-[#E0FFBE] border-green-500\";\n                                  case \"absent\":\n                                    return \"bg-red-200 border-red-500\";\n                                  case \"leave\":\n                                    return \"bg-yellow-300 border-yellow-500\";\n                                  case \"off\":\n                                    return \"bg-gray-300 border-gray-500\";\n                                  case \"holiday\":\n                                    return \"bg-blue-200 border-blue-500\";\n                                  case \"firstHalf\":\n                                    return \"bg-orange-200 border-orange-500\";\n                                  case \"secondHalf\":\n                                    return \"bg-purple-200 border-purple-500\";\n                                  default:\n                                    return \"bg-white border-gray-400\";\n                                }\n                              })() +\n                              \" border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px] capitalize\"\n                            }\n                          >\n                            {element.isPresentDay}\n                          </span>\n                        </Tooltip>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n        </div>\n        <CustomPagination\n          totalCount={totalemployeeAttendanceReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default EmployeeAttendanceReport;\n"],"names":["control","formState","errors","setValue","useForm","dispatch","useDispatch","employeeAttendanceReportist","employeeAttendanceReportFunc_loading","totalemployeeAttendanceReportCount","useSelector","state","reports","employeList","employe","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","timeSlotsListData","timeSlots","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","departmentListData","loading","depLoading","department","CompanyId","useWatch","name","defaultValue","BranchId","Status","workType","shift","daterange","employeeId","departmentId","startDate","dayjs","subtract","endDate","pageSize","setPageSize","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","deptSearch","fetchattendanceListData","timer","setTimeout","clearTimeout","requestPayLoadReturn","reqPayload","isPresentDay","arguments","length","undefined","employeIds","shifts","format","dateRange","branchId","departmentIds","handleEmployeeFocus","employeSearch","includes","directorId","isBranch","isDirector","handleShiftFilter","timeSlotSearch","employeeAttendanceReportFunc","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","Option","value","map","element","fullName","PDBranchId","message","_ref2","_sortByPropertyAlphab","onFocus","onChange","disabled","ListLoader","sortByPropertyAlphabetically","_ref3","mode","allowClear","_option$label","options","val","rules","_ref4","_ref5","shiftName","_ref6","_ref7","CustomDatePicker","report","size","_ref8","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref9","isActive","MdKeyboardArrowDown","style","color","transform","transition","htmlFor","id","Number","pazeSizeReport","_employeeAttendanceRe3","_employeeAttendanceRe4","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","companyName","at","companyData","setFontSize","response","reportsServices","body","data","docs","index","_data$employeData2","employeData","attendanceDate","checkInTime","checkOutTime","convertMinutesToHoursAndMinutes","workedHRS","pendingHRS","overtimeHRS","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_employeeAttendanceRe","_employeeAttendanceRe2","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","insertRow","getRow","eachCell","cell","fill","type","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$employeData","sno","locationVerified","forEach","item","addRow","lastRow","rowCount","autoFilter","from","row","column","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","_element$employeData","profileImage","alt","src","process","moment","Tooltip","placement","title","CustomPagination","totalCount","page"],"sourceRoot":""}