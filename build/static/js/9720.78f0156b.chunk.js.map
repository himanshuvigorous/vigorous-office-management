{"version":3,"file":"static/js/9720.78f0156b.chunk.js","mappings":"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","sources":["pages/hr/employeeSalary/employeePayrollModule/PenaltyModal.js","pages/hr/employeeSalary/employeePayrollModule/AllowanceModal.js","pages/hr/employeeSalary/employeePayrollModule/DeductionModal.js","pages/hr/employeeSalary/employeePayrollModule/EmployeePayslip.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { IoClose } from \"react-icons/io5\";\nimport { Controller, useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReactSelect from \"react-select\";\nimport {\n  formButtonClassName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputLabelClassName,\n  inputLabelClassNameReactSelect,\n} from \"../../../../constents/global\";\nimport { getAllowanceList } from \"../Allowance/allowancefeature/_allowanceList_reducers\";\nimport { updatePayrollData } from \"./employeePayRollFeatures/_payroll_reducers\";\nimport { Select, Modal, Button } from \"antd\";\nimport { employeePenaltyTypeSearch } from \"../../../EmployeePenaltie/employeePenaltyFeatures/_employeePenalty_reducers\";\nimport dayjs from \"dayjs\";\nimport Swal from \"sweetalert2\";\n\nconst PenaltyModal = ({ closePenaltyModal, isPenaltyOpen, getPayrollDetailsFunc }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n    setValue,\n    reset,\n    watch ,\n  } = useForm();\n  const modalRef = useRef(null);\n  const dispatch = useDispatch();\n  const { employeePenaltyListData, loading } = useSelector(\n    (state) => state.employeePenalty\n  );\n\n  useEffect(() => {\n    getchPenaltyData();\n  }, []);\n\n  const {\n    fields: penaltyDetails,\n    append: appendPenalty,\n    remove: removePenalty,\n  } = useFieldArray({\n    control,\n    name: \"penaltyDetails\",\n  });\n\n  const getchPenaltyData = () => {\n    let reqData = {\n        text: \"\",\n        sort: true,\n        status: \"Pending\",\n        isPagination: false,\n        directorId: \"\",\n        companyId: isPenaltyOpen?.data?.data?.companyId,\n        branchId: isPenaltyOpen?.data?.data?.branchId,\n        employeId: isPenaltyOpen?.data?.data?.employeId,\n    };\n    dispatch(employeePenaltyTypeSearch(reqData)).then((data) => {\n      if (!data?.error) {\n    reset();\n\n       \n    \n      }\n    });\n  };\n\n\n\n  const handleCreate = (data) => {\n    const payrolldata = isPenaltyOpen?.data?.data;\n    const penaltyMap = isPenaltyOpen?.data?.data?.panalty?.map((penalty) => penalty?.penaltyId);\n    const newPenlatyMap = data?.penaltyDetails?.map((item) => item?.penalty);\n  \n    // Show the SweetAlert with a custom z-index before proceeding\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"After submitting, you cannot change Penalties!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, submit it!',\n      cancelButtonText: 'Cancel',\n      customClass: {\n        popup: 'swal-popup'  // Apply custom class to the popup\n      },\n      zIndex: 2000 // Custom z-index value\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // Proceed with submitting the data if confirmed\n        dispatch(\n          updatePayrollData({\n            _id: payrolldata?._id,\n            companyId: payrolldata?.companyId,\n            branchId: payrolldata?.branchId,\n            employeId: payrolldata?.employeId,\n            startDate: payrolldata?.startDate,\n            endDate: payrolldata?.endDate,\n            allowances: payrolldata?.allowances,\n            deductions: payrolldata?.deductions,\n            penalties: [...penaltyMap, ...newPenlatyMap]\n          })\n        ).then((res) => {\n          if (!res.error) {\n            getPayrollDetailsFunc();\n            closePenaltyModal();\n          }\n        });\n      }\n    });\n  };\n  \n  const { Option } = Select;\n\n  return (\n    <Modal\n      visible={isPenaltyOpen}\n      onCancel={closePenaltyModal}\n      footer={null}\n      title=\"Add Penalty\"\n      width={600}\n       className=\"antmodalclassName\"\n      height={600} >\n      <form autoComplete=\"off\" onSubmit={handleSubmit(handleCreate)}>\n        <div>\n          <div className=\"rounded-t-lg my-2 \">\n            \n           <div className=\"divide-y divide-gray-200 border border-gray-200\">\n           {penaltyDetails.map((item, index) => (\n              <div key={index} className=\" rounded-md my-2 \">\n                <div key={item.id} className=\"\">\n                  <div className=\"px-3 grid  grid-cols-1 gap-4 items-end mb-3\">\n                    <div className=\"flex gap-3\">\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          penalty <span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                          name={`penaltyDetails[${index}].penalty`}\n                          control={control}\n                          rules={{ required: \"penalty is required\" }}\n                          render={({ field }) => (\n                            <Select\n                              {...field}\n                              className={`${inputAntdSelectClassName} ${errors.penaltyDetails?.[index]?.penalty ? '' : 'border-gray-300'}`}\n                              placeholder=\"Select penalty\"\n                              getPopupContainer={(trigger) => trigger.parentNode}\n                              value={field.value}\n                              onChange={(value) => {\n                                field.onChange(value);\n                              }}\n                            >\n                              <Option value=\"\">Select penalty</Option>\n                              {employeePenaltyListData?.map((item) => (\n                                <Option key={item._id} value={item._id}>\n                                  {item.penaltyName} ({dayjs(item.issueDate).format(\"DD-MM-YYYY\")})\n                                </Option>\n                              ))}\n                            </Select>\n                          )}\n                        />\n                        {errors.penaltyDetails?.[index]?.penalty && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.penaltyDetails[index].penalty.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                    \n                    <div className=\"py-2\">\n                      {(\n                        <div className=\"flex justify-end items-center\">\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              removePenalty(item, index);\n                            }}\n                            className=\"text-rose-800 hover:text-rose-900 flex items-center justify-center p-1 rounded-lg\"\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n           </div>\n            <Button\n              type=\"dashed\"\n              className=\"my-2\"\n              onClick={() => appendPenalty({})}\n              block\n              style={{ marginBottom: \"10px\" }}\n            >\n              Add Penalty\n            </Button>\n          </div>\n        </div>\n        <div className=\"flex justify-end items-center p-6 pt-0\">\n          <Button type=\"primary\" htmlType=\"submit\" className=\"mr-2\">\n            Add\n          </Button>\n          <Button onClick={closePenaltyModal} className=\"bg-[#d41c1c]\" type=\"default\">\n            Close\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default PenaltyModal;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { IoClose } from \"react-icons/io5\";\nimport { Controller, useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReactSelect from \"react-select\";\nimport {\n  formButtonClassName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputLabelClassName,\n  inputLabelClassNameReactSelect,\n} from \"../../../../constents/global\";\nimport { getAllowanceList } from \"../Allowance/allowancefeature/_allowanceList_reducers\";\nimport { updatePayrollData } from \"./employeePayRollFeatures/_payroll_reducers\";\nimport { Select, Modal, Button } from \"antd\";\n\nconst AllowanceModal = ({ closeAllowanceModal, isAllowanceOpen, getPayrollDetailsFunc }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n    setValue,\n    reset,\n    watch ,\n  } = useForm();\n  const modalRef = useRef(null);\n  const dispatch = useDispatch();\n  const { allowanceListData } = useSelector((state) => state.allowance);\n\n  useEffect(() => {\n    getchAllowanceData();\n  }, []);\n\n  const {\n    fields: allowanceDetails,\n    append: appendAllowance,\n    remove: removeAllowance,\n  } = useFieldArray({\n    control,\n    name: \"allowanceDetails\",\n  });\n\n  const getchAllowanceData = () => {\n    let reqData = {\n      reqPayload: {\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        directorId: \"\",\n        companyId: isAllowanceOpen?.data?.data?.companyId,\n        branchId: isAllowanceOpen?.data?.data?.branchId,\n      },\n    };\n    dispatch(getAllowanceList(reqData)).then((data) => {\n      if (!data?.error) {\n    reset();\n        isAllowanceOpen?.data?.data?.allowances?.forEach(allowance => {\n          const newAllowance = {\n            allowance: allowance?.allowanceId,\n            isPercentage: allowance?.isPercentage ? \"Yes\" : \"No\",\n            amount: allowance?.value,\n          };\n          appendAllowance(newAllowance);\n        });\n      }\n    });\n  };\n\n  const handleCreate = (data) => {\n    const payrolldata = isAllowanceOpen?.data?.data;\n    dispatch(\n      updatePayrollData({\n        _id: payrolldata?._id,\n        companyId: payrolldata?.companyId,\n        branchId: payrolldata?.branchId,\n        employeId: payrolldata?.employeId,\n        startDate: payrolldata?.startDate,\n        endDate: payrolldata?.endDate,\n        \"allowances\": data?.allowanceDetails?.map((allowance) => ({\n          \"allowanceId\": allowance?.allowance,\n          \"name\": allowanceListData?.find((item) => item?._id === allowance?.allowance)?.name,\n          \"isPercentage\": allowance?.isPercentage === \"Yes\" ? true : false,\n          \"value\": allowance?.amount\n        })),\n        deductions: payrolldata?.deductions,\n        penalties:payrolldata?.panalty ?  payrolldata?.panalty?.map((penalty) => penalty?.penaltyId) : []\n\n      })\n    ).then((res) => {\n      if (!res.error) {\n        getPayrollDetailsFunc();\n        closeAllowanceModal();\n      }\n    });\n  };\n\n  const { Option } = Select;\n\n  return (\n    <Modal\n      visible={isAllowanceOpen}\n      onCancel={closeAllowanceModal}\n      footer={null}\n      title=\"Add Allowance\"\n      width={600}\n       className=\"antmodalclassName\"\n      height={600}\n    >\n      <form autoComplete=\"off\" onSubmit={handleSubmit(handleCreate)}>\n        <div>\n          <div className=\"rounded-t-lg my-2 \">\n            \n           <div className=\"divide-y divide-gray-200 border border-gray-200\">\n           {allowanceDetails.map((item, index) => (\n              <div key={index} className=\" rounded-md my-2 \">\n                <div key={item.id} className=\"\">\n                  <div className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 items-end mb-3\">\n                    <div className=\"flex gap-3\">\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Allowance <span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                          name={`allowanceDetails[${index}].allowance`}\n                          control={control}\n                          rules={{ required: \"allowance is required\" }}\n                          render={({ field }) => (\n                            <Select\n                              {...field}\n                              className={`${inputAntdSelectClassName} ${errors.allowanceDetails?.[index]?.allowance ? '' : 'border-gray-300'}`}\n                              placeholder=\"Select allowance\"\n                              getPopupContainer={(trigger) => trigger.parentNode}\n                              value={field.value}\n                              onChange={(value) => {\n                                field.onChange(value);\n                              }}\n                            >\n                              <Option value=\"\">Select allowance</Option>\n                              {allowanceListData?.map((item) => (\n                                <Option key={item._id} value={item._id}>\n                                  {item.name}\n                                </Option>\n                              ))}\n                            </Select>\n                          )}\n                        />\n                        {errors.allowanceDetails?.[index]?.allowance && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.allowanceDetails[index].allowance.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"w-full\">\n                      <label className={`${inputLabelClassName}`}>\n                        Is Percentage <span className=\"text-red-600\">*</span>\n                      </label>\n                      <Controller\n                        name={`allowanceDetails[${index}].isPercentage`}\n                        control={control}\n                        rules={{ required: \"isPercentage is required\" }}\n                        render={({ field }) => (\n                          <Select\n                            {...field}\n                            className={`${inputAntdSelectClassName} ${errors.allowanceDetails?.[index]?.isPercentage ? '' : 'border-gray-300'}`}\n                            placeholder=\"Select Is Percentage\"\n                            getPopupContainer={(trigger) => trigger.parentNode}\n                            value={field.value}\n                            onChange={(value) => {\n                              field.onChange(value);\n                            }}\n                          >\n                            <Option value=\"\">Select Is Percentage</Option>\n                            <Option value=\"Yes\">Yes</Option>\n                            <Option value=\"No\">No</Option>\n                          </Select>\n                        )}\n                      />\n                      {errors.allowanceDetails?.[index]?.isPercentage && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.allowanceDetails[index].isPercentage.message}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"w-full\">\n                      <label className={`${inputLabelClassName}`}>\n                        {watch(`allowanceDetails[${index}].isPercentage`) === \"Yes\"\n                          ? \"Percentage\"\n                          : \"Amount\"}{\" \"}\n                        <span className=\"text-red-600\">*</span>\n                      </label>\n\n                      <input\n                        type=\"number\"\n                         step=\"0.01\"\n                        {...register(`allowanceDetails[${index}].amount`, {\n                          required: \"Amount is required\",\n                          valueAsNumber: true,\n                          min: watch(`allowanceDetails[${index}].isPercentage`) === \"Yes\" ? 1 : undefined,\n                        })}\n                        className={`${inputClassName} ${errors.allowanceDetails?.[index]?.amount\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          }`}\n                      />\n\n                      {errors.allowanceDetails?.[index]?.amount && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.allowanceDetails[index].amount.message}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"py-2\">\n                      {(\n                        <div className=\"flex justify-end items-center\">\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              removeAllowance(item, index);\n                            }}\n                            className=\"text-rose-800 hover:text-rose-900 flex items-center justify-center p-1 rounded-lg\"\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n           </div>\n            <Button\n              type=\"dashed\"\n              className=\"my-2\"\n              onClick={() => appendAllowance({})}\n              block\n              style={{ marginBottom: \"10px\" }}\n            >\n              Add Allowance\n            </Button>\n          </div>\n        </div>\n        <div className=\"flex justify-end items-center p-6 pt-0\">\n          <Button type=\"primary\" htmlType=\"submit\" className=\"mr-2\">\n            Add\n          </Button>\n          <Button onClick={closeAllowanceModal} className=\"bg-[#d41c1c]\" type=\"default\">\n            Close\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default AllowanceModal;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { IoClose } from \"react-icons/io5\";\nimport { Controller, useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ReactSelect from \"react-select\";\nimport {\n  formButtonClassName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputLabelClassName,\n  inputLabelClassNameReactSelect,\n} from \"../../../../constents/global\";\nimport { getAllowanceList } from \"../Allowance/allowancefeature/_allowanceList_reducers\";\nimport { updatePayrollData } from \"./employeePayRollFeatures/_payroll_reducers\";\nimport { Select, Modal, Button } from \"antd\";\nimport { deductionsListSearch } from \"../Deductions/deductionsfeature/_deductionsList_reducers\";\n\nconst DeductionModal = ({ closeDeductionModal, isDeductionOpen, getPayrollDetailsFunc }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n    setValue,\n    reset,\n    watch ,\n  } = useForm();\n  const modalRef = useRef(null);\n  const dispatch = useDispatch();\n  const { deductionsListData } = useSelector((state) => state.deductions);\n\n  useEffect(() => {\n    getchDeductionsData();\n  }, []);\n\n  const {\n    fields: deductionDetails,\n    append: appendDeduction,\n    remove: removeDeduction,\n  } = useFieldArray({\n    control,\n    name: \"deductionDetails\",\n  });\n\n  const getchDeductionsData = () => {\n    let reqData = { \n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        directorId: \"\",\n        companyId: isDeductionOpen?.data?.data?.companyId,\n        branchId: isDeductionOpen?.data?.data?.branchId,\n    };\n    dispatch(deductionsListSearch(reqData)).then((data) => {\n      if (!data?.error) {\n    reset();\n        isDeductionOpen?.data?.data?.deductions?.forEach(deduction => {\n          const newDeduction = {\n            deduction: deduction?.deductionId,\n            isPercentage: deduction?.isPercentage ? \"Yes\" : \"No\",\n            amount: deduction?.value,\n          };\n          appendDeduction(newDeduction);\n        });\n      }\n    });\n  };\n\n  const handleCreate = (data) => {\n    const payrolldata = isDeductionOpen?.data?.data;\n    dispatch(\n      updatePayrollData({\n        _id: payrolldata?._id,\n        companyId: payrolldata?.companyId,\n        branchId: payrolldata?.branchId,\n        employeId: payrolldata?.employeId,\n        startDate: payrolldata?.startDate,\n        endDate: payrolldata?.endDate,\n        \"allowances\": payrolldata?.allowances,\n        deductions: data?.deductionDetails?.map((deduction) => ({\n          \"deductionId\": deduction?.deduction,\n          \"name\": deductionsListData?.find((item) => item?._id === deduction?.deduction)?.name,\n          \"isPercentage\": deduction?.isPercentage === \"Yes\" ? true : false,\n          \"value\": deduction?.amount\n        })),\n        penalties:payrolldata?.panalty ?  payrolldata?.panalty?.map((penalty) => penalty?.penaltyId) : []\n      })\n    ).then((res) => {\n      if (!res.error) {\n        getPayrollDetailsFunc();\n        closeDeductionModal();\n      }\n    });\n  };\n\n  const { Option } = Select;\n\n  return (\n    <Modal\n      visible={isDeductionOpen}\n      onCancel={closeDeductionModal}\n      footer={null}\n      title=\"Add Deduction\"\n      width={600}\n       className=\"antmodalclassName\"\n      height={600}\n    >\n      <form autoComplete=\"off\" onSubmit={handleSubmit(handleCreate)}>\n        <div>\n          <div className=\"rounded-t-lg my-2 \">\n            \n           <div className=\"divide-y divide-gray-200 border border-gray-200\">\n           {deductionDetails.map((item, index) => (\n              <div key={index} className=\" rounded-md my-2 \">\n                <div key={item.id} className=\"\">\n                  <div className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 items-end mb-3\">\n                    <div className=\"flex gap-3\">\n                    <div className=\"w-full\">\n                            <label className={`${inputLabelClassName}`}>\n                              Deduction <span className=\"text-red-600\">*</span>\n                            </label>\n                            <Controller\n                              name={`deductionDetails[${index}].deduction`}\n                              control={control}\n                              rules={{ required: \"deduction is required\" }}\n                              render={({ field }) => (\n                                <Select\n                                  {...field}\n                                  className={`${inputAntdSelectClassName} ${errors.deductionDetails?.[index]?.deduction ? '' : 'border-gray-300'}`}\n                                  placeholder=\"Select deduction\"\n                                  value={field.value}\n                                  getPopupContainer={(trigger) => trigger.parentNode}\n                                  onChange={(value) => {\n                                    field.onChange(value);\n                                  }}\n                                >\n                                  <Option value=\"\">Select deduction</Option>\n                                  {deductionsListData?.map((item) => (\n                                    <Option key={item._id} value={item._id}>\n                                      {item.name}\n                                    </Option>\n                                  ))}\n                                </Select>\n                              )}\n                            />\n                            {errors.deductionDetails?.[index]?.deduction && (\n                              <p className=\"text-red-500 text-sm\">\n                                {errors.deductionDetails[index].deduction.message}\n                              </p>\n                            )}\n                          </div>\n                    </div>\n                    <div className=\"w-full\">\n                      <label className={`${inputLabelClassName}`}>\n                        Is Percentage <span className=\"text-red-600\">*</span>\n                      </label>\n                      <Controller\n                        name={`deductionDetails[${index}].isPercentage`}\n                        control={control}\n                        rules={{ required: \"isPercentage is required\" }}\n                        render={({ field }) => (\n                          <Select\n                            {...field}\n                            className={`${inputAntdSelectClassName} ${errors.deductionDetails?.[index]?.isPercentage ? '' : 'border-gray-300'}`}\n                            placeholder=\"Select Is Percentage\"\n                            getPopupContainer={(trigger) => trigger.parentNode}\n                            value={field.value}\n                            onChange={(value) => {\n                              field.onChange(value);\n                            }}\n                          >\n                            <Option value=\"\">Select Is Percentage</Option>\n                            <Option value=\"Yes\">Yes</Option>\n                            <Option value=\"No\">No</Option>\n                          </Select>\n                        )}\n                      />\n                      {errors.deductionDetails?.[index]?.isPercentage && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.deductionDetails[index].isPercentage.message}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"w-full\">\n                      <label className={`${inputLabelClassName}`}>\n                        {watch(`deductionDetails[${index}].isPercentage`) === \"Yes\"\n                          ? \"Percentage\"\n                          : \"Amount\"}{\" \"}\n                        <span className=\"text-red-600\">*</span>\n                      </label>\n\n                      <input\n                        type=\"number\"\n                         step=\"0.01\"\n                        {...register(`deductionDetails[${index}].amount`, {\n                          required: \"Amount is required\",\n                          valueAsNumber: true,\n                          min: watch(`deductionDetails[${index}].isPercentage`) === \"Yes\" ? 1 : undefined,\n                        })}\n                        className={`${inputClassName} ${errors.deductionDetails?.[index]?.amount\n                          ? \"border-[1px] \"\n                          : \"border-gray-300\"\n                          }`}\n                      />\n\n                      {errors.deductionDetails?.[index]?.amount && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.deductionDetails[index].amount.message}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"py-2\">\n                      {(\n                        <div className=\"flex justify-end items-center\">\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              removeDeduction(item, index);\n                            }}\n                            className=\"text-rose-800 hover:text-rose-900 flex items-center justify-center p-1 rounded-lg\"\n                          >\n                            <i className=\"fas fa-trash-alt\"></i>\n                          </button>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n           </div>\n            <Button\n              type=\"dashed\"\n              className=\"my-2\"\n              onClick={() => appendDeduction({})}\n              block\n              style={{ marginBottom: \"10px\" }}\n            >\n              Add Deduction\n            </Button>\n          </div>\n        </div>\n        <div className=\"flex justify-end items-center p-6 pt-0\">\n          <Button type=\"primary\" htmlType=\"submit\" className=\"mr-2\">\n            Add\n          </Button>\n          <Button onClick={closeDeductionModal} className=\"bg-[#d41c1c]\" type=\"default\">\n            Close\n          </Button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default DeductionModal;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport GlobalLayout from '../../../../global_layouts/GlobalLayout/GlobalLayout';\nimport AllowanceModal from './AllowanceModal';\nimport DeductionModal from './DeductionModal';\nimport { useParams } from 'react-router-dom';\nimport { getPayrollDetails } from './employeePayRollFeatures/_payroll_reducers';\nimport { decrypt } from '../../../../config/Encryption';\nimport moment from 'moment';\nimport { FaPlus } from 'react-icons/fa';\nimport PenaltyModal from './PenaltyModal';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\nconst EmployeePayslip = () => {\n  const dispatch = useDispatch();\n  const { payslipIdEnc } = useParams();\n  const paySlipId = decrypt(payslipIdEnc);\n\n  useEffect(() => {\n    getPayrollDetailsFunc();\n  }, []);\n\n  const getPayrollDetailsFunc = () => {\n    dispatch(getPayrollDetails({\n      _id: paySlipId\n    }));\n  };\n\n  const printRef = useRef();\n  const { payrollDetailsData } = useSelector((state) => state.payrollReducer);\n  const [isAllowanceOpen, setIsAllowanceOpen] = useState({\n    isOpen: false,\n    data: null,\n  });\n  const openAllowanceModal = (element) => setIsAllowanceOpen({\n    isOpen: true,\n    data: element,\n  });\n  const closeAllowanceModal = () => setIsAllowanceOpen({\n    isOpen: false,\n    data: [],\n  });\n\n  const [isDeductionOpen, setIsDeductionOpen] = useState({\n    isOpen: false,\n    data: null,\n  });\n  const openDeductionModal = (element) => setIsDeductionOpen({\n    isOpen: true,\n    data: element,\n  });\n  const closeDeductionModal = () => setIsDeductionOpen({\n    isOpen: false,\n    data: null,\n  });\n\n  const [isPenaltyOpen, setIsPenaltyOpen] = useState({\n    isOpen: false,\n    data: null,\n  });\n  const openPenaltyModal = (element) => setIsPenaltyOpen({\n    isOpen: true,\n    data: element,\n  });\n  const closePenaltyModal = () => setIsPenaltyOpen({\n    isOpen: false,\n    data: null,\n  });\n\n  const downloadPDF = () => {\n    const input = printRef.current;\n\n    // Convert the div to a canvas\n    html2canvas(input).then((canvas) => {\n      const imgData = canvas.toDataURL(\"image/png\");\n\n      // Create a PDF document\n      const doc = new jsPDF();\n      const imgWidth = 210; // A4 size width\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\n\n      // Add image (the content of the div) to PDF\n      doc.addImage(imgData, 'PNG', 0, 0, imgWidth, imgHeight);\n\n      // Save the PDF\n      doc.save('payslip.pdf');\n    });\n  };\n\n  return (\n    <GlobalLayout>\n      {isAllowanceOpen?.isOpen && <AllowanceModal closeAllowanceModal={closeAllowanceModal} isAllowanceOpen={isAllowanceOpen} getPayrollDetailsFunc={getPayrollDetailsFunc} />}\n      {isDeductionOpen?.isOpen && <DeductionModal closeDeductionModal={closeDeductionModal} isDeductionOpen={isDeductionOpen} getPayrollDetailsFunc={getPayrollDetailsFunc} />}\n      {isPenaltyOpen?.isOpen && <PenaltyModal closePenaltyModal={closePenaltyModal} isPenaltyOpen={isPenaltyOpen} getPayrollDetailsFunc={getPayrollDetailsFunc} />}\n      <div className=\"\">\n        <div ref={printRef} className=\"py-2 bg-gray-100\">\n          <div className=\"bg-white p-4 border-[1px] border-gray-300\">\n            <div className='py-2 border-b-[1px] border-gray-300 lg:flex justify-between items-center'>\n              <div>\n                <h1 className=\"text-xl font-semibold mb-3\">Payslip</h1>\n                <p className=\"text-gray-800\">{moment(payrollDetailsData?.startDate)?.format(\"DD-MM-YYYY\")} to {moment(payrollDetailsData?.endDate)?.format(\"DD-MM-YYYY\")}</p>\n              </div>\n              <div>\n                <div className='flex justify-end items-center'>\n                  <img className='h-14 w-14 rounded-full' alt='' src={payrollDetailsData?.branchData?.profileImage} />\n                </div>\n                <div className=\"mt-4 lg:flex justify-end items-center grid md:grid-cols-3 grid-cols-2 gap-4\">\n                  <button\n                    className=\"bg-blue-500 text-white text-sm py-1 px-3 rounded-lg hover:bg-blue-600\"\n                    onClick={downloadPDF}\n                  >\n                    Download PDF\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className='md:flex justify-between items-center'>\n              <div className=\"mt-2\">\n                <h2 className=\"font-semibold text-lg\">Employee Details</h2>\n                <div className=\"mt-4 text-md space-y-2\">\n                  <p>\n                    <span className=\"font-medium\">Employee Name:</span> {payrollDetailsData?.employeData?.fullName || \"N/A\"}\n                  </p>\n                  <p>\n                    <span className=\"font-medium\">Department:</span> {payrollDetailsData?.departmentData?.name || \"N/A\"}\n                  </p>\n                  <p>\n                    <span className=\"font-medium\">Bank Acc./Cheque No.:</span> {payrollDetailsData?.bankData?.accountNumber || \"N/A\"}\n                  </p>\n                  <p>\n                    <span className=\"font-medium\">ESIC number:</span> {payrollDetailsData?.salaryData?.esicNumber || \"N/A\"}\n                  </p>\n                  <p>\n                    <span className=\"font-medium\">UAN number:</span> {payrollDetailsData?.salaryData?.uanNumber || \"N/A\"}\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"mt-6 gap-4\">\n                <div className=\"p-4 rounded-md border-[1px] border-gray-300\">\n                  {payrollDetailsData ? (\n                    <>\n                      <div className=\"bg-green-100 border-l-4 border-green-600 rounded-xl p-3\">\n                        <h3 className=\"text-3xl font-semibold text-black\">Rs {payrollDetailsData?.netSalary?.toFixed(2) || \"0.00\"}</h3>\n                        <p className=\"text-gray-600\">Employee Net Pay</p>\n                      </div>\n                      <div className=\"mt-2 text-sm text-gray-600 space-y-1\">\n                        <p>Actual Basic Pay: Rs {payrollDetailsData?.basicSalary?.toFixed(2) || \"0.00\"}</p>\n                        <p>Paid Days: {payrollDetailsData?.totalAttendance || \"0.00\"}</p>\n                        <p>LOP Days: {payrollDetailsData?.totalLeave || \"0.00\"}</p>\n                        <p>Updated Basic Pay: Rs {payrollDetailsData?.grossSalary?.toFixed(2) || \"0.00\"}</p>\n                        <p className=\"text-blue-400 text-[11px]\">The payslip is calculated based on the updated basic pay</p>\n                      </div>\n                    </>\n                  ) : (\n                    <div className=\"text-gray-600\">No data available</div>\n                  )}\n                </div>\n\n              </div>\n\n            </div>\n             <div className=\"grid grid-cols-1 md:grid-cols-3 gap-5 mt-8 text-sm\">\n\n               <div>\n                 <div className=\"bg-gray-50 p-2 overflow-x-auto border-[1px] border-gray-200\">\n                  <table className=\"w-full max-w-full overflow-x-auto\">\n                    <thead>\n                       <tr className='text-sm'>\n                         <th className=\"border-b py-2 text-left w-[30%]\">Allowances</th>\n                         <th className=\"border-b py-2 text-right w-[30%]\">Amount</th>\n                        \n                      </tr>\n                    </thead>\n                    <tbody>\n                   \n                      {payrollDetailsData?.allowances && payrollDetailsData?.allowances.length > 0 ? (\n                        payrollDetailsData?.allowances.map((allowance, index) => (\n                          <React.Fragment key={index}>\n                            <tr>\n                              <td className=\"py-2\">{allowance?.name || \"N/A\"}</td>\n                              <td className=\"py-2 text-right\">{allowance?.value || \"N/A\"}</td>\n                            </tr>\n                           \n                          </React.Fragment>\n                        ))\n                      ) : (\n                        <tr className=\"bg-white bg-opacity-5\">\n                          <td\n                            colSpan={2}\n                            className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                          >\n                            Record Not Found\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n\n              <div>\n                <div className=\"bg-gray-50 p-2 overflow-x-auto border-[1px] border-gray-200\">\n                  <table className=\"w-full max-w-full overflow-x-auto\">\n                    <thead>\n                      <tr className='text-sm'>\n                        <th className=\"border-b py-2 text-left w-[30%]\">Deductions</th>\n                        <th className=\"border-b py-2 text-right w-[30%]\">Amount</th>\n                        \n                      </tr>\n                    </thead>\n                    <tbody>\n                      {payrollDetailsData?.deductions && payrollDetailsData?.deductions?.length > 0 ? (\n                        payrollDetailsData?.deductions.map((deductions, index) => (\n                          <React.Fragment key={index}>\n                            <tr>\n                              <td className=\"py-2\">{deductions?.name || \"N/A\"}</td>\n                              <td className=\"py-2 text-right\">{deductions?.value || \"N/A\"}</td>\n                            </tr>\n                           \n                          </React.Fragment>\n                        ))\n                      ) : (\n                        <tr className=\"bg-white bg-opacity-5\">\n                          <td\n                            colSpan={2}\n                            className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                          >\n                            Record Not Found\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n\n                  </table>\n                </div>\n              </div>\n              <div>\n                <div className=\"bg-gray-50 p-2 overflow-x-auto border-[1px] border-gray-200\">\n                  <table className=\"w-full max-w-full overflow-x-auto\">\n                    <thead>\n                      <tr className='text-sm'>\n                        <th className=\"border-b py-2 text-left w-[30%]\">Penalties</th>\n                        <th className=\"border-b py-2 text-right w-[30%]\">Amount</th>\n                        \n                      </tr>\n                    </thead>\n                    <tbody>\n                      {payrollDetailsData?.panalty && payrollDetailsData?.panalty?.length > 0 ? (\n                        payrollDetailsData?.panalty.map((item, index) => (\n                          <React.Fragment key={index}>\n                            <tr>\n                              <td className=\"py-2\">{item?.name || \"N/A\"}</td>\n                              <td className=\"py-2 text-right\">{item?.finalAmount || \"N/A\"}</td>\n                            </tr>\n                          </React.Fragment>\n                        ))\n                      ) : (\n                        <tr className=\"bg-white bg-opacity-5\">\n                          <td\n                            colSpan={2}\n                            className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                          >\n                            Record Not Found\n                          </td>\n                        </tr>\n                      )}\n                    </tbody>\n\n                  </table>\n                </div>\n              </div>\n\n            </div>\n            <div className=\"mt-8 border-[1px] border-gray-300 bg-gray-50 rounded-lg font-semibold text-gray-800 flex justify-between items-center\">\n              <div className=\"flex flex-col justify-between md:w-[80%] md:text-sm text-[11px] px-3\">\n                <span>Total Net Payable</span>\n                <span>Gross Earnings - Total Deductions</span>\n              </div>\n              <div className=\"md:text-md text-sm text-black text-center py-3 px-2 bg-gray-400 md:w-[20%]\">\n                <span>Rs {(payrollDetailsData?.netSalary)?.toFixed(2)}</span>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default EmployeePayslip;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import { useDispatch, useSelector } from \"react-redux\";\n// import GlobalLayout from '../../../../global_layouts/GlobalLayout/GlobalLayout';\n// import AllowanceModal from './AllowanceModal';\n// import DeductionModal from './DeductionModal';\n// import { useParams } from 'react-router-dom';\n// import { getPayrollDetails } from './employeePayRollFeatures/_payroll_reducers';\n// import { decrypt } from '../../../../config/Encryption';\n// import moment from 'moment';\n// import { FaPlus } from 'react-icons/fa';\n// import PenaltyModal from './PenaltyModal';\n\n// const Payslip = () => {\n\n \n//   const dispatch = useDispatch()\n//   const { payslipIdEnc } = useParams()\n//   const paySlipId = decrypt(payslipIdEnc)\n\n//   useEffect(() => {\n//     getPayrollDetailsFunc()\n//   }, [])\n//   const getPayrollDetailsFunc = ()=>{\n//     dispatch(getPayrollDetails({\n//       _id: paySlipId\n//     }))\n//   }\n//   const printRef = useRef();\n//   const { payrollDetailsData } = useSelector((state) => state.payrollReducer);\n//   const [isAllowanceOpen, setIsAllowanceOpen] = useState({\n//     isOpen: false,\n//     data: null,\n//   });\n//   const openAllowanceModal = (element) => setIsAllowanceOpen({\n//     isOpen: true,\n//     data: element,\n//   });\n//   const closeAllowanceModal = () => setIsAllowanceOpen({\n//     isOpen: false,\n//     data: [],\n//   });\n\n\n\n\n//   const [isDeductionOpen, setIsDeductionOpen] = useState({\n//     isOpen: false,\n//     data: null,\n//   });\n//   const openDeductionModal = (element) => setIsDeductionOpen({\n//     isOpen: true,\n//     data: element,\n//   });\n//   const closeDeductionModal = () => setIsDeductionOpen({\n//     isOpen: false,\n//     data: null,\n//   });\n//   const [isPenaltyOpen, setIsPenaltyOpen] = useState({\n//     isOpen: false,\n//     data: null,\n//   });\n//   const openPenaltyModal = (element) => setIsPenaltyOpen({\n//     isOpen: true,\n//     data: element,\n//   });\n//   const closePenaltyModal = () => setIsPenaltyOpen({\n//     isOpen: false,\n//     data: null,\n//   });\n\n\n\n\n\n//   return (\n//     <GlobalLayout>\n//       {isAllowanceOpen?.isOpen && <AllowanceModal closeAllowanceModal={closeAllowanceModal} isAllowanceOpen={isAllowanceOpen}  getPayrollDetailsFunc={getPayrollDetailsFunc} />}\n//       {isDeductionOpen?.isOpen  && <DeductionModal  closeDeductionModal={closeDeductionModal} isDeductionOpen={isDeductionOpen}  getPayrollDetailsFunc={getPayrollDetailsFunc}  />}\n//       {isPenaltyOpen?.isOpen  && <PenaltyModal  closePenaltyModal={closePenaltyModal} isPenaltyOpen={isPenaltyOpen}  getPayrollDetailsFunc={getPayrollDetailsFunc}  />}\n//       <div className=\"\">\n//         <div ref={printRef} className=\"py-2 bg-gray-100\">\n//           <div className=\"bg-white p-4 border-[1px] border-gray-300\">\n\n//             <div className='py-2 border-b-[1px] border-gray-300 lg:flex justify-between items-center'>\n//               <div>\n//                 <h1 className=\"text-xl font-semibold mb-3\">Payslip</h1>\n//                 <p className=\"text-gray-800\">{moment(payrollDetailsData?.startDate)?.format(\"DD-MM-YYYY\")} to {moment(payrollDetailsData?.endDate)?.format(\"DD-MM-YYYY\")}</p>\n//               </div>\n//               <div>\n//                 <div className='flex justify-end items-center'>\n//                   <img className='h-14 w-14 rounded-full' alt='' src={payrollDetailsData?.branchData?.profileImage} />\n//                 </div>\n//                 <div className=\"mt-4 lg:flex justify-end items-center grid md:grid-cols-3 grid-cols-2 gap-4\">\n                  \n//                   <button\n//                     className=\"bg-blue-500 text-white text-sm py-1 px-3 rounded-lg hover:bg-blue-600\"\n//                   >\n//                     Print\n//                   </button>\n//                   <button\n//                     className=\"bg-blue-500 text-white text-sm py-1 px-3 rounded-lg hover:bg-blue-600\"\n//                   >\n//                     download\n//                   </button>\n                 \n//                 </div>\n//               </div>\n//             </div>\n\n//             <div className='md:flex justify-between items-center'>\n\n//               <div className=\"mt-2\">\n//                 <h2 className=\"font-semibold text-lg\">Employee Details</h2>\n//                 <div className=\"mt-4 text-md space-y-2\">\n//                   <p>\n//                     <span className=\"font-medium\">Employee Name:</span> {payrollDetailsData?.employeData?.fullName || \"N/A\"}\n//                   </p>\n//                   <p>\n//                     <span className=\"font-medium\">Department:</span> {payrollDetailsData?.departmentData?.name || \"N/A\"}\n//                   </p>\n//                   <p>\n//                     <span className=\"font-medium\">Bank Acc./Cheque No.:</span> {payrollDetailsData?.bankData?.accountNumber || \"N/A\"}\n//                   </p>\n//                   <p>\n//                     <span className=\"font-medium\">ESIC number:</span> {payrollDetailsData?.salaryData?.esicNumber || \"N/A\"}\n//                   </p>\n//                   <p>\n//                     <span className=\"font-medium\">UAN number:</span> {payrollDetailsData?.salaryData?.uanNumber || \"N/A\"}\n//                   </p>\n//                 </div>\n//               </div>\n\n//               <div className=\"mt-6 gap-4\">\n//                 <div className=\"p-4 rounded-md border-[1px] border-gray-300\">\n//                   {payrollDetailsData ? (\n//                     <>\n//                       <div className=\"bg-green-100 border-l-4 border-green-600 rounded-xl p-3\">\n//                         <h3 className=\"text-3xl font-semibold text-black\">Rs {payrollDetailsData?.netSalary?.toFixed(2) || \"0.00\"}</h3>\n//                         <p className=\"text-gray-600\">Employee Net Pay</p>\n//                       </div>\n//                       <div className=\"mt-2 text-sm text-gray-600 space-y-1\">\n//                         <p>Actual Basic Pay: Rs {payrollDetailsData?.basicSalary?.toFixed(2) || \"0.00\"}</p>\n//                         <p>Paid Days: {payrollDetailsData?.totalAttendance || \"0.00\"}</p>\n//                         <p>LOP Days: {payrollDetailsData?.totalLeave || \"0.00\"}</p>\n//                         <p>Updated Basic Pay: Rs {payrollDetailsData?.grossSalary?.toFixed(2) || \"0.00\"}</p>\n//                         <p className=\"text-blue-400 text-[11px]\">The payslip is calculated based on the updated basic pay</p>\n//                       </div>\n//                     </>\n//                   ) : (\n//                     <div className=\"text-gray-600\">No data available</div>\n//                   )}\n//                 </div>\n\n//               </div>\n\n//             </div>\n\n//             <div className=\"grid grid-cols-1 md:grid-cols-3 gap-5 mt-8 text-sm\">\n\n//               <div>\n//                 <div className=\"bg-gray-50 p-2 overflow-x-auto border-[1px] border-gray-200\">\n//                   <table className=\"w-full max-w-full overflow-x-auto\">\n//                     <thead>\n//                       <tr className='text-sm'>\n//                         <th className=\"border-b py-2 text-left w-[30%]\">Allowances</th>\n//                         <th className=\"border-b py-2 text-right w-[30%]\">Amount</th>\n//                         <th className=\"border-b py-2 flex justify-center items-center\">\n//                           <div onClick={() => openAllowanceModal({\n//                             isOpen: true,\n//                             data: payrollDetailsData,\n//                           })} className='p-1 border-[1px] border-orange-500 cursor-pointer'>\n//                             <FaPlus className='text-red-600' />\n//                           </div>\n//                         </th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n                   \n//                       {payrollDetailsData?.allowances && payrollDetailsData?.allowances.length > 0 ? (\n//                         payrollDetailsData?.allowances.map((allowance, index) => (\n//                           <React.Fragment key={index}>\n//                             <tr>\n//                               <td className=\"py-2\">{allowance?.name || \"N/A\"}</td>\n//                               <td className=\"py-2 text-right\">{allowance?.value || \"N/A\"}</td>\n//                             </tr>\n                           \n//                           </React.Fragment>\n//                         ))\n//                       ) : (\n//                         <tr className=\"bg-white bg-opacity-5\">\n//                           <td\n//                             colSpan={2}\n//                             className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n//                           >\n//                             Record Not Found\n//                           </td>\n//                         </tr>\n//                       )}\n//                     </tbody>\n//                   </table>\n//                 </div>\n//               </div>\n\n//               <div>\n//                 <div className=\"bg-gray-50 p-2 overflow-x-auto border-[1px] border-gray-200\">\n//                   <table className=\"w-full max-w-full overflow-x-auto\">\n//                     <thead>\n//                       <tr className='text-sm'>\n//                         <th className=\"border-b py-2 text-left w-[30%]\">Deductions</th>\n//                         <th className=\"border-b py-2 text-right w-[30%]\">Amount</th>\n//                         <th className=\"border-b py-2 flex justify-center items-center\">\n//                           <div onClick={() =>{\n//                             openDeductionModal({\n//                               isOpen: true,\n//                               data: payrollDetailsData,\n//                             })\n//                           }} className='p-1 border-[1px] border-orange-500 cursor-pointer'>\n//                             <FaPlus className='text-red-600' />\n//                           </div>\n//                         </th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {payrollDetailsData?.deductions && payrollDetailsData?.deductions?.length > 0 ? (\n//                         payrollDetailsData?.deductions.map((deductions, index) => (\n//                           <React.Fragment key={index}>\n//                             <tr>\n//                               <td className=\"py-2\">{deductions?.name || \"N/A\"}</td>\n//                               <td className=\"py-2 text-right\">{deductions?.value || \"N/A\"}</td>\n//                             </tr>\n                           \n//                           </React.Fragment>\n//                         ))\n//                       ) : (\n//                         <tr className=\"bg-white bg-opacity-5\">\n//                           <td\n//                             colSpan={2}\n//                             className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n//                           >\n//                             Record Not Found\n//                           </td>\n//                         </tr>\n//                       )}\n//                     </tbody>\n\n//                   </table>\n//                 </div>\n//               </div>\n//               <div>\n//                 <div className=\"bg-gray-50 p-2 overflow-x-auto border-[1px] border-gray-200\">\n//                   <table className=\"w-full max-w-full overflow-x-auto\">\n//                     <thead>\n//                       <tr className='text-sm'>\n//                         <th className=\"border-b py-2 text-left w-[30%]\">Penalties</th>\n//                         <th className=\"border-b py-2 text-right w-[30%]\">Amount</th>\n//                         <th className=\"border-b py-2 flex justify-center items-center\">\n//                           <div onClick={() =>{\n//                             openPenaltyModal({\n//                               isOpen: true,\n//                               data: payrollDetailsData,\n//                             })\n//                           }} className='p-1 border-[1px] border-orange-500 cursor-pointer'>\n//                             <FaPlus className='text-red-600' />\n//                           </div>\n//                         </th>\n//                       </tr>\n//                     </thead>\n//                     <tbody>\n//                       {payrollDetailsData?.penaltyData && payrollDetailsData?.penaltyData?.length > 0 ? (\n//                         payrollDetailsData?.penaltyData.map((item, index) => (\n//                           <React.Fragment key={index}>\n//                             <tr>\n//                               <td className=\"py-2\">{item?.penaltyName || \"N/A\"}</td>\n//                               <td className=\"py-2 text-right\">{item?.amount || \"N/A\"}</td>\n//                             </tr>\n//                           </React.Fragment>\n//                         ))\n//                       ) : (\n//                         <tr className=\"bg-white bg-opacity-5\">\n//                           <td\n//                             colSpan={2}\n//                             className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n//                           >\n//                             Record Not Found\n//                           </td>\n//                         </tr>\n//                       )}\n//                     </tbody>\n\n//                   </table>\n//                 </div>\n//               </div>\n\n//             </div>\n//             <div className=\"mt-8 border-[1px] border-gray-300 bg-gray-50 rounded-lg font-semibold text-gray-800 flex justify-between items-center\">\n//               <div className=\"flex flex-col justify-between md:w-[80%] md:text-sm text-[11px] px-3\">\n//                 <span>Total Net Payable</span>\n//                 <span>Gross Earnings - Total Deductions</span>\n//               </div>\n//               <div className=\"md:text-md text-sm text-black text-center py-3 px-2 bg-gray-400 md:w-[20%]\">\n//                 <span>Rs {(payrollDetailsData?.netSalary)?.toFixed(2)}</span>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n\n//     </GlobalLayout>\n//   );\n// };\n\n// export default Payslip;\n"],"names":["_ref","closePenaltyModal","isPenaltyOpen","getPayrollDetailsFunc","register","handleSubmit","formState","errors","control","setValue","reset","watch","useForm","dispatch","useRef","useDispatch","employeePenaltyListData","loading","useSelector","state","employeePenalty","useEffect","getchPenaltyData","fields","penaltyDetails","append","appendPenalty","remove","removePenalty","useFieldArray","name","_isPenaltyOpen$data","_isPenaltyOpen$data$d","_isPenaltyOpen$data2","_isPenaltyOpen$data2$","_isPenaltyOpen$data3","_isPenaltyOpen$data3$","reqData","text","sort","status","isPagination","directorId","companyId","data","branchId","employeId","employeePenaltyTypeSearch","then","error","Option","Select","_jsx","Modal","visible","onCancel","footer","title","width","className","height","children","_jsxs","autoComplete","onSubmit","_isPenaltyOpen$data4","_isPenaltyOpen$data5","_isPenaltyOpen$data5$","_isPenaltyOpen$data5$2","_data$penaltyDetails","payrolldata","penaltyMap","panalty","map","penalty","penaltyId","newPenlatyMap","item","Swal","icon","showCancelButton","confirmButtonText","cancelButtonText","customClass","popup","zIndex","result","isConfirmed","updatePayrollData","_id","startDate","endDate","allowances","deductions","penalties","res","index","_errors$penaltyDetail3","_errors$penaltyDetail4","concat","inputLabelClassName","Controller","rules","required","render","_ref2","_errors$penaltyDetail","_errors$penaltyDetail2","field","_objectSpread","inputAntdSelectClassName","placeholder","getPopupContainer","trigger","parentNode","value","onChange","penaltyName","dayjs","issueDate","format","message","type","onClick","id","Button","block","style","marginBottom","htmlType","closeAllowanceModal","isAllowanceOpen","allowanceListData","allowance","getchAllowanceData","allowanceDetails","appendAllowance","removeAllowance","_isAllowanceOpen$data","_isAllowanceOpen$data2","_isAllowanceOpen$data3","_isAllowanceOpen$data4","reqPayload","getAllowanceList","_isAllowanceOpen$data5","_isAllowanceOpen$data6","_isAllowanceOpen$data7","forEach","newAllowance","allowanceId","isPercentage","amount","_isAllowanceOpen$data8","_data$allowanceDetail","_payrolldata$panalty","_allowanceListData$fi","find","_errors$allowanceDeta3","_errors$allowanceDeta4","_errors$allowanceDeta7","_errors$allowanceDeta8","_errors$allowanceDeta9","_errors$allowanceDeta0","_errors$allowanceDeta1","_errors$allowanceDeta10","_errors$allowanceDeta","_errors$allowanceDeta2","_ref3","_errors$allowanceDeta5","_errors$allowanceDeta6","step","valueAsNumber","min","undefined","inputClassName","closeDeductionModal","isDeductionOpen","deductionsListData","getchDeductionsData","deductionDetails","appendDeduction","removeDeduction","_isDeductionOpen$data","_isDeductionOpen$data2","_isDeductionOpen$data3","_isDeductionOpen$data4","deductionsListSearch","_isDeductionOpen$data5","_isDeductionOpen$data6","_isDeductionOpen$data7","deduction","newDeduction","deductionId","_isDeductionOpen$data8","_data$deductionDetail","_deductionsListData$f","_errors$deductionDeta3","_errors$deductionDeta4","_errors$deductionDeta7","_errors$deductionDeta8","_errors$deductionDeta9","_errors$deductionDeta0","_errors$deductionDeta1","_errors$deductionDeta10","_errors$deductionDeta","_errors$deductionDeta2","_errors$deductionDeta5","_errors$deductionDeta6","EmployeePayslip","_moment","_moment2","_payrollDetailsData$b","_payrollDetailsData$e","_payrollDetailsData$d","_payrollDetailsData$b2","_payrollDetailsData$s","_payrollDetailsData$s2","_payrollDetailsData$n","_payrollDetailsData$b3","_payrollDetailsData$g","_payrollDetailsData$d2","_payrollDetailsData$p","_payrollDetailsData$n2","payslipIdEnc","useParams","paySlipId","decrypt","getPayrollDetails","printRef","payrollDetailsData","payrollReducer","setIsAllowanceOpen","useState","isOpen","setIsDeductionOpen","setIsPenaltyOpen","GlobalLayout","AllowanceModal","DeductionModal","PenaltyModal","ref","moment","alt","src","branchData","profileImage","downloadPDF","input","current","html2canvas","canvas","imgData","toDataURL","doc","jsPDF","imgHeight","addImage","save","employeData","fullName","departmentData","bankData","accountNumber","salaryData","esicNumber","uanNumber","_Fragment","netSalary","toFixed","basicSalary","totalAttendance","totalLeave","grossSalary","length","React","colSpan","finalAmount"],"sourceRoot":""}