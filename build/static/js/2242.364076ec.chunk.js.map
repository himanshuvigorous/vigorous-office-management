{"version":3,"file":"static/js/2242.364076ec.chunk.js","mappings":"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","sources":["pages/visitorManagement/client_visit/EmployeeClientVisitorList.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\n\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\"\nimport { domainName, inputAntdSelectClassNameFilter } from \"../../../constents/global\"\nimport { FaEye, FaPlus } from \"react-icons/fa\"\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\n\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport getUserIds from \"../../../constents/getUserIds\";\nimport {  Tooltip } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport moment from \"moment\";\n\nimport { getGeneralVisitorList,  updateGeneralVisitor, updateVisitor, visitorSearch } from \"../visitor/visitorFeatures/_visitor_reducers\";\nimport ClientCheckoutModal, { getCurrentLocation, getFullAddress } from \"./ClientCheckoutModal\";\nimport dayjs from \"dayjs\";\nimport MapWithDate from \"./MapWithDate\";\nimport EmployeeCashbookCreateModalForVisit from \"../../financeManagement/cashbook/EmployeeCashbookCreateModalForVisit\";\nimport { AiOutlineBorderInner } from \"react-icons/ai\";\n\nfunction EmployeeClientVisitorList() {\n\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n    const { setValue, control } = useForm();\n    const {\n        userCompanyId,\n        userBranchId,\n        userType\n    } = getUserIds();\n    const { visitorList, totalVisitorCount, visitorGeneralList, loading } = useSelector(state => state.visitor);\n    const { departmentListData } = useSelector((state) => state.department);\n    const { branchList } = useSelector((state) => state.branch);\n    const userInfoglobal = JSON.parse(\n        localStorage.getItem(`user_info_${domainName}`)\n    );\n    const { employeList } = useSelector((state) => state.employe);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [searchText, setSearchText] = useState(\"\");\n    const [visitorModal, setVisitorModal] = useState({\n        data: null,\n        isOpen: false\n    });\n    const companyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: userCompanyId,\n    });\n    const branchId = useWatch({\n        control,\n        name: \"PDBranchId\",\n        defaultValue: userBranchId,\n    });\n    const departmentId = useWatch({\n        control,\n        name: \"PdDepartmentId\",\n        defaultValue: '',\n    });\n    const employee = useWatch({\n        control,\n        name: \"employee\",\n        defaultValue: '',\n    });\n\n    const category = useWatch({\n        control,\n        name: \"category\",\n        defaultValue: '',\n    });\n    const [visible, setVisible] = useState({\n        isOpen: false,\n        data: null\n    })\n    const [empDetailModalData, setEmpDetailModalData] = useState({});\n    const [empCheckInDetailModalOpen, setEmpCheckinDetailModalOpen] = useState(false);\n    const [checkIn, setCheckIn] = useState('')\n    useEffect(() => {\n        if (userType === \"admin\") {\n            dispatch(companySearch({\n                text: \"\",\n                sort: true,\n                status: true,\n                isPagination: false,\n            }));\n        }\n    }, []);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const limit = 10;\n\n    useEffect(() => {\n        if(userInfoglobal?.userType === \"employee\")  fetchVisitorCatList();\n    }, [currentPage, branchId, employee, departmentId, category, searchText])\n\n    const fetchVisitorCatList = () => {\n        const reqListData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n               companyId: userInfoglobal?.companyId,\n      directorId: '',\n      branchId: userInfoglobal?.branchId,\n               \"employeId\": userInfoglobal?.userType === \"employee\" ? userInfoglobal?._id : null,\n                category: category,\n                departmentId: departmentId,\n                text: searchText,\n                sort: true,\n                status: \"\",\n                isPagination: true,\n\n            }\n        }\n        dispatch(getGeneralVisitorList(reqListData));\n    }\n  \n\n    const handleEmloyeeCehckin = async (vistorData) => {\n        const location = await getCurrentLocation();\n        const address = await getFullAddress(location?.lat, location?.lng);\n        const {\n            date,\n            checkInTime,\n            checkOutTime,\n            timeDurationStart,\n            timeDurationEnd,\n            ...payload\n        } = vistorData;\n        const finalPayload = {\n            ...payload,\n            checkInTime: dayjs(),\n            checkInLocation: {\n                latitude: location?.lat ?? 0,\n                longitude: location.lng ?? 0,\n                address: address ?? \"\",\n            },\n        };\n\n        dispatch(updateGeneralVisitor(finalPayload)).then((data) => {\n            if (!data.error) fetchVisitorCatList()\n        });\n    }\n\n    const handleEmloyeeCehckout = (element) => {\n        setVisitorModal({\n            data: element,\n            isOpen: true\n        })\n    }\n\n\n    const onChange = (e) => {\n\n        setSearchText(e);\n    };\n    const handleEmployeeCheckInModal = (element, checkInOrCheckOut) => {\n        setCheckIn(checkInOrCheckOut)\n        setEmpCheckinDetailModalOpen(true);\n        setEmpDetailModalData(element);\n    };\n     if (userInfoglobal?.userType !== \"employee\") {\n    return (\n      <GlobalLayout>\n        <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n          <p className=\"text-center font-semibold\">\n            You are not an employee. This page is viewable for employees only.\n          </p>\n        </div>\n      </GlobalLayout>\n    );\n  }\n    return (\n        <GlobalLayout onChange={onChange}>\n            <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n                {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                    <thead className=''>\n                        <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                            <th className='border-none p-2 whitespace-nowrap w-[8%]'>\n                                S.no.\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Visitor Name\n                            </th>\n                           \n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Category type\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Mobile Number\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Employees\n                            </th>\n                           \n                            <th className='border-none !w-12 p-2 whitespace-nowrap'>\n                                Reason\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Expected Checkin\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Expected CheckOut\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap w-[20%]'>\n                                Employee Checkin\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Employee Checkout\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                               Cashbook Status\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                KM\n                            </th>\n                             {( canUpdate) && <th className='border-none p-2 whitespace-nowrap w-[8%]'>\n                                Action\n                            </th>}\n                           \n                        </tr>\n                    </thead>\n                    {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                            colSpan={10}\n                            className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                            <Loader2 />\n                        </td>\n                    </tr> :\n                        <tbody>\n                            {visitorGeneralList && visitorGeneralList?.length > 0 ?\n                                visitorGeneralList?.map((element, index) => (\n                                    <tr className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151] text-[14px]`}>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            {index + 1 + ((currentPage - 1) * limit)}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.name ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.category == \"client\" ? \"Client Visit\" : \"General Visit\"}</td>\n                                        <td className=\"whitespace-nowrap border-none p-2\">\n                                            {element?.mobile?.code + \" \" + element?.mobile?.number || '-'}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            <div className={`  `}>\n                                                {element?.employeData?.map((element, index) => {\n                                                    return (\n                                                        element?.fullName\n                                                    )\n                                                }, [])}\n                                            </div>\n\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 !w-12 '>{element?.reason ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.timeDurationStart ? moment(element?.timeDurationStart).format('DD-MM-YYYY hh:mm a') : \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.timeDurationEnd ? moment(element?.timeDurationEnd).format('DD-MM-YYYY hh:mm a') : '-'}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n\n                                            <div className=\"flex justify-center items-center gap-2\">\n                                                {element?.checkInTime ? moment(element?.checkInTime).format('DD-MM-YYYY hh:mm a') : <Tooltip placement=\"topLeft\"  title='Checkin'>\n                                                    <button onClick={() => { handleEmloyeeCehckin(element) }} className=\"px-2 py-1.5 text-xs rounded-md bg-header text-white border border-muted\" type=\"button\">\n                                                        check in\n                                                    </button>\n                                                </Tooltip>}\n                                                {element.checkInTime ?\n                                                    <FaEye\n                                                        onClick={() => handleEmployeeCheckInModal(element, 'checkin')}\n                                                        className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                                        size={14}\n                                                    /> : ''}\n                                            </div>\n                                        </td>\n\n                                        <td className=\"whitespace-nowrap border-none p-2\">\n                                            <div className=\"flex justify-center items-center gap-2\">\n                                                {!element?.checkInTime ? (\n                                                    '-'\n                                                ) : element?.checkOutTime ? (\n                                                    moment(element.checkOutTime).format('DD-MM-YYYY hh:mm a')\n                                                ) : (\n                                                    <Tooltip placement=\"topLeft\"  title=\"Checkout\">\n                                                        <button\n                                                            onClick={() => handleEmloyeeCehckout(element)}\n                                                            className=\"px-2 py-1.5 text-xs rounded-md bg-header text-white border border-muted\"\n                                                            type=\"button\"\n                                                        >\n                                                            Check Out\n                                                        </button>\n                                                    </Tooltip>\n                                                )}\n                                                {element.checkOutTime ?\n                                                    <FaEye\n                                                        onClick={() => handleEmployeeCheckInModal(element, 'checkout')}\n                                                        className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                                        size={14}\n                                                    /> : ''}\n                                            </div>\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            {!element?.cashbookData?._id ?  'Not Claimed' : element?.cashbookData?.status === \"Pending\" ? \"Cashbook Requested\" : element?.cashbookData?.status === \"Approved\" ?   \"Claimed\" :element?.cashbookData?.status === \"Reject\" ?  \"Claim Rejected\" : '-' }\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.kilometer ?? \"-\"}</td>\n                                          {(canDelete || canUpdate) && <td className='whitespace-nowrap border-none p-2'>\n                                            <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                               \n                                                {canUpdate &&\n                                                    <Tooltip placement=\"topLeft\"  title={!element?.cashbookData?._id ?  'Claim Cashbook' : element?.cashbookData?.status === \"Pending\" ? \"Cashbook Requested\"  :  element?.cashbookData?.status === \"Approved\" ?   \"Claimed\" :element?.cashbookData?.status === \"Reject\" ?  \"Claim Rejected\" : '-' }>\n                                                        <button disabled={element?.cashbookData?._id} onClick={() => setVisible({ isOpen: true, data: element })} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <AiOutlineBorderInner className={element?.cashbookData?._id ? ' text-gray-500' :' hover:text-[#337ab7] text-[#3c8dbc]'} size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                    \n                                            </span>\n                                        </td>}\n                                    </tr>\n                                ))\n                                : (<tr className=\"bg-white bg-opacity-5 \" >\n                                    <td colSpan={4} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">Record Not Found</td>\n                                </tr>)}\n                        </tbody>}\n                </table>}\n            </div>\n\n            <EmployeeCashbookCreateModalForVisit visible={visible} onCancel={() => setVisible({ isOpen: false, data: null })} onSuccess={fetchVisitorCatList} />\n            <ClientCheckoutModal setVisitorModal={setVisitorModal} visitorModal={visitorModal} updateList={fetchVisitorCatList} />\n            <MapWithDate empDetailModalData={empDetailModalData} empCheckInDetailModalOpen={empCheckInDetailModalOpen} checkIn={checkIn} setEmpCheckinDetailModalOpen={setEmpCheckinDetailModalOpen} />\n            {visitorGeneralList?.length > 0 &&\n                <CustomPagination\n                    totalCount={totalVisitorCount}\n                    pageSize={limit}\n                    currentPage={currentPage}\n                    onChange={onPaginationChange}\n                />}\n        </GlobalLayout>\n    )\n}\nexport default EmployeeClientVisitorList"],"names":["canCreate","canRead","canUpdate","canDelete","usePermissions","setValue","control","useForm","userCompanyId","userBranchId","userType","getUserIds","visitorList","totalVisitorCount","visitorGeneralList","loading","useSelector","state","visitor","departmentListData","department","branchList","branch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","employeList","employe","dispatch","useNavigate","useDispatch","searchText","setSearchText","useState","visitorModal","setVisitorModal","data","isOpen","branchId","useWatch","name","defaultValue","departmentId","employee","category","visible","setVisible","empDetailModalData","setEmpDetailModalData","empCheckInDetailModalOpen","setEmpCheckinDetailModalOpen","checkIn","setCheckIn","useEffect","companySearch","text","sort","status","isPagination","currentPage","setCurrentPage","fetchVisitorCatList","reqListData","page","limit","reqPayload","companyId","directorId","_id","getGeneralVisitorList","handleEmployeeCheckInModal","element","checkInOrCheckOut","_jsx","GlobalLayout","children","className","_jsxs","onChange","e","colSpan","Loader2","length","map","index","_element$name","_element$mobile","_element$mobile2","_element$employeData","_element$reason","_element$cashbookData","_element$cashbookData2","_element$cashbookData3","_element$cashbookData4","_element$kilometer","_element$cashbookData5","_element$cashbookData6","_element$cashbookData7","_element$cashbookData8","_element$cashbookData9","_element$cashbookData0","mobile","code","number","employeData","fullName","reason","timeDurationStart","moment","format","timeDurationEnd","checkInTime","Tooltip","placement","title","onClick","async","_location$lat","_location$lng","location","getCurrentLocation","address","getFullAddress","lat","lng","date","checkOutTime","vistorData","payload","_objectWithoutProperties","_excluded","finalPayload","_objectSpread","dayjs","checkInLocation","latitude","longitude","updateGeneralVisitor","then","error","handleEmloyeeCehckin","type","FaEye","size","handleEmloyeeCehckout","cashbookData","kilometer","disabled","AiOutlineBorderInner","EmployeeCashbookCreateModalForVisit","onCancel","onSuccess","ClientCheckoutModal","updateList","MapWithDate","CustomPagination","totalCount","pageSize"],"sourceRoot":""}