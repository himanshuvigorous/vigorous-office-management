{"version":3,"file":"static/js/7863.26651853.chunk.js","mappings":"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","sources":["pages/reportsManager/taskReports/runningTaskReports/RunningTaskReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  domainName,\n  inputAntdSelectClassNameFilter,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Select } from \"antd\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { runningTaskReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { Option } from \"antd/es/mentions\";\nimport { designationSearch } from \"../../../designation/designationFeatures/_designation_reducers\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport { clientSearch, getClientList } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { getTaskTypeList, taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch, getClientGroupList } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport * as ExcelJS from 'exceljs';\nimport jsPDF from \"jspdf\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\n\n\nfunction RunningTaskReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { runningTaskReportList, totalrunningTaskCount, runningTaskReportFunc_loading } = useSelector((state) => state.reports);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const { clientGroupList } = useSelector((state) => state.clientGroup);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const pageSize = 10;\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n  const { designationList } = useSelector((state) => state.designation);\n  const { departmentListData } = useSelector((state) => state.department);\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientList } = useSelector((state) => state.client);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n  const workType = useWatch({\n    control,\n    name: \"workType\",\n    defaultValue: \"\",\n  });\n  const shift = useWatch({\n    control,\n    name: \"shift\",\n    defaultValue: \"\",\n  });\n  const daterange = useWatch({\n    control,\n    name: \"daterange\",\n    defaultValue: \"\",\n  });\n  const employeeId = useWatch({\n    control,\n    name: \"employeeId\",\n    defaultValue: \"\",\n  });\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n  });\n  const isTL = useWatch({\n    control,\n    name: \"isTL\",\n  });\n  const isHR = useWatch({\n    control,\n    name: \"isHR\",\n  });\n  const department = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n  });\n  const designation = useWatch({\n    control,\n    name: \"designation\",\n  });\n  const ClientList = useWatch({\n    control,\n    name: \"clientList\",\n    defaultValue: \"\",\n  });\n  const taskType = useWatch({\n    control,\n    name: \"taskType\",\n    defaultValue: \"\",\n  });\n  const groupType = useWatch({\n    control,\n    name: \"groupType\",\n    defaultValue: \"\",\n  });\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  useEffect(() => {\n    if (CompanyId) {\n      setValue(\"PDBranchId\", \"\");\n    }\n  }, [CompanyId]);\n\n  const handleDepartmentChange = (event) => {\n    setValue(\"PDDepartmentId\", event);\n    setValue(\"PDDesignationId\", \"\");\n    dispatch(\n      designationSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        departmentId: event,\n        companyId: CompanyId,\n      })\n    );\n  };\n\n  const handleFocusDepartment = () => {\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: CompanyId,\n        branchId: BranchId,\n      })\n    );\n  };\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  useEffect(() => {\n    fetchRunningTaskList(debouncedFilterText);\n  }, [\n    currentPage,\n    debouncedFilterText,\n    CompanyId,\n    BranchId,\n    searchText,\n    Status,\n    workType,\n    shift,\n    daterange,\n    employeeId,\n    startDate,\n    isTL,\n    isHR,\n    ClientList,\n    department,\n    taskType,\n    groupType,\n  ]);\n\n  const fetchRunningTaskList = (debouncedFilterText) => {\n    let reqData = {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        //     \"companyId\": \"\",\n        // \"directorId\": \"\",\n        // \"branchId\": \"\",\n        // \"departmentId\": \"\",\n        // \"clientId\": \"\",\n        // \"employeId\": \"\",\n        // \"taskTypeId\": \"\",\n        // \"groupId\": \"\",\n        // \"text\": \"\",\n        // \"sort\": true,\n        // \"status\": \"\",\n        // \"isPagination\": true,\n        // \"startDate\": \"\",\n        // \"endDate\": \"\",\n        // \"dateRange\": \"\"\n\n        text: \"\",\n        status: Status,\n        sort: true,\n        isPagination: true,\n        clientId: ClientList,\n        directorId: \"\",\n        departmentId: department,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        groupId: groupType,\n      },\n    };\n    dispatch(runningTaskReportFunc(reqData));\n  };\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId]);\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  useEffect(() => {\n    fetchClientListData();\n  }, []);\n\n  const fetchClientListData = () => {\n    let reqData = {\n\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n\n      directorId: \"\",\n      organizationId: \"\",\n      industryId: \"\",\n      // \"groupId\": \"67767fff396eb5feb6c7ceb6\",\n      text: \"\",\n      sort: true,\n      status: true,\n      isPagination: false,\n\n    };\n    dispatch(clientSearch(reqData));\n  };\n\n  useEffect(() => {\n    fetTaskTypeList();\n  }, [CompanyId, BranchId]);\n\n  const fetTaskTypeList = () => {\n    const reqListData = {\n      page: currentPage,\n      limit: \"\",\n      reqPayload: {\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: \"\",\n        isPagination: false,\n      },\n    };\n    dispatch(taskTypeSearch(reqListData));\n  };\n\n  useEffect(() => {\n    fetchClientGroupList();\n  }, [currentPage, BranchId, CompanyId]);\n\n  const fetchClientGroupList = () => {\n    const reqData = {\n\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n      directorId: \"\",\n      text: \"\",\n      sort: true,\n      status: true,\n      isPagination: false,\n\n    };\n    dispatch(clientGrpSearch(reqData));\n  };\n\n  const CLIENT_TASK_STATUSES = {\n    ASSIGNED: \"Assigned\",\n    ACCEPTED: \"Accepted\",\n    REASSIGN_TO_OTHER: \"reAssign_to_other\",\n    PENDING_AT_CLIENT: \"Pending_at_client\",\n    PENDING_AT_DEPARTMENT: \"Pending_at_department\",\n    PENDING_AT_COLLEAGUE: \"Pending_at_colleague\",\n    PENDING_AT_MANAGER: \"Pending_at_manager\",\n    WORK_IN_PROGRESS: \"Work_in_progress\",\n    PENDING_FOR_APPROVAL: \"Pending_for_approval\",\n    PENDING_FOR_FEE: \"Pending_for_fees\",\n    COMPLETED: \"Completed\",\n    STOP: \"Task_Stop\",\n  };\n\n  const STATUS_STYLES = {\n    [CLIENT_TASK_STATUSES.ASSIGNED]: \"bg-blue-200 border-blue-500\",\n    [CLIENT_TASK_STATUSES.ACCEPTED]: \"bg-green-200 border-green-500\",\n    [CLIENT_TASK_STATUSES.REASSIGN_TO_OTHER]: \"bg-yellow-200 border-yellow-500\",\n    [CLIENT_TASK_STATUSES.PENDING_AT_CLIENT]: \"bg-orange-200 border-orange-500\",\n    [CLIENT_TASK_STATUSES.PENDING_AT_DEPARTMENT]: \"bg-orange-300 border-orange-600\",\n    [CLIENT_TASK_STATUSES.PENDING_AT_COLLEAGUE]: \"bg-orange-400 border-orange-700\",\n    [CLIENT_TASK_STATUSES.PENDING_AT_MANAGER]: \"bg-orange-500 border-orange-800\",\n    [CLIENT_TASK_STATUSES.WORK_IN_PROGRESS]: \"bg-purple-200 border-purple-500\",\n    [CLIENT_TASK_STATUSES.PENDING_FOR_APPROVAL]: \"bg-indigo-200 border-indigo-500\",\n    [CLIENT_TASK_STATUSES.PENDING_FOR_FEE]: \"bg-red-200 border-red-500\",\n    [CLIENT_TASK_STATUSES.COMPLETED]: \"bg-green-300 border-green-600\",\n    [CLIENT_TASK_STATUSES.STOP]: \"bg-gray-300 border-gray-500\",\n  };\n\n  const DEFAULT_STYLE = \"bg-gray-200 border-gray-400\";\n\n  const getStatusStyle = (status) => STATUS_STYLES[status] || DEFAULT_STYLE;\n\n\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet('API Data');\n    const apiData = Array.isArray(runningTaskReportList)\n      ? runningTaskReportList.map((element) => ({\n        taskName: element?.taskName,\n        remarks: element?.remarks,\n        clientName: element?.clientData?.fullName || \"-\",\n        groupName: element?.groupData?.fullName || \"-\",\n        isInvoiceGenerated: element?.isInvoiceGenerated ? \"Yes\" : \"No\",\n        monthName: element?.monthName,\n        monthQuaters: element?.monthQuaters,\n        HSNCode: element?.taskTypeData?.HSNCode || \"-\",\n        type: element?.type,\n        dueDate: element?.dueDate ? dayjs(element.dueDate).format(\"YYYY-MM-DD\") : \"-\",\n        fee: element?.fee || \"-\",\n        financialYear: element?.financialYear || \"-\",\n        isOverDue: element?.isOverDue ? \"YES\" : \"NO\",\n        status: element?.status || \"-\"\n      }))\n      : [];\n\n    worksheet.columns = [\n      { header: 'Task Name', key: 'taskName', width: 50 },\n      { header: 'Remark', key: 'remarks', width: 50 },\n      { header: 'Client Name', key: 'clientName', width: 30 },\n      { header: 'Group name', key: 'groupName', width: 50 },\n      { header: 'isInvoiceGenerated.', key: 'isInvoiceGenerated', width: 50 },\n      { header: 'Month Name', key: 'monthName', width: 50 },\n      { header: 'Month Quaters', key: 'monthQuaters', width: 50 },\n      { header: 'HSN Code', key: 'HSNCode', width: 50 },\n      { header: 'Type', key: 'type', width: 50 },\n      { header: 'Due Date', key: 'dueDate', width: 50 },\n      { header: 'Fees', key: 'fee', width: 50 },\n      { header: 'Financial Year', key: 'financialYear', width: 50 },\n      { header: 'Is Over Due', key: 'isOverDue', width: 50 },\n      { header: 'Status', key: 'status', width: 50 },\n    ];\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: 'pattern',\n        pattern: 'solid',\n        fgColor: { argb: 'FFB6D7A8' }, // Light green\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: 'middle', horizontal: 'center' };\n      cell.border = {\n        top: { style: 'thin' },\n        left: { style: 'thin' },\n        bottom: { style: 'thin' },\n        right: { style: 'thin' },\n      };\n    });\n\n    worksheet.autoFilter = {\n      from: 'A1',\n      to: 'I1',\n    };\n\n\n    apiData?.forEach(item => {\n      worksheet?.addRow(item);\n    });\n\n\n    workbook.xlsx.writeBuffer().then(buffer => {\n      const blob = new Blob([buffer], {\n        type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n      });\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(blob);\n      link.download = 'Running_task_Report.xlsx';\n      link.click();\n    });\n  };\n\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <div className=\"grid grid-cols-1 justify-between items-center space-y-1.5\">\n            <div className=\"grid 2xl:grid-cols-7 xl:grid-cols-5 lg:grid-cols-4 md:grid-cols-4 sm:grid-cols-3 grid-cols-1 gap-2 flex-wrap text-[14px] rounded-md\">\n              {userInfoglobal?.userType === \"admin\" && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDCompanyId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                          }`}\n                        placeholder=\"Select Company\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                      >\n                        <Select.Option value=\"\">Select Company</Select.Option>\n                        {companyList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDCompanyId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDCompanyId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n              {(userInfoglobal?.userType === \"admin\" ||\n                userInfoglobal?.userType === \"company\" ||\n                userInfoglobal?.userType === \"companyDirector\") && (\n                  <div className=\"\">\n                    <Controller\n                      name=\"PDBranchId\"\n                      control={control}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                            }`}\n                          placeholder=\"Select Branch\"\n                          showSearch\n                          filterOption={(input, option) =>\n                            String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                        >\n                          <Select.Option value=\"\">Select Branch</Select.Option>\n                          {branchList?.map((element) => (\n                            <Select.Option value={element?._id}>\n                              {\" \"}\n                              {element?.fullName}{\" \"}\n                            </Select.Option>\n                          ))}\n                        </Select>\n                      )}\n                    />\n                    {errors.PDBranchId && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.PDBranchId.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n              <div className=\"\">\n                <Controller\n                  name=\"PDDepartmentId\"\n                  control={control}\n                  rules={{ required: \"Department is required\" }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${errors.PDDepartmentId\n                        ? \"border-[1px] \"\n                        : \"border-gray-300\"\n                        }`}\n                      onChange={(value) => {\n                        field.onChange(value);\n                        handleDepartmentChange(value);\n                      }}\n                      onFocus={handleFocusDepartment}\n                      placeholder=\"Select Department\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Option value=\"\">Select Department</Option>\n                      {departmentListData?.map((element) => (\n                        <Option key={element?._id} value={element?._id}>\n                          {element?.name}\n                        </Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.employeeId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.employeeId.message}\n                  </p>\n                )}\n              </div>\n              <div className=\"\">\n                <Controller\n                  name=\"clientList\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select client\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Select.Option value=\"\">Select Client </Select.Option>\n                      {clientList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.fullName}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>\n              <div className=\"\">\n                <Controller\n                  name=\"taskType\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select Task Type\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Select.Option value=\"\">Select Task Type </Select.Option>\n                      {taskTypeList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.name}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>\n              <div className=\"\">\n                <Controller\n                  name=\"groupType\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select Group Type\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())}\n                    >\n                      <Select.Option value=\"\">Select Group Type </Select.Option>\n                      {clientGroupList?.map((element) => (\n                        <Select.Option value={element?._id}>\n                          {\" \"}\n                          {element?.fullName}{\" \"}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>\n              <div>\n                <Controller\n                  name=\"status\"\n                  control={control}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={`${inputAntdSelectClassNameFilter} ${errors.shift ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                      placeholder=\"Select Status\"\n                    >\n                      <Select.Option value=\"\">Select Status</Select.Option>\n                      {[\"Assigned\", \"Accepted\", \"reAssign_to_other\", \"Pending_at_client\", \"Pending_at_department\", \"Pending_at_colleague\", \"Pending_at_manager\", \"Work_in_progress\", \"Pending_for_approval\", \"Pending_for_fees\", \"Completed\", \"Task_Stop\"]?.map((type) => (\n                        <Select.Option key={type} value={type}>\n                          {type}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-end items-center gap-1.5\">\n              <button\n                onClick={() => {\n                  setValue(\"PdCompanyId\", \"\");\n                  setValue(\"PDBranchId\", \"\");\n                  setValue(\"PDDepartmentId\", \"\");\n                  setValue(\"clientList\", \"\");\n                  setValue(\"taskType\", \"\");\n                  setValue(\"groupType\", \"\");\n                  setValue(\"status\", \"\");\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Task Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Remarks</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Client Name</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Group name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  <div className=\"flex gap-1\">Invoice Generated</div>\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Month Name</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Month Quaters</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">HSN Code</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Type</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Due Date</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Fees</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Financial Year</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Is Over Due</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Created At</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Created By</th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">Status</th>\n              </tr>\n            </thead>\n            {runningTaskReportFunc_loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {runningTaskReportList &&\n                  runningTaskReportList?.length > 0 ? (\n                  runningTaskReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {index + 1}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.taskName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.remarks || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.clientData?.fullName || \"-\"}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.officeEmail || \"-\"}\n                    </td> */}\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.groupData?.fullName || \"-\"}\n                      </td>\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.departmentData?.name || \"-\"}\n                    </td> */}\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.designationData?.name || \"-\"}\n                    </td> */}\n                      {/* <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                      {element?.designationData?.roleKey || \"-\"}\n                    </td> */}\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.isInvoiceGenerated ? \"Yes\" : \"No\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.monthName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.monthQuaters || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.taskTypeData?.HSNCode || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.type || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {dayjs(element?.dueDate).format(\"DD-MM-YYYY hh:mm a\") || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.fee || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.financialYear || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.isOverDue ? 'YES' : \"NO\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') ?? '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        {element?.createdBy || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none px-2 py-3\">\n                        <span\n                          className={`${getStatusStyle(element?.status)} border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                        >\n                          {element?.status || \"Unknown\"}\n                        </span>\n\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>\n        <CustomPagination\n          totalCount={totalrunningTaskCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default RunningTaskReport;"],"names":["control","formState","errors","setValue","useForm","dispatch","useNavigate","useDispatch","runningTaskReportList","totalrunningTaskCount","runningTaskReportFunc_loading","useSelector","state","reports","employeList","employe","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","clientGroupList","clientGroup","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","companyList","company","branchList","branch","designationList","designation","departmentListData","department","taskTypeList","taskType","clientList","client","CompanyId","useWatch","name","defaultValue","BranchId","Status","workType","shift","daterange","employeeId","startDate","isTL","isHR","ClientList","groupType","useEffect","timer","setTimeout","clearTimeout","handleFocusDepartment","deptSearch","text","sort","status","isPagination","companyId","branchId","fetchRunningTaskList","reqData","pageSize","reqPayload","clientId","directorId","departmentId","userType","_id","groupId","runningTaskReportFunc","branchSearch","companySearch","fetchClientListData","organizationId","industryId","clientSearch","fetTaskTypeList","reqListData","page","limit","taskTypeSearch","fetchClientGroupList","clientGrpSearch","CLIENT_TASK_STATUSES","STATUS_STYLES","_jsx","GlobalLayout","onChange","e","children","_jsxs","className","Controller","render","_ref","field","Select","_objectSpread","inputAntdSelectClassNameFilter","PDPlan","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","element","fullName","PDCompanyId","message","_ref2","PDBranchId","rules","required","_ref3","PDDepartmentId","event","designationSearch","onFocus","_ref4","_ref5","_ref6","_ref7","_ref8","type","onClick","async","workbook","ExcelJS","worksheet","addWorksheet","apiData","Array","isArray","_element$clientData","_element$groupData","_element$taskTypeData","taskName","remarks","clientName","clientData","groupName","groupData","isInvoiceGenerated","monthName","monthQuaters","HSNCode","taskTypeData","dueDate","dayjs","format","fee","financialYear","isOverDue","columns","header","key","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","horizontal","border","top","style","left","bottom","right","autoFilter","from","to","forEach","item","addRow","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","length","index","_element$clientData2","_element$groupData2","_element$taskTypeData2","_dayjs$format","createdAt","createdBy","CustomPagination","totalCount"],"sourceRoot":""}