{"version":3,"file":"static/js/7800.d00be36c.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/client_index_report/ClientIndexReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { clientIndexReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport {\n  clientSearch,\n  getClientList,\n} from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\n\nfunction ClientIndexReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n\n  const [departmentData, setDepartmentData] = useState({})\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const {\n    clientIndexReportList,\n    clientIndexReportFunc_loading,\n    totalClientIndexCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const { clientList, totalEmployeCount, loading } = useSelector(\n    (state) => state.client\n  );\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList } = useSelector((state) => state.clientGroup);\n  //  const { clientList } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n        organizationId: PDOrganizationType,\n        organizationIds: [],\n        departmentId: department,\n        departmentIds: [],\n        industryId: PDindustrytype,\n        industryIds: [],\n        groupId: groupName,\n        groupIds: [],\n\n\n      },\n    };\n  };\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(clientIndexReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [clientModalOpen, setClientModalOpen] = useState(false);\n\n  const handleClientModal = (element) => {\n    setDepartmentData(element)\n    setClientModalOpen(true);\n    let reqData = {\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? CompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      branchId:\n        userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\"\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n\n      departmentId: element?._id,\n      isPagination: false,\n    };\n    dispatch(clientSearch(reqData));\n  };\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Clie\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Group Name\", key: \"groupName\", width: 30 },\n\n      { header: \"Client Name\", key: \"clientName\", width: 30 },\n      { header: \"Email\", key: \"email\", width: 30 },\n      { header: \"Mobile\", key: \"mobile\", width: 30 },\n      { header: \"Created At\", key: \"createdAt\", width: 25 },\n      { header: \"Created By\", key: \"createdBy\", width: 25 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    // const response = await reportsServices?.clientIndexReportFunc(\n    //   requestPayLoadReturn(false)\n    // );\n\n\n    if (!clientList && !clientList) return;\n    const apiData = clientList?.map((data, index) => {\n      return {\n        sno: index + 1,\n        groupName: data?.groupName || '-',\n        clientName: data?.fullName || \"-\",\n        email: data?.email || \"N/A\",\n        mobile: (data?.mobile?.code + \" \" + data?.mobile?.number) || \"N/A\",\n        createdAt: data?.createdAt\n          ? dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm A\")\n          : \"-\",\n        createdBy: data?.createdBy || \"-\",\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"ClientIndexReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n\n    doc.text(`Department - ${departmentData?.name}`, 40, 40);\n    doc.text(`${departmentData?.email ?? \"\"} ${(departmentData?.email && departmentData?.mobile?.number && departmentData?.mobile?.code) ? '/' : ''} ${(departmentData?.mobile?.code || '') + (departmentData?.mobile?.number || '')}`, 40, 60);\n\n    const headers = [\n      \"S.No.\",\n      \"Group Name\",\n      \"Client Name\",\n      \"Email\",\n      \"Mobile\",\n      \"Created At\",\n      \"Created By\",\n\n    ];\n    const response = await reportsServices?.clientIndexReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!clientList && !response) return;\n    const body = clientList?.map((data, index) => {\n      return [\n        index + 1,\n        data?.groupName || 'N/A',\n        data?.fullName || \"N/A\",\n        data?.email || \"N/A\",\n        (data?.mobile?.code + \" \" + data?.mobile?.number) || \"N/A\",\n        dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm\") || \"N/A\",\n        data?.createdBy || \"N/A\",\n      ];\n    });\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`ClientIndexReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] sm:flex justify-between items-center space-y-1\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            {/* <Controller\n              control={control}\n              name=\"PDOrganizationType\"\n              rules={{ required: \"Organization is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={\"\"}\n                  className={`inputAntdSelectClassNameFilterReport `}\n                  showSearch\n                  onFocus={() => handleFocusOrgType()}\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">\n                    Select Organization Type\n                  </Select.Option>\n                  {orgSearchloading ? (\n                    <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>\n                  ) : (\n                    orgTypeList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.name}\n                      </Select.Option>\n                    ))\n                  )}\n                </Select>\n              )}\n            />\n\n            <Controller\n              control={control}\n              name=\"PDindustrytype\"\n              rules={{ required: \"Industry type is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={\"\"}\n                  onFocus={() => {\n                    handleFocusIndustry();\n                  }}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                  className={`inputAntdSelectClassNameFilterReport `}\n                >\n                  <Select.Option value=\"\"> Select Industry Type</Select.Option>\n                  {indusSearchloading ? (\n                    <Select.Option disabled>\n                      <Loader />\n                    </Select.Option>\n                  ) : (\n                    industryListData?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.name}\n                      </Select.Option>\n                    ))\n                  )}\n                </Select>\n              )}\n            />\n\n            <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    placeholder=\"Select Status\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    {[\n                      { label: \"Active\", value: \"true\" },\n                      { label: \"InActive\", value: \"false\" },\n                    ]?.map((array) => {\n                      return (\n                        <Select.Option value={array?.value}>\n                          {array?.label}\n                        </Select.Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              />\n            </div>\n\n            <Controller\n              name=\"department\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className={`inputAntdSelectClassNameFilterReport`}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                  onFocus={() => {\n                    dispatch(\n                      deptSearch({\n                        text: \"\",\n                        sort: true,\n                        status: true,\n                        isPagination: false,\n                        companyId:\n                          userInfoglobal?.userType === \"admin\"\n                            ? CompanyId\n                            : userInfoglobal?.userType === \"company\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.companyId,\n                        branchId: [\n                          \"admin\",\n                          \"company\",\n                          \"companyDirector\",\n                        ].includes(userInfoglobal?.userType)\n                          ? BranchId\n                          : userInfoglobal?.userType === \"companyBranch\"\n                          ? userInfoglobal?._id\n                          : userInfoglobal?.branchId,\n                      })\n                    );\n                  }}\n                  onChange={(value) => {\n                    field.onChange(value);\n                  }}\n                  placeholder=\"Select Department\"\n                >\n                  <Select.Option value=\"\">Select Department</Select.Option>\n                  {depLoading ? (\n                    <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>\n                  ) : (\n                    sortByPropertyAlphabetically(departmentListData)?.map(\n                      (element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.name}\n                        </Select.Option>\n                      )\n                    )\n                  )}\n                </Select>\n              )}\n            />\n\n            <Controller\n              name=\"groupName\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className=\"inputAntdSelectClassNameFilterReport\"\n                  options={[\n                    { label: \"Select Group Type\", value: \"\" },\n                    ...(Array.isArray(clientGroupList)\n                      ? clientGroupList.map((el) => ({\n                          label: `${el?.fullName} (${el?.groupName})`,\n                          value: el?._id,\n                        }))\n                      : []),\n                  ]}\n                  placeholder=\"Select Group Type\"\n                  onFocus={handleFocusClientGrp}\n                  classNamePrefix=\"react-select\"\n                  isSearchable\n                  onChange={(value) => {\n                    field.onChange(value);\n                  }}\n                  value={field?.value}\n                />\n              )}\n            /> */}\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"PDOrganizationType\", \"\");\n                setValue(\"PDindustrytype\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"groupName\", \"\");\n\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 flex justify-between items-center pt-1\">\n            <div className=\"flex items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            {/* <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div> */}\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Department\n                </th>\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th> */}\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Created At\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Created By\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Clients\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th> */}\n              </tr>\n            </thead>\n            {clientIndexReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {clientIndexReportList && clientIndexReportList?.length > 0 ? (\n                  clientIndexReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.name}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.email || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.mobile?.code || \"-\"}{\" \"}\n                        {element?.mobile?.number || \"-\"}\n                      </td> */}\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.createdBy}\n                      </td>\n                      <td className=\"tableData \">\n                        {(\n                          <div className=\"flex justify-center items-center gap-1\">\n                            <span>{element?.clientCount}</span>\n                            <span className=\"flex justify-center items-center cursor-pointer\">\n                              <FaEye\n                                onClick={() => handleClientModal(element)}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              />\n                            </span>\n                          </div>\n                        ) || \"-\"}\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n          <Modal\n            className=\"antmodalclassName !w-[60%] !h-[50%]\"\n            title={`Department / ${departmentData?.name} `}\n\n            open={clientModalOpen}\n            onCancel={() => setClientModalOpen(false)}\n            footer={null}\n          >\n            <div>\n              {departmentData?.email ?? \"\"} {(departmentData?.email && departmentData?.mobile?.number && departmentData?.mobile?.code) ? '/' : ''} {(departmentData?.mobile?.code || '') + (departmentData?.mobile?.number || '')}\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n            <div className=\"w-full overflow-auto\">\n              <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n                <thead>\n                  <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                    <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                      S.No.\n                    </th>\n\n                    <th className=\"border-none p-2 whitespace-nowrap \">\n                      Group Name\n                    </th>\n\n                    <th className=\"border-none p-2 whitespace-nowrap \">\n                      Client Name\n                    </th>\n\n                    <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                    <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th>\n\n                    <th className=\"border-none p-2 whitespace-nowrap \">\n                      Created At\n                    </th>\n                    <th className=\"border-none p-2 whitespace-nowrap \">\n                      Created By\n                    </th>\n                  </tr>\n                </thead>\n                {clientIndexReportFunc_loading ? (\n                  <tr className=\"bg-white bg-opacity-5 \">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      <Loader2 />\n                    </td>\n                  </tr>\n                ) : (\n                  <tbody>\n                    {clientList && clientList?.length > 0 ? (\n                      clientList?.map((element, index) => (\n                        <tr\n                          className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                            } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                        >\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {index + 1}\n                          </td>\n\n                          {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n                          <td className=\"w-[150px]  border-none p-2\">\n                            {element?.groupName}\n                          </td>\n\n                          <td className=\" w-[150px]  border-none p-2\">\n                            {element?.fullName}\n                          </td>\n\n                          <td className=\" w-[140px]  border-none p-2\">\n                            {element?.email || \"-\"}\n                          </td>\n\n                          <td className=\" w-[150px]  border-none p-2\">\n                            {element?.mobile?.code || \"-\"}{\" \"}\n                            {element?.mobile?.number || \"-\"}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {dayjs(element?.createdAt).format(\n                              \"DD-MM-YYYY hh:mm a\"\n                            )}\n                          </td>\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.createdBy}\n                          </td>\n                          {/* <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                        <div onClick={()=>{handleClientModal(element)}} className=\"flex justify-center items-center rounded-md h-10 w-10 border-2 border-cyan-500\">\n                          {element?.departmentData?.length || 0}\n                        </div>\n                      </td> */}\n                        </tr>\n                      ))\n                    ) : (\n                      <tr className=\"bg-white bg-opacity-5\">\n                        <td\n                          colSpan={15}\n                          className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                        >\n                          Record Not Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                )}\n              </table>\n            </div>\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={totalClientIndexCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default ClientIndexReport;\n"],"names":["_departmentData$email2","_departmentData$mobil5","_departmentData$mobil6","_departmentData$mobil7","_departmentData$mobil8","control","formState","errors","setValue","watch","useForm","departmentData","setDepartmentData","useState","pageSize","setPageSize","dispatch","useDispatch","clientIndexReportList","clientIndexReportFunc_loading","totalClientIndexCount","useSelector","state","reports","departmentListData","loading","depLoading","department","clientList","totalEmployeCount","client","taskTypeList","taskType","clientGroupList","clientGroup","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","PDOrganizationType","PDindustrytype","groupName","useEffect","timer","setTimeout","clearTimeout","generateFinancialYears","financialYears","year","push","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","status","organizationId","organizationIds","departmentId","departmentIds","industryId","industryIds","groupId","groupIds","fetchClientServiceTaskReport","clientIndexReportFunc","clientModalOpen","setClientModalOpen","branchSearch","dayjs","subtract","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","element","fullName","PDBranchId","message","onClick","GlobalLayout","onChange","e","Collapse","defaultActiveKey","expandIcon","_ref2","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","htmlFor","id","Number","pazeSizeReport","colSpan","Loader2","index","createdAt","format","createdBy","clientCount","FaEye","reqData","clientSearch","handleClientModal","Modal","title","open","onCancel","footer","email","mobile","number","code","_departmentData$email","_departmentData$mobil","_departmentData$mobil2","_departmentData$mobil3","_departmentData$mobil4","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","body","data","_data$mobile3","_data$mobile4","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","type","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$mobile","_data$mobile2","sno","clientName","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","_element$mobile","_element$mobile2","CustomPagination","totalCount","page"],"sourceRoot":""}