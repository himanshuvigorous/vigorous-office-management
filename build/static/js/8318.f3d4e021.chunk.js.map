{"version":3,"file":"static/js/8318.f3d4e021.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/client_statement_report/ClientStatementReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertIntoAmount,\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, DatePicker, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { clientStatementReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { encrypt } from \"../../../../config/Encryption\";\n\nfunction ClientStatementReport() {\n  const { RangePicker } = DatePicker;\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const { ledgerId } = useParams()\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const {\n    clientStatementReportList,\n    clientStatementReportFunc_loading,\n    clientStatementCount,\n  } = useSelector((state) => state.reports);\n\n\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n  const navigate = useNavigate();\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList } = useSelector((state) => state.clientGroup);\n  const { clientList } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  // const openingBalance = useMemo(() => {\n  //   if (\n  //     clientStatementReportList?.allTransactions &&\n  //     clientStatementReportList.allTransactions.length > 0\n  //   ) {\n  //     return clientStatementReportList.allTransactions[0].previousBalance;\n  //   }\n  //   return undefined;\n  // }, [clientStatementReportList]);\n  const [formattedData, setFormattedData] = useState(0)\n\n  const formatDataFunction = (data) => {\n\n    let mapOutput = []\n\n    data?.allTransactions?.forEach((element, index) => {\n\n      const output = {\n        key: '',\n        entryDate: element?.createdAt ? dayjs(element?.createdAt).format('DD-MM-YYYY') : '-',\n        valueDate: element?.createdAt ? dayjs(element?.createdAt).format('DD-MM-YYYY') : '-',\n        particulars: (element?.type == 'invoice' ? 'invoice Generated' : element?.naration) || \"-\",\n        refNo: (element?.typeOf == 'invoice' ? (element?.refNumber) : (element?.typeOf == 'receipt' ? `Receipt ${element?.refNumber}` : '')) || element?.refNumber,\n        debit: element?.debit_credit == 'debit' ? element?.amount : 0,\n        credit: element?.debit_credit == 'credit' ? element?.amount : 0,\n        balance: element?.currentBalance || 0,\n        typeOf: element?.typeOf || '',\n        _id: element?._id || '',\n        invoicePDFPath: `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.PDFPath}`\n      }\n\n      mapOutput.push(output)\n    })\n\n\n    mapOutput?.push({\n      key: 'totalBalance',\n      entryDate: '',\n      valueDate: '',\n      particulars: 'Total Balance',\n      refNo: '',\n\n      debit: data?.summary?.totalDebit,\n      credit: data?.summary?.totalCredit,\n      balance: data?.summary?.closingBalance,\n    })\n\n    return mapOutput;\n  }\n\n\n\n  useEffect(() => {\n    setFormattedData(formatDataFunction(clientStatementReportList))\n  }, [clientStatementReportList])\n\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      \"_id\": ledgerId,\n      startDate: time?.length > 0 ? dayjs(time[0]).format('YYYY-MM-DD') : '',\n      endDate: time?.length > 0 ? dayjs(time[1]).format('YYYY-MM-DD') : '',\n\n\n    };\n  };\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(clientStatementReportFunc(requestPayLoadReturn(true)));\n  };\n\n\n  const time = useWatch({\n    control,\n    name: \"time\",\n    defaultValue: [],\n  });\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", '');\n    setValue(\"endDate\", '');\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Client Statement\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Entry Date\", key: \"entryDate\", width: 25 },\n      { header: \"Value Date\", key: \"valueDate\", width: 25 },\n\n      { header: \"Particulars\", key: \"particulars\", width: 30 },\n      { header: \"Ref No.\", key: \"refNo\", width: 20 },\n      { header: \"Debit\", key: \"debit\", width: 15 },\n      { header: \"Credit\", key: \"credit\", width: 15 },\n      { header: \"Balance\", key: \"balance\", width: 20 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.clientStatementReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!clientStatementReportList?.allTransactions) return;\n\n\n    const apiData = formatDataFunction(response?.data)?.map((data, index) => {\n\n\n      return {\n        sno: index + 1,\n        entryDate: data?.entryDate,\n        valueDate: data?.valueDate,\n        particulars: data?.particulars,\n        refNo: data?.refNo,\n        debit: data?.debit ? Number(data?.debit).toFixed(2) : 0,\n        credit: data?.credit ? Number(data?.credit).toFixed(2) : 0,\n        balance: data?.balance,\n      };\n    });\n\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"G1\",\n    };\n\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type:\n          \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"ClientLedgerStatement.xlsx\";\n      link.click();\n    });\n  };\n\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n\n    doc.setFontSize(16);\n    doc.text(\"Client Statement Report\", 40, 30);\n\n    const headers = [\n      \"S.No.\",\n      \"Entry Date\",\n      \"Value Date\",\n      \"Particulars\",\n      \"Ref No.\",\n      \"Debit\",\n      \"Credit\",\n      \"Balance\",\n    ];\n\n    const response = await reportsServices?.clientStatementReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!clientStatementReportList?.allTransactions) return;\n\n\n\n    const body = formatDataFunction(response?.data)?.map((data, index) => {\n\n      return [\n        index + 1,\n        data?.entryDate,\n        data?.valueDate,\n        data?.particulars,\n        data?.refNo,\n        data?.debit ? Number(data?.debit).toFixed(2) : 0,\n        data?.credit ? Number(data?.credit).toFixed(2) : 0,\n        data?.balance,\n      ];\n    });\n\n    autoTable(doc, {\n      startY: 50,\n      head: [headers],\n      body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 6,\n        fontSize: 9,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n\n    doc.save(\"ClientLedgerStatement.pdf\");\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec]\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n\n\n            <Controller\n              name=\"time\"\n              control={control}\n              render={({ field }) => (\n                <RangePicker\n                  {...field}\n                  value={field.value}\n                  onChange={(value) => field.onChange(value)}\n                  format=\"YYYY-MM-DD\"\n                  // onOk={onOk}\n                  getPopupContainer={() => document.body} // important: avoids layout issues\n                  popupClassName=\"vertical-range-calendar\"\n                  className=\"custom-range-picker\"\n\n                />\n              )}\n            />\n\n\n\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue('time', '')\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 flex justify-end items-center\">\n            {/* <div className=\"flex items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div> */}\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Entry Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Value Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">particulars</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\tRef no.</th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Debit\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Credit\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Balance\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th> */}\n              </tr>\n            </thead>\n            {clientStatementReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {formattedData &&\n                  formattedData?.length > 0 ? (\n                  formattedData?.map((element, index) => {\n\n                    return <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.entryDate}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.valueDate}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.typeOf == \"invoice\" ? \"Invoice Raised\" : element?.particulars}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        <div className=\"text-blue-500 cursor-pointer underline\"\n                          onClick={() => {\n                            if (element?.typeOf === \"invoice\") {\n                              navigate(\n                                `/admin/viewInvoice?invoiceId=${encrypt(element?._id)}&type=invoice&downloadPdfPath=${element?.invoicePDFPath ? encrypt(element?.invoicePDFPath) : ''\n                                }`\n                              );\n                            } else if (element?.typeOf === \"receipt\") {\n                              navigate(\n                                `/admin/viewInvoice?invoiceId=${encrypt(element?._id)}&type=receipt&downloadPdfPath=${element?.invoicePDFPath ? encrypt(element?.invoicePDFPath) : ''\n                                }`\n                              );\n                            }\n                          }}\n                        >\n                          {element?.refNo}\n\n                        </div>\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {convertIntoAmount(element?.debit)}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {convertIntoAmount(element?.credit)}\n                      </td>\n                      <td className=\"tableData \">\n                        {convertIntoAmount(element?.balance)}\n                      </td>\n                    </tr>\n                  })\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n\n        </div>\n        {/* <CustomPagination\n          totalCount={clientStatementCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        /> */}\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default ClientStatementReport;\n"],"names":["RangePicker","DatePicker","control","formState","errors","setValue","watch","useForm","ledgerId","useParams","pageSize","setPageSize","useState","dispatch","useDispatch","clientStatementReportList","clientStatementReportFunc_loading","clientStatementCount","useSelector","state","reports","departmentListData","loading","depLoading","department","navigate","useNavigate","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","clientGroup","clientList","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","useEffect","timer","setTimeout","clearTimeout","formattedData","setFormattedData","formatDataFunction","data","_data$allTransactions","_data$summary","_data$summary2","_data$summary3","mapOutput","allTransactions","forEach","element","index","output","key","entryDate","createdAt","dayjs","format","valueDate","particulars","type","naration","refNo","typeOf","refNumber","debit","debit_credit","amount","credit","balance","currentBalance","_id","invoicePDFPath","process","PDFPath","push","summary","totalDebit","totalCredit","closingBalance","requestPayLoadReturn","startDate","time","length","endDate","fetchClientServiceTaskReport","clientStatementReportFunc","userType","branchSearch","text","sort","status","isPagination","companyId","handleSubmit","async","items","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","_objectSpread","value","onChange","getPopupContainer","document","body","popupClassName","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref2","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","_formatDataFunction2","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","map","Number","toFixed","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_formatDataFunction","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","sno","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","encrypt","convertIntoAmount"],"sourceRoot":""}