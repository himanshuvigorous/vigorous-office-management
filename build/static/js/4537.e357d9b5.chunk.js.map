{"version":3,"file":"static/js/4537.e357d9b5.chunk.js","mappings":"8TAqVA,QA/TA,WACE,MAAM,SAAEA,EAAQ,QAAEC,EAAO,SAAEC,EAAUC,WAAW,OAAEC,KAAaC,EAAAA,EAAAA,OACzD,cAAEC,EAAa,aAAEC,EAAY,SAAEC,EAAQ,cAAEC,IAAkBC,EAAAA,EAAAA,KAE3DC,IADWC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,QACX,wBAAEC,EAAuB,yBAAEC,EAAwB,gBAAEC,IAAoBC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,cACrGC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IAEvCC,EAAiBC,KAAKC,MAC1BC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAE7BC,EAAaC,IAAkBT,EAAAA,EAAAA,UAAS,GAYzCU,IANYC,EAAAA,EAAAA,IAAS,CACzBhC,UACAiC,KAAM,cACNC,aAAc7B,KAGD2B,EAAAA,EAAAA,IAAS,CACtBhC,UACAiC,KAAM,SACNC,aAAc,OAKhBC,EAAAA,EAAAA,WAAU,KACwB,cAAf,OAAdb,QAAc,IAAdA,OAAc,EAAdA,EAAgBf,WAAyC,OAAde,QAAc,IAAdA,GAAAA,EAAgBc,KAC9DC,KAEC,CAACR,EAAaV,EAAYY,IAE7B,MAAMM,EAA8BA,KAElC,MAAMC,EAAO,CACXT,YAAaA,EACbU,SAZU,GAaVC,QAAS,CACPC,WAAY,GACZC,UAAWrC,GAAiB,GAC5BsC,SAAUrC,GAAgB,GAC1BsC,UAAWpC,EACX,KAAQW,EACR,MAAQ,EACR,OAAUY,EACV,cAAgB,EAChBc,KAAM,gBAGVnC,GAASoC,EAAAA,EAAAA,IAA2BR,MAsCtCH,EAAAA,EAAAA,WAAU,KACS,UAAb5B,GACFG,GACEqC,EAAAA,EAAAA,IAAc,CACZC,KAAM,GACNC,MAAM,EACNlB,QAAQ,EACRmB,cAAc,MAInB,IACH,MAAOC,EAAWC,IAAgB/B,EAAAA,EAAAA,WAAS,IACpCgC,EAAkBC,IAAuBjC,EAAAA,EAAAA,UAAS,MASnDkC,EAAaA,KACjBH,GAAa,GACbE,EAAoB,OAyCtB,MAAiC,cAAf,OAAdhC,QAAc,IAAdA,OAAc,EAAdA,EAAgBf,WAEhBiD,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACXF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,8CAA6CD,UAC1DF,EAAAA,EAAAA,KAAA,KAAGG,UAAU,4BAA2BD,SAAC,4EAQ/CE,EAAAA,EAAAA,MAACH,EAAAA,EAAY,CAACI,SAhBEC,IAEhB1C,EAAc0C,IAcmBJ,SAAA,EAG/BF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,GAAED,UACfE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gEAA+DD,SAAA,EAC5EF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,8BAA6BD,UAG1CF,EAAAA,EAAAA,KAACO,EAAAA,GAAU,CACT9B,KAAK,SACLjC,QAASA,EACTgE,MAAO,CAAC,EACRC,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBN,EAAAA,EAAAA,MAACQ,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTR,UAAS,SAAAhC,OAAW2C,EAAAA,GAA8B,KAAA3C,OAAIxB,EAAO4B,OAAS,gBAAkB,mBAExFwC,YAAY,gBACZC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQjB,UAAUmB,cAAcC,SAASJ,EAAMG,eACvDnB,SAAA,EAEDF,EAAAA,EAAAA,KAACY,EAAAA,EAAOW,OAAM,CAACC,MAAM,GAAEtB,SAAC,mBACxBF,EAAAA,EAAAA,KAACY,EAAAA,EAAOW,OAAM,CAACC,MAAM,WAAUtB,SAAE,cACjCF,EAAAA,EAAAA,KAACY,EAAAA,EAAOW,OAAM,CAACC,MAAM,WAAUtB,SAAE,cACjCF,EAAAA,EAAAA,KAACY,EAAAA,EAAOW,OAAM,CAACC,MAAM,YAAWtB,SAAE,eAClCF,EAAAA,EAAAA,KAACY,EAAAA,EAAOW,OAAM,CAACC,MAAM,YAAWtB,SAAE,wBAK1CF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,gCAA+BD,UAC5CF,EAAAA,EAAAA,KAAA,UACEyB,QAASA,KACPhF,EAAS,SAAU,IACnBA,EAAS,aAAc,IACvBA,EAAS,iBAAkB,IAC3BA,EAAS,cAAe,KAE1B0D,UAAU,sFAAqFD,UAE/FF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,cAAaD,SAAC,oBAatCE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,SAAQD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,sDAAqDD,UAClEE,EAAAA,EAAAA,MAAA,SAAOD,UAAU,+CAA8CD,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,SAAAE,UACEE,EAAAA,EAAAA,MAAA,MAAID,UAAU,oGAAmGD,SAAA,EAC/GF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,gCAA+BD,SAAC,WAC9CF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAC,WACtCF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAC,mBACtCF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAC,iBACtCF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAC,gBAEtCF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAC,eACtCF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAC,eACtCF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAC,yBACtCF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAC,gBAIzC3C,GAAkByC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,yBAAwBD,UACvDF,EAAAA,EAAAA,KAAA,MACE0B,QAAS,GACTvB,UAAU,+DAA8DD,UAExEF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,SAGV3B,EAAAA,EAAAA,KAAA,SAAAE,SACG7C,IAAkD,OAAvBA,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBuE,QAAS,EACrC,OAAvBvE,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBwE,IAAI,CAACC,EAASC,KAAK,IAAAC,EAAA,OAC1ChC,EAAAA,EAAAA,KAACiC,EAAAA,SAAc,CAAA/B,UACbE,EAAAA,EAAAA,MAAA,MACED,UAAS,cAAAhC,OAAgB4D,EAAQ,IAAM,EAAI,kBAAoB,WAAU,gDAA+C7B,SAAA,EAExHF,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAClC6B,EAAQ,EArOnB,IAqOwB1D,EAAc,MAE9B2B,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAS,OAAP4B,QAAO,IAAPA,OAAO,EAAPA,EAASI,SAChDlC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAsB,QAAtB8B,EAAS,OAAPF,QAAO,IAAPA,OAAO,EAAPA,EAASK,mBAAW,IAAAH,EAAAA,EAAI,OAC/DhC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,iBAAgBD,SAAS,OAAP4B,QAAO,IAAPA,OAAO,EAAPA,EAASM,eACzCpC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAEmC,IAAc,OAAPP,QAAO,IAAPA,OAAO,EAAPA,EAASQ,WAAWC,OAAO,yBACzEvC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAEmC,IAAc,OAAPP,QAAO,IAAPA,OAAO,EAAPA,EAASU,WAAWD,OAAO,yBACzEvC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,iBAAgBD,SAAS,OAAP4B,QAAO,IAAPA,OAAO,EAAPA,EAASW,aACzCzC,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,SAAS,OAAP4B,QAAO,IAAPA,OAAO,EAAPA,EAASY,gBAChD1C,EAAAA,EAAAA,KAAA,MAAIG,UAAU,qCAAoCD,UAChDF,EAAAA,EAAAA,KAAA,QACEG,UAAS,GAAAhC,OAAY,OAAP2D,QAAO,IAAPA,GAAAA,EAASvD,OAAS,gCAAkC,4BAA2B,+DAA8D2B,SAEnJ,OAAP4B,QAAO,IAAPA,OAAO,EAAPA,EAASvD,eAlBGuD,EAAQlD,QA2B/BoB,EAAAA,EAAAA,KAAA,MAAIG,UAAU,wBAAuBD,UACnCF,EAAAA,EAAAA,KAAA,MAAI0B,QAAS,EAAGvB,UAAU,+DAA8DD,SAAC,+BAQ7E,OAAvB7C,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBuE,QAAS,IACjC5B,EAAAA,EAAAA,KAAC2C,EAAAA,EAAgB,CACfC,WAAYtF,EACZyB,SAvQI,GAwQJV,YAAaA,EACbgC,SAzRkBwC,IAC1BvE,EAAeuE,SA4RZlD,GAAaE,IACZG,EAAAA,EAAAA,KAAA,OAAKG,UAAU,iFAAiFsB,QAAS1B,EAAWG,UAClHE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,qGAAqGsB,QAAUnB,GAAMA,EAAEwC,kBAAkB5C,SAAA,EACtJF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACnBF,EAAAA,EAAAA,KAAA,OAAK+C,wBAAyB,CAAEC,OAAwB,OAAhBnD,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBoD,cAE5DjD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,wBAAuBD,UACpCF,EAAAA,EAAAA,KAAA,UACEyB,QAAS1B,EACTI,UAAU,4CAA2CD,SACtD,mBAUf,C","sources":["pages/global/other/resignation/EmployeeResignationList.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Swal from \"sweetalert2\";\n\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { domainName, inputAntdSelectClassNameFilter,  } from \"../../../../constents/global\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\n\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\n\nimport { Select, Tooltip } from \"antd\";\nimport getUserIds from \"../../../../constents/getUserIds\";\n\nimport { deleteResignFunc, getEmployeeResignationList, statusResignFunc } from \"./resignationFeatures/resignation_reducers\";\n\nimport moment from \"moment\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\n\n\nfunction EmployeeResignationList() {\n  const { register, control, setValue, formState: { errors } } = useForm();\n  const { userCompanyId, userBranchId, userType, userEmployeId } = getUserIds();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { employeeResignationData, totalemployeeResignCount, employeeLoading } = useSelector((state) => state.resignation);\n  const [searchText, setSearchText] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: userCompanyId,\n  });\n\n  const status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const limit = 10;\n\n  useEffect(() => {\n    if(userInfoglobal?.userType === \"employee\" && userInfoglobal?._id ){\n    getCommonResignationRequest();\n    }\n  }, [currentPage, searchText, status]);\n\n  const getCommonResignationRequest = () => {\n\n    const data = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqData: {\n        directorId: \"\",\n        companyId: userCompanyId || \"\",\n        branchId: userBranchId || \"\",\n        employeId: userEmployeId,\n        \"text\": searchText,\n        \"sort\": true,\n        \"status\": status,\n        \"isPagination\": true,\n        type: \"resignation\"\n      }\n    };\n    dispatch(getEmployeeResignationList(data));\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteResignFunc(reqData)).then((data) => {\n          getCommonResignationRequest()\n        });\n      }\n    });\n  };\n  // useEffect(() => {\n  //   if (\n  //     companyId ||\n  //     userType === \"company\" ||\n  //     userType === \"companyDirector\"\n  //   ) {\n  //     dispatch(\n  //       branchSearch({\n  //         text: \"\",\n  //         sort: true,\n  //         status: true,\n  //         isPagination: false,\n  //         companyId: companyId\n  //       })\n  //     );\n  //   }\n  // }, [companyId])\n  useEffect(() => {\n    if (userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState(null); // State to store the selected template data\n\n  // Function to open the modal with the template details\n  const openModal = (template) => {\n    setSelectedTemplate(template);\n    setModalOpen(true);\n  };\n\n  // Function to close the modal\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedTemplate(null);\n  };\n\n  const handleStatusUpdate = (element, status) => {\n    Swal.fire({\n      title: 'Provide feedback',\n      input: 'textarea',\n      inputLabel: 'Feedback (optional)',\n      inputPlaceholder: 'Type your feedback here...',\n      showCancelButton: true,\n      confirmButtonText: `Update as ${status}`,\n      cancelButtonText: 'Cancel',\n      inputValidator: (value) => {\n        if (value === undefined || value === '') {\n          return 'Feedback cannot be empty';\n        }\n        return null;\n      }\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const feedback = result.value; // Get feedback input\n        // Dispatch the status update with feedback\n        dispatch(\n          statusResignFunc({\n            _id: element?._id,\n            status: status,\n            reason: feedback,\n          })\n        ).then((data) => {\n          if (!data?.error) {\n            getCommonResignationRequest();\n          }\n        });\n      }\n    });\n  };\n\n  const onChange = (e) => {\n    \n    setSearchText(e);\n  };\n  if (userInfoglobal?.userType !== \"employee\") {\n    return (\n      <GlobalLayout>\n        <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n          <p className=\"text-center font-semibold\">\n            You are not an employee. This page is viewable for employees only.\n          </p>\n        </div>\n      </GlobalLayout>\n    )\n  }\n  return (\n    <GlobalLayout onChange={onChange}>\n\n\n      <div className=\"\">\n        <div className=\"flex justify-between items-center md:space-y-0 space-y-2 py-1\">\n          <div className=\"flex items-center space-x-2\">\n\n\n            <Controller\n              name=\"status\"\n              control={control}\n              rules={{}}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.status ? \"border-[1px] \" : \"border-gray-300\"\n                    }`}\n                  placeholder=\"Select Status\"\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">Select Status</Select.Option>\n                  <Select.Option value='Rejected'>{\"Rejected\"}</Select.Option>\n                  <Select.Option value='Approved'>{\"Approved\"}</Select.Option>\n                  <Select.Option value='Requested'>{\"Requested\"}</Select.Option>\n                  <Select.Option value='Completed'>{\"Completed\"}</Select.Option>\n                </Select>\n              )}\n            />\n          </div>\n          <div className=\"flex justify-end items-center\">\n            <button\n              onClick={() => {\n                setValue(\"status\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"PdDepartmentId\", \"\");\n                setValue(\"PdCompanyId\", \"\");\n              }}\n              className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n          </div>\n          {/* <button\n                onClick={() => { navigate(\"/admin/employee-resignation/create\")}}\n                className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n              >\n                <FaPlus />\n                <span className=\"text-[12px]\">Add Resignation</span>\n              </button> */}\n        </div>\n      </div>\n\n      <div className=\"w-full\">\n        <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n                <th className=\"p-2 whitespace-nowrap\">Title</th>\n                <th className=\"p-2 whitespace-nowrap\">Employee Name</th>\n                <th className=\"p-2 whitespace-nowrap\">Description</th>\n                <th className=\"p-2 whitespace-nowrap\">Apply Date</th>\n\n                <th className=\"p-2 whitespace-nowrap\">Create At</th>\n                <th className=\"p-2 whitespace-nowrap\">Create By</th>\n                <th className=\"p-2 whitespace-nowrap\">Notice Period(days)</th>\n                <th className=\"p-2 whitespace-nowrap\">Status</th>\n\n              </tr>\n            </thead>\n            {employeeLoading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {employeeResignationData && employeeResignationData?.length > 0 ? (\n                  employeeResignationData?.map((element, index) => (\n                    <React.Fragment key={element._id}>\n                      <tr\n                        className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"} text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                      >\n                        <td className=\"whitespace-nowrap p-2\">\n                          {index + 1 + (currentPage - 1) * limit}\n                        </td>\n                        <td className=\"whitespace-nowrap p-2\">{element?.title}</td>\n                        <td className=\"whitespace-nowrap p-2\">{element?.employeName ?? \"-\"}</td>\n                        <td className=\"whitespace p-2\">{element?.description}</td>\n                        <td className=\"whitespace-nowrap p-2\">{moment(element?.applyDate).format(\"DD-MM-YYYY hh:mm a\")}</td>\n                        <td className=\"whitespace-nowrap p-2\">{moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}</td>\n                        <td className=\"whitespace p-2\">{element?.createdBy}</td>\n                        <td className=\"whitespace-nowrap p-2\">{element?.noticePeriod}</td>\n                        <td className=\"whitespace-nowrap border-none p-2 \">\n                          <span\n                            className={`${element?.status ? \"bg-[#E0FFBE] border-green-500\" : \"bg-red-200 border-red-500\"} border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                          >\n                            {element?.status}\n                          </span>\n                        </td>\n\n\n                      </tr>\n                    </React.Fragment>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td colSpan={6} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>\n        {employeeResignationData?.length > 0 &&\n          <CustomPagination\n            totalCount={totalemployeeResignCount}\n            pageSize={limit}\n            currentPage={currentPage}\n            onChange={onPaginationChange}\n          />}\n      </div>\n\n      {modalOpen && selectedTemplate && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1501]\" onClick={closeModal}>\n          <div className=\"animate-slideInFromTop bg-white rounded-lg px-6 pt-6 pb-3 w-[800px] max-h-[70vh] overflow-y-hidden\" onClick={(e) => e.stopPropagation()}>\n            <div className=\"mt-4\">\n              <div dangerouslySetInnerHTML={{ __html: selectedTemplate?.content }}></div>\n            </div>\n            <div className=\"mt-4 flex justify-end\">\n              <button\n                onClick={closeModal}\n                className=\"px-4 py-2 text-white bg-header rounded-md\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n    </GlobalLayout>\n  );\n}\nexport default EmployeeResignationList;\n"],"names":["register","control","setValue","formState","errors","useForm","userCompanyId","userBranchId","userType","userEmployeId","getUserIds","dispatch","useNavigate","useDispatch","employeeResignationData","totalemployeeResignCount","employeeLoading","useSelector","state","resignation","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","status","useWatch","name","defaultValue","useEffect","_id","getCommonResignationRequest","data","pageSize","reqData","directorId","companyId","branchId","employeId","type","getEmployeeResignationList","companySearch","text","sort","isPagination","modalOpen","setModalOpen","selectedTemplate","setSelectedTemplate","closeModal","_jsx","GlobalLayout","children","className","_jsxs","onChange","e","Controller","rules","render","_ref","field","Select","_objectSpread","inputAntdSelectClassNameFilter","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","onClick","colSpan","Loader2","length","map","element","index","_element$employeName","React","title","employeName","description","moment","applyDate","format","createdAt","createdBy","noticePeriod","CustomPagination","totalCount","page","stopPropagation","dangerouslySetInnerHTML","__html","content"],"sourceRoot":""}