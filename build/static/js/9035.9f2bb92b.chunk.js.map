{"version":3,"file":"static/js/9035.9f2bb92b.chunk.js","mappings":"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","sources":["pages/hr/RecruitmentProcess/Interview/InterviewList.js","global_layouts/DatePicker/CustomDatePickerFilter.js","pages/hr/RecruitmentProcess/Interview/EmailTemplateModal.js","global_layouts/Loader/Loader.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { json, useNavigate, useSearchParams } from \"react-router-dom\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  FaAngleUp,\n  FaEye,\n  FaIndustry,\n  FaPenToSquare,\n  FaPeopleGroup,\n  FaRegAddressCard,\n  FaRegBuilding,\n} from \"react-icons/fa6\";\nimport { RiDeleteBin5Line, RiEjectFill } from \"react-icons/ri\";\nimport getUserIds from \"../../../../constents/getUserIds\";\nimport Swal from \"sweetalert2\";\nimport { FaPlus, FaAngleDown } from \"react-icons/fa6\";\nimport { HiOutlineFilter } from \"react-icons/hi\";\nimport {\n\n  MdRemoveCircle,\n} from \"react-icons/md\";\nimport {\n  deleteInterview,\n  getInterviewList,\n  sendEmailInterview,\n  statusUpdateApplication,\n} from \"./InterviewFeatures/_interview_reducers\";\nimport {\n  domainName,\n  handleSortLogic,\n  inputAntdSelectClassNameFilter,\n  inputClassNameSearch,\n  inputLabelClassName,\n} from \"../../../../constents/global\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport Loader from \"../../../../global_layouts/Loader/Loader\";\nimport { decrypt, encrypt } from \"../../../../config/Encryption\";\nimport moment from \"moment\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport EmailTemplateModal from \"./EmailTemplateModal\";\nimport { sendEmailCommon } from \"../../onBoarding/onBoardingFeatures/_onBoarding_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport { designationSearch } from \"../../../designation/designationFeatures/_designation_reducers\";\nimport { Select, Tooltip, Dropdown } from \"antd\";\nimport { BsFileEarmarkPdfFill, BsPassFill } from \"react-icons/bs\";\nimport { AiOutlineMail, AiOutlineTags } from \"react-icons/ai\";\nimport { FaPhoneAlt } from \"react-icons/fa\";\nimport { IoPersonSharp } from \"react-icons/io5\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport dayjs from \"dayjs\";\nimport { applicationSearch, getApplicationList } from \"../../../applicationManagement/applicationFeatures/_application_reducers\";\nimport usePermissions from \"../../../../config/usePermissions\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport CustomDatePickerFilter from \"../../../../global_layouts/DatePicker/CustomDatePickerFilter\";\n\nfunction InterviewList() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    getValues,\n    unregister,\n    control,\n    formState: { errors },\n  } = useForm({\n    defaultValues: {\n      pdStatus: \"Pending\",\n    },\n  });\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { interviewList, totalInterviewCount, loading } = useSelector(\n    (state) => state.interview\n  );\n  const { applicationList, totalApplicationCount, loading: applistloading } = useSelector(\n    (state) => state.application\n  );\n  const [interviewViewData, setInterviewerdata] = useState(false);\n  const [isEmailModalOpen, setIsEmailModalOpen] = useState(false);\n\n  const [onBoardingId, setOnBoardingId] = useState(1);\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const { designationList, loading: designationloading } = useSelector((state) => state.designation);\n  const { departmentListData, loading: departmentListloading } = useSelector((state) => state.department);\n \n  const { userEmployeId } = getUserIds();\n\n\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n\n\n  const employeId = useWatch({\n    control,\n    name: \"PDEmployeId\",\n    defaultValue: userEmployeId,\n  });\n\n \n  // const applicationId = useWatch({\n  //   control,\n  //   name: \"applicationList\",\n  //   defaultValue: \"\",\n  // });\n\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const initialPage = parseInt(searchParams.get(\"page\")) || 1;\n  const initialLimit = 10;\n  const initialBranchId = searchParams.get(\"branchId\")|| \"\";\n  const initialStatus = searchParams.get(\"status\")|| \"\";\n  const initialDepartmentId = searchParams.get(\"departmentId\")|| \"\";\n  const initialDesignationId = searchParams.get(\"designationId\")|| \"\";\n  const initialApplicationId = searchParams.get(\"applicationId\")|| \"\";\n  const initialStartDate = searchParams.get(\"startDate\")|| null;\n  const initialEndDate = searchParams.get(\"endDate\")|| null;\n\n  const [currentPage, setCurrentPage] = useState(initialPage);\n  const [limit, setLimit] = useState(initialLimit);\n  const [status, setStatus] = useState(initialStatus);\n  const [searchText, setSearchText] = useState(\"\");\n  const [departmentId, setDepartmentId] = useState(initialDepartmentId);\n  const [applicationId, setApplicationId] = useState(initialApplicationId);\n  const [designationId, setDesignationId] = useState(initialDesignationId);\n  const [branchId, setBranchId] = useState(initialBranchId);\n  const [startDate, setStartDate] = useState(\n    initialStartDate ? dayjs(initialStartDate) : null\n  );\n  const [endDate, setEndDate] = useState(\n    initialEndDate ? dayjs(initialEndDate) : null\n  );\n\n  useEffect(() => {\n    const params = new URLSearchParams();\n    if (currentPage > 1) params.set(\"page\", currentPage);\n    if (departmentId) params.set(\"departmentId\", departmentId);\n    if (designationId) params.set(\"designationId\", designationId);\n    if (applicationId) params.set(\"applicationId\", applicationId);\n    if (branchId) params.set(\"branchId\", branchId);\n    if (startDate) params.set(\"startDate\", startDate);\n    if (endDate) params.set(\"endDate\", endDate);\n    if (status) params.set(\"status\", status);\n    setSearchParams(params);\n  }, [departmentId, branchId, designationId, status,startDate,endDate,applicationId, searchText, currentPage]);\n  useEffect(() => {\n    fetchApplicationListData();\n  }, [ branchId, departmentId, designationId, status,startDate,endDate,applicationId, searchText, currentPage]);\n\n  const handleResetFilters = () => {\n    setCurrentPage(1);\n    setBranchId(\"\");\n    setDepartmentId(\"\");\n    setDesignationId(\"\");\n    setStatus(\"\");\n    setSearchText(\"\");\n  };\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const onPaginationChange = (page) => setCurrentPage(page);\n  const handleBranchChange = (value) => {\n    setBranchId(value);\n    setCurrentPage(1);\n  };\n\n  const handleDepartmentChange = (value) => {\n    setDepartmentId(value);\n    setCurrentPage(1);\n  };\n\n  const handleApplicationChange = (value) => {\n    setApplicationId(value);\n    setCurrentPage(1);\n  };\n\n  const handleStartDateChange = (date) => {\n    setStartDate(date);\n    setCurrentPage(1);\n  };\n\n  const handleEndDateChange = (date) => {\n    setEndDate(date);\n    setCurrentPage(1);\n  };\n  const handleDesignationChange = (value) => {\n    setDesignationId(value);\n    setCurrentPage(1);\n  };\n  const handleStatusChange = (value) => {\n    setStatus(value);\n    setCurrentPage(1);\n  };\n  \n    \n\n  // useEffect(() => {\n  //   fetchApplicationListData();\n  // }, []);\n\n  const fetchApplicationListData = () => {\n    let reqData = {\n\n      reqPayload: {\n        text: \"\",\n        status: \"\",\n        sort: true,\n        isPagination: false,\n        employeId: \"\",\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId,\n        designationId: designationId,\n        jobId: \"\",\n      },\n    };\n    dispatch(applicationSearch(reqData));\n  };\n\n\n\n\n\n\n  useEffect(() => {\n    fetchInterviewData();\n  }, [\n    CompanyId,\n    branchId,\n    departmentId,\n    designationId,\n    status,\n    startDate,\n    endDate,\n    applicationId,\n    searchText,\n    currentPage,\n  ]);\n  const fetchInterviewData = () => {\n    const data = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqData: {\n        text: searchText,\n        status: status,\n        sort: true,\n        isPagination: true,\n        employeId: employeId,\n        departmentId: departmentId,\n        designationId: designationId,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        applicationId: applicationId,\n        startDate: startDate ? dayjs(startDate).format(\"DD-MM-YYYY\") : '',\n        endDate: endDate ? dayjs(endDate).format(\"DD-MM-YYYY\") : '',\n      },\n    };\n    dispatch(getInterviewList(data));\n  };\n\n\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteInterview(reqData)).then((data) => {\n          fetchInterviewData();\n          if (currentPage > 1 && interviewList?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n\n          } else {\n            fetchInterviewData();\n          }\n        });\n      }\n    });\n  };\n\n  const [sortedList, setSortedList] = useState([]);\n\n  useEffect(() => {\n    if (interviewList) {\n      handleSort();\n    }\n  }, [interviewList]);\n\n  const handleSort = (key, order) => {\n    const sortedList = handleSortLogic(key, order, interviewList);\n    setSortedList(sortedList);\n  };\n\n  const handleEmailSubmit = (emailData) => {\n    dispatch(sendEmailCommon(emailData)).then((data) => {\n      if (!data.error) {\n        setIsEmailModalOpen(false);\n        setOnBoardingId([]);\n        Swal.fire({\n          icon: \"success\",\n          title: \"Email Generated\",\n          html: `\n            <p>Interview email has been generated successfully!</p>\n          `,\n          confirmButtonColor: \"#3085d6\",\n        });\n      }\n    });\n  };\n  const handleStatusUpdate = (element, status) => {\n    Swal.fire({\n      title: \"Provide feedback\",\n      input: \"textarea\",\n      inputLabel: \"Feedback (optional)\",\n      inputPlaceholder: \"Type your feedback here...\",\n      showCancelButton: true,\n      confirmButtonText: `Update as ${status}`,\n      cancelButtonText: \"Cancel\",\n      inputValidator: (value) => {\n        if (value === undefined || value === \"\") {\n          return \"Feedback cannot be empty\";\n        }\n        return null;\n      },\n    }).then((result) => {\n      if (result.isConfirmed) {\n        const feedback = result.value; // Get feedback input\n        // Dispatch the status update with feedback\n        dispatch(\n          statusUpdateApplication({\n            _id: element?._id,\n            applicationId: element?.applicationId,\n            status: status,\n\n            feedback: feedback, // Include feedback here\n          })\n        ).then((data) => {\n          if (!data?.error) {\n            fetchInterviewData(); // Fetch interview data after successful update\n          }\n        });\n      }\n    });\n  };\n  const [viewInterview, setViewInterview] = useState(false);\n  const handleInterviewView = (data) => {\n    setInterviewerdata(data);\n\n    setViewInterview((prev) => !prev);\n  };\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      ).then((data) => {\n        data.error && setValue(\"PDBranchId\", \"\");\n      });\n      dispatch(\n        deptSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      ).then((data) => {\n        data.error && setValue(\"PdDepartmentId\", \"\");\n      });\n    }\n  }, [CompanyId]);\n\n  useEffect(() => {\n    setValue(\"pdDesignationId\", \"\");\n    dispatch(\n      designationSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        departmentId: departmentId,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n      })\n    ).then((data) => {\n      data.error && setValue(\"pdDesignationId\", \"\");\n    });\n  }, [departmentId, CompanyId]);\n  return (\n    <GlobalLayout onChange={onChange}>\n\n      <>\n        <div className=\"\">\n          <div className=\"2xl:flex justify-between items-center md:space-y-0 space-y-2 py-1\">\n            <div className=\"2xl:flex 2xl:flex-wrap sm:grid xl:grid-cols-5 lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-3 grid-cols-1 md:gap-3 !gap-4 md:space-y-0 space-y-1.5 text-[14px] rounded-md\">\n          \n              {(userInfoglobal?.userType === \"admin\" ||\n                userInfoglobal?.userType === \"company\" ||\n                userInfoglobal?.userType === \"companyDirector\") && (\n                  <div className=\"\">\n                    <Select\n                                        value={branchId}\n                                        onChange={handleBranchChange}\n                                        defaultValue=\"\"\n                                        disabled={loading}\n                                        className={`${inputAntdSelectClassNameFilter} `}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                          String(option?.children)\n                                            .toLowerCase()\n                                            .includes(input.toLowerCase())\n                                        }\n                                      >\n                                        <Select.Option value=\"\">Select Branch</Select.Option>\n                                        {branchListloading ? (\n                                          <Select.Option disabled>\n                                            <ListLoader />\n                                          </Select.Option>\n                                        ) : (\n                                          branchList?.map((type) => (\n                                            <Select.Option key={type?._id} value={type?._id}>\n                                              {type?.fullName}\n                                            </Select.Option>\n                                          ))\n                                        )}\n                                      </Select>\n                  </div>\n                )}\n              <div className=\"\">\n              <Select\n                    value={departmentId}\n                    onChange={handleDepartmentChange}\n                    defaultValue=\"\"\n                    disabled={loading}\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                      {departmentListloading ? <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option> : (departmentListData?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      )))}\n                  </Select>\n              </div>\n              <div className=\"\">\n              <Select\n                  value={designationId}\n                  onChange={handleDesignationChange}\n                  defaultValue=\"\"\n                  disabled={loading}\n                  className={`${inputAntdSelectClassNameFilter} `}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                                  >\n                                    <Select.Option value=\"\">Select Designation</Select.Option>\n                                      {designationloading ? <Select.Option disabled>\n                                        <ListLoader />\n                                      </Select.Option> : (designationList?.map((type) => (\n                                        <Select.Option key={type?._id} value={type?._id}>\n                                          {type?.name}\n                                        </Select.Option>\n                                      )))}\n                                  </Select>\n              </div>\n              <div className=\"\">\n               <Select\n                                value={status}\n                                onChange={handleStatusChange}\n                                disabled={loading}\n                                className={`${inputAntdSelectClassNameFilter} `}\n                                showSearch\n                                filterOption={(input, option) =>\n                                  String(option?.children)\n                                    .toLowerCase()\n                                    .includes(input.toLowerCase())\n                                }\n                              >\n                     <Select.Option value=\"\">Select Status</Select.Option>\n                      <Select.Option value=\"Pending\">Pending </Select.Option>\n                      <Select.Option value=\"Passed\">Passed</Select.Option>\n                      <Select.Option value=\"Failed\">Failed</Select.Option>\n                      <Select.Option value=\"Completed\">Completed</Select.Option>            \n                              </Select>\n              </div>\n              <div className=\"\">\n\n              <Select\n                    value={applicationId}\n                    onChange={handleApplicationChange}\n                    defaultValue=\"\"\n                    disabled={loading}\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                     <Select.Option value=\"\">\n                        Select Application\n                      </Select.Option>\n                      {applistloading ? <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option> : (applicationList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.fullName}\n                        </Select.Option>\n                      )))}\n                  </Select>\n                {/* <Controller\n                  control={control}\n                  name=\"applicationList\"\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      defaultValue={\"\"}\n                      className={`${inputAntdSelectClassNameFilter} `}\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">\n                        Select Application\n                      </Select.Option>\n                      {applistloading ? <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option> : (applicationList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.fullName}\n                        </Select.Option>\n                      )))}\n                    </Select>\n                  )}\n                /> */}\n                {errors.PDCompanyId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDCompanyId.message}\n                  </p>\n                )}\n              </div>\n              <div className=\"\">\n              <CustomDatePickerFilter\n                  value={startDate}\n                  onChange={handleStartDateChange}\n                  disabled={loading}\n                  report={true}\n                  size={\"middle\"}\n                />\n              </div>\n              <div className=\"\">\n              <CustomDatePickerFilter\n                  value={endDate}\n                  onChange={handleEndDateChange}\n                  disabled={loading}\n                  report={true}\n                  size={\"middle\"}\n                />\n              </div>\n            </div>\n            <div className=\"flex justify-end items-center\">\n              <button\n                onClick={() => {\n                  setBranchId(\"\")\n                  setDepartmentId(\"\")\n                  setDesignationId(\"\")\n                  setStatus(\"\")\n                  setApplicationId(\"\")\n                  setStartDate(\"\")\n                  setEndDate(\"\")\n                }}\n                className=\"bg-header py-1.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n            <thead className=\"\">\n              <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[#ffff] font-[500] h-[40px]\">\n                <th className=\"tableHead \">S.No.</th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">\n                    Interviewer Name\n                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                      <FaAngleUp\n                        onClick={() => handleSort(\"interviewerName\", \"asc\")}\n                      />\n                      <FaAngleDown\n                        onClick={() => handleSort(\"interviewerName\", \"desc\")}\n                      />\n                    </div>\n                  </div>\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">\n                    Interviewer Position\n                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                      <FaAngleUp\n                        onClick={() =>\n                          handleSort(\"interviewerPosition\", \"asc\")\n                        }\n                      />\n                      <FaAngleDown\n                        onClick={() =>\n                          handleSort(\"interviewerPosition\", \"desc\")\n                        }\n                      />\n                    </div>\n                  </div>\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">\n                    Applicant Name\n                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                      <FaAngleUp\n                        onClick={() => handleSort(\"interviewerName\", \"asc\")}\n                      />\n                      <FaAngleDown\n                        onClick={() => handleSort(\"interviewerName\", \"desc\")}\n                      />\n                    </div>\n                  </div>\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">\n                    position\n                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                      <FaAngleUp\n                        onClick={() => handleSort(\"interviewerName\", \"asc\")}\n                      />\n                      <FaAngleDown\n                        onClick={() => handleSort(\"interviewerName\", \"desc\")}\n                      />\n                    </div>\n                  </div>\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">Round Number</div>\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">Round Name</div>\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">\n                    Type\n                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                      <FaAngleUp onClick={() => handleSort(\"type\", \"asc\")} />\n                      <FaAngleDown\n                        onClick={() => handleSort(\"type\", \"desc\")}\n                      />\n                    </div>\n                  </div>\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">\n                    Interview Date\n                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                      <FaAngleUp onClick={() => handleSort(\"date\", \"asc\")} />\n                      <FaAngleDown\n                        onClick={() => handleSort(\"date\", \"desc\")}\n                      />\n                    </div>\n                  </div>\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">\n                    created At\n                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                      <FaAngleUp onClick={() => handleSort(\"date\", \"asc\")} />\n                      <FaAngleDown\n                        onClick={() => handleSort(\"createdAT\", \"desc\")}\n                      />\n                    </div>\n                  </div>\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex gap-1\">\n                    created By\n                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                      <FaAngleUp onClick={() => handleSort(\"date\", \"asc\")} />\n                      <FaAngleDown\n                        onClick={() => handleSort(\"createdBy\", \"desc\")}\n                      />\n                    </div>\n                  </div>\n                </th>\n                {\n                  canRead && <th className=\"tableHead\">\n                    <div className=\"flex gap-1\">Resume</div>\n                  </th>\n                }\n                <th className=\"tableHead\">status</th>\n                {(canUpdate || canDelete || canRead) && <th className=\"tableHead w-[10%]\">Action</th>}\n              </tr>\n            </thead>\n            {loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={14}\n                className=\"px-6 py-2  whitespace-nowrap font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {sortedList && sortedList?.length > 0 ? (\n                  sortedList?.map((element, index) => (\n                    <tr\n                      className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-b-[1px] border-[#DDDDDD]`}\n                    >\n                      <td className=\"tableData\">  {index + 1 + (currentPage - 1) * limit}</td>\n                      <td className=\"tableData\">\n                        {element?.interviewerName || '-'}\n                      </td>\n                      <td className=\"tableData\">\n                        {element?.interviewerPosition || '-'}\n                      </td>\n                      <td className=\"tableData\">\n                        {element?.applicationData?.fullName || '-'}\n                      </td>\n                      <td className=\"tableData\">\n                        {\n                          element?.applicationData?.jobPostData?.designationData\n                            ?.name || '-'\n                        }\n                      </td>\n                      <td className=\"tableData\">\n                        {element?.roundNumber || '-'}\n                      </td>\n                      <td className=\"tableData\">\n                        {element?.roundName || '-'}\n                      </td>\n                      <td className=\"tableData\">{element?.type}</td>\n                      <td className=\"tableData\">\n                        {moment(element?.date).format(\"DD/MM/YYYY hh:mm A\")}\n                      </td>\n\n                      <td className=\"tableData\">\n                        {moment(element?.createdAt).format(\"DD/MM/YYYY hh:mm A\")}\n                      </td>\n                      <td className=\"tableData\">\n                        {element?.createdBy ?? '-'}\n                      </td>\n                      {canRead && <td className=\"tableData\">\n                        {\" \"}\n                        <button\n                          onClick={() => {\n                            if (element?.applicationData?.resumeUrl) {\n                              const url = `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public${element?.applicationData?.resumeUrl}`;\n                              window.open(url, \"_blank\");\n                            }\n                          }}\n                          className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                          type=\"button\"\n                        >\n                          <BsFileEarmarkPdfFill\n                            className=\" text-rose-700\"\n                            size={16}\n                          />\n                        </button>\n                      </td>}\n                      <td className=\"whitespace-nowrap border-none p-2 \">\n                        <span\n                          className={`${element?.status === \"Active\"\n                            ? \"bg-[#E0FFBE] border-green-500 text-black\"\n                            : element?.status === \"Pending\"\n                              ? \"bg-yellow-200 border-yellow-500 text-black\"\n                              : element?.status === \"Inactive\"\n                                ? \"bg-red-200 border-red-500 text-black\"\n                                : \"bg-gray-200 border-gray-500 text-black\"\n                            } border-[1px] px-2 py-1.5 rounded-lg text-[12px]`}\n                        >\n                          {element?.status ? element.status : \"-\"}\n                        </span>\n                      </td>\n\n\n                      {(canUpdate || canDelete || canRead) && <td className=\"tableData\">\n                        <span className=\"py-1.5 flex justify-start items-center space-x-2.5\">\n                          {canUpdate && <Tooltip placement=\"topLeft\" \n                            title={`${element?.status === \"Pending\"\n                              ? \"Update As Failed\"\n                              : `Already ${element?.status}`\n                              }`}\n                          >\n                            <button\n                              onClick={() =>\n                                handleStatusUpdate(element, \"Failed\")\n                              }\n                              className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                              disabled={element?.status !== \"Pending\"}\n                            >\n                              <MdRemoveCircle\n                                className={`${element?.status === \"Pending\"\n                                  ? \"hover:text-rose-500 text-rose-600\"\n                                  : \"text-gray-500\"\n                                  }`}\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>}\n                          {canUpdate && <Tooltip placement=\"topLeft\" \n                            title={`${element?.status === \"Pending\"\n                              ? \"Update As Passed\"\n                              : `Already ${element?.status}`\n                              }`}\n                          >\n                            <button\n                              onClick={() =>\n                                handleStatusUpdate(element, \"Passed\")\n                              }\n                              // onClick={() => {\n                              //   dispatch(\n                              //     statusUpdateApplication({\n                              //       _id: element?._id,\n                              //       applicationId: element?.applicationId,\n                              //       status: \"Passed\",\n                              //     })\n                              //   ).then((data) => {\n                              //     !data?.error && fetchInterviewData();\n                              //   });\n                              // }}\n                              className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                              disabled={element?.status !== \"Pending\"}\n                            >\n                              <BsPassFill\n                                className={`${element?.status === \"Pending\"\n                                  ? \"hover:text-teal-500 text-teal-500\"\n                                  : \"text-gray-500\"\n                                  }`}\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>}\n\n                          {canRead && <Tooltip placement=\"topLeft\"  title={\"View Interview Details\"}>\n                            <button\n                              onClick={() => {\n                                handleInterviewView(element);\n                              }}\n                              className=\"px-2 py-2 text-xs rounded-md bg-transparent text-header border border-muted\"\n                              type=\"button\"\n                            >\n                              <FaEye\n                                className={`${\" hover:text-[#337ab7] text-[#3c8dbc]\"}`}\n                              />\n                            </button>\n                          </Tooltip>}\n\n\n\n                          <Dropdown\n                            menu={{\n                              items: [\n                                ...(canUpdate\n                                  ? [{\n                                    key: 'edit-interview',\n                                    label: (\n                                      <span\n                                        onClick={() =>\n                                          navigate(`/admin/interview/edit/${encrypt(element?._id)}`)\n                                        }\n                                        className=\"flex items-center text-[#3c8dbc] hover:text-[#337ab7]\"\n                                      >\n                                        <FaPenToSquare className=\"mr-2\" size={16} />\n                                        Edit\n                                      </span>\n                                    ),\n                                  }]\n                                  : []),\n\n                                ...(canDelete\n                                  ? [{\n                                    key: 'delete-interview',\n                                    label: (\n                                      <span\n                                        onClick={() => handleDelete(element?._id)}\n                                        className=\"flex items-center text-red-600 hover:text-red-500\"\n                                      >\n                                        <RiDeleteBin5Line className=\"mr-2\" size={16} />\n                                        Delete\n                                      </span>\n                                    ),\n                                  }]\n                                  : []),\n                              ],\n                            }}\n                            trigger={['click']}\n                          >\n                            <Tooltip placement=\"topLeft\"  title='More Actions'>\n                              <button\n                                className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                type=\"button\"\n                              >\n                                <PiDotsThreeOutlineVerticalBold\n                                  className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                                  size={16}\n                                />\n                              </button>\n                            </Tooltip>\n                          </Dropdown>\n\n\n                        </span>\n                      </td>}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={18}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            }\n          </table>\n        </div>\n        <CustomPagination\n          totalCount={totalInterviewCount}\n          pageSize={limit}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n        {viewInterview && (\n          <div\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1560]\"\n            onClick={handleInterviewView}\n          >\n            <div className=\"grid grid-cols-1 md:grid-cols-1  w-full sm:w-1/2\" onClick={(e) => e.stopPropagation()}>\n\n              <div\n                className=\"w-full overflow-auto \"\n                onClick={(e) => e.preventDefault()}\n              >\n                <table className=\"w-full  rounded-lg shadow-md overflow-hidden bg-white\">\n                  <thead>\n                    <tr>\n                      <th className=\"text-header \">\n                        <div className=\"mt-2 ml-2\">Interview Details</div>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody className=\"text-sm text-gray-700\">\n                    {/* Company Name Row */}\n                    <tr className=\" hover:bg-indigo-50\">\n                      <td className=\"p-3 text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <IoPersonSharp className=\"size-4 text-header text-lg\" />\n                          <span className=\"text-[16px] font-medium\">\n                            Interviewer Name\n                          </span>\n                        </div>\n                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                          {interviewViewData?.interviewerName || \"N/A\"}\n                        </span>\n                      </td>\n\n                      <td className=\"p-3  text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <AiOutlineTags className=\"size-4 text-header text-lg\" />\n                          <span className=\"text-[16px] font-medium\">\n                            Interviewer Position\n                          </span>\n                        </div>\n                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                          {interviewViewData.interviewerPosition || \"N/A\"}\n                        </span>\n                      </td>\n\n                    </tr>\n\n                    <tr className=\" hover:bg-indigo-50\">\n                      <td className=\"p-3  text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <FaPeopleGroup className=\"size-4 text-header text-lg\" />\n                          <span className=\"text-[16px] font-medium\">\n                            Application Name\n                          </span>\n                        </div>\n                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                          {interviewViewData?.applicationData.fullName ||\n                            \"N/A\"}\n                        </span>\n                      </td>\n\n                      <td className=\"p-3  text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <FaIndustry className=\"size-4 text-header text-lg\" />\n                          <span className=\"text-[16px] font-medium\">\n                            Round Name\n                          </span>\n                        </div>\n                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                          {interviewViewData?.roundName || \"N/A\"}\n                        </span>\n                      </td>\n                    </tr>\n                    <tr className=\" hover:bg-indigo-50\">\n                      <td className=\"p-3  text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <FaRegAddressCard className=\"size-4 text-header text-lg\" />\n                          <span className=\"text-[16px] font-medium\">\n                            Round No.\n                          </span>\n                        </div>\n                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                          {interviewViewData?.roundNumber}\n                        </span>\n                      </td>\n\n                      <td className=\"p-3  text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <AiOutlineMail className=\"size-4 text-header text-lg\" />\n                          <span className=\"text-[16px] font-medium\">\n                            location\n                          </span>\n                        </div>\n                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                          {interviewViewData?.location || \"N/A\"}\n                        </span>\n                      </td>\n                    </tr>\n\n                    <tr className=\" hover:bg-indigo-50\">\n                      <td className=\"p-3  text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <FaRegAddressCard className=\"size-4 text-header text-lg\" />\n                          <span className=\"text-[16px] font-medium\">\n                            Status\n                          </span>\n                        </div>\n                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                          {interviewViewData?.status}\n                        </span>\n                      </td>\n                      <td className=\"p-3  text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <FaRegAddressCard className=\"size-4 text-header text-lg\" />\n                          <span className=\"text-[16px] font-medium\">\n                            Type\n                          </span>\n                        </div>\n                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                          {interviewViewData?.type || \"N/A\"}\n                        </span>\n                      </td>\n                    </tr>\n\n                    <tr className=\" hover:bg-indigo-50\">\n                      <td className=\"p-3  text-gray-600\">\n                        <div className=\"flex items-center gap-2\">\n                          <FaPhoneAlt className=\"size-4 text-header text-lg\" />\n                          <span className=\"text-[16px] font-medium\">\n                            {\" \"}\n                            Date\n                          </span>\n                        </div>\n                        <span className=\"block text-[15px] ml-4 font-light mt-1\">\n                          {moment(interviewViewData?.date)?.format(\n                            \"DD/MM/YYYY\"\n                          ) || \"N/A\"}{\" \"}\n                        </span>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )}\n      </>\n\n    </GlobalLayout>\n  );\n}\nexport default InterviewList;\n","import { DatePicker } from \"antd\"\nimport { inputCalanderClassName } from \"../../constents/global\"\n\nfunction CustomDatePickerFilter({value , onChange , picker=\"date\" ,format = \"DD/MM/YYYY\" , size=\"large\", disabledDate ,disabled, defaultValue , report= false , showTime = false}) {\n    return (\n        <DatePicker\n        defaultValue={defaultValue}\n        showTime={showTime}\n \n        size={size}\n        disabled={disabled}\n        picker={picker}\n        format={format}\n       disabledDate =  {disabledDate}\n       value={value}\n       onChange={onChange}\n       getPopupContainer={() => document.body}\n        className={` ${report ? \"inputCalanderClassNameReport\" : inputCalanderClassName} `}\n        popupClassName={'!z-[1580]'}\n        />\n    )\n}\n\nexport default CustomDatePickerFilter\n","import React, { useState, useEffect, memo } from 'react';\nimport ReactQuill from 'react-quill';\nimport 'react-quill/dist/quill.snow.css'; // Import styles\nimport { FaRegFile, FaTimes } from 'react-icons/fa';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fileUploadFunc } from '../../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers';\nimport moment from 'moment';\nimport { domainName } from \"../../../../constents/global\"\nimport { Modal } from 'antd';\n\nconst EmailTemplateModal = ({ isOpen, onClose, onSubmit, interviewData, setOnBoardingId }) => {\n\n\n\n    const [formData, setFormData] = useState({\n        to: '',\n        cc: [],\n        subject: 'Regarding Interview',\n        employeeName: '',\n        jobTitle: '',\n        companyName: '',\n        joiningDate: '',\n        joiningTime: '',\n        officeAddress: '',\n        hrContact: '',\n        senderName: '',\n        senderTitle: '',\n        attachments: []\n    });\n    const [isPreview, setIsPreview] = useState(false);\n    const [editorValue, setEditorValue] = useState(``);\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        setFormData({\n            to: '',\n            cc: [],\n            subject: `Regarding Interview`,\n            employeeName: '',\n            jobTitle: '',\n            companyName: '',\n            joiningDate: '',\n            joiningTime: '',\n            officeAddress: '',\n            hrContact: '',\n            senderName: '',\n            senderTitle: '',\n            attachments: []\n        });\n        if (interviewData) {\n            setFormData((formData) => {\n                return {\n                    ...formData,\n                    to: interviewData?.email\n                }\n            })\n            const fetchedData = `<div class=\"space-y-4 ${'text-gray-600'}\">\n         <div style=\"width: 80%; margin: 0 auto; padding: 20px; background-color: #ffffff; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\">\n        <h1 style=\"font-size: 24px; color: #0073e6;\">Dear ${interviewData?.companyData?.fullName}!</h1>\n        <p style=\"font-size: 16px; line-height: 1.5;\">I hope this email finds you well. We are pleased to inform you that you have been shortlisted for the interview process for the position of [Job Title] at [Company Name].</p>\n\n        <h3 style=\"font-size: 18px; color: #0073e6; margin-top:10px;\">Interview Details::</h3>\n        <ul style=\"font-size: 16px; line-height: 1.5;\">\n            <li><span style=\"font-weight: bold;\">Date:</span> ${moment(interviewData?.dateOfJoining).format('YYYY-MM-DD')}</li>\n            <li><span style=\"font-weight: bold;\">Reporting Time:</span> ${moment(interviewData?.dateOfJoining).format('HH:MM')}</li>\n            <li><span style=\"font-weight: bold;\">Mode:</span> ${moment(interviewData?.dateOfJoining).format('HH:MM')}</li>\n            <li><span style=\"font-weight: bold;\">Location:</span> [Office Address / Virtual Meeting Link]</li>\n            <li><span style=\"font-weight: bold;\">Interview Panle:</span> [Name and Designation of Reporting Manager/HR Contact]</li>\n        </ul>\n\n        <h3 style=\"font-size: 18px; color: #0073e6;\">Additional Instructions::</h3>\n    \n        <p style=\"font-size: 16px; line-height: 1.5;\">kindly ensure you have a stable internet connection and access to the platform [e.g., Zoom, Teams].</p>\n\n        <p style=\"font-size: 16px; line-height: 1.5;\">Please confirm your availability by replying to this email at your earliest convenience. Should you have any questions or require further assistance, feel free to reach out to me.</p>\n\n        <p style=\"font-size: 16px; line-height: 1.5;\">We look forward to meeting you!</p>\n\n        <p style=\"font-size: 16px; line-height: 1.5;\">Best Regards,</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">${JSON.parse(localStorage.getItem(`user_info_${domainName}`))?.fullName}</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">[Your Designation]</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">${interviewData.companyData?.fullName}</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">[Contact Number]</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">${JSON.parse(localStorage.getItem(`user_info_${domainName}`))?.email}</p>\n        <p style=\"font-size: 16px; line-height: 1.5;\">[Company Website]</p>\n`\n            setEditorValue(fetchedData)\n        }\n    }, [interviewData])\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleFileChange = (e) => {\n        const file = e.target.files[0];\n        const reqData = {\n            filePath: file,\n            isVideo: false,\n            isMultiple: false,\n        };\n        dispatch(fileUploadFunc(reqData)).then((res) => {\n            if (res?.payload?.data) {\n                setFormData(prev => ({\n                    ...prev,\n                    attachments: [...prev.attachments, res.payload?.data]\n                }));\n            }\n        });\n    };\n\n    const handleRemoveFile = (index) => {\n        setFormData(prev => {\n            const updatedAttachments = prev.attachments.filter((_, i) => i !== index);\n            return { ...prev, attachments: updatedAttachments };\n        });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit({\n            content: editorValue,\n            to: formData?.to,\n            cc: typeof formData?.cc === 'string' ? formData.cc.split(',').map(v => v.trim()) : [],\n            subject: formData?.subject,\n            attachments: formData?.attachments\n        });\n\n    };\n\n    const handleClose = () => {\n        setFormData({\n            to: '',\n            cc: [],\n            subject: '',\n            employeeName: '',\n            jobTitle: '',\n            companyName: '',\n            joiningDate: '',\n            joiningTime: '',\n            officeAddress: '',\n            hrContact: '',\n            senderName: '',\n            senderTitle: '',\n            attachments: []\n        });\n        setIsPreview(false);\n        setEditorValue('');\n        setOnBoardingId([])\n        onClose();\n    };\n\n    const handleEditorChange = (value) => {\n        setEditorValue(value);\n    };\n\n    if (!isOpen) return null;\n\n    return (\n        // <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1501]\">\n        //     <div className=\"bg-white rounded-lg px-6 pt-6 pb-3 w-[800px] max-h-[70vh] overflow-y-hidden\">\n        //         <div className=\"flex justify-between items-center mb-4\">\n        //             <h2 className=\"text-sm font-semibold text-gray-800\">{isPreview ? 'Email Preview' : 'Offer Letter Email Template'}</h2>\n        //             <button onClick={handleClose} className=\"text-gray-500 hover:text-gray-700\">✕</button>\n        <Modal\n            open={true}\n            onCancel={handleClose}\n            footer={null}\n            closable={true}\n            width={800}\n            bodyStyle={{ maxHeight: '70vh'}}\n            centered\n            zIndex={1501}\n        >\n            <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-sm font-semibold text-gray-800\">\n                    {isPreview ? 'Email Preview' : 'Offer Letter Email Template'}\n                </h2>\n            </div>\n\n            <form autoComplete=\"off\" onSubmit={handleSubmit} className=\"space-y-4 \">\n                <div className=\"bg-white p-6 rounded-lg border border-gray-200 h-[50vh] overflow-y-auto\">\n                    <div className=\"space-y-4\">\n                        {/* Email Header */}\n                        <div className=\"font-semibold text-sm\">To:\n                            <input\n                                name=\"to\"\n                                value={formData.to}\n                                onChange={handleChange}\n                                placeholder=\"Recipient Email\"\n                                className=\"border p-2 w-full\"\n                            />\n                        </div>\n                        <div className=\"font-semibold text-sm\">CC:\n                            <input\n                                name=\"cc\"\n                                value={formData.cc}\n                                onChange={handleChange}\n                                placeholder=\"CC Emails\"\n                                className=\"border p-2 w-full\"\n                            />\n                        </div>\n                        <div className=\"font-semibold text-sm\">Subject:\n                            <input\n                                name=\"subject\"\n                                value={formData.subject}\n                                onChange={handleChange}\n                                placeholder=\"Email Subject\"\n                                className=\"border p-2 w-full\"\n                            />\n                        </div>\n                    </div>\n                    <div className=\"mt-4\">\n                        <ReactQuill\n                            value={editorValue}\n                            onChange={handleEditorChange}\n                            placeholder=\"Write the email body here\"\n                            modules={{\n                                toolbar: [\n                                    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                                    [{ 'list': 'ordered' }, { 'list': 'bullet' }],\n                                    ['bold', 'italic', 'underline', 'strike'],\n                                    [{ 'align': [] }],\n                                    ['link', 'image', 'video'],\n                                    ['blockquote', 'code-block'],\n                                    ['clean']\n                                ],\n                            }}\n                            formats={['header', 'font', 'list', 'bold', 'italic', 'underline', 'link', 'align', 'clean']}\n                        />\n                    </div>\n\n\n                    <div className=\"border-t pt-4 mt-6\">\n                        <div className=\"font-medium mb-2\">Attachments:</div>\n                        {!isPreview ? (\n                            <div className=\"space-y-4\">\n                                <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                                <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer\">\n                                    <FaRegFile className=\"mr-2\" /> Add Attachments\n                                </label>\n\n                                <div className=\"space-y-2\">\n                                    {formData.attachments.map((file, index) => (\n                                        <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                                            <a\n                                                href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                                                className=\"flex items-center space-x-2\"\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                <FaRegFile className=\"text-gray-500\" />\n                                                <span className=\"text-sm text-gray-600\">{file}</span>\n                                            </a>\n                                            <button\n                                                type=\"button\"\n                                                onClick={() => handleRemoveFile(index)}\n                                                className=\"text-red-500 hover:text-red-700\"\n                                            >\n                                                <FaTimes />\n                                            </button>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ) : (\n                            <div className=\"space-y-2\">\n                                {/* Attachments preview logic */}\n                            </div>\n                        )}\n                    </div>\n                </div>\n\n                <div className=\"flex justify-end gap-3 mt-6\">\n                    {/* <button\n                            type=\"button\"\n                            onClick={() => setIsPreview(!isPreview)}\n                            className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n                        >\n                            {isPreview ? 'Edit Template' : 'Preview'}\n                        </button> */}\n                    <button\n                        type=\"button\"\n                        onClick={handleClose}\n                        className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50\"\n                    >\n                        Cancel\n                    </button>\n                    <button\n                        type=\"submit\"\n                        className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md hover:bg-blue-700\"\n                    >\n                        Generate Email\n                    </button>\n                </div>\n            </form>\n        </Modal>\n        // </div>\n        // </div> \n    );\n};\n\nexport default EmailTemplateModal;\n","import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n"],"names":["_moment","navigate","useNavigate","dispatch","useDispatch","register","handleSubmit","setValue","getValues","unregister","control","formState","errors","useForm","defaultValues","pdStatus","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","interviewList","totalInterviewCount","loading","useSelector","state","interview","applicationList","totalApplicationCount","applistloading","application","interviewViewData","setInterviewerdata","useState","isEmailModalOpen","setIsEmailModalOpen","onBoardingId","setOnBoardingId","companyList","company","branchList","branchListloading","branch","designationList","designationloading","designation","departmentListData","departmentListloading","department","userEmployeId","getUserIds","CompanyId","useWatch","name","defaultValue","employeId","canCreate","canRead","canUpdate","canDelete","usePermissions","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialBranchId","initialStatus","initialDepartmentId","initialDesignationId","initialApplicationId","initialStartDate","initialEndDate","currentPage","setCurrentPage","limit","setLimit","status","setStatus","searchText","setSearchText","departmentId","setDepartmentId","applicationId","setApplicationId","designationId","setDesignationId","branchId","setBranchId","startDate","setStartDate","dayjs","endDate","setEndDate","useEffect","params","URLSearchParams","set","fetchApplicationListData","reqData","reqPayload","text","sort","isPagination","companyId","userType","_id","jobId","applicationSearch","fetchInterviewData","data","pageSize","format","getInterviewList","sortedList","setSortedList","handleSort","key","order","handleSortLogic","handleStatusUpdate","element","Swal","title","input","inputLabel","inputPlaceholder","showCancelButton","confirmButtonText","cancelButtonText","inputValidator","value","undefined","then","result","isConfirmed","feedback","statusUpdateApplication","error","viewInterview","setViewInterview","handleInterviewView","prev","branchSearch","deptSearch","designationSearch","_jsx","GlobalLayout","onChange","e","children","_jsxs","_Fragment","className","Select","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","option","String","toLowerCase","includes","Option","ListLoader","map","type","fullName","PDCompanyId","message","CustomDatePickerFilter","date","report","size","onClick","FaAngleUp","FaAngleDown","colSpan","Loader2","length","index","_element$applicationD","_element$applicationD2","_element$applicationD3","_element$applicationD4","_element$createdBy","interviewerName","interviewerPosition","applicationData","jobPostData","designationData","roundNumber","roundName","moment","createdAt","createdBy","_element$applicationD5","resumeUrl","_element$applicationD6","url","process","window","open","BsFileEarmarkPdfFill","Tooltip","placement","MdRemoveCircle","BsPassFill","FaEye","Dropdown","menu","items","label","encrypt","FaPenToSquare","id","icon","deleteInterview","Number","handleDelete","RiDeleteBin5Line","trigger","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","page","stopPropagation","preventDefault","IoPersonSharp","AiOutlineTags","FaPeopleGroup","FaIndustry","FaRegAddressCard","AiOutlineMail","location","FaPhoneAlt","_ref","picker","disabledDate","showTime","DatePicker","getPopupContainer","document","body","inputCalanderClassName","popupClassName","isOpen","onClose","onSubmit","interviewData","formData","setFormData","to","cc","subject","employeeName","jobTitle","companyName","joiningDate","joiningTime","officeAddress","hrContact","senderName","senderTitle","attachments","isPreview","setIsPreview","editorValue","setEditorValue","_interviewData$compan","_JSON$parse","_interviewData$compan2","_JSON$parse2","_objectSpread","email","fetchedData","companyData","dateOfJoining","handleChange","target","handleClose","Modal","onCancel","footer","closable","width","bodyStyle","maxHeight","centered","zIndex","autoComplete","content","split","v","trim","placeholder","ReactQuill","modules","toolbar","formats","filePath","files","isVideo","isMultiple","fileUploadFunc","res","_res$payload","payload","_res$payload2","htmlFor","FaRegFile","file","href","rel","updatedAttachments","filter","_","i","handleRemoveFile","FaTimes","Spin"],"sourceRoot":""}