{"version":3,"file":"static/js/4030.aabacaeb.chunk.js","mappings":"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","sources":["pages/taskManagement/addTask/AllCompletedTaskList.js","global_layouts/Loader/Loader.js","pages/taskManagement/employeeAddTask/ChatBox.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaEye, FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { decrypt, encrypt } from \"../../../config/Encryption\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport { FaAngleUp, FaAngleDown, FaSearch, FaUser } from \"react-icons/fa\";\nimport { HiChatAlt, HiOutlineFilter, HiViewGrid } from \"react-icons/hi\";\nimport { IoMdNotificationsOutline } from \"react-icons/io\";\nimport { AiOutlineMessage } from \"react-icons/ai\";\nimport {\n  domainName,\n  inputAntdSelectClassNameFilter,\n  inputClassNameSearch,\n  pazeSizeReport,\n  showSwal,\n  statusMapping,\n} from \"../../../constents/global\";\nimport {\n  getClientList,\n  deleteClientFunc,\n} from \"../../client/clientManagement/clientFeatures/_client_reducers\";\nimport Loader from \"../../../global_layouts/Loader/Loader\";\nimport {\n  deletetaskFunc,\n  getTaskList,\n  statusupdatetaskFunc,\n} from \"./addTaskFeatures/_addTask_reducers\";\nimport moment from \"moment\";\nimport ChatBox from \"../employeeAddTask/ChatBox\";\nimport { BsEye } from \"react-icons/bs\";\nimport { Modal, Select, Spin, Tooltip, Dropdown } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport { deptSearch } from \"../../department/departmentFeatures/_department_reducers\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { employeSearch, getEmployeDetails } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\nimport { BiCheckCircle } from \"react-icons/bi\";\nimport { MdDelete, MdOutlineTask, MdRemove } from \"react-icons/md\";\nimport { CLIENT_TASK_STATUS_ARR } from \"../../../constents/ActionConstent\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport dayjs from \"dayjs\";\nimport { GrValidate } from \"react-icons/gr\";\nimport { MdOutlineAssignment } from \"react-icons/md\";\nimport { TbPencilMinus } from \"react-icons/tb\";\n\n\nfunction AllCompletedTaskList() {\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [isChatModalOpen, setIsChatModalOpen] = useState(false);\n  const [comments, setComments] = useState(null);\n  const userInfoglobal = JSON.parse( localStorage.getItem(`user_info_${domainName}`));\n  const { employeList } = useSelector((state) => state.employe);\n  const { taskList, totalTaskCount, loading } = useSelector((state) => state.addTask);\n  const { employeDetailsData } = useSelector((state) => state.employe);\n  const { departmentListData, loading: deptLoading } = useSelector((state) => state.department);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedEmployee, setSelectedEmployee] = useState(null);\n  const [EmployeeViewModal, setEmployeeViewModal] = useState({\n    isOpen: false,\n    data: null\n  });\n  const [searchParams, setSearchParams] = useSearchParams();\n const initialPage = parseInt(searchParams.get('page')) || 1;\n  const initialLimit = parseInt(searchParams.get('limit')) || 10;\n  const initialBranchId = searchParams.get('branchId') || '';\n  const initialDepartmentId = searchParams.get('departmentId') || '';\n  const initialEmployeeId = searchParams.get('employeeId') || '';\n  const initialStatus = searchParams.get('status') || '';\n  const initialOverdue = searchParams.get('overdue') || '';\n\n\n\n\n const [currentPage, setCurrentPage] = useState(initialPage);\n  const [limit, setLimit] = useState(initialLimit);\n  const [branchId, setBranchId] = useState(initialBranchId);\n  const [departmentId, setDepartmentId] = useState(initialDepartmentId);\n  const [employeeId, setEmployeeId] = useState(initialEmployeeId);\n  // const [status, setStatus] = useState(initialStatus);\n  const [isOverDue, setIsOverDue] = useState(initialOverdue);\n  const [searchText, setSearchText] = useState('');\n\n useEffect(() => {\n    const params = new URLSearchParams();\n    if (currentPage > 1) params.set('page', currentPage);\n    if (limit !== 10) params.set('limit', limit);\n    if (branchId) params.set('branchId', branchId);\n    if (departmentId) params.set('departmentId', departmentId);\n    if (employeeId) params.set('employeeId', employeeId);\n    // if (status) params.set('status', encrypt(status));\n    if (isOverDue) params.set('overdue', isOverDue);\n    setSearchParams(params);\n  }, [currentPage, limit, branchId, departmentId, employeeId,  isOverDue, searchText]);\n  useEffect(() => {\n    fetchClientListData();\n  }, [currentPage, limit, branchId, departmentId, employeeId,  isOverDue, searchText]);\n\n  const handleResetFilters = () => {\n    setCurrentPage(1);\n    setLimit(10);\n    setBranchId('');\n    setDepartmentId('');\n    setEmployeeId('');\n    // setStatus('');\n    setIsOverDue('');\n    setSearchText('');\n  };\n  const onChange = (e) => {\n    setSearchText(e);\n  \n  };\n  const handlePageSizeChange = (e) => {\n    setLimit(Number(e));\n    setCurrentPage(Number(1))\n  };\n  const onPaginationChange = (page) => setCurrentPage(page)\n  const handleBranchChange = (value) => {\n    setBranchId(value);\n    setCurrentPage(1); \n  };\n\n  const handleDepartmentChange = (value) => {\n    setDepartmentId(value);\n    setCurrentPage(1);\n  };\n\n  const handleEmployeeChange = (value) => {\n    setEmployeeId(value);\n    setCurrentPage(1);\n  };\n\n\n\n  const handleOverdueChange = (value) => {\n    setIsOverDue(value);\n    setCurrentPage(1);\n  };\n  const fetchClientListData = () => {\n    let reqData = {\n      page: currentPage,\n      limit: limit,\n      reqPayload: {\n        companyId:\n        userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId,\n        directorId: \"\",\n        clientId: \"\",\n        employeId: employeeId,\n        taskTypeId: \"\",\n        groupId: \"\",\n        text: searchText,\n        sort: true,\n        status:'Completed',\n        isOverDue: isOverDue === 'true' ? true : isOverDue === 'false' ? false : '',\n        isPagination: true,\n      },\n    };\n    dispatch(getTaskList(reqData));\n  };\n\n\n\n\n\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n            ? branchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId ? departmentId : '',\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: false,\n        isDirector: false,\n      })\n    )\n  };\n  useEffect(() => {\n    if (selectedEmployee) {\n      const reqData = { _id: selectedEmployee?._id };\n      dispatch(getEmployeDetails(reqData));\n    }\n  }, [selectedEmployee]);\n  const handleImageClick = (employee) => {\n    setSelectedEmployee(employee);\n    setModalOpen(true);\n  }\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedEmployee(null);\n  };\n\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deletetaskFunc(reqData)).then((data) => {\n          // fetchClientListData();\n          if (currentPage > 1 && taskList?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n\n          } else {\n            fetchClientListData();\n          }\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n\n    dispatch(\n      branchSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n      })\n    )\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n      })\n    )\n\n  }, []);\n\n  const handleOpenChat = (data) => {\n    setIsChatModalOpen(true);\n    setComments(data?.commentData);\n  };\n\n  const handleCloseChat = () => {\n    setIsChatModalOpen(false);\n    setComments(null);\n  };\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n\n  return (\n    <GlobalLayout onChange={onChange}>\n\n      <section>\n        <div>\n          <div className=\"space-y-1\">\n            <div className=\"2xl:flex justify-between items-center space-y-1.5 overflow-y-auto py-1\">\n              {/* <div class=\"xl:flex justify-between items-center py-1 lg:space-y-0 space-y-2 overflow-y-auto\"> */}\n              <div className=\"grid sm:grid-cols-3 grid-cols-1 md:grid-cols-4 lg:grid-cols-4 xl:flex xl:gap-3 gap-1.5\">\n                {(userInfoglobal?.userType == 'company' || userInfoglobal?.userType == 'companyDirector') && (\n                  <div>\n                    <Select\n                      value={branchId}\n                      onChange={handleBranchChange}\n                      defaultValue=\"\"\n                      disabled={loading}\n                      className={`${inputAntdSelectClassNameFilter} `}\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Branch</Select.Option>\n                      {branchListloading ? (\n                        <Select.Option disabled><ListLoader /></Select.Option>\n                      ) : (\n                        branchList?.map((type) => (\n                          <Select.Option key={type?._id} value={type?._id}>\n                            {type?.fullName}\n                          </Select.Option>\n                        ))\n                      )}\n                    </Select>\n                  </div>\n                )}\n                \n                <div className=\"\">\n                  <Select\n                    value={departmentId}\n                    onChange={handleDepartmentChange}\n                    showSearch\n                    disabled={loading}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    defaultValue=\"\"\n                    className={`${inputAntdSelectClassNameFilter} `}\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {deptLoading ? (\n                      <Select.Option disabled><ListLoader /></Select.Option>\n                    ) : (\n                      departmentListData?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                </div>\n                \n                <div className=\"\">\n                  <Select\n                    value={employeeId}\n                    onChange={handleEmployeeChange}\n                    disabled={loading}\n                    showSearch\n                    filterOption={(input, option) =>\n                      option?.label?.toLowerCase().includes(input.toLowerCase())\n                    }\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    placeholder=\"Select Employee\"\n                    onFocus={handleEmployeeFocus}\n                    options={[\n                      { label: \"Select Employee\", value: '' },\n                      ...(employeList || []).map((element) => ({\n                        label: element.fullName,\n                        value: element._id,\n                      })),\n                    ]}\n                  />\n                </div>\n                <div>\n                  <Select\n                    value={isOverDue}\n                    onChange={handleOverdueChange}\n                    defaultValue=\"\"\n                    disabled={loading}\n                    className={`${inputAntdSelectClassNameFilter} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">All Task</Select.Option>\n                    <Select.Option value=\"true\">Overdue Task</Select.Option>\n                    <Select.Option value=\"false\">Other Task</Select.Option>\n                  </Select>\n                </div>\n              \n             \n            </div>\n            \n            \n              {/* </div> */}\n              <div className=\"flex justify-end items-center gap-2 \">\n                <button\n                  onClick={() => {\n                  handleResetFilters();\n\n                  }}\n                  className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                  <span className=\"text-[12px]\">Reset</span>\n                </button>\n                {canCreate && (\n                  <Tooltip placement=\"topLeft\"  title='Add Task'>\n                    <button\n                      onClick={() => {\n                        navigate(\"/admin/task/create\");\n                      }}\n                      className=\"bg-header px-2 py-1.5 rounded-md flex justify-center whitespace-nowrap items-center space-x-2 text-white\"\n                    >\n                      <FaPlus />\n                      <span className=\"text-[12px]\">Add Task</span>\n                    </button>\n                  </Tooltip>)}\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-light text-gray-500\">\n                Rows per page:\n              </span>\n              <Select\n                value={limit}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n          </div>\n          <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n            {canRead && (\n              <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                <thead className=\"bg-header text-white text-[12px] font-[500]\">\n                  <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                    <th className=\"p-2 whitespace-nowrap text-left w-[50px]\">S.No.</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[135px]\">Client Name</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[115px]\">Department</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[135px]\">Task Name</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[125px]\">Assign To</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[85px]\">Financial Year</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[85px]\">Period</th>\n                    <th className=\"p-2 whitespace-nowrap text-left hidden 2xl:table-cell min-w-[95px]\">Assigned Date</th>\n                    <th className=\"p-2 whitespace-nowrap text-left hidden 2xl:table-cell min-w-[95px]\">Due Date</th>\n                    <th className=\"p-2 whitespace-nowrap text-left hidden 2xl:table-cell min-w-[125px]\">Last Updated On</th>\n                    <th className=\"p-2 whitespace-nowrap text-left min-w-[75px]\">Status</th>\n                    {(canUpdate || canDelete || canRead) && (\n                      <th className=\"p-2 whitespace-nowrap text-left w-[75px]\">Action</th>\n                    )}\n                  </tr>\n                </thead>\n\n                {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={12}\n                    className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr> :\n                  <tbody>\n                    {taskList && taskList.length > 0 ? (\n                      taskList.map((element, index) => (\n                        <tr\n                          className={` !text-xs \n                          ${element?.isOverDue ? \"bg-rose-300 text-gray-800\" :\n                              element?.priority == \"high\" ? \"bg-[#FFE5B4] text-gray-800\" :\n                                element?.priority == \"medium\" ? \"bg-green-300 text-gray-800\" : \"bg-white text-[#374151]\"\n                            }\n                          border-b-[1px] border-[#DDDDDD]  text-[14px]`}>\n                          <td className=\"p-2 text-left w-[50px]\">\n                            {index + 1 + (currentPage - 1) * limit}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[135px]\">\n                            {element?.clientData?.fullName}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[115px]\">\n                            {element?.departmentData?.name}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[135px]\">\n                            {element?.taskName}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[125px]\">\n                            <div className=\"flex gap-1 items-center\">\n                              <span>{element?.assignedEmployeData?.[0]?.fullName}</span>\n                              {element?.assignedEmployeData?.length > 1 && (\n                                <span className=\"text-header flex items-center gap-1\">\n                                  +\n                                  <span className=\"h-5 w-5 bg-header text-white text-[12px] rounded-full flex items-center justify-center\">\n                                    {element?.assignedEmployeData?.length - 1}\n                                  </span>\n                                </span>\n                              )}\n                              <FaEye\n                                className=\"text-[#374151] text-[14px] cursor-pointer\"\n                                onClick={() =>\n                                  setEmployeeViewModal({ isOpen: true, data: element })\n                                }\n                              />\n                            </div>\n                          </td>\n                          <td className=\"p-2 text-left min-w-[85px]\">\n                            {element?.financialYear || \"-\"}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[85px]\">\n                            {element?.type === \"Monthly\" && element?.monthName}\n                            {element?.type === \"Quaterly\" && element?.monthQuaters}\n                            {element?.type === \"Yearly\" && \"Yearly\"}\n                          </td>\n                          <td className=\"p-2 text-left hidden 2xl:table-cell min-w-[95px]\">\n                            {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n                          <td className=\"p-2 text-left hidden 2xl:table-cell min-w-[95px]\">\n                            {moment(element?.dueDate).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n                          <td className=\"p-2 text-left hidden 2xl:table-cell min-w-[125px]\">\n                            {moment(element?.updatedAt).format(\"DD-MM-YYYY hh:mm a\")}\n                          </td>\n                          <td className=\"p-2 text-left min-w-[75px]\">\n                            <span\n                              className={`\n                              ${element?.status === \"Assigned\"\n                                  ? \"bg-blue-500 text-white\"\n                                  : element?.status === \"Accepted\"\n                                    ? \"bg-green-500 text-white\"\n                                    : element?.status === \"Pending_at_client\"\n                                      ? \"bg-yellow-300 text-black\"\n                                      : element?.status === \"Pending_at_department\"\n                                        ? \"bg-purple-300 text-black\"\n                                        : element?.status === \"Pending_at_colleague\"\n                                          ? \"bg-teal-300 text-black\"\n                                          : element?.status === \"Pending_at_manager\"\n                                            ? \"bg-orange-300 text-black\"\n                                            : element?.status === \"Work_in_progress\"\n                                              ? \"bg-indigo-500 text-white\"\n                                              : element?.status === \"Pending_for_approval\"\n                                                ? \"bg-pink-300 text-black\"\n                                                : element?.status === \"Pending_for_fees\"\n                                                  ? \"bg-gray-400 text-black\"\n                                                  : element?.status === \"Completed\"\n                                                    ? \"bg-green-600 text-white\"\n                                                    : element?.status === \"Task_Stop\"\n                                                      ? \"bg-red-600 text-white\"\n                                                      : element?.status === \"Rejected\"\n                                                        ? \"bg-rose-800 text-white\"\n                                                        : element?.status === \"reAssign_to_other\"\n                                                          ? \"bg-cyan-700 text-white\"\n                                                          : \"bg-white text-black\"\n                                } border-header border-[1px] px-2 py-1.5 rounded-lg whitespace-nowrap text-[12px]`}\n\n                            >\n                              {element?.status\n                                ?.replace(/_/g, ' ')\n                                .toLowerCase()\n                                .replace(/\\b\\w/g, char => char.toUpperCase())}\n\n                            </span>\n                          </td>\n                          {(canUpdate || canDelete || canRead) && (\n                            <td className=\"p-2 text-left w-[75px]\">\n                              <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                {canRead && (\n                                  <Tooltip placement=\"topLeft\"  title=\"View Task\">\n                                    <button\n                                      onClick={() => {\n                                        navigate(\n                                          `/admin/task/view/${encrypt(\n                                            element?._id\n                                          )}/${encrypt(`manager`)}`\n                                        );\n                                      }}\n                                      className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border-gray-800 border-[1.5px]\"\n                                      type=\"button\"\n                                    >\n                                      <BsEye\n                                        className=\" hover:text-gray-800 text-gray-800\"\n                                        size={16}\n                                      />\n                                    </button>\n                                  </Tooltip>\n                                )}\n\n                                {/* Create Invoice button - show only if isInvoiceGenerated is false */}\n                                {element?.isInvoiceGenerated === false && (\n                                  <Tooltip placement=\"topLeft\" title=\"Create Invoice\">\n                                    <button\n                                      onClick={() => {\n                                        // Encrypt task data to pass in URL\n                                        const taskData = {\n                                          _id: element?._id,\n                                          taskName: element?.taskName,\n                                          clientId: element?.clientData?._id,\n                                          clientName: element?.clientData?.fullName,\n                                          fee: element?.fee,\n                                          financialYear: element?.financialYear,\n                                          type: element?.type,\n                                          branchId: element?.branchId,\n                                          companyId: element?.companyId,\n                                          taskTypeId: element?.taskTypeId,\n                                        }\n                                        \n                                        const encryptedTaskData = encrypt(JSON.stringify(taskData));\n                                        navigate(`/admin/invoice/create?taskData=${encryptedTaskData}`);\n                                      }}\n                                      className=\"px-2 py-1.5 text-xs rounded-md bg-green-600 hover:bg-green-700 text-white border-green-600 border-[1.5px] transition-colors duration-200\"\n                                      type=\"button\"\n                                    >\n                                      <FaPlus\n                                        className=\"text-white\"\n                                        size={16}\n                                      />\n                                    </button>\n                                  </Tooltip>\n                                )}\n\n                                <Dropdown\n                                  menu={{\n                                    items: [\n                                      {\n                                        key: 'responsive-date-info',\n                                        label: (\n                                          <div className=\"2xl:hidden block\">\n                                            <div className=\"flex flex-col space-y-1.5\">\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-slate-800 hover:text-slate-700\"\n                                              >\n                                                <MdOutlineAssignment className=\"mr-2\" size={16} />\n                                                Assigned Date\n                                              </span>\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(dayjs(element?.dueDate).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-purple-800 hover:text-purple-700\"\n                                              >\n                                                <MdOutlineTask className=\"mr-2\" size={16} />\n                                                Due Date\n                                              </span>\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(dayjs(element?.updatedAt).format('DD-MM-YYYY hh:mm a') || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-teal-700 hover:text-teal-600\"\n                                              >\n                                                <GrValidate className=\"mr-2\" size={15} />\n                                                Last Updated On\n                                              </span>\n                                              <span\n                                                onClick={() =>\n                                                  showSwal(element?.createdBy || \"Data not available\")\n                                                }\n                                                className=\"flex items-center text-sky-800 hover:text-sky-700\"\n                                              >\n                                                <TbPencilMinus className=\"mr-2\" size={16} />\n                                                Created By\n                                              </span>\n                                            </div>\n                                          </div>\n                                        ),\n                                      },\n                                      ...(canUpdate\n                                        ? [{\n                                          key: 'edit-task',\n                                          label: (\n                                            <span\n\n                                              className={`flex justify-start items-center gap-1 ${element?.status !== 'Assigned' ? 'text-gray-500' : ''}`}\n                                            >\n                                              <FaPenToSquare\n                                                className={`mr-2 ${element?.status !== 'Assigned' ? 'text-gray-500' : 'text-[#3c8dbc] hover:text-[#337ab7]'}`}\n                                                size={16}\n                                              />\n                                              {'Edit Task'}\n                                            </span>\n                                          ),\n                                          disabled: element?.status !== 'Assigned',\n                                          onClick: () => {\n                                            if (element?.status === 'Assigned') {\n                                              navigate(`/admin/task/edit/${encrypt(element?._id)}`);\n                                            }\n                                          }\n                                        }]\n                                        : []),\n                                      ...(canRead\n                                        ? [{\n                                          key: 'view-description',\n                                          label: (\n                                            <span\n                                              className=\"flex justify-start items-center gap-1\"\n                                              onClick={() => handleOpenChat(element)}>\n                                              <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} />\n                                              View Description\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n                                      ...((canDelete && userInfoglobal?.userType !== \"company\")\n                                        ? [{\n                                          key: 'delete-task',\n                                          label: (\n                                            <span\n                                              onClick={() => {\n                                                if (element?.status === 'Assigned') handleDelete(element?._id);\n                                              }}\n                                              className={`flex justify-start items-center gap-1 ${element?.status !== 'Assigned' ? 'text-gray-500' : 'text-red-500'}`}\n                                            >\n                                              <RiDeleteBin5Line\n                                                className={`mr-2 ${element?.status === 'Assigned'\n                                                  ? 'text-red-600 hover:text-red-500'\n                                                  : 'text-gray-500'\n                                                  }`}\n                                                size={16}\n                                              />\n                                              {'Delete Task'}\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n                                      ...(userInfoglobal?.userType === \"company\"\n                                        ? [{\n                                          key: 'delete-task',\n                                          label: (\n                                            <span\n                                              onClick={() => {\n                                                handleDelete(element?._id);\n                                              }}\n                                              className={`flex justify-start items-center gap-1  text-red-500`}\n                                            >\n                                              <RiDeleteBin5Line\n                                                className={`mr-2 ${'text-red-600 hover:text-red-500'}`}\n                                                size={16}\n                                              />\n                                              {'Delete Task'}\n                                            </span>\n                                          ),\n                                        }]\n                                        : []),\n\n                                      // ...(canRead\n                                      //   ? [{\n                                      //     key: 'createdAt',\n                                      //     label: (\n                                      //       <span\n                                      //         className=\"flex justify-start items-center gap-1\"\n                                      //       // onClick={() => handleOpenChat(element)}\n                                      //       >\n                                      //         {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                      //         {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                                      //       </span>\n                                      //     ),\n                                      //   }]\n                                      //   : []),\n\n                                      // ...(canRead\n                                      //   ? [{\n                                      //     key: 'createdBy',\n                                      //     label: (\n                                      //       <span\n                                      //         className=\"flex justify-start items-center gap-1\"\n                                      //       // onClick={() => handleOpenChat(element)}\n                                      //       >\n                                      //         {/* <HiChatAlt className=\"mr-2 text-[#3c8dbc] hover:text-[#337ab7]\" size={16} /> */}\n                                      //         {element?.createdBy}\n                                      //       </span>\n                                      //     ),\n                                      //   }]\n                                      //   : []),\n                                    ],\n                                  }}\n                                  trigger={['click']}\n                                >\n                                  <button\n                                    className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border-gray-800 border-[1.5px]\"\n                                    type=\"button\"\n                                  >\n                                    <PiDotsThreeOutlineVerticalBold\n                                      className=\" hover:text-gray-900 text-gray-900\"\n                                      size={16}\n                                    />\n                                  </button>\n                                </Dropdown>\n                              </span>\n                            </td>\n                          )}\n                        </tr>\n                      ))\n                    ) : (\n                      <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                          colSpan={12}\n                          className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                          Record Not Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>}\n              </table>\n            )}\n          </div>\n          {\n            taskList?.length > 0 && (\n              <CustomPagination\n                totalCount={totalTaskCount}\n                pageSize={limit}\n                currentPage={currentPage}\n                onChange={onPaginationChange}\n              />\n            )}\n        </div>\n      </section>\n\n      {\n        isChatModalOpen && (\n          <ChatBox\n            isOpen={isChatModalOpen}\n            onClose={() => handleCloseChat()}\n            comment={comments}\n          />\n        )\n      }\n      <Modal\n        title=\"Employee List\"\n        visible={EmployeeViewModal?.isOpen}\n        onCancel={() => setEmployeeViewModal({\n          isOpen: false,\n          employee: null,\n        })}\n        className=\"antmodalclassName\"\n        footer={[\n          <button\n            key=\"close\"\n            onClick={() => setEmployeeViewModal({\n              isOpen: false,\n              employee: null,\n            })}\n            className=\" capitalize px-2 py-1 rounded-sm bg-header text-white\"\n          >\n            Close\n          </button>\n        ]}\n        width={800}\n        centered\n      >\n        <div className=\"flex items-center\">\n\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-4 p-4\">\n            {EmployeeViewModal?.data?.assignedEmployeData?.map((element) => (\n              <div\n                key={element.id}\n                onClick={() => handleImageClick(element)}\n                className=\"flex flex-col items-center p-3 rounded-lg bg-white hover:bg-gray-50 cursor-pointer transition-all shadow-sm hover:shadow-md border border-gray-100\"\n              >\n                {/* Avatar with subtle ring */}\n                <div className=\"w-16 h-16 mb-2 rounded-full overflow-hidden ring-2 ring-amber-100\">\n                  <img\n                    alt={element.fullName}\n                    src={\n                      element.profileImage\n                        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`\n                        : \"/images/avatar.jpg\"\n                    }\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n\n                {/* Name + Role (if available) */}\n                <div className=\"text-center\">\n                  <p className=\"font-medium text-gray-800 truncate max-w-[100px]\">\n                    {element.fullName}\n                  </p>\n                  {element.designation && (\n                    <p className=\"text-xs text-gray-500 mt-1 truncate max-w-[100px]\">\n                      {element.designation}\n                    </p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n        <Modal\n          title=\"Employee Details\"\n          visible={modalOpen}\n          onCancel={closeModal}\n          className=\"antmodalclassName\"\n          footer={[\n            <button\n              key=\"close\"\n              onClick={closeModal}\n              className=\" capitalize px-2 py-1 rounded-sm bg-header text-white\"\n            >\n              Close\n            </button>\n          ]}\n          width={600}\n          centered\n        >\n          {loading ? (\n            <div className=\"flex justify-center\">\n              <Spin size=\"large\" />\n            </div>\n          ) : (\n            employeDetailsData?.data && (\n              <div className=\"mt-4\">\n                <div className=\"flex flex-col md:flex-row items-center\">\n                  <img\n                    alt=\"\"\n                    src={\n                      employeDetailsData?.data?.profileImage\n                        ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${employeDetailsData?.data?.profileImage}`\n                        : `/images/avatar.jpg`\n                    }\n                    className=\"rounded-full w-16 h-16 ring-2 ring-amber-300\"\n                  />\n                  <div className=\"ml-4\">\n                    <p className=\"font-semibold\">{employeDetailsData?.data?.fullName}</p>\n                    <p>{employeDetailsData?.data?.designationData?.name}</p>\n                    <p>{employeDetailsData?.data?.email}</p>\n                    <p>{employeDetailsData?.data?.companyData?.fullName}</p>\n                    <p>{employeDetailsData?.data?.departmentData?.name}</p>\n                    <p>{employeDetailsData?.data?.branchData?.fullName}</p>\n                    <p>\n                      {employeDetailsData?.data?.mobile?.code} {employeDetailsData?.data?.mobile?.number}\n                    </p>\n                    {/* Additional Info */}\n                    <div className=\"mt-3\">\n                      <p>\n                        <strong>Office Email:</strong> {employeDetailsData?.data?.officeEmail}\n                      </p>\n                      <p>\n                        <strong>User Name:</strong> {employeDetailsData?.data?.userName}\n                      </p>\n                      <p>\n                        <strong>Status:</strong> {employeDetailsData?.data?.status ? 'Active' : 'Inactive'}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n\n              </div>\n            )\n          )}\n        </Modal>\n      </Modal>\n\n    </GlobalLayout >\n  );\n}\nexport default AllCompletedTaskList;","import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { statusMapping } from \"../../../constents/global\";\nimport moment from \"moment\";\nimport { RxCross1 } from \"react-icons/rx\";\n\nconst ChatBox = ({ onClose, comment }) => {\n  const [messages, setMessages] = useState([]);\n  const [open, setOpen] = useState('translate-y-full');\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    setOpen(\"translate-y-0\");\n    return () => {\n      setOpen(\"translate-y-full\");\n    };\n  }, [messages]);\n\n  useEffect(() => {\n    if (comment) {\n      const commentData = comment.map((comment) => ({\n        sender: comment?.creatorData?.fullName,\n        text: comment?.message,\n        status: comment?.status,\n        createdAt: comment?.createdAt || Date.now(),\n      }));\n      setMessages(commentData);\n    }\n  }, [comment]);\n\n  const handleClose = () => {\n    // Trigger the closing animation after 300ms\n    setTimeout(() => {\n      setOpen(\"translate-y-full\"); // This will trigger the closing animation\n      setTimeout(() => {\n        onClose(); // Call the onClose function after the animation\n      }, 300); // Ensure onClose is called after the animation ends (500ms)\n    }, 50); // 300ms delay before starting the animation\n  };\n\n  return (\n    <div\n      className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-end items-end px-2 z-[1501]\"\n      onClick={handleClose}\n    >\n      <div\n        className={`bg-white rounded-lg w-full max-w-md max-h-[80vh] shadow-xl overflow-hidden transform transition-all duration-500 ease-in-out ${open}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        <div className=\"p-2 bg-header text-white rounded-lg shadow-md text-center text-md font-semibold flex justify-between items-center\">\n          Task Comments\n          <RxCross1 className=\"cursor-pointer\" onClick={handleClose} />\n        </div>\n\n        <div className=\"p-4 h-[60vh] overflow-y-auto space-y-2\">\n          {messages.length > 0 ? (\n            messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`flex flex-col ${msg.sender === \"You\" ? \"items-end\" : \"items-start\"}`}\n              >\n                <div className=\"p-1 w-[100%] max-w-[100%]\">\n                  <div className=\"text-sm font-semibold mb-2 text-gray-600 \">\n                    {msg.sender}\n                  </div>\n\n                  <div\n                    className={`pl-4 border-l border-gray-200 ${\n                      msg.status === \"Assigned\"\n                        ? \"border-blue-500 text-white\"\n                        : msg.status === \"Accepted\"\n                        ? \"border-green-500 text-white\"\n                        : msg.status === \"Pending_at_client\"\n                        ? \"border-yellow-400 text-black\"\n                        : msg.status === \"Completed\"\n                        ? \"border-green-800 text-white\"\n                        : \"border-gray-300 text-black\"\n                    }`}\n                  >\n                    <p className=\"text-sm mb-2 text-gray-800 \">{msg.text}</p>\n                    <div\n                      className={`text-xs mb-2 px-2 py-1 rounded-full inline-block shadow-xl ${\n                        msg.status === \"Assigned\"\n                          ? \"bg-blue-500 text-white\"\n                          : msg.status === \"Accepted\"\n                          ? \"bg-green-500 text-white\"\n                          : msg.status === \"Pending_at_client\"\n                          ? \"bg-yellow-400 text-black\"\n                          : msg.status === \"Completed\"\n                          ? \"bg-green-800 text-white\"\n                          : \"bg-gray-300 text-black\"\n                      }`}\n                    >\n                      {statusMapping[msg.status] || \"No Status\"}\n                    </div>\n                  </div>\n                  {/* Date and Time at Bottom Left */}\n                  <div className=\"text-xs text-gray-500 mt-2\">\n                    {moment(msg.createdAt).format(\"MMM DD, YYYY - h:mm A\")}\n                  </div>\n                </div>\n              </div>\n            ))\n          ) : (\n            <p className=\"text-center text-gray-500\">No comments available.</p>\n          )}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"names":["_EmployeeViewModal$da","_EmployeeViewModal$da2","_employeDetailsData$d","_employeDetailsData$d2","_employeDetailsData$d3","_employeDetailsData$d4","_employeDetailsData$d5","_employeDetailsData$d6","_employeDetailsData$d7","_employeDetailsData$d8","_employeDetailsData$d9","_employeDetailsData$d0","_employeDetailsData$d1","_employeDetailsData$d10","_employeDetailsData$d11","_employeDetailsData$d12","_employeDetailsData$d13","_employeDetailsData$d14","_employeDetailsData$d15","_employeDetailsData$d16","_employeDetailsData$d17","branchList","branchListloading","useSelector","state","branch","navigate","useNavigate","dispatch","useDispatch","isChatModalOpen","setIsChatModalOpen","useState","comments","setComments","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","employeList","employe","taskList","totalTaskCount","loading","addTask","employeDetailsData","departmentListData","deptLoading","department","modalOpen","setModalOpen","selectedEmployee","setSelectedEmployee","EmployeeViewModal","setEmployeeViewModal","isOpen","data","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialLimit","initialBranchId","initialDepartmentId","initialEmployeeId","initialOverdue","currentPage","setCurrentPage","limit","setLimit","branchId","setBranchId","departmentId","setDepartmentId","employeeId","setEmployeeId","isOverDue","setIsOverDue","searchText","setSearchText","useEffect","params","URLSearchParams","set","fetchClientListData","reqData","page","reqPayload","companyId","userType","_id","directorId","clientId","employeId","taskTypeId","groupId","text","sort","status","isPagination","getTaskList","getEmployeDetails","closeModal","handleDelete","id","Swal","title","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deletetaskFunc","length","Number","branchSearch","deptSearch","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsxs","GlobalLayout","onChange","e","children","_jsx","className","Select","value","defaultValue","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","ListLoader","map","type","fullName","name","_option$label","label","placeholder","onFocus","handleEmployeeFocus","employeSearch","isBranch","isDirector","options","element","onClick","Tooltip","placement","FaPlus","pazeSizeReport","size","colSpan","Loader2","index","_element$clientData","_element$departmentDa","_element$assignedEmpl","_element$assignedEmpl2","_element$assignedEmpl3","_element$assignedEmpl4","_element$status","priority","clientData","departmentData","taskName","assignedEmployeData","FaEye","financialYear","monthName","monthQuaters","moment","createdAt","format","dueDate","updatedAt","replace","char","toUpperCase","encrypt","BsEye","isInvoiceGenerated","_element$clientData2","_element$clientData3","taskData","clientName","fee","encryptedTaskData","stringify","Dropdown","menu","items","key","showSwal","dayjs","MdOutlineAssignment","MdOutlineTask","GrValidate","createdBy","TbPencilMinus","FaPenToSquare","handleOpenChat","commentData","HiChatAlt","RiDeleteBin5Line","trigger","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","pageSize","ChatBox","onClose","comment","Modal","visible","onCancel","employee","footer","width","centered","alt","src","profileImage","process","designation","Spin","designationData","email","companyData","branchData","mobile","code","number","officeEmail","userName","_ref","messages","setMessages","open","setOpen","messagesEndRef","useRef","_messagesEndRef$curre","current","scrollIntoView","behavior","_comment$creatorData","sender","creatorData","message","Date","now","handleClose","setTimeout","stopPropagation","RxCross1","msg","statusMapping","ref"],"sourceRoot":""}