{"version":3,"file":"static/js/698.a8cbed72.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/client_service_report/ClientServiceReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { clientServiceReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\n\nfunction ClientServiceReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const {\n    clientServiceReportList,\n    clientServiceReportFunc_loading,\n    clientServiceReportCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList, groupSearchLoading } = useSelector((state) => state.clientGroup);\n  const { clientList } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n        organizationId: PDOrganizationType,\n        organizationIds: [],\n        departmentId: department,\n        departmentIds: [],\n        industryId: PDindustrytype,\n        industryIds: [],\n        groupId: groupName,\n        groupIds: [],\n\n        text: \"\",\n        sort: true,\n\n        isPagination: pagination,\n      },\n    };\n  };\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: debouncedFilterText,\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(clientServiceReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n\n  const handleDepartmentModal = (element) => {\n    setDepartmentModalOpen(true);\n    setDepartmentModalData(element);\n  };\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"ClientServiceReport\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Service Name\", key: \"department\", width: 25 },\n      // { header: \"Email\", key: \"email\", width: 25 },\n      // { header: \"Mobile\", key: \"mobile\", width: 25 },     \n\n      { header: \"Created By\", key: \"createdBy\", width: 25 },\n      { header: \"Created At\", key: \"createdAt\", width: 25 },\n\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    // const response = await reportsServices?.clientServiceReportFunc(\n    //   requestPayLoadReturn(false)\n    // );\n\n\n    if (!departmentModalData && !departmentModalData?.servicesData) return;\n    const apiData = departmentModalData?.servicesData?.map((data, index) => {\n      return {\n        sno: index + 1,\n        department: data?.name || \"N/A\",\n\n        createdBy: data?.createdBy || \"N/A\",\n        createdAt: dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm\") || \"N/A\",\n\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"ClientServiceReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n\n    doc.text(`Client  - ${departmentModalData?.fullName}`, 40, 40);\n    doc.text(`${departmentModalData?.email ?? \"-\"} / ${departmentModalData?.mobile?.code + departmentModalData?.mobile?.number}`, 40, 60);\n    const headers = [\n      \"S.No.\",\n      \"Service Name\",\n\n      \"Created At\",\n      \"Created By\",\n    ];\n    const response = await reportsServices?.clientServiceReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!clientServiceReportList && !response) return;\n    const body = departmentModalData?.servicesData?.map((data, index) => {\n\n      return [\n        index + 1,\n        data?.name || \"N/A\",\n\n        data?.createdBy || \"N/A\",\n        dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm\") || \"N/A\",\n\n      ];\n    });\n    autoTable(doc, {\n      startY: 70,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`ClientServiceReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1 2xl:flex justify-between items-center\">\n          <div className=\"sm:flex  grid grid-cols-1 gap-1.5 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div>\n              <Controller\n                control={control}\n                name=\"PDOrganizationType\"\n                rules={{ required: \"Organization is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    showSearch\n                    onFocus={() => handleFocusOrgType()}\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">\n                      Select Organization Type\n                    </Select.Option>\n                    {orgSearchloading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      orgTypeList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                control={control}\n                name=\"PDindustrytype\"\n                rules={{ required: \"Industry type is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    onFocus={() => {\n                      handleFocusIndustry();\n                    }}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    className={`inputAntdSelectClassNameFilterReport `}\n                  >\n                    <Select.Option value=\"\"> Select Industry Type</Select.Option>\n                    {indusSearchloading ? (\n                      <Select.Option disabled>\n                        <Loader />\n                      </Select.Option>\n                    ) : (\n                      industryListData?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            {/* \n            <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    placeholder=\"Select Status\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    {[\n                      { label: \"Active\", value: \"true\" },\n                      { label: \"InActive\", value: \"false\" },\n                    ]?.map((array) => {\n                      return (\n                        <Select.Option value={array?.value}>\n                          {array?.label}\n                        </Select.Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              />\n            </div> */}\n            <div>\n              <Controller\n                name=\"department\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        deptSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\n                            \"admin\",\n                            \"company\",\n                            \"companyDirector\",\n                          ].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"groupName\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Group\"\n                    onFocus={() => {\n                      dispatch(\n                        clientGrpSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                          groupId: \"\",\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Group</Select.Option>\n                    {groupSearchLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(clientGroupList)?.map((element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName} ({element?.groupName})\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"PDOrganizationType\", \"\");\n                setValue(\"PDindustrytype\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"groupName\", \"\");\n\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div >\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 flex justify-between items-center pt-1\">\n            <div className=\"flex items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            {/* <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div> */}\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Group Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Client Name\n                </th>\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Created At\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Created By\n                </th> */}\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  List of Services\n                </th>\n\n              </tr>\n            </thead>\n            {clientServiceReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {clientServiceReportList &&\n                  clientServiceReportList?.length > 0 ? (\n                  clientServiceReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.groupName}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.fullName}\n                      </td>\n                      {/* \n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.email || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.mobile?.code || \"-\"}{\" \"}\n                        {element?.mobile?.number || \"-\"}\n                      </td> */}\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.createdBy}\n                      </td> */}\n                      <td className=\"tableData \">\n                        {(\n                          <div className=\"flex justify-center items-center gap-1\">\n                            <span>{element?.departmentData?.length}</span>\n                            <span className=\"flex justify-center items-center cursor-pointer\">\n                              <FaEye\n                                onClick={() => handleDepartmentModal(element)}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              />\n                            </span>\n                          </div>\n                        ) || \"-\"}\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n          <Modal\n            className=\"antmodalclassName !w-[60%] !h-[50%]\"\n            title={`Client / ${departmentModalData?.fullName} `}\n            open={departmentModalOpen}\n            onCancel={() => setDepartmentModalOpen(false)}\n            footer={null}\n          >\n            <div className=\"flex justify-between items-center mb-4\">\n              <div>\n                {departmentModalData?.email ?? \"-\"} / {departmentModalData?.mobile?.code + departmentModalData?.mobile?.number}\n              </div>\n\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n            <div className=\"w-full overflow-auto\">\n              <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n                <thead>\n                  <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                    <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                      S.No.\n                    </th>\n\n                    <th className=\"border-none p-2 whitespace-nowrap \">\n                      Service Name\n                    </th>\n\n                    {/* <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th> */}\n\n                    <th className=\"border-none p-2 whitespace-nowrap \">\n                      Created By\n                    </th>\n                    <th className=\"border-none p-2 whitespace-nowrap \">\n                      Created At\n                    </th>\n                  </tr>\n                </thead>\n                {clientServiceReportFunc_loading ? (\n                  <tr className=\"bg-white bg-opacity-5 \">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      <Loader2 />\n                    </td>\n                  </tr>\n                ) : (\n                  <tbody>\n                    {departmentModalData?.servicesData &&\n                      departmentModalData?.servicesData.length > 0 ? (\n                      departmentModalData?.servicesData?.map(\n                        (element, index) => (\n                          <tr\n                            className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                              } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                          >\n                            <td className=\"whitespace-nowrap  border-none p-2\">\n                              {index + 1 + (currentPage - 1) * pageSize}\n                            </td>\n\n                            {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n\n                            <td className=\"whitespace-nowrap  border-none p-2\">\n                              {element?.name}\n                            </td>\n\n                            <td className=\"whitespace-nowrap  border-none p-2\">\n                              {element?.createdBy || \"-\"}\n                            </td>\n\n                            {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.mobile?.code || \"-\"}{\" \"}\n                            {element?.mobile?.number || \"-\"}\n                          </td> */}\n\n                            <td className=\"whitespace-nowrap  border-none p-2\">\n                              {dayjs(element?.createdAt).format(\n                                \"DD-MM-YYYY hh:mm a\"\n                              )}\n                            </td>\n\n                            {/* <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                        <div onClick={()=>{handleDepartmentModal(element)}} className=\"flex justify-center items-center rounded-md h-10 w-10 border-2 border-cyan-500\">\n                          {element?.departmentData?.length || 0}\n                        </div>\n                      </td> */}\n                          </tr>\n                        )\n                      )\n                    ) : (\n                      <tr className=\"bg-white bg-opacity-5\">\n                        <td\n                          colSpan={15}\n                          className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                        >\n                          Record Not Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                )}\n              </table>\n\n            </div>\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={clientServiceReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default ClientServiceReport;\n"],"names":["_departmentModalData$6","_departmentModalData$7","_departmentModalData$8","_departmentModalData$9","control","formState","errors","setValue","watch","useForm","pageSize","setPageSize","useState","dispatch","useDispatch","clientServiceReportList","clientServiceReportFunc_loading","clientServiceReportCount","useSelector","state","reports","departmentListData","loading","depLoading","department","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","groupSearchLoading","clientGroup","clientList","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","PDOrganizationType","PDindustrytype","groupName","useEffect","timer","setTimeout","clearTimeout","generateFinancialYears","financialYears","year","push","requestPayLoadReturn","pagination","arguments","length","undefined","reqPayload","text","sort","isPagination","companyId","userType","_id","directorId","branchId","status","organizationId","organizationIds","departmentId","departmentIds","industryId","industryIds","groupId","groupIds","fetchClientServiceTaskReport","clientServiceReportFunc","departmentModalOpen","setDepartmentModalOpen","branchSearch","dayjs","subtract","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","element","fullName","PDBranchId","message","rules","required","_ref2","onFocus","orgTypeSearch","disabled","ListLoader","type","_ref3","indusSearch","Loader","_ref4","_sortByPropertyAlphab","deptSearch","onChange","sortByPropertyAlphabetically","_ref5","_sortByPropertyAlphab2","clientGrpSearch","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref6","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","htmlFor","id","Number","pazeSizeReport","colSpan","Loader2","index","_element$departmentDa","departmentData","FaEye","handleDepartmentModal","Modal","title","open","onCancel","footer","email","mobile","code","number","_departmentModalData$2","_departmentModalData$3","_departmentModalData$4","_departmentModalData$5","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","body","servicesData","data","createdBy","createdAt","format","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_departmentModalData$","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","sno","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","CustomPagination","totalCount","page"],"sourceRoot":""}