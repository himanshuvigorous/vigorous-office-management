{"version":3,"file":"static/js/1311.79611879.chunk.js","mappings":"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","sources":["pages/PreSalesManagement/LeadsManagementCategory/CreateLeadsManagementCategory.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName } from \"../../../constents/global\";\nimport { useEffect } from \"react\";\nimport { Select } from \"antd\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { createLeadCategoryFunc } from \"./LeadCategoryFeatures/_LeadCategory_reducers\";\n\n\nfunction CreateLeadsManagementCategory() {\n  const { loading: leadCategoryLoading } = useSelector(state => state.leadCategory)\n    const [searchParams, setSearchParams] = useSearchParams();\n    const parentPageId =searchParams.get('parentPageId') || null;\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const { branchList, branchListloading } = useSelector(\n    (state) => state.branch\n  );\n\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      companyId:  userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      directorId: userInfoglobal?.userType === \"companyDirector\" ? userInfoglobal?._id : userInfoglobal?.directorId,\n      branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ? data?.PDBranchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n   \"leadCategoryId\": parentPageId ? parentPageId : null,\n    \"name\": data?.Category\n\n    };\n\n    dispatch(createLeadCategoryFunc(finalPayload)).then((data) => {\n    if(!data?.error){\n        navigate(-1)\n    }\n    });\n  }\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:  userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [])\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n\n        <form autoComplete=\"off\" className=\"mt-5 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-1 gap-2 md:my-2\">\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Branch <span className=\"text-red-600\">*</span>\n              </label>\n              \n\n              <Controller\n                name=\"PDBranchId\"\n                control={control}\n                rules={{ required: \"Branch is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Branch\"\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchListloading ? <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option> : (branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n              {errors.PDBranchId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDBranchId.message}\n                </p>\n              )}\n            </div>}\n           \n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Category</label>\n              <input\n                type=\"text\"\n                {...register(\"Category\", {\n                  required: \"Category is required\",\n                })}\n                className={` ${inputClassName} ${errors.Category ? \"border-[1px] \" : \"border-gray-300\"\n                  } `}\n                placeholder=\"Enter Category\"\n            \n              />\n              {errors.Category && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.Category.message}\n                </p>\n              )}\n            </div>\n\n\n          </div>\n          <div className=\"flex justify-end \">\n            <button\n              type=\"submit\"\n              disabled={leadCategoryLoading}\n              className={`${leadCategoryLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 mt-3 px-4 rounded`}\n            >\n              {leadCategoryLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n\n        </form>\n\n\n      </div>\n    </GlobalLayout>\n  )\n}\n\nexport default CreateLeadsManagementCategory\n"],"names":["loading","leadCategoryLoading","useSelector","state","leadCategory","searchParams","setSearchParams","useSearchParams","parentPageId","get","register","handleSubmit","control","formState","errors","useForm","dispatch","useDispatch","navigate","useNavigate","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","branchList","branchListloading","branch","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","directorId","branchId","PDBranchId","Category","createLeadCategoryFunc","then","error","inputLabelClassName","Controller","name","rules","required","render","_ref","field","Select","_objectSpread","inputAntdSelectClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","placeholder","Option","value","disabled","ListLoader","map","type","fullName","message","inputClassName","Loader"],"sourceRoot":""}