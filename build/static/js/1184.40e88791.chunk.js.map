{"version":3,"file":"static/js/1184.40e88791.chunk.js","mappings":"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","sources":["pages/Project management/ProjectServices/EditProjectservice.js"],"sourcesContent":["\nimport { Controller, useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { decrypt } from \"../../../config/Encryption\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { inputAntdSelectClassName, inputClassName, inputLabelClassName } from \"../../../constents/global\";\nimport { Select } from \"antd\";\nimport Loader from \"../../../global_layouts/Loader\";\nimport { getprojectserviceDetails, updateprojectserviceFunc } from \"./projectserviceFeatures/_projectservice_reducers\";\n\n\n\n\nfunction Editprojectservice() {\n  const { loading: projectservice } = useSelector((state) => state.projectservice);\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    control,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const { projectservicedEnc } = useParams();\n  const projectserviceId = decrypt(projectservicedEnc);\n  const { projectserviceDetailsData } = useSelector(\n    (state) => state.projectservice\n  );\n  useEffect(() => {\n    let reqData = {\n      _id: projectserviceId,\n    };\n    dispatch(getprojectserviceDetails(reqData));\n  }, []);\n\n  useEffect(() => {\n    if (projectserviceDetailsData) {\n\n      setValue(\"projectserviceName\", projectserviceDetailsData?.name);\n      setValue(\"status\", projectserviceDetailsData?.status ? \"true\" : \"false\");\n    }\n\n  }, [projectserviceDetailsData]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: projectserviceId,\n      \"companyId\": projectserviceDetailsData?.companyId,\n      \"directorId\": projectserviceDetailsData?.directorId,\n      \"branchId\": projectserviceDetailsData?.branchId,\n      \"name\": data.projectserviceName,\n      status: data?.status === 'true' ? true : false,\n\n    };\n\n    dispatch(updateprojectserviceFunc(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-5 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Projects Services  <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"projectserviceName\", {\n                  required: \"Projects Services is required\",\n                })}\n                className={`${inputClassName} ${errors.projectserviceName ? \"border-[1px] \" : \"border-gray-300\"\n                  } `}\n                placeholder=\"Enter Projects Services\"\n              />\n              {errors.projectserviceName && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.projectserviceName.message}\n                </p>\n              )}\n            </div>\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Status <span className=\"text-red-600\">*</span></label>\n              <Controller\n                name=\"status\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.status ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Status\"\n                  >\n                    <Select.Option value=\"true\">Active</Select.Option>\n                    <Select.Option value=\"false\">In Active</Select.Option>\n                  </Select>\n                )}\n              />\n              {errors.status && <p className=\"text-red-500 text-sm\">{errors.status.message}</p>}\n            </div>\n\n          </div>\n          <div className=\"flex justify-end \">\n            <button\n              type=\"submit\"\n              disabled={projectservice}\n              className={`${projectservice ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded mt-3`}\n            >\n              {projectservice ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default Editprojectservice;\n"],"names":["loading","projectservice","useSelector","state","register","handleSubmit","setValue","control","formState","errors","useForm","dispatch","useDispatch","navigate","useNavigate","projectservicedEnc","useParams","projectserviceId","decrypt","projectserviceDetailsData","useEffect","reqData","_id","getprojectserviceDetails","name","status","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","directorId","branchId","projectserviceName","updateprojectserviceFunc","then","error","concat","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","Controller","render","_ref","field","Select","inputAntdSelectClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","disabled","Loader"],"sourceRoot":""}