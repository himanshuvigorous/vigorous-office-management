{"version":3,"file":"static/js/5710.14e97bc8.chunk.js","mappings":"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","sources":["pages/financeManagement/clientExpence/ClientExpenceList.js","global_layouts/Loader/Loader.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { encrypt } from \"../../../config/Encryption\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport Loader from \"../../../global_layouts/Loader/Loader\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport { domainName, inputClassNameSearch, } from \"../../../constents/global\";\nimport { useForm, useWatch } from \"react-hook-form\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { deleteclientExpence, getclientExpenceList } from \"./clientExpenceFeature/_clientExpence_reducers\";\nimport { FaDownload } from \"react-icons/fa\";\n\n\n\nfunction ClientExpenceList() {\n  const {\n    register,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { clientExpenceListData, totalclientExpenceListCount, loading } = useSelector(\n    (state) => state.clientExpence\n  );\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector(\n    (state) => state.branch\n  );\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const limit = 10;\n  useEffect(() => {\n    if (CompanyId) {\n      setValue(\"PDBranchId\", \"\");\n    }\n  }, [CompanyId])\n  useEffect(() => {\n    getclientExpencerequest();\n  }, [currentPage, BranchId, CompanyId]);\n\n  const getclientExpencerequest = () => {\n    const data = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqData: {\n        directorId: \"\",\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId :\n            userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? BranchId : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        \"text\": \"\",\n        \"sort\": true,\n        \"status\": \"\",\n        \"isPagination\": true,\n        \"clientId\": \"\",\n        \"groupId\": \"\",\n        \"startDate\": \"\",\n        \"endDate\": \"\",\n        \"paymentmode\": \"\",\n      }\n    };\n    dispatch(getclientExpenceList(data));\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteclientExpence(reqData)).then((data) => {\n          getclientExpencerequest()\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination:false,\n          companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId])\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  return (\n    <GlobalLayout>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          <div className=\"\">\n            <div className=\"flex justify-between items-center md:space-y-0 space-y-2 py-1\">\n              <div className=\"flex items-center space-x-2\">\n                {userInfoglobal?.userType === \"admin\" && <div className=\"\">\n\n                  <select\n                    {...register(\"PDCompanyId\", {\n                      required: \"company is required\",\n                    })}\n                    className={` ${inputClassNameSearch} ${errors.PDCompanyId\n                      ? \"border-[1px] \"\n                      : \"border-gray-300\"\n                      }`}\n                  >\n                    <option className=\"\" value=\"\">\n                      Select Comapany\n                    </option>\n                    {companyList?.map((type) => (\n                      <option value={type?._id}>{type?.fullName}</option>\n                    ))}\n                  </select>\n                  {errors.PDCompanyId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDCompanyId.message}\n                    </p>\n                  )}\n                </div>}\n                {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n\n                  <select\n                    {...register(\"PDBranchId\", {\n                      required: \"Branch is required\",\n                    })}\n                    className={` ${inputClassNameSearch} ${errors.PDBranchId\n                      ? \"border-[1px] \"\n                      : \"border-gray-300\"\n                      }`}\n                  >\n                    <option className=\"\" value=\"\">\n                      Select Branch\n                    </option>\n                    {branchList?.map((type) => (\n                      <option value={type?._id}>{type?.fullName}</option>\n                    ))}\n                  </select>\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>}\n              </div>\n              <button\n                onClick={() => {\n                  navigate(\"/admin/clientExpence/create\");\n                }}\n                className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n              >\n                <FaPlus />\n                <span className=\"text-[12px]\">Add clientExpence</span>\n              </button>\n            </div>\n          </div>\n          <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n              <thead className=\"\">\n                <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                  <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n                  <th className=\"p-2 whitespace-nowrap\">client</th>\n                  <th className=\"p-2 whitespace-nowrap\">Amount</th>\n                  <th className=\"p-2 whitespace-nowrap w-[10%]\">Action</th>\n                </tr>\n              </thead>\n              <tbody>\n                {clientExpenceListData && clientExpenceListData?.length > 0 ? (\n                  clientExpenceListData?.map((element, index) => (\n                    <tr\n                      className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                    >\n                      <td className=\"whitespace-nowrap p-2\">\n                        {index + 1 + ((currentPage - 1) * limit)}\n                      </td>\n                      <td className=\"whitespace-nowrap p-2\">{element?.clientName}</td>\n                      <td className=\"whitespace-nowrap p-2\">{element?.grandTotalAmount}</td>\n                      <td className=\"whitespace-nowrap p-2\">\n                        <span className=\"py-1.5 flex justify-start items-center space-x-2.5\">\n                        <button\n                           onClick={() => {\n                            if (element?.clientExpencePDFPath) {\n                              const pdfLink = `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public${element?.clientExpencePDFPath}`;\n                              const link = document.createElement(\"a\");\n                              link.href = pdfLink;\n                              link.target = \"_blank\"; \n                              link.rel = \"noopener noreferrer\"; \n                              document.body.appendChild(link);\n                              link.click();\n                              document.body.removeChild(link);\n                            }\n                          }}\n                          \n                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                            type=\"button\"\n                          >\n                            <FaDownload\n                              className=\"hover:text-[#337ab7] text-[#3c8dbc]\"\n                              size={16}\n                            />\n                          </button>\n                          <button\n                            onClick={() => {\n                              navigate(\n                                `/admin/clientExpence/edit/${encrypt(element?._id)}`\n                              );\n                            }}\n                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                            type=\"button\"\n                          >\n                            <FaPenToSquare\n                              className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                              size={16}\n                            />\n                          </button>\n                          <button\n                            onClick={() => handleDelete(element?._id)}\n                            className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                            type=\"button\"\n                          >\n                            <RiDeleteBin5Line\n                              className=\"text-red-600 hover:text-red-500\"\n                              size={16}\n                            />\n                          </button>\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={5}\n                      className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n          {clientExpenceListData?.length > 0 &&\n            <CustomPagination\n              totalCount={totalclientExpenceListCount}\n              pageSize={limit}\n              currentPage={currentPage}\n              onChange={onPaginationChange}\n            />}\n        </>\n      )}\n    </GlobalLayout>\n  );\n}\nexport default ClientExpenceList;\n","import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n"],"names":["register","control","formState","errors","setValue","useForm","navigate","useNavigate","dispatch","useDispatch","clientExpenceListData","totalclientExpenceListCount","loading","useSelector","state","clientExpence","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","useState","companyList","company","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","useEffect","getclientExpencerequest","data","pageSize","reqData","directorId","companyId","userType","_id","branchId","getclientExpenceList","branchSearch","text","sort","status","isPagination","companySearch","_jsx","GlobalLayout","children","Loader","_jsxs","_Fragment","className","_objectSpread","required","inputClassNameSearch","PDCompanyId","value","map","type","fullName","message","PDBranchId","onClick","FaPlus","length","element","index","clientName","grandTotalAmount","clientExpencePDFPath","pdfLink","process","link","document","createElement","href","target","rel","body","appendChild","click","removeChild","FaDownload","size","encrypt","FaPenToSquare","id","Swal","title","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteclientExpence","handleDelete","RiDeleteBin5Line","colSpan","CustomPagination","totalCount","onChange","page","Spin"],"sourceRoot":""}