{"version":3,"file":"static/js/2175.0d3a1c2c.chunk.js","mappings":"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","sources":["pages/global/address/country/CreateCountry.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createCountryFunc } from \"./CountryFeatures/_country_reducers\";\nimport { inputClassName, inputLabelClassName } from \"../../../../constents/global\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { useEffect } from \"react\";\n\nfunction CreateCountry() {\n  const { loading: countryLoading } = useSelector((state) => state.country);\n  const { register, handleSubmit, formState: { errors }, watch, setValue } = useForm();\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n\n  const countryMobileNumberValue = watch(\"countryMobileNumber\");\n\n  // Effect to handle the '+' prefix for mobile code\n  useEffect(() => {\n    if (countryMobileNumberValue) {\n      // If value doesn't start with '+', add it\n      if (!countryMobileNumberValue.startsWith('+')) {\n        setValue(\"countryMobileNumber\", `+${countryMobileNumberValue.replace(/\\+/g, '')}`);\n      }\n    }\n  }, [countryMobileNumberValue, setValue]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      \"name\": data.countryName,\n      \"countryCode\": data.countryCode,\n      // Ensure the mobile code has '+' when submitting\n      \"countryMobileNumberCode\": data.countryMobileNumber.startsWith('+') \n        ? data.countryMobileNumber \n        : `+${data.countryMobileNumber}`,\n    }\n\n    dispatch(createCountryFunc(finalPayload)).then((data) => {\n      !data?.error && navigate(-1)\n    });\n  }\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-0 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2 capitalize\">\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}> Country Name <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"countryName\", {\n                  required: \"Country Name is required\",\n                })}\n                className={`${errors.countryName ? \"border-[1px] \" : \"border-gray-300\"\n                  } ${inputClassName}`}\n                placeholder=\"Select Country Name\"\n              />\n              {errors.countryName && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.countryName.message}\n                </p>\n              )}\n            </div>\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Country Code <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"countryCode\", {\n                  required: \"Country Code is required\",\n                })}\n                className={`${errors.countryCode ? \"border-[1px] \" : \"border-gray-300\"\n                  } ${inputClassName}`}\n                placeholder=\"Select Country Code\"\n              />\n              {errors.countryCode && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.countryCode.message}\n                </p>\n              )}\n            </div>\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Country Mobile Code <span className=\"text-red-600\">*</span></label>\n              <input\n                type=\"text\"\n                {...register(\"countryMobileNumber\", {\n                  required: \"Country Mobile Code is required\",\n                  validate: (value) => {\n                    // Ensure the value is a valid mobile code (starts with + and has numbers)\n                    if (!/^\\+[0-9]+$/.test(value)) {\n                      return \"Mobile code must start with + followed by numbers\";\n                    }\n                    return true;\n                  }\n                })}\n                className={`${errors.countryMobileNumber ? \"border-[1px] \" : \"border-gray-300\"\n                  } ${inputClassName}`}\n                placeholder=\"+123\"\n              />\n              {errors.countryMobileNumber && (\n                <p className=\"text-red-500 text-sm\">{errors.countryMobileNumber.message}</p>\n              )}\n            </div>\n          </div>\n          <div className=\"flex justify-end \">\n            <button\n              type=\"submit\"\n              disabled={countryLoading}\n              className={`${countryLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded`}\n            >\n              {countryLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  )\n}\n\nexport default CreateCountry"],"names":["loading","countryLoading","useSelector","state","country","register","handleSubmit","formState","errors","watch","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","countryMobileNumberValue","useEffect","startsWith","concat","replace","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","countryName","countryCode","countryMobileNumber","createCountryFunc","then","error","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","validate","value","test","disabled","Loader"],"sourceRoot":""}