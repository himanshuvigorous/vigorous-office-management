{"version":3,"file":"static/js/8750.cc3a7b02.chunk.js","mappings":"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","sources":["pages/reportsManager/taskReports/financial_task_report/FinancialTaskReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  getDefaultFinacialYear,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { financialTaskReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\n\nfunction FinancialTaskReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const dispatch = useDispatch();\n  const {\n    financialTaskReportList,\n    financialTaskReportFunc_loading,\n    totalfinancialTaskCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const [empArray, setEmpArray] = useState([]);\n  const [empModal, setEmpModal] = useState(false);\n  const handleEmployeeModal = (element) => {\n    setEmpArray(element ? element : []);\n    setEmpModal(true);\n  };\n\n  const { taskTypeList, loading: taskTypeListLoading } = useSelector((state) => state.taskType);\n  const { clientList, loading: clientListLoading } = useSelector((state) => state.client)\n  const { clientGroupList, groupSearchLoading } = useSelector((state) => state.clientGroup);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n  const daterange = useWatch({\n    control,\n    name: \"daterange\",\n    defaultValue: \"\",\n  });\n  // const employeeIds = useWatch({\n  //   control,\n  //   name: \"employeeId\",\n  //   defaultValue: [],\n  // });\n\n  const employeeId = useWatch({\n    control,\n    name: \"employeeId\",\n    defaultValue: \"\",\n  });\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n    defaultValue: dayjs().subtract(1, \"month\"),\n  });\n  const endDate = useWatch({\n    control,\n    name: \"endDate\",\n    defaultValue: dayjs(),\n  });\n\n  const priority = useWatch({\n    control,\n    name: \"priority\",\n    defaultValue: \"\",\n  });\n\n  const financialYear = useWatch({\n    control,\n    name: \"financialYear\",\n    defaultValue: \"\",\n  });\n\n  const month = useWatch({\n    control,\n    name: \"month\",\n    defaultValue: \"\",\n  });\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const client = useWatch({\n    control,\n    name: \"client\",\n    defaultValue: \"\",\n  });\n\n  const task = useWatch({\n    control,\n    name: \"task\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const combinedMonth = [...months, ...quarter];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentIds: [],\n        clientIds: [],\n        employeIds: [],\n        taskTypeIds: [],\n        groupIds: [],\n        startDate: \"\",\n        endDate: \"\",\n        dateRange: daterange,\n        status: Status,\n        priority: priority,\n        monthName: months.find((data) => {\n          return data == month;\n        })\n          ? month\n          : \"\",\n        monthQuaters: quarter.find((data) => {\n          return data == month;\n        })\n          ? month\n          : \"\",\n        financialYear: financialYear,\n        departmentId: department,\n        clientId: client,\n        employeId: employeeId,\n        taskTypeId: task,\n        groupId: groupName,\n      },\n    };\n  };\n  useEffect(() => {\n    fetchOverAllTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchOverAllTaskReport = () => {\n    dispatch(financialTaskReportFunc(requestPayLoadReturn(true)));\n  };\n\n  useEffect(() => { }, []);\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchOverAllTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"FinancialTaskReport\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Group Name\", key: \"groupName\", width: 30 },\n      { header: \"Client Name\", key: \"clientName\", width: 30 },\n      { header: \"Department\", key: \"department\", width: 25 },\n      { header: \"Manager\", key: \"Manager\", width: 25 },\n      { header: \"Task Name\", key: \"taskName\", width: 30 },\n      { header: \"Assigned To\", key: \"name\", width: 30 },\n      { header: \"Financial Year\", key: \"financialYear\", width: 20 },\n      { header: \"Month Name\", key: \"monthName\", width: 20 },\n      { header: \"Month Quaters\", key: \"monthQuarter\", width: 20 },\n      { header: \"Complete Date\", key: \"completedDate\", width: 15 },\n\n      { header: \"Amount\", key: \"amount\", width: 25 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.financialTaskReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n\n    if (!financialTaskReportList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1,\n        groupName: data?.groupData?.fullName,\n\n        clientName: data?.clientData?.fullName || \"-\",\n        department: data?.departmentData?.name || \"-\",\n        Manager: data?.managerName,\n        taskName: data?.taskName || \"-\",\n\n        name: Array.isArray(data?.employeData)\n          ? data.employeData.map((emp) => emp?.fullName || \"-\").join(\", \")\n          : data?.employeData || \"N/A\",\n        financialYear: data?.financialYear || \"-\",\n        monthName: data?.monthName || \"-\",\n        monthQuarter: data?.monthQuaters || \"-\",\n\n        completedDate: data?.updatedAt\n          ? dayjs(data?.updatedAt).format(\"DD-MM-YYYY hh:mm A\")\n          : \"-\",\n        amount: data?.fee || \"-\",\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"FinancialTaskReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n    const headers = [\n      \"S.No.\",\n      \"Group Name\",\n      \" Client Name\",\n      \"Department\",\n      \"Manager\",\n      \"Task Name\",\n      \"Assigned\",\n      \"financial Year\",\n      \"Month Name\",\n      \"Month Quaters\",\n      \"Completed date\",\n      \"Amount\",\n    ];\n    const response = await reportsServices?.financialTaskReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!financialTaskReportList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        data?.groupData?.fullName,\n        data?.clientData?.fullName || \"N/A\",\n        data?.departmentData?.name || \"N/A\",\n        data?.managerName || \"N/A\",\n\n        data?.taskTypeData?.name || \"N/A\",\n        Array.isArray(data?.employeData)\n          ? data.employeData.map((emp) => emp?.fullName || \"-\").join(\", \")\n          : data?.employeData || \"N/A\",\n\n        data?.financialYear || \"N/A\",\n        data?.monthName || \"N/A\",\n        data?.monthQuaters || \"N/A\",\n        dayjs(data?.updatedAt).format(\"DD-MM-YYYY hh:mm a\") || \"N/A\",\n        data?.fee || \"N/A\",\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`FinancialTaskReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div className=\"\">\n              <Controller\n                name=\"groupName\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Group\"\n                    onFocus={() => {\n                      dispatch(\n                        clientGrpSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                          groupId: \"\",\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Group</Select.Option>\n                    {groupSearchLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(clientGroupList)?.map((element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName} ({element?.groupName})\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"department\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        deptSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\n                            \"admin\",\n                            \"company\",\n                            \"companyDirector\",\n                          ].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"client\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        clientSearch({\n                          companyId:\n                            userInfoglobal?.userType === \"company\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.companyId,\n                          branchId:\n                            userInfoglobal?.userType === \"company\" ||\n                              userInfoglobal?.userType === \"admin\" ||\n                              userInfoglobal?.userType === \"companyDirector\"\n                              ? watch(\"PDBranchId\")\n                              : userInfoglobal?.userType === \"companyBranch\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.branchId,\n                          groupId: groupName,\n                          directorId: \"\",\n                          organizationId: \"\",\n                          industryId: \"\",\n                          // departmentId: department,\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select client\"\n                  >\n                    <Select.Option value=\"\"> Select Client</Select.Option>\n                    {clientListLoading ?\n                      <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(clientList)?.map((element, index) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName}\n                        </Select.Option>\n                      )))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"employeeId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    // mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport \"\n                    placeholder=\"Please select employee\"\n                    onFocus={handleEmployeeFocus}\n                    options={employeList?.map((data) => {\n                      return { value: data._id, label: data.fullName };\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n              {errors.employeeId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.employeeId.message}\n                </p>\n              )}\n            </div>            \n            <div>\n              <Controller\n                control={control}\n                name=\"task\"\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    onFocus={() => {\n                      dispatch(\n                        taskTypeSearch({\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? watch(\"PDCompanyId\")\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId:\n                            userInfoglobal?.userType === \"company\" ||\n                              userInfoglobal?.userType === \"admin\" ||\n                              userInfoglobal?.userType === \"companyDirector\"\n                              ? watch(\"PDBranchId\")\n                              : userInfoglobal?.userType === \"companyBranch\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.branchId,\n                          // departmentId: watch(\"PDDepartmentId\")?.value,\n                          departmentId: \"\",\n                          directorId: \"\",\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                        })\n                      );\n                    }}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\"> Select Task Name</Select.Option>\n                    {taskTypeListLoading ?\n                      <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(taskTypeList)?.map((type, index) => (\n                        <Select.Option value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      )))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Please select Task Status\"\n                    options={CLIENT_TASK_STATUS_ARR?.map((array) => {\n                      return { value: array, label: array };\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"priority\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    placeholder=\"Select Priority\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Priority</Select.Option>\n                    {PRIORITY?.map((array) => {\n                      return (\n                        <Select.Option value={array}>{array}</Select.Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                control={control}\n                name=\"financialYear\"\n                rules={{ required: \"Financial year is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={getDefaultFinacialYear()}\n                    placeholder={\"Select Financial year\"}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">\n                      Select Financial year\n                    </Select.Option>\n                    {financialYears.map((year, index) => (\n                      <Select.Option key={index} value={year}>\n                        {year}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                control={control}\n                name=\"month\"\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    placeholder=\"Select month \"\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select month </Select.Option>\n                    {combinedMonth.map((month, index) => (\n                      <Select.Option key={index} value={month}>\n                        {month}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"startDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs().subtract(1, \"month\")}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"endDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs()}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"PdCompanyId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"employeeId\", \"\");\n                setValue(\"daterange\", \"\");\n                setValue(\"shift\", \"\");\n                setValue(\"workType\", \"\");\n                setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n                setValue(\"endDate\", dayjs());\n                setValue(\"priority\", \"\");\n                setValue(\"financialYear\", \"\");\n                setValue(\"month\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"client\", \"\");\n                setValue(\"task\", \"\");\n                setValue(\"groupName\", \"\");\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1 justify-between items-center\">\n            <div className=\"flex py-1 items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Group Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Client Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Department\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Manager Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Task Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Assigned To\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  <div className=\"flex gap-1\">financial Year</div>\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Month Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Month Quaters\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Completed Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Amount\n                </th>\n              </tr>\n            </thead>\n            {financialTaskReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {financialTaskReportList &&\n                  financialTaskReportList?.length > 0 ? (\n                  financialTaskReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.groupData?.fullName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.clientData?.fullName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.departmentData?.name || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.managerName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.taskName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        <div className=\"flex gap-2\">\n                          <div> {element?.employeData[0]?.fullName}</div>{\" \"}\n                          {element?.employeData?.length > 1 ? (\n                            <div className=\"text-header flex justify-center items-center gap-1 rounded-full  text-semibold text-sm\">\n                              {\" \"}\n                              +{\" \"}\n                              <div\n                                onClick={() => {\n                                  handleEmployeeModal(element?.employeData);\n                                }}\n                                className=\"border justify-center items-center flex h-7 w-7 bg-header  text-white text-[12px] rounded-full \"\n                              >\n                                {element?.employeData?.length - 1}{\" \"}\n                              </div>\n                            </div>\n                          ) : (\n                            \"\"\n                          )}\n                        </div>\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.financialYear || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.monthName || \"-\"}\n                      </td>\n\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.monthQuaters || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {dayjs(element?.updatedAt).format(\"DD-MM-YYYY\") || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.fee || \"-\"}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.createdBy}\n                      </td> */}\n                      {/* \n                        <td className=\"whitespace-nowrap border-none p-2\">\n                            <span\n                              className={`\n                              ${element?.status === \"Assigned\"\n                                  ? \"bg-blue-500 text-white\"\n                                  : element?.status === \"Accepted\"\n                                    ? \"bg-green-500 text-white\"\n                                    : element?.status === \"Pending_at_client\"\n                                      ? \"bg-yellow-300 text-black\"\n                                      : element?.status === \"Pending_at_department\"\n                                        ? \"bg-purple-300 text-black\"\n                                        : element?.status === \"Pending_at_colleague\"\n                                          ? \"bg-teal-300 text-black\"\n                                          : element?.status === \"Pending_at_manager\"\n                                            ? \"bg-orange-300 text-black\"\n                                            : element?.status === \"Work_in_progress\"\n                                              ? \"bg-indigo-500 text-white\"\n                                              : element?.status === \"Pending_for_approval\"\n                                                ? \"bg-pink-300 text-black\"\n                                                : element?.status === \"Pending_for_fees\"\n                                                  ? \"bg-gray-400 text-black\"\n                                                  : element?.status === \"Completed\"\n                                                    ? \"bg-green-600 text-white\"\n                                                    : element?.status === \"Task_Stop\"\n                                                      ? \"bg-red-600 text-white\"\n                                                      : element?.status === \"reAssign_to_other\"\n                                                        ? \"bg-cyan-700 text-white\"\n                                                        : \"bg-white text-black\"\n                                } border-header border-[1px] px-2 py-1.5 rounded-lg text-[12px]`}\n                            onClick={() => handleStatusClick(element)}\n                            >\n                              {element?.status\n                                ?.replace(/_/g, ' ')\n                                .toLowerCase()\n                                .replace(/\\b\\w/g, char => char.toUpperCase())}\n                              {statusMapping[element?.status] ||\n                                \"Unknown Status\"}\n                            </span>\n                          </td> */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n          <Modal\n            className=\"antmodalclassName !w-[60%] !h-[50%]\"\n            title=\"Employees\"\n            open={empModal}\n            onCancel={() => setEmpModal(false)}\n            footer={null}\n          >\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                    S.No.\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Employee Name\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th>\n                </tr>\n              </thead>\n              {empArray.length == 0 ? (\n                <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={15}\n                    className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr>\n              ) : (\n                <tbody>\n                  {empArray && empArray?.length > 0 ? (\n                    empArray?.map((element, index) => (\n                      <tr\n                        className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                          } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                      >\n                        <td className=\"whitespace-nowrap  border-none p-2\">\n                          {index + 1}\n                        </td>\n\n                        {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                                                                {element.profileImage ? (\n                                                                  <img\n                                                                    alt=\"\"\n                                                                    src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                                                                    className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                                                                  />\n                                                                ) : (\n                                                                  <img\n                                                                    alt=\"\"\n                                                                    src={`/images/avatar.jpg`}\n                                                                    className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                                                                  />\n                                                                )}\n                                                              </td> */}\n\n                        <td className=\"whitespace-nowrap  border-none p-2\">\n                          {element?.fullName}\n                        </td>\n\n                        <td className=\"whitespace-nowrap  border-none p-2\">\n                          {element?.email || \"-\"}\n                        </td>\n\n                        <td className=\"whitespace-nowrap  border-none p-2\">\n                          {element?.mobile?.code || \"-\"}{\" \"}\n                          {element?.mobile?.number || \"-\"}\n                        </td>\n\n                        {/* <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                                                                <div onClick={()=>{handleDepartmentModal(element)}} className=\"flex justify-center items-center rounded-md h-10 w-10 border-2 border-cyan-500\">\n                                                                  {element?.departmentData?.length || 0}\n                                                                </div>\n                                                              </td> */}\n                      </tr>\n                    ))\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={15}\n                        className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              )}\n            </table>\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={totalfinancialTaskCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default FinancialTaskReport;\n"],"names":["control","formState","errors","setValue","watch","useForm","pageSize","setPageSize","useState","dispatch","useDispatch","financialTaskReportList","financialTaskReportFunc_loading","totalfinancialTaskCount","useSelector","state","reports","departmentListData","loading","depLoading","department","empArray","setEmpArray","empModal","setEmpModal","taskTypeList","taskTypeListLoading","taskType","clientList","clientListLoading","client","clientGroupList","groupSearchLoading","clientGroup","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","daterange","employeeId","priority","dayjs","subtract","financialYear","month","task","groupName","useEffect","timer","setTimeout","clearTimeout","financialYears","generateFinancialYears","year","push","months","quarter","combinedMonth","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","departmentIds","clientIds","employeIds","taskTypeIds","groupIds","startDate","endDate","dateRange","status","monthName","find","data","monthQuaters","departmentId","clientId","employeId","taskTypeId","groupId","fetchOverAllTaskReport","handleEmployeeFocus","employeSearch","includes","isBranch","isDirector","financialTaskReportFunc","branchSearch","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","Option","value","map","element","fullName","PDBranchId","message","_ref2","_sortByPropertyAlphab","onFocus","clientGrpSearch","onChange","disabled","ListLoader","sortByPropertyAlphabetically","_ref3","_sortByPropertyAlphab2","deptSearch","_ref4","_sortByPropertyAlphab3","clientSearch","organizationId","industryId","index","_ref5","allowClear","options","val","_ref6","_sortByPropertyAlphab4","taskTypeSearch","type","rules","_ref7","mode","CLIENT_TASK_STATUS_ARR","array","_ref8","PRIORITY","required","_ref9","getDefaultFinacialYear","_ref0","_ref1","CustomDatePicker","report","size","_ref10","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref11","isActive","MdKeyboardArrowDown","style","color","transform","transition","htmlFor","id","Number","pazeSizeReport","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","body","docs","_data$groupData2","_data$clientData2","_data$departmentData2","_data$taskTypeData","groupData","clientData","departmentData","managerName","taskTypeData","Array","isArray","employeData","emp","join","updatedAt","format","fee","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$groupData","_data$clientData","_data$departmentData","sno","clientName","Manager","taskName","monthQuarter","completedDate","amount","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","_element$groupData","_element$clientData","_element$departmentDa","_element$employeData$","_element$employeData","_element$employeData2","handleEmployeeModal","Modal","title","open","onCancel","footer","_element$mobile","_element$mobile2","email","mobile","code","number","CustomPagination","totalCount","page"],"sourceRoot":""}