{"version":3,"file":"static/js/3870.f29791e4.chunk.js","mappings":"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","sources":["pages/financeManagement/invoice/EditInvoice.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport GlobalLayout from '../../../global_layouts/GlobalLayout/GlobalLayout';\nimport { domainName, inputAntdSelectClassName, inputClassName, inputDisabledClassName, inputLabelClassName, inputLabelClassNameReactSelect, sortByPropertyAlphabetically } from '../../../constents/global';\nimport { Controller, useFieldArray, useForm, useWatch } from 'react-hook-form';\nimport { Select } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ListLoader from '../../../global_layouts/ListLoader';\nimport ReactSelect from \"react-select\";\nimport { companySearch } from '../../company/companyManagement/companyFeatures/_company_reducers';\nimport { branchSearch } from '../../branch/branchManagement/branchFeatures/_branch_reducers';\nimport { officeAddressSearch } from '../../global/other/officeAddressManagement/officeAddressFeature/_office_address_reducers';\nimport { clientSearch } from '../../client/clientManagement/clientFeatures/_client_reducers';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport Loader from '../../../global_layouts/Loader';\nimport { createinvoice, getinvoiceDetails, updateinvoice } from './invoiceFeature/_invoice_reducers';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { decrypt } from '../../../config/Encryption';\nimport { gstTypeSearch } from '../../global/other/GstType/GstTypeFeatures/_gstType_reducers';\nconst EditInvoice = () => {\n  const { invoiceIdEnc } = useParams();\n  const invoiceId = decrypt(invoiceIdEnc);\n  const {\n    register,\n    handleSubmit,\n    control,\n    watch,\n    reset,\n    formState: { errors },\n    setValue,\n  } = useForm({\n    defaultValues: {\n      totalAmount: 0,\n      totalDiscount: 0,\n      totalDiscountedPrice: 0,\n      tasks: [\n        { gstAmount: \"\", gstRate: \"\", amount: \"\", hsnCode: \"\", taskType: \"\" },\n      ],\n    },\n  });\n  const payloadTasks = useWatch({\n    control,\n    name: \"tasks\",\n    defaultValue: \"\",\n  });\n  const [totals, setTotals] = useState({\n    totalAmount: 0,\n    totalDiscount: 0,\n    totalDiscountedPrice: 0,\n    totalGST: 0,\n    totalFinalAmount: 0,\n  });\n  const { fields, append, remove } = useFieldArray({ control, name: \"tasks\", });\n  const { loading: invoiceLoading } = useSelector((state) => state.invoice);\n  const { invoiceDetails, loading: invoiceDetailsLoading } = useSelector((state) => state.invoice);\n  const { gstTypeList, loading: gstTypeLoading } = useSelector(state => state.gstType)\n  const [gstType, setGstType] = useState(\"\");\n  const [isgstType, setIsGstType] = useState(false);\n  const dispatch = useDispatch()\n  const navigate = useNavigate()\n  const [dataSet, setDataSet] = useState(false);\n  const [finalTaskType, setFinalTaskType] = useState([]);\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const { officeAddressListData, loading: officeAddressLoading } = useSelector((state) => state.officeAddress);\n  const { clientList, loading: clientLoading } = useSelector((state) => state.client);\n  const selectedlayout = officeAddressListData?.find((address) => address._id === watch(\"invoiceLayout\"));\n  const selectedClient = clientList?.find((client) => client._id === watch(\"client\"));\n\n  const [isInvoiceLoading, setInvoiceLoading] = useState(false);\n  const [isFormLoading, setFormLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchInvoiceDetails = async () => {\n      setInvoiceLoading(true);\n      try {\n        await dispatch(\n          getinvoiceDetails({\n            _id: invoiceId,\n          })\n        );\n      } catch (error) {\n        console.error(\"Failed to fetch invoice details:\", error);\n      } finally {\n        setInvoiceLoading(false);\n      }\n    };\n\n    if (invoiceId) {\n      fetchInvoiceDetails();\n    }\n  }, [invoiceId]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setFinalTaskType([]);\n      setFormLoading(true);\n      reset();\n\n      if (invoiceDetails) {\n        try {\n           console.log( ...(invoiceDetails?.clientCompletedTaskData || []),'invoiceDetails')\n          setFinalTaskType([\n            ...(invoiceDetails?.clientCompletedTaskData || []),\n            {\n              _id: \"other\",\n              financialYear: \"-\",\n              status: \"Completed\",\n              taskName: \"Other\",\n              description: \"Other\",\n              HSNCode: \"-\",\n              GSTRate: 0,\n              GSTName: \"-\",\n              taskFee: 0,\n            },\n          ]);\n\n          // Branch fetch\n          const branchRes = await dispatch(branchSearch({\n            text: \"\",\n            sort: true,\n            status: true,\n            isPagination: false,\n            companyId: invoiceDetails?.companyId,\n          }));\n          if (!branchRes?.error) {\n            setValue(\"PDBranchId\", invoiceDetails?.branchId);\n          }\n          dispatch(gstTypeSearch({\n            directorId: \"\",\n            companyId: invoiceDetails?.companyId,\n            branchId: invoiceDetails?.branchId,\n            text: \"\",\n            sort: true,\n            status: \"\",\n            isPagination: false,\n          }))\n          // Client fetch\n          const clientRes = await dispatch(clientSearch({\n            companyId: invoiceDetails?.companyId,\n            branchId: invoiceDetails?.branchId,\n            groupId: \"\",\n            directorId: \"\",\n            organizationId: \"\",\n            industryId: \"\",\n            text: \"\",\n            sort: true,\n            status: true,\n            isPagination: false,\n          }));\n          if (!clientRes?.error) {\n            setValue(\"client\", invoiceDetails?.clientId);\n          }\n\n          // Office address fetch\n          const addressRes = await dispatch(officeAddressSearch({\n            companyId: invoiceDetails?.companyId,\n            branchId: invoiceDetails?.branchId,\n            directorId: \"\",\n            text: \"\",\n            sort: true,\n            status: true,\n            type: \"invoice\",\n            isPagination: false,\n            bankAccountId: \"\",\n            isGSTEnabled: \"\",\n          }));\n          if (!addressRes?.error) {\n            setValue(\"invoiceLayout\", invoiceDetails?.invoiceLayoutId);\n          }\n\n          setValue(\"tasks\", []);\n          setDataSet(true);\n        } catch (err) {\n          console.error(\"Error fetching invoice-related data:\", err);\n        }\n      } else {\n        setFinalTaskType([]);\n        setValue(\"tasks\", []);\n      }\n\n      setFormLoading(false);\n    };\n\n    if (invoiceDetails) {\n      fetchData();\n    }\n  }, [invoiceDetails]);\n\n\n  // useEffect(() => {\n  //   setFinalTaskType([]);\n  //   if (\n  //     clientList?.find((client) => client._id === watch(\"client\"))\n  //       ?.clientCompletedTaskData\n  //   ) {\n\n      \n  //     setFinalTaskType([\n  //       ...clientList?.find((client) => client._id === watch(\"client\"))\n  //         ?.clientCompletedTaskData,\n  //       {\n  //         _id: \"other\",\n  //         financialYear: \"-\",\n  //         status: \"Completed\",\n  //         taskName: \"Other\",\n  //         description: \"Other\",\n  //         HSNCode: \"\",\n  //         GSTRate: 0,\n  //         GSTName: \"-\",\n  //         taskFee: 0,\n  //       },\n  //     ]);\n  //   }\n  // }, [clientList, watch(\"client\"), selectedlayout, selectedClient]);\n  // useEffect(() => {\n  //   if (selectedClient && selectedlayout) {\n  //     if (selectedlayout?.isGSTEnabled) {\n  //       setIsGstType(true);\n  //       const ClientGstNumber = selectedClient?.clientProfile?.GSTNumber;\n  //       const layoutGstNumber = selectedlayout?.gstNumber;\n  //       const clientGstPrefix = ClientGstNumber?.slice(0, 2);\n  //       const layoutGstPrefix = layoutGstNumber?.slice(0, 2);\n  //       if (clientGstPrefix === layoutGstPrefix) {\n  //         setGstType(\"interstate\");\n  //       } else {\n  //         setGstType(\"intrastate\");\n  //       }\n  //     } else {\n  //       setIsGstType(false);\n  //       setGstType(\"\");\n  //     }\n  //   } else {\n  //     setIsGstType(false);\n  //     setGstType(\"\");\n  //   }\n  // }, [selectedClient, selectedlayout]);\n  useEffect(() => {\n    if (selectedClient && selectedlayout) {\n      if (selectedClient?.clientProfile?.GSTNumber && selectedlayout?.isGSTEnabled) {\n        setIsGstType(true);\n        const ClientGstNumber = selectedClient?.clientProfile?.GSTNumber;\n        const layoutGstNumber = selectedlayout?.gstNumber;\n        const clientGstPrefix = ClientGstNumber?.slice(0, 2);\n        const layoutGstPrefix = layoutGstNumber?.slice(0, 2);\n        if (clientGstPrefix === layoutGstPrefix) {\n          setGstType(\"interstate\");\n        }  else if (!selectedClient?.clientProfile?.GSTNumber && selectedlayout?.isGSTEnabled) {\n          setIsGstType(true);\n          setGstType(\"interstate\");\n        } else {\n          setGstType(\"intrastate\");\n        }\n      } else {\n        setIsGstType(false);\n        setGstType(\"\");\n      }\n    } else {\n      setIsGstType(false);\n      setGstType(\"\");\n    }\n  }, [selectedClient, selectedlayout]);\n  useEffect(() => {\n    if (!payloadTasks || payloadTasks.length === 0) {\n      setTotals({\n        totalAmount: 0,\n        totalDiscount: 0,\n        totalDiscountedPrice: 0,\n        totalGST: 0,\n        totalFinalAmount: 0,\n      });\n      return;\n    }\n\n    const newTotals = payloadTasks.reduce(\n      (acc, task) => {\n        acc.totalAmount += Number(task.amount) || 0;\n        acc.totalDiscount += Number(task.discount) || 0;\n        acc.totalDiscountedPrice += Number(task.discountedPrice) || 0;\n        acc.totalGST += Number(task.gstPrice) || 0;\n        acc.totalFinalAmount += Number(task.finalAmount) || 0;\n        return acc;\n      },\n      {\n        totalAmount: 0,\n        totalDiscount: 0,\n        totalDiscountedPrice: 0,\n        totalGST: 0,\n        totalFinalAmount: 0,\n      }\n    );\n\n    setTotals(newTotals);\n\n  }, [payloadTasks]);\n\n\n  useEffect(() => {\n    if (dataSet) {\n\n      invoiceDetails?.taskList?.forEach((task) => {\n\n        if (task.taskType !== \"other\") {\n          const formattedtaskDetails = {\n            taskName: task?.taskName,\n            taskType: task?.taskId,\n            tasktypeId: task?.taskId,\n            hsnCode: task.HSNCode,\n            gstRate: task.GSTRate,\n            amount: task.taskAmount,\n            finalAmount: task.calculatedAmount,\n            discount: task.discount,\n            discountedPrice: task.discountAmount,\n            gstPrice: task.gstAmount,\n            financialYear: task?.financialYear,\n          };\n\n          append(formattedtaskDetails);\n        } else {\n          const formattedtaskDetails = {\n            taskName: task?.taskName,\n            description: task?.taskName,\n            taskType: \"other\",\n            tasktypeId: \"other\",\n            hsnCode: task.HSNCode,\n            gstRate: task.GSTRate,\n            amount: task.taskAmount,\n            finalAmount: task.calculatedAmount,\n            discount: task.discount,\n            discountedPrice: task.discountAmount,\n            gstPrice: task.gstAmount,\n            gstTypeId: task.GSTRate,\n            financialYear: null,\n          };\n\n          append(formattedtaskDetails);\n        }\n        setDataSet(false);\n      });\n    }\n  }, [dataSet, invoiceDetails]);\n  const onSubmit = async (data) => {\n    const taskTypeTask = data?.tasks\n      ?.filter((task) => task.taskType !== \"other\")\n      ?.map((task) => {\n        const loppedTask = finalTaskType.find(\n          (looppedtask) => looppedtask._id === task.taskType\n        );\n        return {\n          taskType: \"task\",\n          taskId: task.taskType,\n          taskName: loppedTask?.taskName,\n          HSNCode: task.hsnCode,\n          GSTRate: + task.gstRate,\n          taskAmount: + task.amount,\n          calculatedAmount: + task.finalAmount,\n          gstAmount: + task.gstPrice,\n          discount: + task.discount,\n          discountAmount: + task.discountedPrice,\n          financialYear: task?.financialYear,\n        };\n      });\n    const taskTypeOther = data?.tasks\n      ?.filter((task) => task.taskType === \"other\")\n      ?.map((task) => {\n        const loppedTask = finalTaskType.find(\n          (task) => task._id === task.taskType\n        );\n        return {\n          taskType: \"other\",\n          taskId: null,\n          taskName: task?.description,\n          HSNCode: task.hsnCode,\n          GSTRate: + task.gstRate,\n          taskAmount: + task.amount,\n          calculatedAmount: + task.finalAmount,\n          gstAmount: + task.gstPrice,\n          discount: + task.discount,\n          discountAmount: + task.discountedPrice,\n          financialYear: null,\n        };\n      });\n    const finalPayload = {\n      _id: invoiceDetails?._id,\n      companyId: invoiceDetails?.companyId,\n      directorId: invoiceDetails?.directorId,\n      branchId: invoiceDetails?.branchId,\n      clientId: invoiceDetails?.clientId,\n      invoiceLayoutId: data?.invoiceLayout,\n      taskList: [...taskTypeTask, ...taskTypeOther],\n      totalAmount: + totals?.totalAmount,\n      discountAmount: + totals?.totalDiscount,\n      grandTotal: + totals?.totalFinalAmount,\n      isAllTask: data?.isAlltask || false,\n       isIGST : gstType === \"intrastate\" ? true : false,\n      isDiscount: true,\n      SGST: isgstType ? + (totals?.totalGST / 2) : null,\n      CGST: isgstType ?  + (totals?.totalGST / 2) : null,\n      IGST: isgstType ? + totals?.totalGST : null,\n    };\n    await dispatch(updateinvoice(finalPayload)).then((data) => {\n      // if (!data?.error) navigate(-1);\n    });\n  };\n  return (\n\n    <GlobalLayout>\n      {(isInvoiceLoading || isFormLoading) ? <ListLoader /> : <form\n        autoComplete=\"off\"\n        className=\"mt-2 md:px-1\"\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <div className=\"grid grid-cols-1 md:grid-cols-1 md:gap-8 md:my-1  md:mt-4\">\n\n          {(userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"companyDirector\") && (\n              <div className=\"\">\n                <label className={`${inputLabelClassName}`}>\n                  Branch <span className=\"text-red-600\">*</span>\n                </label>\n\n                <Controller\n                  control={control}\n                  name=\"PDBranchId\"\n                  rules={{ required: \"Branch is required\" }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      defaultValue={\"\"}\n                      disabled\n                      className={`${inputAntdSelectClassName} `}\n                    >\n                      <Select.Option value=\"\">Select Branch</Select.Option>\n                      {branchListloading ? <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option> : sortByPropertyAlphabetically(branchList, 'fullName')?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.fullName}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.PDBranchId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDBranchId.message}\n                  </p>\n                )}\n              </div>\n            )}\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 \">\n          <div className=\"w-full\">\n            <label className={`${inputLabelClassName}`}>\n              Client <span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              name=\"client\"\n              control={control}\n              rules={{ required: \" client is required\" }}\n\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={\"\"}\n                  showSearch\n                  disabled\n                  filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                  className={` ${inputAntdSelectClassName} ${errors.invoiceLayout\n                    ? \"border-[1px] \"\n                    : \"border-gray-300\"\n                    }`}\n                >\n                  <Select.Option className=\"\" value=\"\">\n                    Select client\n                  </Select.Option>\n                  {clientLoading ? <Select.Option disabled>\n                    <ListLoader />\n                  </Select.Option> : (sortByPropertyAlphabetically(clientList, 'fullName')?.map((element) => (\n                    <Select.Option value={element?._id}>\n                      {element?.fullName}\n                    </Select.Option>\n                  )))}\n                </Select>\n              )}\n            />\n            {errors.client && (\n              <p className=\"text-red-500 text-sm mt-1\">\n                {errors.client.message}\n              </p>\n            )}\n          </div>\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>\n              Firm Layout Name<span className=\"text-red-600\">*</span>\n            </label>\n            <Controller\n              control={control}\n              name=\"invoiceLayout\"\n              rules={{ required: \"Task Name is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  onChange={(e) => {\n                    setValue(\"invoiceLayout\", e)\n                    setValue(\"tasks\", [])\n                  }}\n                  defaultValue={\"\"}\n                  className={` ${inputAntdSelectClassName} ${errors.invoiceLayout\n                    ? \"border-[1px] \"\n                    : \"border-gray-300\"\n                    }`}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option className=\"\" value=\"\">\n                    Select Layout\n                  </Select.Option>\n\n                  {officeAddressLoading ? <Select.Option disabled>\n                    <ListLoader />\n                  </Select.Option> : (sortByPropertyAlphabetically(officeAddressListData, 'firmName')?.map((element) => (\n                    <Select.Option value={element?._id}>\n                      {element?.firmName}\n                    </Select.Option>\n                  )))}\n                </Select>\n              )}\n            />\n\n            {errors.invoiceLayout && (\n              <p className=\"text-red-500 text-sm\">\n                {errors.invoiceLayout.message}\n              </p>\n            )}\n          </div>\n        </div>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 my-3\">\n          {selectedClient && (\n            <div className=\"bg-white rounded-xl border border-gray-200 p-2 shadow-sm\">\n              <h3 className=\"text-sm font-semibold text-gray-800 mb-1 pb-0.5 border-b border-gray-100\">Client Details</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                <DetailItem label=\"Client\" value={selectedClient?.fullName} />\n                <DetailItem label=\"GST Number\" value={selectedClient?.clientProfile?.GSTNumber || '-'} />\n                <DetailItem\n                  label=\"Address\"\n                  value={`${selectedClient?.addresses?.primary?.city ?? '-'} , ${selectedClient?.addresses?.primary?.state ?? '-'}, ${selectedClient?.addresses?.primary?.country ?? '-'} , ${selectedClient?.addresses?.primary?.pinCode ?? '-'}`}\n                />\n                <DetailItem\n                  label=\"Mobile\"\n                  value={`${selectedClient?.mobile?.code} ${selectedClient?.mobile?.number}`}\n                />\n              </div>\n            </div>\n          )}\n          {selectedlayout && (\n            <div className=\"bg-white rounded-xl border border-gray-200 p-2 shadow-sm\">\n              <h3 className=\"text-sm font-semibold text-gray-800 mb-1 pb-0.5 border-b border-gray-100\">Firm Details</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n                <DetailItem label=\"Firm Name\" value={selectedlayout?.firmName} />\n                <DetailItem\n                  label=\"GST Number\"\n                  value={selectedlayout?.isGSTEnabled ? selectedlayout?.gstNumber : '-'}\n                />\n                <DetailItem\n                  label=\"Address\"\n                  value={`${selectedlayout?.address?.city ?? \"-\"}, ${selectedlayout?.address?.state ?? \"-\"}, ${selectedlayout?.address?.country ?? \"-\"} , ${selectedlayout?.address?.pinCode ?? \"-\"}`}\n                />\n                <DetailItem\n                  label=\"Mobile\"\n                  value={`${selectedlayout?.mobile?.code} ${selectedlayout?.mobile?.number}`}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n\n        <div className=\"space-y-2\">\n          {selectedClient && selectedlayout && <div>\n            {fields.map((field, index) => (\n              <div className=\"border border-gray-300 rounded-md\">\n                <div className=\"flex flex-col items-end\">\n                  <div className=\"w-full bg-header flex justify-end items-center rounded-tl-md rounded-tr-md p-1\">\n                    <button type=\"button\" onClick={() => remove(index)}>\n                      <RiDeleteBin5Line\n                        className=\"text-white w-12 hover:text-white\"\n                        size={20}\n                      />\n                    </button>\n                  </div>\n                </div>\n                <div\n                  className={`grid sm:grid-cols-2 gap-2 md:grid-cols-4 p-3`}\n                >\n                  <div\n                    className={\n                      watch(\"isAlltask\") ? \"hidden w-full\" : \"block w-full\"\n                    }\n                  >\n                    <label className={`${inputLabelClassName}`}>Task</label>\n\n                    <Controller\n                      control={control}\n                      name={`tasks[${index}].taskType`}\n                      rules={{ required: \"Task Type is required\" }}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          defaultValue={\"\"}\n                          className={`${inputAntdSelectClassName}`}\n                          showSearch\n                          filterOption={(input, option) =>\n                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                          }\n                          onChange={(value) => {\n                            // setValue(`tasks[${index}].taskType` , valu)\n                            if (value) {\n                              const data = finalTaskType?.find(\n                                (task) => task._id === value\n                              );\n                              if (data) {\n                                const gstPriceNew = isgstType ? data?.GSTRate : 0\n                                setValue(\n                                  `tasks[${index}].tasktypeId`,\n                                  data?._id\n                                );\n                                setValue(\n                                  `tasks[${index}].amount`,\n                                  data?.taskFee\n                                );\n                                setValue(\n                                  `tasks[${index}].gstRate`,\n                                  gstPriceNew\n                                );\n                                setValue(\n                                  `tasks[${index}].hsnCode`,\n                                  data?.HSNCode\n                                );\n                                setValue(\n                                  `tasks[${index}].discount`,\n                                  0\n                                );\n                                setValue(`tasks[${index}].discountedPrice`, data?.taskFee)\n                                setValue(`tasks[${index}].gstPrice`, (data?.taskFee * gstPriceNew) / 100)\n                                setValue(`tasks[${index}].finalAmount`, ((data?.taskFee * gstPriceNew) / 100) + data?.taskFee)\n                                setValue(\n                                  `tasks[${index}].financialYear`,\n                                  data?.financialYear\n                                );\n                              }\n                            } else {\n                              setValue(`tasks[${index}].tasktypeId`, \"\");\n                              setValue(`tasks[${index}].amount`, 0);\n                              setValue(`tasks[${index}].gstRate`, 0);\n                              setValue(`tasks[${index}].hsnCode`, '');\n                              setValue(`tasks[${index}].discount`, 0);\n                              setValue(`tasks[${index}].discountedPrice`, 0);\n                              setValue(`tasks[${index}].gstPrice`, 0);\n                              setValue(`tasks[${index}].gstTypeId`, 0);\n                              setValue(`tasks[${index}].finalAmount`, 0);\n                              setValue(`tasks[${index}].financialYear`, null);\n                            }\n                            field.onChange(value);\n                          }}\n                        >\n                          <Select.Option value=\"\">\n                            Select Task\n                          </Select.Option>\n                          {finalTaskType\n                            ?.filter((task) => {\n                              const selectedTasks = watch(\"tasks\")?.map((t, i) => i !== index && t.taskType).filter(Boolean);\n                              return !selectedTasks.includes(task._id);\n                            }).map((data) => (\n                              <Select.Option key={data?._id} value={data?._id}>\n                                {data?.taskName}\n                              </Select.Option>\n                            ))}\n                        </Select>\n                      )}\n                    />\n\n                    {errors.tasks?.[index]?.taskType && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.tasks?.[index]?.taskType?.message}\n                      </p>\n                    )}\n                  </div>\n                  <div\n                    className={\n                      !watch(\"isAlltask\") ? \"hidden w-full\" : \"block w-full\"\n                    }\n                  >\n                    <label className={`${inputLabelClassName}`}>Task</label>\n                    <input\n                      type=\"text\"\n                      disabled\n                      {...register(`tasks[${index}].taskName`)}\n                      className={`${inputClassName}`}\n                      placeholder=\"Task Name\"\n                    />\n                    {errors.tasks?.[index]?.taskName && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.tasks?.[index]?.taskName?.message}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      HSN code\n                    </label>\n                    <input\n                      type=\"text\"\n                      disabled={watch(`tasks[${index}].tasktypeId`) !== \"other\"}\n                      {...register(`tasks[${index}].hsnCode`, {\n                        required: watch(`tasks[${index}].tasktypeId`) === \"other\"\n                          ? \"HSN Code is required\"\n                          : false,\n                        pattern: {\n                          value: /^\\d{4}(\\d{2})?(\\d{2})?$/,\n                          message: \"HSN Code must be 4, 6, or 8 digits\",\n                        },\n                      })}\n                      className={`${inputClassName}`}\n                      placeholder=\"HSN CODE\"\n                    />\n                    {errors.tasks?.[index]?.hsnCode && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.tasks?.[index]?.hsnCode?.message}\n                      </p>\n                    )}\n                  </div>\n                  {watch(`tasks[${index}].tasktypeId`) && watch(`tasks[${index}].tasktypeId`) !== \"other\" && (\n                    <div className=\"w-full\">\n                      <label className={`${inputLabelClassName}`}>\n                        Financial Year\n                      </label>\n                      <input\n                        type=\"text\"\n                        disabled\n                        {...register(`tasks[${index}].financialYear`, {})}\n                        className={`${inputDisabledClassName}`}\n                        placeholder=\"Financial Year\"\n                      />\n                      {errors.tasks?.[index]?.financialYear && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.tasks?.[index]?.financialYear?.message}\n                        </p>\n                      )}\n                    </div>\n                  )}\n                  {watch(`tasks[${index}].tasktypeId`) === \"other\" && (\n                    <div className=\"w-full\">\n                      <label className={`${inputLabelClassName}`}>\n                        Description\n                      </label>\n                      <input\n                        type=\"text\"\n                        {...register(`tasks[${index}].description`, {})}\n                        className={`${inputClassName}`}\n                        placeholder=\"Description\"\n                      />\n                      {errors.tasks?.[index]?.description && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.tasks?.[index]?.description?.message}\n                        </p>\n                      )}\n                    </div>\n                  )}\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      Amount\n                    </label>\n                    <input\n                      type=\"number\"\n                       step=\"0.01\"\n                      {...register(`tasks[${index}].amount`, {\n                        required: watch(`tasks[${index}].tasktypeId`) === \"other\" ? \"Amount is required\" : false,\n                        min: {\n                          value: 0,\n                          message: \"Amount cannot be negative\",\n                        },\n                      })}\n                      className={`${inputClassName}`}\n                      placeholder=\"Amount\"\n                      disabled={watch(`tasks[${index}].tasktypeId`) !== \"other\"}\n                      onChange={(e) => {\n                        if (watch(`tasks[${index}].tasktypeId`) === \"other\") {\n                          const amount = Number(e.target.value);\n                          const gstRate = Number(watch(`tasks[${index}].gstRate`));\n                          const discount = Number(watch(`tasks[${index}].discount`)) ?? 0;\n                          const discountPrice = amount - discount\n                          const gstPrice = (discountPrice * gstRate) / 100;\n                          const finalAmount = discountPrice + gstPrice;\n\n                          setValue(`tasks[${index}].discountedPrice`, discountPrice);\n                          setValue(`tasks[${index}].gstPrice`, gstPrice);\n                          setValue(`tasks[${index}].finalAmount`, finalAmount);\n                        }\n                      }}\n                    />\n                    {errors.tasks?.[index]?.amount && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.tasks?.[index]?.amount?.message}\n                      </p>\n                    )}\n                  </div>\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      Discount\n                    </label>\n                    <input\n                      type=\"number\"\n                       step=\"0.01\"\n                      {...register(`tasks[${index}].discount`, {\n                        min: {\n                          value: 0,\n                          message: \"Discount cannot be negative\",\n                        },\n                        validate: (value) => {\n                          const amount = Number(watch(`tasks[${index}].amount`));\n                          if (Number(value) > amount) return \"Discount cannot exceed amount\";\n                          return true;\n                        },\n                      })}\n                      className={`${inputClassName}`}\n                      placeholder=\"Discount\"\n                      onChange={(e) => {\n                        const enteredValue = Math.max(0, Number(e.target.value)); // prevents setting negative discount\n                        const amount = Number(watch(`tasks[${index}].amount`));\n                        const validDiscount = Math.min(enteredValue, amount);\n\n                        setValue(`tasks[${index}].discount`, validDiscount);\n                        const discountedPrice = amount - validDiscount;\n                        const gstRate = Number(watch(`tasks[${index}].gstRate`));\n                        const gstPrice = (discountedPrice * gstRate) / 100;\n                        const finalAmount = discountedPrice + gstPrice;\n\n                        setValue(`tasks[${index}].discountedPrice`, discountedPrice);\n                        setValue(`tasks[${index}].gstPrice`, gstPrice);\n                        setValue(`tasks[${index}].finalAmount`, finalAmount);\n                      }}\n                    />\n                    {errors.tasks?.[index]?.discount && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.tasks?.[index]?.discount?.message}\n                      </p>\n                    )}\n                  </div>\n\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      Discounted Price\n                    </label>\n                    <input\n                      type=\"number\"\n                       step=\"0.01\"\n                      disabled\n                      {...register(`tasks[${index}].discountedPrice`, {})}\n                      className={`${inputClassName}`}\n                      placeholder=\"discountedPrice\"\n                    />\n                    {errors.tasks?.[index]?.discountedPrice && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.tasks?.[index]?.discountedPrice?.message}\n                      </p>\n                    )}\n                  </div>\n                  {isgstType &&\n                    (\n                      <>\n                        {watch(`tasks[${index}].tasktypeId`) === \"other\" ? <div className=\"\">\n                          <label className={`${inputLabelClassName}`}>\n                            Gst Rate <span className=\"text-red-600\">*</span>\n                          </label>\n                          <Controller\n                            name={`tasks[${index}].gstTypeId`}\n                            control={control}\n                            rules={{ required: \"GST Rate is required\" }}\n                            render={({ field }) => (\n                              <Select\n                                {...field}\n                                showSearch\n                                placeholder=\"Select GST Rate\"\n                                className={`${inputAntdSelectClassName} ${errors?.tasks?.[index]?.gstTypeId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                                onChange={(e) => {\n                                  setValue(`tasks[${index}].gstRate`, e)\n                                  setValue(`tasks[${index}].gstTypeId`, e)\n                                  const gstRate = Number(e);\n                                  const amount = Number(watch(`tasks[${index}].discountedPrice`));\n                                  const gstPrice = (amount * gstRate) / 100;\n                                  const finalAmount = amount + gstPrice;\n                                  setValue(`tasks[${index}].gstPrice`, gstPrice);\n                                  setValue(`tasks[${index}].finalAmount`, finalAmount);\n                                }}\n                              >\n                                <Select.Option value=\"\">Select GST Type</Select.Option>\n                                {gstTypeLoading ? <Select.Option disabled>\n                                  <ListLoader />\n                                </Select.Option> : (gstTypeList?.map((element) => (\n                                  <Select.Option key={element?._id} value={element?.percentage}>\n                                    {element?.percentage} %\n                                  </Select.Option>\n                                )))}\n                              </Select>\n                            )}\n                          />\n                          {errors?.tasks?.[index]?.gstTypeId && (\n                            <p className=\"text-red-500 text-sm\">\n                              {errors?.tasks?.[index]?.gstTypeId?.message}\n                            </p>\n                          )}\n                        </div>\n                          :\n                          <div className=\"w-full\">\n                            <label className={`${inputLabelClassName}`}>\n                              Gst Rate\n                            </label>\n                            <input\n                              type=\"text\"\n                              disabled\n                              {...register(`tasks[${index}].gstRate`, {\n                                required: watch(`tasks[${index}].tasktypeId`) === \"other\"\n                                  ? \"GST Rate is required\"\n                                  : false,\n                                pattern: {\n                                  value: /^\\d+(\\.\\d{1,2})?$/,\n                                  message: \"Enter a valid GST Rate (e.g., 5, 12.5)\",\n                                },\n                                min: {\n                                  value: 0,\n                                  message: \"GST Rate cannot be less than 0%\",\n                                },\n                                max: {\n                                  value: 100,\n                                  message: \"GST Rate cannot be more than 100%\",\n                                },\n                              })}\n\n                              className={`${inputClassName}`}\n                              placeholder=\"GST Rate\"\n                            />\n\n                            {errors?.tasks?.[index]?.gstRate && (\n                              <p className=\"text-red-500 text-sm\">\n                                {errors.tasks[index].gstRate.message}\n                              </p>\n                            )}\n                          </div>}\n\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Gst Price\n                          </label>\n                          <input\n                            type=\"text\"\n                            disabled\n                            {...register(`tasks[${index}].gstPrice`, {})}\n                            className={`${inputClassName}`}\n                            placeholder=\"gst Price\"\n                          />\n                          {errors?.tasks?.[index]?.gstPrice && (\n                            <p className=\"text-red-500 text-sm\">\n                              {errors?.tasks?.[index]?.gstPrice?.message}\n                            </p>\n                          )}\n                        </div>\n                      </>\n                    )}\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      Final Amount\n                    </label>\n                    <input\n                      type=\"number\"\n                       step=\"0.01\"\n                      disabled\n                      {...register(`tasks[${index}].finalAmount`, {})}\n                      className={`${inputClassName}`}\n                      placeholder=\"Final Amount\"\n                    />\n                    {errors.tasks?.[index]?.finalAmount && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.tasks?.[index]?.finalAmount?.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))}\n            {finalTaskType.length > fields?.length && (\n              <button\n                type=\"button\"\n                onClick={() =>\n                  append({ taskType: '', amount: \"\" })\n                }\n                className={\n                  watch(\"isAlltask\")\n                    ? \"hidden\"\n                    : \"bg-header text-white p-2 px-4 rounded\"\n                }\n              >\n                Add Task Details\n              </button>\n            )}\n            <div className=\"w-full md:flex flex-row items-end justify-end my-3\">\n              <div className=\"\">\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>\n                    Total Amount\n                  </label>\n                  <input\n                    type=\"number\"\n                     step=\"0.01\"\n                    value={totals?.totalAmount ?? 0}\n                    className={`${inputClassName}`}\n                    placeholder=\"totalAmount\"\n                    disabled\n                  />\n\n                </div>\n\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>Discount</label>\n                  <input\n                    type=\"number\"\n                     step=\"0.01\"\n                    disabled\n                    value={totals?.totalDiscount ?? 0}\n                    className={`${inputClassName}`}\n                    placeholder=\"Discount\"\n                  />\n                </div>\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>Discounted Price</label>\n                  <input\n                    type=\"number\"\n                     step=\"0.01\"\n                    disabled\n                    value={totals?.totalDiscountedPrice ?? 0}\n                    className={`${inputClassName}`}\n                    placeholder=\"Discounted Price\"\n                  />\n                </div>\n\n                {gstType === \"intrastate\" && (\n                  <div className=\"\">\n                    <label className={`${inputLabelClassName}`}>IGST</label>\n                    <input\n                      type=\"number\"\n                       step=\"0.01\"\n                      value={totals?.totalGST ?? 0}\n                      disabled\n                      className={`${inputClassName}`}\n                      placeholder=\"IGST\"\n                    />\n                  </div>\n                )}\n                {gstType === \"interstate\" && (\n                  <>\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Total SGST\n                      </label>\n                      <input\n                        type='number'\n                         step=\"0.01\"\n                        disabled\n                        value={(totals?.totalGST / 2) ?? 0}\n                        className={`${inputClassName}`}\n                        placeholder=\"SGST\"\n                      />\n                    </div>\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Total CGST\n                      </label>\n                      <input\n                        type='number'\n                        disabled\n                        value={(totals?.totalGST / 2) ?? 0}\n                        className={`${inputClassName}`}\n                        placeholder=\"CGST\"\n                      />\n                    </div>\n                  </>\n                )}\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>\n                    Grand Total\n                  </label>\n                  <input\n                    type='number'\n                    value={totals?.totalFinalAmount ?? 0}\n                    className={`${inputClassName}`}\n                    placeholder=\"grandTotal\"\n                    disabled\n                  />\n                </div>\n              </div>\n\n            </div>\n          </div>}\n          <div className=\"flex justify-end my-4\">\n            <button\n              type=\"submit\"\n              disabled={invoiceLoading}\n              className={`${invoiceLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded`}\n            >\n              {invoiceLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </div>\n      </form>}\n    </GlobalLayout>\n  );\n};\n\nexport default EditInvoice;\n\n\nconst DetailItem = ({ label, value }) => (\n  <div>\n    <p className=\"text-sm font-medium text-gray-500\">{label}</p>\n    <p className=\"text-sm text-gray-800 mt-1\">{value ?? \"-\"}</p>\n  </div>\n);"],"names":["EditInvoice","_selectedClient$clien4","_selectedClient$addre","_selectedClient$addre2","_selectedClient$addre3","_selectedClient$addre4","_selectedClient$addre5","_selectedClient$addre6","_selectedClient$addre7","_selectedClient$addre8","_selectedClient$addre9","_selectedClient$addre0","_selectedClient$addre1","_selectedClient$addre10","_selectedClient$mobil","_selectedClient$mobil2","_selectedlayout$addre","_selectedlayout$addre2","_selectedlayout$addre3","_selectedlayout$addre4","_selectedlayout$addre5","_selectedlayout$addre6","_selectedlayout$addre7","_selectedlayout$addre8","_selectedlayout$mobil","_selectedlayout$mobil2","_totals$totalAmount","_totals$totalDiscount","_totals$totalDiscount2","_totals$totalGST","_ref6","_ref7","_totals$totalFinalAmo","invoiceIdEnc","useParams","invoiceId","decrypt","register","handleSubmit","control","watch","reset","formState","errors","setValue","useForm","defaultValues","totalAmount","totalDiscount","totalDiscountedPrice","tasks","gstAmount","gstRate","amount","hsnCode","taskType","payloadTasks","useWatch","name","defaultValue","totals","setTotals","useState","totalGST","totalFinalAmount","fields","append","remove","useFieldArray","loading","invoiceLoading","useSelector","state","invoice","invoiceDetails","invoiceDetailsLoading","gstTypeList","gstTypeLoading","gstType","setGstType","isgstType","setIsGstType","dispatch","useDispatch","dataSet","setDataSet","useNavigate","finalTaskType","setFinalTaskType","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","branchList","branchListloading","branch","officeAddressListData","officeAddressLoading","officeAddress","clientList","clientLoading","client","selectedlayout","find","address","_id","selectedClient","isInvoiceLoading","setInvoiceLoading","isFormLoading","setFormLoading","useEffect","async","getinvoiceDetails","error","console","fetchInvoiceDetails","log","clientCompletedTaskData","financialYear","status","taskName","description","HSNCode","GSTRate","GSTName","taskFee","branchRes","branchSearch","text","sort","isPagination","companyId","branchId","gstTypeSearch","directorId","clientRes","clientSearch","groupId","organizationId","industryId","clientId","addressRes","officeAddressSearch","type","bankAccountId","isGSTEnabled","invoiceLayoutId","err","fetchData","_selectedClient$clien","clientProfile","GSTNumber","_selectedClient$clien2","_selectedClient$clien3","ClientGstNumber","layoutGstNumber","gstNumber","slice","length","newTotals","reduce","acc","task","Number","discount","discountedPrice","gstPrice","finalAmount","_invoiceDetails$taskL","taskList","forEach","formattedtaskDetails","taskId","tasktypeId","taskAmount","calculatedAmount","discountAmount","gstTypeId","_jsx","GlobalLayout","children","ListLoader","_jsxs","autoComplete","className","onSubmit","_data$tasks","_data$tasks$filter","_data$tasks2","_data$tasks2$filter","taskTypeTask","data","filter","map","loppedTask","looppedtask","taskTypeOther","finalPayload","invoiceLayout","grandTotal","isAllTask","isAlltask","isIGST","isDiscount","SGST","CGST","IGST","updateinvoice","then","userType","inputLabelClassName","Controller","rules","required","render","_ref","_sortByPropertyAlphab","field","Select","_objectSpread","disabled","inputAntdSelectClassName","Option","value","sortByPropertyAlphabetically","fullName","PDBranchId","message","_ref2","_sortByPropertyAlphab2","showSearch","filterOption","input","option","String","toLowerCase","includes","element","_ref3","_sortByPropertyAlphab3","onChange","e","firmName","DetailItem","label","addresses","primary","city","country","pinCode","mobile","code","number","index","_errors$tasks","_errors$tasks$index","_errors$tasks2","_errors$tasks2$index","_errors$tasks2$index$","_errors$tasks3","_errors$tasks3$index","_errors$tasks4","_errors$tasks4$index","_errors$tasks4$index$","_errors$tasks5","_errors$tasks5$index","_errors$tasks6","_errors$tasks6$index","_errors$tasks6$index$","_errors$tasks7","_errors$tasks7$index","_errors$tasks8","_errors$tasks8$index","_errors$tasks8$index$","_errors$tasks9","_errors$tasks9$index","_errors$tasks0","_errors$tasks0$index","_errors$tasks0$index$","_errors$tasks1","_errors$tasks1$index","_errors$tasks10","_errors$tasks10$index","_errors$tasks10$index2","_errors$tasks11","_errors$tasks11$index","_errors$tasks12","_errors$tasks12$index","_errors$tasks12$index2","_errors$tasks13","_errors$tasks13$index","_errors$tasks14","_errors$tasks14$index","_errors$tasks14$index2","_errors$tasks16","_errors$tasks16$index","_errors$tasks17","_errors$tasks17$index","_errors$tasks17$index2","_errors$tasks18","_errors$tasks18$index","_errors$tasks19","_errors$tasks19$index","_errors$tasks20","_errors$tasks20$index","_errors$tasks20$index2","_errors$tasks21","_errors$tasks21$index","_errors$tasks22","_errors$tasks22$index","_errors$tasks22$index2","onClick","RiDeleteBin5Line","size","_ref4","gstPriceNew","_watch","t","i","Boolean","inputClassName","placeholder","pattern","inputDisabledClassName","step","min","_Number","target","discountPrice","validate","enteredValue","Math","max","validDiscount","_Fragment","_ref5","_errors$tasks15","_errors$tasks15$index","percentage","Loader","_ref8"],"sourceRoot":""}