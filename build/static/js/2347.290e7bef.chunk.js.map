{"version":3,"file":"static/js/2347.290e7bef.chunk.js","mappings":"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","sources":["global_layouts/Loader/Loader.js","pages/global/address/city/CityList.js"],"sourcesContent":["import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n","import { useNavigate } from \"react-router-dom\"\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { encrypt } from \"../../../../config/Encryption\"\nimport { FaPenToSquare, FaPlus } from \"react-icons/fa6\"\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { FaAngleDown } from \"react-icons/fa\";\nimport { HiOutlineFilter } from \"react-icons/hi\";\nimport { citySearch, deleteCityFunc, getCityList } from \"./CityFeatures/_city_reducers\"\nimport Loader from \"../../../../global_layouts/Loader/Loader\"\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\"\nimport { Select, Tooltip } from \"antd\"\nimport { stateSearch } from \"../state/featureStates/_state_reducers\"\nimport { countrySearch } from \"../country/CountryFeatures/_country_reducers\"\nimport { inputAntdSelectClassNameFilter, sortByPropertyAlphabetically } from \"../../../../constents/global\"\nimport usePermissions from \"../../../../config/usePermissions\"\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\"\nimport dayjs from \"dayjs\"\nimport ListLoader from \"../../../../global_layouts/ListLoader\"\n\nfunction CityList() {\n\n    const { register, setValue, control, formState: { errors } } = useForm();\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n    const { cityListData, totalCityCount, loading } = useSelector(state => state.city)\n    const { stateListData, loading: stateSearchLoading } = useSelector(state => state.states)\n\n\n    const { countryListData, loading: countrySearchLoading } = useSelector(state => state.country)\n    // const [status, setStatus] = useState(\"\");\n    const [searchText, setSearchText] = useState(\"\");\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const CountryId = useWatch({\n        control,\n        name: \"PDCountryId\",\n        defaultValue: \"\",\n    });\n    const StateId = useWatch({\n        control,\n        name: \"PDStateId\",\n        defaultValue: \"\",\n    });\n    const status = useWatch({\n        control,\n        name: \"status\",\n        defaultValue: \"\",\n    });\n\n\n    const limit = 10;\n\n    const filters = [CountryId, StateId, status, searchText].join(\"-\");\n    const [isFirstRender ,setisFirstRender] = useState(false)\n    \n    useEffect(() => {\n        if (!isFirstRender) {\n          setisFirstRender(state=>true);\n          return;\n        }\n        if (currentPage === 1) {\n          fetchCityList();\n        } else {\n          setCurrentPage(1);\n        }\n      }, [filters]);\n\n    useEffect(() => {\n        fetchCityList();\n    }, [currentPage])\n\n    const fetchCityList = () => {\n        const reqData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                text: searchText,\n                sort: true,\n                status: status,\n                isPagination: true,\n                countryId: CountryId,\n                stateId: StateId\n            }\n        };\n        dispatch(getCityList(reqData));\n    };\n\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteCityFunc(reqData)).then((data) => {\n                    // if (!data.error) fetchCityList()\n                    if (currentPage > 1 && cityListData?.docs?.length == 1) {\n                        setCurrentPage(Number(currentPage - 1));\n\n                    } else {\n                        fetchCityList();\n                    }\n                })\n            }\n        });\n    };\n\n    const handleOnChange = async (event) => {\n        const searchValue = event.target.value;\n        setValue(\"search\", searchValue);\n\n        if (searchValue.trim().length > 0) {\n            const reqData = {\n                searchValue: searchValue.trim(),\n            };\n\n            dispatch(citySearch(reqData));\n        }\n    };\n\n    const handleFocusCountry = () => {\n        if (!countryListData?.docs?.length) {\n            dispatch(\n                countrySearch({\n                    isPagination: false,\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                })\n            );\n        }\n    };\n\n    const handleFocusState = () => {\n        if (!stateListData?.docs?.length) {\n            dispatch(\n                stateSearch({\n                    isPagination: false,\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    countryId: CountryId\n                })\n            );\n        }\n    };\n\n\n    const onChange = (e) => {\n        // \n        setSearchText(e);\n    };\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n    return (\n        <GlobalLayout onChange={onChange}>\n\n            {/* <h2 className=\"text-2xl font-bold\">\n                    State List\n                </h2> */}\n\n            <div className='w-full xl:flex justify-between items-center xl:space-y-0 space-y-2 py-1'>\n                <div className=\"grid sm:grid-cols-3 grid-cols-1 md:flex  md:gap-3 gap-1 \">\n                    <div className=\"\">\n                        <Controller\n                            name=\"PDCountryId\"\n                            control={control}\n                            rules={{ required: \"Country is required\" }}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className={` ${inputAntdSelectClassNameFilter} `}\n                                    showSearch\n                                    filterOption={(input, option) =>\n                                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                    }\n                                    placeholder=\"Country Name\"\n                                    onFocus={handleFocusCountry}\n                                >\n                                    <Select.Option value=\"\">Select Country</Select.Option>\n                                    {countrySearchLoading ? (\n                                        <Select.Option disabled>\n                                            <ListLoader />\n                                        </Select.Option>\n                                    ) : (\n                                        sortByPropertyAlphabetically(countryListData?.docs)?.map((type) => (\n                                            <Select.Option key={type?._id} value={type?._id}>\n                                                {type?.name}\n                                            </Select.Option>\n                                        ))\n                                    )}\n                                </Select>\n                            )}\n                        />\n                    </div>\n                    <div className=\"\">\n                        <Controller\n                            name=\"PDStateId\"\n                            control={control}\n                            rules={{ required: \"State is required\" }}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className={` ${inputAntdSelectClassNameFilter} `}\n                                    showSearch\n                                    filterOption={(input, option) =>\n                                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                    }\n                                    placeholder=\"State Name\"\n                                    onFocus={handleFocusState}\n                                >\n\n                                    <Select.Option value=\"\">Select State</Select.Option>\n                                    {/* {stateListData?.docs?.map((type) => (\n                                        <Select.Option key={type?._id} value={type?._id}>\n                                            {type?.name}\n                                        </Select.Option>\n                                    ))} */}\n\n                                    {stateSearchLoading ? (\n                                        <Select.Option disabled>\n                                            <ListLoader />\n                                        </Select.Option>\n                                    ) : (\n                                        sortByPropertyAlphabetically(stateListData?.docs)?.map((type) => (\n                                            <Select.Option key={type?._id} value={type?._id}>\n                                                {type?.name}\n                                            </Select.Option>\n                                        ))\n                                    )}\n                                </Select>\n                            )}\n                        />\n                    </div>\n                    <div className=\"\">\n                        <Controller\n                            name=\"status\"\n                            control={control}\n                            rules={{}}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.status\n                                        ? \"border-[1px] \"\n                                        : \"border-gray-300\"\n                                        }`}\n                                    placeholder=\"Select Status\"\n                                    showSearch\n                                    filterOption={(input, option) =>\n                                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                    }\n                                >\n                                    <Select.Option value=\"\">Select Status</Select.Option>\n                                    <Select.Option value={true}> Active </Select.Option>\n                                    <Select.Option value={false}> InActive </Select.Option>\n                                </Select>\n                            )}\n                        />\n                    </div>\n                    <button\n                        onClick={() => {\n                            setValue(\"status\", \"\");\n                            setValue(\"PDCountryId\", \"\");\n                            setValue(\"PDStateId\", \"\");\n                        }}\n                        className=\"bg-header  py-1 w-24 mt-1 rounded-md lg:flex hidden justify-center items-center  text-white\"\n                    >\n                        <span className=\"text-[12px]\">Reset</span>\n                    </button>\n                </div>\n                <div className=\"flex justify-end items-center gap-2\">\n                    <button\n                        onClick={() => {\n                            setValue(\"status\", \"\");\n                            setValue(\"PDCountryId\", \"\");\n                            setValue(\"PDStateId\", \"\");\n                        }}\n                        className=\"bg-header  py-1.5 rounded-md lg:hidden flex px-10 justify-center items-center  text-white\"\n                    >\n                        <span className=\"text-[12px]\">Reset</span>\n                    </button>\n                    {(canRead && canCreate) &&\n                        <Tooltip placement=\"topLeft\"  title=''>\n                            <button onClick={() => { navigate(\"/admin/city/create\") }} className='bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white'>\n                                <FaPlus />\n                                <span className='text-[12px]'>Add City</span>\n                            </button>\n                        </Tooltip>}\n                </div>\n            </div>\n            <div className=\"w-full\">\n                <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n                    {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                        <thead className=''>\n                            <tr className='border-b-[1px] border-[#DDDDDD]  text-[12px] bg-[#074173] text-white font-[500] h-[40px]'>\n                                <th className='border-none p-2 whitespace-nowrap w-[10%]'>S.No.</th>\n                                <th className='border-none p-2 whitespace-nowrap'> Country</th>\n                                <th className='border-none p-2 whitespace-nowrap'>State</th>\n                                <th className='border-none p-2 whitespace-nowrap'>City</th>\n                                <th className='border-none p-2 whitespace-nowrap'>created At</th>\n                                <th className='border-none p-2 whitespace-nowrap'>created By</th>\n                                <th className='border-none p-2 whitespace-nowrap'>Status</th>\n                                {(canDelete || canUpdate) && <th className='border-none p-2 whitespace-nowrap w-[10%]'>Action</th>}\n                            </tr>\n                        </thead>\n                        {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                            <td\n                                colSpan={10}\n                                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                            >\n                                <Loader2 />\n                            </td>\n                        </tr> :\n                            <tbody>\n                                {cityListData && cityListData?.docs && cityListData?.docs?.length > 0 ?\n                                    cityListData?.docs?.map((element, index) => (\n                                        <tr key={index} className={`${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'}  border-b-[1px] border-[#DDDDDD] text-[#374151] text-[14px]`}>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                {index + 1 + ((currentPage - 1) * limit)}\n                                            </td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{element?.countryName ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{`${element?.stateName} ` ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{`${element?.name} ` ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{`${dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a')} ` ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>{`${element?.createdBy} ` ?? \"-\"}</td>\n                                            <td className='whitespace-nowrap border-none p-2 '>\n                                                <span\n                                                    className={`${element?.status\n                                                        ? \"bg-[#E0FFBE] border-green-500\"\n                                                        : \"bg-red-200 border-red-500\"\n                                                        } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                                                >\n                                                    {element?.status ? \"Active\" : \"Inactive\" ?? \"-\"}\n                                                </span>\n                                            </td>\n                                            {(canUpdate || canDelete) && <td className='whitespace-nowrap border-none p-2'>\n                                                <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                    {canUpdate && <Tooltip placement=\"topLeft\"  title='Edit'>\n                                                        <button onClick={() => { navigate(`/admin/city/edit/${encrypt(element?._id)}`) }} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <FaPenToSquare className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                    {canDelete && <Tooltip placement=\"topLeft\"  title='Delete'>\n                                                        <button onClick={() => handleDelete(element?._id)} className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <RiDeleteBin5Line className='text-red-600 hover:text-red-500' size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                </span>\n                                            </td>}\n                                        </tr>\n                                    ))\n                                    : (<tr className=\"bg-white bg-opacity-5 \" >\n                                        <td colSpan={8} className=\"px-6 py-2.5 whitespace-nowrap font-[600] text-center text-sm text-gray-500\">Record Not Found</td>\n                                    </tr>)}\n                            </tbody>}\n                    </table>}\n                </div>\n                {totalCityCount > limit && (\n                    <CustomPagination\n                        totalCount={totalCityCount}\n                        pageSize={limit}\n                        currentPage={currentPage}\n                        onChange={onPaginationChange}\n                    />)}\n            </div>\n        </GlobalLayout>\n    )\n}\nexport default CityList"],"names":["_jsx","className","children","Spin","size","_cityListData$docs2","_cityListData$docs3","register","setValue","control","formState","errors","useForm","navigate","useNavigate","dispatch","useDispatch","cityListData","totalCityCount","loading","useSelector","state","city","stateListData","stateSearchLoading","states","countryListData","countrySearchLoading","country","searchText","setSearchText","useState","currentPage","setCurrentPage","CountryId","useWatch","name","defaultValue","StateId","status","filters","join","isFirstRender","setisFirstRender","useEffect","fetchCityList","reqData","page","limit","reqPayload","text","sort","isPagination","countryId","stateId","getCityList","handleFocusCountry","_countryListData$docs","docs","length","countrySearch","handleFocusState","_stateListData$docs","stateSearch","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsxs","GlobalLayout","onChange","e","Controller","rules","required","render","_ref","_sortByPropertyAlphab","field","Select","_objectSpread","concat","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","placeholder","onFocus","Option","value","disabled","ListLoader","sortByPropertyAlphabetically","map","type","_id","_ref2","_sortByPropertyAlphab2","_ref3","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","element","index","_element$countryName","_ref4","_ref5","_ref6","_ref7","_Inactive","countryName","stateName","dayjs","createdAt","format","createdBy","encrypt","FaPenToSquare","id","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteCityFunc","data","_cityListData$docs","Number","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","pageSize"],"sourceRoot":""}