{"version":3,"file":"static/js/6782.8587b932.chunk.js","mappings":"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","sources":["pages/visitorManagement/client_visit/ManagerClientVisit.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\n\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\"\nimport { domainName, inputAntdSelectClassNameFilter, sortByPropertyAlphabetically } from \"../../../constents/global\"\nimport { FaEye, FaPlus } from \"react-icons/fa\"\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { encrypt } from \"../../../config/Encryption\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport getUserIds from \"../../../constents/getUserIds\";\nimport { Select, Tooltip } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport moment from \"moment\";\nimport { deptSearch } from \"../../department/departmentFeatures/_department_reducers\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport { deleteGeneralVisitor, deleteVisitor, getGeneralVisitorList, getVisitorList, updateGeneralVisitor, updateVisitor, visitorSearch } from \"../visitor/visitorFeatures/_visitor_reducers\";\nimport ClientCheckoutModal, { getCurrentLocation, getFullAddress } from \"./ClientCheckoutModal\";\nimport dayjs from \"dayjs\";\nimport MapWithDate from \"./MapWithDate\";\nimport EmployeeCashbookCreateModalForVisit from \"../../financeManagement/cashbook/EmployeeCashbookCreateModalForVisit\";\nimport { AiOutlineBorderInner } from \"react-icons/ai\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\n\nfunction ManagerClientVisit() {\n\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n    const { setValue, control } = useForm();\n    const {\n        userCompanyId,\n        userBranchId,\n        userType\n    } = getUserIds();\n    const { visitorList, totalVisitorCount, visitorGeneralList, loading } = useSelector(state => state.visitor);\n    const { departmentListData, loading: depLoading } = useSelector((state) => state.department);\n    const { branchList, loading: branchListLoading } = useSelector((state) => state.branch);\n    const userInfoglobal = JSON.parse(\n        localStorage.getItem(`user_info_${domainName}`)\n    );\n    const { employeList, loading: employeListLoading } = useSelector((state) => state.employe);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [searchText, setSearchText] = useState(\"\");\n    const [visitorModal, setVisitorModal] = useState({\n        data: null,\n        isOpen: false\n    });\n    const companyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: userCompanyId,\n    });\n    const branchId = useWatch({\n        control,\n        name: \"PDBranchId\",\n        defaultValue: userBranchId,\n    });\n    const departmentId = useWatch({\n        control,\n        name: \"PdDepartmentId\",\n        defaultValue: '',\n    });\n    const employee = useWatch({\n        control,\n        name: \"employee\",\n        defaultValue: '',\n    });\n\n    const category = useWatch({\n        control,\n        name: \"category\",\n        defaultValue: '',\n    });\n    const [visible, setVisible] = useState({\n        isOpen: false,\n        data: null\n    })\n    const [empDetailModalData, setEmpDetailModalData] = useState({});\n    const [empCheckInDetailModalOpen, setEmpCheckinDetailModalOpen] = useState(false);\n    const [checkIn, setCheckIn] = useState('')\n\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const limit = 10;\n\n    const filters = [branchId, employee, departmentId, category, searchText].join(\"-\");\n    const [isFirstRender ,setisFirstRender] = useState(false)\n    \n      useEffect(() => {\n        if (!isFirstRender) {\n          setisFirstRender(state=>true);\n          return;\n        }\n        if (currentPage === 1) {\n          fetchVisitorCatList();\n        } else {\n          setCurrentPage(1);\n        }\n      }, [filters]);\n\n    useEffect(() => {\n        (userInfoglobal?.roleKey === \"manager\" && userInfoglobal?.userType === \"employee\") &&\n        fetchVisitorCatList();\n    }, [currentPage])\n\n    const fetchVisitorCatList = () => {\n        const reqListData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n               departmentId: userInfoglobal?.departmentId ? userInfoglobal?.departmentId : '',\n            companyId:  userInfoglobal?.companyId,\n            branchId: userInfoglobal?.branchId,\n                \"directorId\": \"\",\n                employeId: employee,\n                category: category,\n                text: searchText,\n                sort: true,\n                status: \"\",\n                isPagination: true,\n\n            }\n        }\n        dispatch(getGeneralVisitorList(reqListData));\n    }\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteGeneralVisitor(reqData)).then((data) => {\n                    // !data.error && fetchVisitorCatList();\n                    if (currentPage > 1 && visitorGeneralList?.length == 1) {\n                        setCurrentPage(Number(currentPage - 1));\n\n                    } else {\n                        !data.error && fetchVisitorCatList();\n                    }\n                })\n            }\n        });\n    };\n\n    const handleEmloyeeCehckin = async (vistorData) => {\n        const location = await getCurrentLocation();\n        const address = await getFullAddress(location?.lat, location?.lng);\n        const {\n            date,\n            checkInTime,\n            checkOutTime,\n            timeDurationStart,\n            timeDurationEnd,\n            ...payload\n        } = vistorData;\n        const finalPayload = {\n            ...payload,\n            checkInTime: dayjs(),\n            checkInLocation: {\n                latitude: location?.lat ?? 0,\n                longitude: location.lng ?? 0,\n                address: address ?? \"\",\n            },\n        };\n\n        dispatch(updateGeneralVisitor(finalPayload)).then((data) => {\n            if (!data.error) fetchVisitorCatList()\n        });\n    }\n\n    const handleEmloyeeCehckout = (element) => {\n        setVisitorModal({\n            data: element,\n            isOpen: true\n        })\n    }\n\n    const fetchEmployeListData = () => {\n        const reqPayload = {\n            text: \"\",\n            status: true,\n            sort: true,\n            isTL: \"\",\n            isHR: \"\",\n\n            isPagination: false,\n            designationId: '',\n                 departmentId: userInfoglobal?.departmentId ? userInfoglobal?.departmentId : '',\n            companyId:  userInfoglobal?.companyId,\n            branchId: userInfoglobal?.branchId,\n        };\n\n        dispatch(employeSearch(reqPayload));\n    };\n\n    const onChange = (e) => {\n\n        setSearchText(e);\n    };\n    const handleEmployeeCheckInModal = (element, checkInOrCheckOut) => {\n        setCheckIn(checkInOrCheckOut)\n        setEmpCheckinDetailModalOpen(true);\n        setEmpDetailModalData(element);\n    };\n    if(!(userInfoglobal?.roleKey === \"manager\" && userInfoglobal?.userType === \"employee\")) {\n    return (\n      <GlobalLayout>\n        <div className=\"bg-red-100 text-red-800 p-4 rounded-md mt-2\">\n          <p className=\"text-center font-semibold\">\n            You are not a Manager. This page is viewable for Manager only.\n          </p>\n        </div>\n      </GlobalLayout>\n    );\n  }\n    return (\n        <GlobalLayout onChange={onChange}>\n\n            <div className=''>\n                <div class=\"xl:flex justify-between items-center py-1 xl:space-y-0 space-y-2 overflow-y-auto\">\n                    <div className=\"grid sm:grid-cols-2 grid-cols-1 md:grid-cols-4 sm:gap-3 gap-1\">\n                        <div className=\"\">\n                            <Controller\n                                control={control}\n                                name=\"category\"\n                                rules={{ required: \"category is required\" }}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        defaultValue={\"\"}\n                                        disabled={loading}\n                                        className={` ${inputAntdSelectClassNameFilter} `}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                    >\n                                        <Select.Option className=\"\" value=\"\">Select Category</Select.Option>\n                                        <Select.Option value=\"general\">General Visitor</Select.Option>\n                                        <Select.Option value=\"client\"> Client Visitor</Select.Option>\n\n                                    </Select>\n                                )}\n                            />\n                        </div>\n\n                        <div className=\"\">\n                            <Controller\n                                name=\"employee\"\n                                control={control}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        className={` ${inputAntdSelectClassNameFilter} `}\n                                        disabled={loading}\n                                        popupClassName={'!z-[1580]'}\n                                        placeholder=\"Select Employee\"\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                        optionLabelProp=\"children\"\n                                        onFocus={() => fetchEmployeListData()}\n                                    >\n\n                                        <Select.Option value=\"\">Select Employee</Select.Option>\n                                        {employeListLoading ? (\n                                            <Select.Option disabled>\n                                                <ListLoader />\n                                            </Select.Option>\n                                        ) : (\n                                            sortByPropertyAlphabetically(employeList)?.map(\n                                                (item) => (\n                                                    <Select.Option key={item._id} value={item._id}>\n                                                        {item.fullName}\n                                                    </Select.Option>\n                                                )\n                                            )\n                                        )}\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"flex justify-end items-center gap-2 \">\n                        <button\n                            onClick={() => {\n                                setValue(\"employee\", \"\");\n                                setValue(\"PDBranchId\", '');\n                                setValue(\"PdDepartmentId\", '');\n                                setValue(\"category\", \"\");\n                                setValue(\"PdCompanyId\", \"\");\n                            }}\n                            className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                        {canCreate &&\n                            <Tooltip placement=\"topLeft\"  title='Add Visitor'>\n                                <button onClick={() => { navigate(\"/admin/client-visitor/create\") }} className='bg-header p-2 rounded-md flex justify-center items-center space-x-2 text-white'>\n                                    <FaPlus />\n                                    <span className='text-[12px] text-nowrap tracking-wide'>Add Visitor</span>\n                                </button>\n                            </Tooltip>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n                {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                    <thead className=''>\n                        <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                            <th className='border-none p-2 whitespace-nowrap w-[8%]'>\n                                S.no.\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Visitor Name\n                            </th>\n\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Category type\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Mobile Number\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Employees\n                            </th>\n\n                            <th className='border-none p-2 !w-12 whitespace-nowrap'>\n                                Reason\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Expected Checkin\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Expected CheckOut\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap w-[20%]'>\n                                Employee Checkin\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Employee Checkout\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Cashbook Status\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                KM\n                            </th>\n                            {(canDelete || canUpdate) && <th className='border-none p-2 whitespace-nowrap w-[8%]'>\n                                Action\n                            </th>}\n                        </tr>\n                    </thead>\n                    {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                            colSpan={10}\n                            className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                            <Loader2 />\n                        </td>\n                    </tr> :\n                        <tbody>\n                            {visitorGeneralList && visitorGeneralList?.length > 0 ?\n                                visitorGeneralList?.map((element, index) => (\n                                    <tr className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151] text-[14px]`}>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            {index + 1 + ((currentPage - 1) * limit)}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.name ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.category == \"client\" ? \"Client Visit\" : \"General Visit\"}</td>\n                                        <td className=\"whitespace-nowrap border-none p-2\">\n                                            {element?.mobile?.code + \" \" + element?.mobile?.number || '-'}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            <div className={`  `}>\n                                                {element?.employeData?.map((element, index) => {\n                                                    return (\n                                                        element?.fullName\n                                                    )\n                                                }, [])}\n                                            </div>\n\n                                        </td>\n                                        <td className='whitespace-nowrap border-none !w-12 p-2 '>{element?.reason ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.timeDurationStart ? moment(element?.timeDurationStart).format('DD-MM-YYYY hh:mm a') : \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.timeDurationEnd ? moment(element?.timeDurationEnd).format('DD-MM-YYYY hh:mm a') : '-'}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n\n                                            <div className=\"flex justify-center items-center gap-2\">\n                                                {element?.checkInTime ? moment(element?.checkInTime).format('DD-MM-YYYY hh:mm a') : <Tooltip placement=\"topLeft\"  title='Checkin'>\n                                                    <button onClick={() => { handleEmloyeeCehckin(element) }} className=\"px-2 py-1.5 text-xs rounded-md bg-header text-white border border-muted\" type=\"button\">\n                                                        check in\n                                                    </button>\n                                                </Tooltip>}\n                                                {element.checkInTime ?\n                                                    <FaEye\n                                                        onClick={() => handleEmployeeCheckInModal(element, 'checkin')}\n                                                        className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                                        size={14}\n                                                    /> : ''}\n                                            </div>\n                                        </td>\n\n                                        <td className=\"whitespace-nowrap border-none p-2\">\n                                            <div className=\"flex justify-center items-center gap-2\">\n                                                {!element?.checkInTime ? (\n                                                    '-'\n                                                ) : element?.checkOutTime ? (\n                                                    moment(element.checkOutTime).format('DD-MM-YYYY hh:mm a')\n                                                ) : (\n                                                    <Tooltip placement=\"topLeft\"  title=\"Checkout\">\n                                                        <button\n                                                            onClick={() => handleEmloyeeCehckout(element)}\n                                                            className=\"px-2 py-1.5 text-xs rounded-md bg-header text-white border border-muted\"\n                                                            type=\"button\"\n                                                        >\n                                                            Check Out\n                                                        </button>\n                                                    </Tooltip>\n                                                )}\n                                                {element.checkOutTime ?\n                                                    <FaEye\n                                                        onClick={() => handleEmployeeCheckInModal(element, 'checkout')}\n                                                        className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                                        size={14}\n                                                    /> : ''}\n                                            </div>\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            {!element?.cashbookData?._id ? 'Not Claimed' : element?.cashbookData?.status === \"Pending\" ? \"Cashbook Requested\" : element?.cashbookData?.status === \"Approved\" ? \"Cashbook Approved\" : element?.cashbookData?.status === \"Reject\" ? \"Claim Rejected\" : '-'}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.kilometer ?? \"-\"}</td>\n                                        {(canDelete || canUpdate) && <td className='whitespace-nowrap border-none p-2'>\n                                            <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                {canUpdate && (\n                                                    <Tooltip placement=\"topLeft\"  title={(element?.checkInTime || element?.checkOutTime) ? \"No Actions\" : \"Edit\"}>\n                                                        <button\n                                                            disabled={!!(element?.checkInTime || element?.checkOutTime)}\n                                                            onClick={() => { navigate(`/admin/client-visitor/edit/${encrypt(element?._id)}`) }}\n                                                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                                            type=\"button\"\n                                                        >\n                                                            <FaPenToSquare\n                                                                className={(element?.checkInTime || element?.checkOutTime)\n                                                                    ? 'hover:text-gray-500 text-gray-500'\n                                                                    : 'hover:text-[#337ab7] text-[#3c8dbc]'}\n                                                                size={16}\n                                                            />\n                                                        </button>\n                                                    </Tooltip>\n                                                )}\n\n                                                {canUpdate &&\n                                                    <Tooltip placement=\"topLeft\"  title={!element?.cashbookData?._id ? 'Claim Cashbook' : element?.cashbookData?.status === \"Pending\" ? \"Cashbook Requested\" : element?.cashbookData?.status === \"Approved\" ? \"Cashbook Approved\" : element?.cashbookData?.status === \"Reject\" ? \"Claim Rejected\" : '-'}>\n                                                        <button disabled={element?.cashbookData?._id} onClick={() => setVisible({ isOpen: true, data: element })} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <AiOutlineBorderInner className={element?.cashbookData?._id ? ' text-gray-500' : ' hover:text-[#337ab7] text-[#3c8dbc]'} size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                {canDelete && (\n                                                    <Tooltip placement=\"topLeft\"  title={(element?.checkInTime || element?.checkOutTime) ? \"No Actions\" : \"Delete\"}>\n                                                        <button\n                                                            disabled={!!(element?.checkInTime || element?.checkOutTime)}\n                                                            onClick={() => handleDelete(element?._id)}\n                                                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                                            type=\"button\"\n                                                        >\n                                                            <RiDeleteBin5Line\n                                                                className={(element?.checkInTime || element?.checkOutTime)\n                                                                    ? 'hover:text-gray-500 text-gray-500'\n                                                                    : 'text-red-600 hover:text-red-500'}\n                                                                size={16}\n                                                            />\n                                                        </button>\n                                                    </Tooltip>\n                                                )}\n                                            </span>\n                                        </td>}\n                                    </tr>\n                                ))\n                                : (<tr className=\"bg-white bg-opacity-5 \" >\n                                    <td colSpan={4} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">Record Not Found</td>\n                                </tr>)}\n                        </tbody>}\n                </table>}\n            </div>\n\n            <EmployeeCashbookCreateModalForVisit visible={visible} onCancel={() => setVisible({ isOpen: false, data: null })} onSuccess={fetchVisitorCatList} />\n            <ClientCheckoutModal setVisitorModal={setVisitorModal} visitorModal={visitorModal} updateList={fetchVisitorCatList} />\n            <MapWithDate empDetailModalData={empDetailModalData} empCheckInDetailModalOpen={empCheckInDetailModalOpen} checkIn={checkIn} setEmpCheckinDetailModalOpen={setEmpCheckinDetailModalOpen} />\n            {visitorGeneralList?.length > 0 &&\n                <CustomPagination\n                    totalCount={totalVisitorCount}\n                    pageSize={limit}\n                    currentPage={currentPage}\n                    onChange={onPaginationChange}\n                />}\n        </GlobalLayout>\n    )\n}\nexport default ManagerClientVisit"],"names":["canCreate","canRead","canUpdate","canDelete","usePermissions","setValue","control","useForm","userCompanyId","userBranchId","userType","getUserIds","visitorList","totalVisitorCount","visitorGeneralList","loading","useSelector","state","visitor","departmentListData","depLoading","department","branchList","branchListLoading","branch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","employeList","employeListLoading","employe","navigate","useNavigate","dispatch","useDispatch","searchText","setSearchText","useState","visitorModal","setVisitorModal","data","isOpen","branchId","useWatch","name","defaultValue","departmentId","employee","category","visible","setVisible","empDetailModalData","setEmpDetailModalData","empCheckInDetailModalOpen","setEmpCheckinDetailModalOpen","checkIn","setCheckIn","currentPage","setCurrentPage","filters","join","isFirstRender","setisFirstRender","useEffect","fetchVisitorCatList","roleKey","reqListData","page","limit","reqPayload","companyId","employeId","text","sort","status","isPagination","getGeneralVisitorList","handleEmployeeCheckInModal","element","checkInOrCheckOut","_jsx","GlobalLayout","children","className","_jsxs","onChange","e","class","Controller","rules","required","render","_ref","field","Select","_objectSpread","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","_ref2","_sortByPropertyAlphab","popupClassName","placeholder","optionLabelProp","onFocus","fetchEmployeListData","isTL","isHR","designationId","employeSearch","ListLoader","sortByPropertyAlphabetically","map","item","_id","fullName","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","index","_element$name","_element$mobile","_element$mobile2","_element$employeData","_element$reason","_element$cashbookData","_element$cashbookData2","_element$cashbookData3","_element$cashbookData4","_element$kilometer","_element$cashbookData5","_element$cashbookData6","_element$cashbookData7","_element$cashbookData8","_element$cashbookData9","_element$cashbookData0","mobile","code","number","employeData","reason","timeDurationStart","moment","format","timeDurationEnd","checkInTime","async","_location$lat","_location$lng","location","getCurrentLocation","address","getFullAddress","lat","lng","date","checkOutTime","vistorData","payload","_objectWithoutProperties","_excluded","finalPayload","dayjs","checkInLocation","latitude","longitude","updateGeneralVisitor","then","error","handleEmloyeeCehckin","type","FaEye","size","handleEmloyeeCehckout","cashbookData","kilometer","encrypt","FaPenToSquare","AiOutlineBorderInner","id","reqData","Swal","icon","showCancelButton","cancelButtonText","result","isConfirmed","deleteGeneralVisitor","Number","handleDelete","RiDeleteBin5Line","EmployeeCashbookCreateModalForVisit","onCancel","onSuccess","ClientCheckoutModal","updateList","MapWithDate","CustomPagination","totalCount","pageSize"],"sourceRoot":""}