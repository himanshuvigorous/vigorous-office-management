{"version":3,"file":"static/js/1635.ca855d84.chunk.js","mappings":"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","sources":["pages/client/client_document/ClientDocument.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteClientDocument,\n  getClientDocumentList,\n  updateClientDocument,\n} from \"./clientGroupFeatures/_client_document_reducers\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport { FaEye, FaRegFilePdf } from \"react-icons/fa\";\nimport { Image, Popconfirm, Select, Tooltip, Modal } from \"antd\";\n\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { MdDone } from \"react-icons/md\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport {\n  domainName,\n  inputAntdSelectClassNameFilter,\n} from \"../../../constents/global\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\n\nconst ClientDocument = () => {\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const {\n    control,\n    register,\n    setValue,\n    formState: { errors },\n  } = useForm();\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const limit = 10;\n\n  useEffect(() => {\n    if (\n      userInfoglobal?._id ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, []);\n  const { ClientDocumentList, totalClientDocumentCount, loading } = useSelector(\n    (state) => state.clientDocument\n  );\n  const dispatch = useDispatch();\n\n  const fetchClientDocuments = () => {\n    const reqPayload = {\n      text: searchText,\n      status: \"\",\n      sort: true,\n      limit: limit,\n      page: currentPage,\n      isPagination: true,\n      companyId: userInfoglobal?.userType === \"company\"\n        ? userInfoglobal?._id\n        : userInfoglobal?.companyId,\n      branchId:\n        (userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\") ? BranchId : userInfoglobal?.userType === \"companyBranch\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.branchId,\n    };\n\n    dispatch(getClientDocumentList(reqPayload));\n  };\n\n  const [documentData, setDocumentData] = useState([]);\n  const [documentModal, setDocumentModal] = useState(false);\n\n  const handleDocumentList = (data) => {\n    setDocumentModal(true);\n    setDocumentData([\n      ...(data?.documentData?.map((item) => ({ ...item, type: \"General\" })) ||\n        []),\n      ...(data?.financeData?.map((item) => ({ ...item, type: \"Finance\" })) ||\n        []),\n    ]);\n  };\n\n\n  const handleDelete = (data) => {\n    const payload = {\n      _id: data?._id,\n      type: data?.type === \"General\" ? \"documents\" : \"financial\",\n    };\n\n    dispatch(deleteClientDocument(payload)).then((res) => {\n      if (res?.meta?.arg?._id) {\n        const deletedId = res.meta.arg._id;\n\n        setDocumentData((prev) => prev.filter((doc) => doc._id !== deletedId));\n      }\n    });\n  };\n\n\n  const handleVerify = (data) => {\n    const payload = {\n      _id: data?._id,\n      type: data?.type == \"General\" ? \"documents\" : \"financial\",\n      isVerified: true,\n    };\n    dispatch(updateClientDocument(payload)).then((data) => {\n      if (data) {\n        setDocumentData((prev) =>\n          prev.map((doc) => {\n            return doc._id === data.meta?.arg?._id\n              ? { ...doc, isVerified: true }\n              : doc;\n          })\n        );\n        fetchClientDocuments();\n      }\n    });\n  };\n\n  const filters = [BranchId,searchText].join(\"-\");\n\nconst [isFirstRender ,setisFirstRender] = useState(false)\n\n  useEffect(() => {\n    if (!isFirstRender) {\n      setisFirstRender(state=>true);\n      return;\n    }\n    if (currentPage === 1) {\n      fetchClientDocuments()\n    } else {\n      setCurrentPage(1);\n    }\n  }, [filters])\n\n  useEffect(() => {\n    fetchClientDocuments();\n  }, [BranchId, currentPage, searchText]);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"flex justify-start items-center md:space-x-2 space-x-2 py-1\">\n        {(userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"company\" ||\n          userInfoglobal?.userType === \"companyDirector\") && (\n            <div>\n              <Controller\n                control={control}\n                name=\"PDBranchId\"\n                rules={{ required: \"Branch is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    disabled={loading}\n                    className={`${inputAntdSelectClassNameFilter}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchListloading ? (<Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>) : (branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    )))}\n                  </Select>\n                )}\n              />\n              {errors.PDBranchId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDBranchId.message}\n                </p>\n              )}\n            </div>\n          )}\n        <button\n          onClick={() => {\n            setValue(\"PDBranchId\", '')\n\n          }}\n          className=\"bg-header rounded-md py-1.5 flex px-4 mt-1 justify-center items-center  text-white\">\n          <span className=\"text-[12px]\">Reset</span>\n        </button>\n      </div>\n      <div>\n        <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n            <thead className=\"\">\n              <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n                <th className=\"p-2 whitespace-nowrap\">Client Name</th>\n                <th className=\"p-2 whitespace-nowrap\">Client Id</th>\n                <th className=\"p-2 whitespace-nowrap\">Client Email</th>\n                <th className=\"p-2 whitespace-nowrap\">Requested By</th>\n                <th className=\"p-2 whitespace-nowrap\">Approved By</th>\n                <th className=\"p-2 whitespace-nowrap\">Created At</th>\n                <th className=\"p-2 whitespace-nowrap\">Total documents</th>\n\n                <th className=\"p-2 whitespace-nowrap\">\n                  Pending Document Approval\n                </th>\n\n                <th className=\"p-2 whitespace-nowrap\">Action</th>\n              </tr>\n            </thead>\n\n            {loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={10}\n                  className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                >\n                  <ListLoader />\n                </td>\n              </tr>\n            ) : <tbody>\n              {ClientDocumentList && ClientDocumentList?.length > 0 ? (\n                ClientDocumentList?.map((element, index) => (\n                  <tr\n                    key={element?._id}\n                    className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                      } text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                  >\n                    <td className=\"whitespace-nowrap p-2\">{index + 1 + ((currentPage - 1) * limit)}</td>\n                    <td className=\"whitespace-nowrap p-2 text-[13px]\">\n                      {element?.fullName || \"-\"}\n                    </td>\n                    <td className=\"whitespace-nowrap p-2 text-[13px]\">\n                      {element?.userName || \"-\"}\n                    </td>\n                    <td className=\"whitespace-nowrap p-2 text-[13px]\">\n                      {element?.email || \"-\"}\n                    </td>\n                    <td className=\"whitespace-nowrap p-2 text-[13px]\">\n                      {element?.createdBy || \"-\"}\n                    </td>\n                    <td className=\"whitespace-nowrap p-2 text-[13px]\">\n                      {element?.updatedBy || \"-\"}\n                    </td>\n\n                    <td className=\"whitespace-nowrap p-2 text-[13px]\">\n                      {moment(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\") || \"-\"}\n                    </td>\n                    <td className=\"whitespace-nowrap p-2 text-[13px] text-center\">\n                      {element?.documentData?.length +\n                        element?.financeData?.length}\n                    </td>\n                    <td className=\"whitespace-nowrap p-2 text-[13px] text-center\">\n                      <div className=\"flex justify-center items-center \">\n                        <div className=\"w-8 h-8 flex justify-center items-center  text-white bg-[#3D90D7] rounded-full\">\n                          {element?.documentDataCount +\n                            element?.financeDataCount}\n                        </div>\n                      </div>\n                    </td>\n\n                    {/* <td className=\"whitespace-nowrap p-2 text-[13px] text-center\">\n                      {element?.financeData?.length}\n                    </td> */}\n                    {/* <td className=\"whitespace-nowrap p-2 text-[13px] text-center\">\n                      <div className=\"flex justify-center items-center \">\n                        <div className=\"w-8 h-8 flex justify-center items-center  text-white bg-[#3D90D7] rounded-full\">\n                          {element?.financeDataCount\n                            ? element?.financeDataCount\n                            : 0}\n                        </div>\n                      </div>\n                    </td> */}\n\n                    <td className=\"whitespace-nowrap p-2 \">\n                      <div className=\"flex justify-center items-center gap-2\">\n                        <Tooltip placement=\"topLeft\"  title={\"View document Details\"}>\n                          <button\n                            onClick={() => {\n                              handleDocumentList(element);\n                            }}\n                            className=\"px-2 py-2 text-xs rounded-md bg-transparent text-header border border-muted\"\n                            type=\"button\"\n                          >\n                            <FaEye\n                              className={`${\" hover:text-[#337ab7] text-[#3c8dbc]\"}`}\n                            />\n                          </button>\n                        </Tooltip>\n\n                      </div>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <tr className=\"bg-white bg-opacity-5\">\n                  <td\n                    colSpan={5}\n                    className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                  >\n                    Record Not Found\n                  </td>\n                </tr>\n              )}\n            </tbody>}\n          </table>\n        </div>\n        {documentModal && (\n\n          <Modal\n            title=\"Documents\"\n            open={documentModal}\n            onCancel={() => setDocumentModal(false)}\n            footer={null}\n            width=\"90%\"\n            centered\n            zIndex={1460}\n            className=\"antmodalclassName\"\n          >\n            <div className=\"w-full max-w-full overflow-x-auto\">\n              <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                <thead className=\"\">\n                  <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                    <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n                    <th className=\"p-2 whitespace-nowrap\">Name</th>\n                    <th className=\"p-2 whitespace-nowrap\">Type</th>\n                    <th className=\"p-2 whitespace-nowrap\">Number</th>\n                    <th className=\"p-2 whitespace-nowrap\">Image</th>\n                    <th className=\"p-2 whitespace-nowrap\">Status</th>\n                    <th className=\"p-2 whitespace-nowrap\">Action</th>\n                  </tr>\n                </thead>\n                <tbody>\n\n                  {documentData && documentData?.length > 0 ? (\n                    documentData?.map((element, index) => (\n                      <tr\n                        className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                          } text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                      >\n                        <td className=\"whitespace-nowrap p-2\">{index + 1}</td>\n                        <td className=\"whitespace-nowrap p-2\">\n                          {element?.name || \"-\"}\n                        </td>\n                        <td className=\"whitespace-nowrap p-2\">\n                          {element?.type || \"-\"}\n                        </td>\n                        <td className=\"whitespace-nowrap p-2\">\n                          {element?.number || \"-\"}\n                        </td>\n                        <td className=\"whitespace-nowrap p-2\">\n                          <div className=\"w-full flex justify-start items-center gap-1\">\n                            {Array.isArray(element?.filePath) &&\n                              element.filePath.map((file, index) =>\n                                typeof file === \"string\" ? (\n                                  file.toLowerCase().endsWith(\".pdf\") ? (\n                                    <a\n                                      key={index}\n                                      href={file}\n                                      target=\"_blank\"\n                                      rel=\"noopener noreferrer\"\n                                      className=\"text-blue-600 underline block\"\n                                    >\n                                      <FaRegFilePdf\n                                        className=\"text-rose-400 \"\n                                        size={20}\n                                      />\n                                    </a>\n                                  ) : (\n                                    <Image\n                                      key={index}\n                                      width={35}\n                                      src={file}\n                                      alt={`Preview ${index}`}\n                                    />\n                                  )\n                                ) : null\n                              )}\n                          </div>\n                        </td>\n\n                        <td className=\"whitespace-nowrap p-2\">\n                          {element?.isVerified ? (\n                            <span className=\"bg-teal-400 py-1 px-2 text-white border-green-800 rounded-sm\">\n                              {\" \"}\n                              Verified{\" \"}\n                            </span>\n                          ) : (\n                            <span className=\"bg-rose-500 py-1 px-2 text-white  rounded-sm\">\n                              Not Verified{\" \"}\n                            </span>\n                          )}\n                        </td>\n                        <td className=\"whitespace-nowrap  p-2\">\n                          <div className=\"flex gap-2 z-50\">\n                            <Popconfirm\n                              key={index}\n                              title=\"Verify the document\"\n                              description=\"Are you sure to Verify this document?\"\n                              onConfirm={() => handleVerify(element)}\n                              // onCancel={cancel}\n                              okText=\"Yes\"\n                              cancelText=\"No\"\n                              zIndex={1601}\n                            >\n                              <Tooltip placement=\"topLeft\"  title={\"Verify\"}>\n                                <button\n                                  className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                  type=\"button\"\n                                  disabled={element?.isVerified}\n                                >\n                                  <MdDone\n                                    className={`${element?.isVerified\n                                      ? \"text-gray-500\"\n                                      : \" hover:text-green-500 text-green-600\"\n                                      }`}\n                                    size={16}\n                                  />\n                                </button>\n                              </Tooltip>\n                            </Popconfirm>\n\n                            <Popconfirm\n                              title=\"Delete the document\"\n                              description=\"Are you sure to Delete this document?\"\n                              onConfirm={() => handleDelete(element)}\n                              // onCancel={cancel}\n                              okText=\"Yes\"\n                              cancelText=\"No\"\n                              zIndex={1601}\n                            >\n                              <Tooltip placement=\"topLeft\"  title={\"Delete\"}>\n                                <button\n                                  // onClick={() => handleDelete(element)}\n                                  className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                  type=\"button\"\n                                  disabled={element?.isVerified}\n                                >\n                                  <RiDeleteBin5Line\n                                    className={`${element?.isVerified\n                                      ? \"text-gray-500\"\n                                      : \" hover:text-rose-700 text-rose-800\"\n                                      }`}\n                                    size={16}\n                                  />\n                                </button>\n                              </Tooltip>\n                            </Popconfirm>\n                          </div>\n                        </td>\n                      </tr>\n                    ))\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={7}\n                        className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </Modal>\n          //   </div>\n          // </div>\n        )}\n\n        {/* {fdocumentModal && (\n          <div\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1460]\"\n            onClick={() => setfDocumentModal(false)}\n          >\n            <div\n              className=\"animate-slideInFromTop bg-gray-100 rounded-lg top-16 p-6 w-full max-w-full md:w-[70%]\"\n              onClick={(e) => e.stopPropagation()}\n            >\n              <div className=\"w-full max-w-full overflow-x-auto\">\n                <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                  <thead className=\"\">\n                    <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                      <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n                      <th className=\"p-2 whitespace-nowrap\">Name</th>\n                     \n                      <th className=\"p-2 whitespace-nowrap\">Image</th>\n                      <th className=\"p-2 whitespace-nowrap\">isVerified</th>\n\n                      <th className=\"p-2 whitespace-nowrap\">Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n          \n                    {fDocumentData && fDocumentData?.length > 0 ? (\n                      fDocumentData?.map((element, index) => (\n                        <tr\n                          className={`text-black ${\n                            index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                          } text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                        >\n                          <td className=\"whitespace-nowrap p-2\">{index + 1}</td>\n                          <td className=\"whitespace-nowrap p-2\">\n                            {element?.name}\n                          </td>\n                      \n\n                          <td className=\"whitespace-nowrap p-2\">\n                            <Image width={35} src={`${element?.filePath}`} />\n                          </td>\n                          <td className=\"whitespace-nowrap p-2\">\n                            {element?.isVerified ? \"verified\" : \"not Verified\"}\n                          </td>\n                          <td className=\"whitespace-nowrap  p-2\">\n                            <div className=\"flex gap-2\">\n                              <Popconfirm\n                                key={index}\n                                title=\"Verify the document\"\n                                description=\"Are you sure to Verify this document?\"\n                                onConfirm={() =>\n                                  handleVerifyFinancialDocument(element)\n                                }\n                                // onCancel={cancel}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                                zIndex={1601}\n                              >\n                                <Tooltip placement=\"topLeft\"  title={\"Verify\"}>\n                                  <button\n                                    // onClick={() =>\n                                    //   handleVerifyFinancialDocument(element)\n                                    // }\n                                    className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                    type=\"button\"\n                                    disabled={element?.isVerified}\n                                  >\n                                    <MdDone\n                                      className={`${\n                                        element?.isVerified\n                                          ? \"text-gray-500\"\n                                          : \" hover:text-green-500 text-green-600\"\n                                      }`}\n                                      size={16}\n                                    />\n                                  </button>\n                                </Tooltip>\n                              </Popconfirm>\n\n                              <Popconfirm\n                                title=\"Delete the document\"\n                                description=\"Are you sure to Delete this document?\"\n                                onConfirm={() =>\n                                  handleDeleteFinancialDocument(element)\n                                }\n                                // onCancel={cancel}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                                zIndex={1601}\n                              >\n                                <Tooltip placement=\"topLeft\"  title={\"Delete\"}>\n                                  <button\n                                    // onClick={() =>\n                                    //   handleDeleteFinancialDocument(element)\n                                    // }\n                                    className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                    type=\"button\"\n                                    disabled={element?.isVerified}\n                                  >\n                                    <RiDeleteBin5Line\n                                      className={`${\n                                        element?.isVerified\n                                          ? \"text-gray-500\"\n                                          : \" hover:text-rose-700 text-rose-800\"\n                                      }`}\n                                      size={16}\n                                    />\n                                  </button>\n                                </Tooltip>\n                              </Popconfirm>\n                            </div>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                      <tr className=\"bg-white bg-opacity-5\">\n                        <td\n                          colSpan={7}\n                          className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                          Record Not Found\n                        </td>\n                      </tr>\n                    )}\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        )} */}\n\n        {ClientDocumentList?.length > 0 && (\n          <CustomPagination\n            totalCount={totalClientDocumentCount}\n            pageSize={limit}\n            currentPage={currentPage}\n            onChange={onPaginationChange}\n          />\n        )}\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default ClientDocument;\n"],"names":["ClientDocument","branchList","branchListloading","useSelector","state","branch","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","control","register","setValue","formState","errors","useForm","BranchId","useWatch","name","defaultValue","currentPage","setCurrentPage","useEffect","_id","userType","dispatch","branchSearch","text","sort","status","isPagination","companyId","ClientDocumentList","totalClientDocumentCount","loading","clientDocument","useDispatch","fetchClientDocuments","reqPayload","limit","page","branchId","getClientDocumentList","documentData","setDocumentData","documentModal","setDocumentModal","filters","join","isFirstRender","setisFirstRender","_jsxs","GlobalLayout","onChange","e","children","className","_jsx","Controller","rules","required","render","_ref","field","Select","_objectSpread","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","ListLoader","map","type","fullName","PDBranchId","message","onClick","colSpan","length","element","index","_element$documentData","_element$financeData","userName","email","createdBy","updatedBy","moment","createdAt","format","financeData","documentDataCount","financeDataCount","Tooltip","placement","title","data","_data$documentData","_data$financeData","item","handleDocumentList","FaEye","Modal","open","onCancel","footer","width","centered","zIndex","number","Array","isArray","filePath","file","endsWith","href","target","rel","FaRegFilePdf","size","Image","src","alt","isVerified","Popconfirm","description","onConfirm","payload","updateClientDocument","then","prev","doc","_data$meta","_data$meta$arg","meta","arg","handleVerify","okText","cancelText","MdDone","deleteClientDocument","res","_res$meta","_res$meta$arg","deletedId","filter","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","pageSize"],"sourceRoot":""}