{"version":3,"file":"static/js/9945.c385761b.chunk.js","mappings":"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","sources":["pages/global/other/termination/CreateTermination.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport { domainName, inputAntdSelectClassName, inputAntdSelectClassNameFilter, inputClassName, inputLabelClassName, inputLabelClassNameReactSelect } from \"../../../../constents/global\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { DatePicker, Select } from \"antd\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport moment from \"moment\";\n\nimport dayjs from \"dayjs\";\nimport { createTerminationFunc } from \"./terminationFeatures/termination_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { fileUploadFunc } from \"../fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { FaRegFile, FaTimes } from \"react-icons/fa\";\n\n\nconst CreateTermination = () => {\n  const { loading: terminationLoading } = useSelector((state) => state.Termination);\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm();\n\n  const [formData, setFormData] = useState({\n    attachments: []\n  });\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n  const { employeList } = useSelector((state) => state.employe);\n  const [isPreview, setIsPreview] = useState(false);\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n\n// useEffect(()=>{\n// setValue(\"employee\",'')\n// },[branchId])\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      companyId: userInfoglobal?.userType === \"admin\" ? data?.PDCompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      directorId: '',\n      branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ? data?.PDBranchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      employeId: data?.employee,\n      title: data?.title,\n      description: data?.description,\n      applyDate: dayjs(data?.applyDate).format(\"YYYY-MM-DD\"),\n      type: \"termination\",\n      attachment: formData?.attachments,\n    };\n    dispatch(createTerminationFunc(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    const reqData = {\n      filePath: file,\n      isVideo: false,\n      isMultiple: false,\n    };\n    dispatch(fileUploadFunc(reqData)).then((res) => {\n      if (res?.payload?.data) {\n        setFormData(prev => ({\n          ...prev,\n          attachments: [...prev.attachments, res.payload?.data]\n        }));\n      }\n    });\n  };\n\n  const handleRemoveFile = (index) => {\n    setFormData(prev => {\n      const updatedAttachments = prev.attachments.filter((_, i) => i !== index);\n      return { ...prev, attachments: updatedAttachments };\n    });\n  };\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\" ? CompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId])\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-2\">\n            {userInfoglobal?.userType === \"admin\" && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Company <span className=\"text-red-600\">*</span>\n              </label>\n\n\n              <Controller\n                control={control}\n                name=\"PDCompanyId\"\n                rules={{ required: \"Company is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n\n                    className={`${inputAntdSelectClassName} `}\n                  >\n                    <Select.Option value=\"\">Select Company</Select.Option>\n                    {companyList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              {errors.PDCompanyId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDCompanyId.message}\n                </p>\n              )}\n            </div>}\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Branch <span className=\"text-red-600\">*</span>\n              </label>\n\n\n              <Controller\n                control={control}\n                name=\"PDBranchId\"\n                rules={{ required: \"Branch is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    onChange={(value)=>{\n                      setValue(\"employee\",'')\n                      field.onChange(value);\n                    }}\n                    defaultValue={\"\"}\n                    className={`${inputAntdSelectClassName} `}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Branch</Select.Option>\n                    {branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              {errors.PDBranchId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.PDBranchId.message}\n                </p>\n              )}\n            </div>\n            }\n\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>\n                Employee Name <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"employee\"\n                control={control}\n                rules={{ required: \"Employee is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.employee ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Employee\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      const reqPayload = {\n                        text: \"\",\n                        status: true,\n                        sort: true,\n                        isTL: \"\",\n                        isHR: \"\",\n                        isPagination: true,\n                        departmentId: \"\",\n                        designationId: \"\",\n                        companyId: userInfoglobal?.userType === \"admin\" ? userInfoglobal?.PDCompanyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n                        directorId: \"\",\n                        branchId: (userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" || userInfoglobal?.userType === \"company\") ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n                      };\n                      dispatch(employeSearch(reqPayload));\n                    }}\n                  >\n                    <Select.Option value=\"\">Select Employee</Select.Option>\n                    {employeList?.map((employee) => (\n                      <Select.Option key={employee?._id} value={employee?._id}>\n                        {employee?.fullName}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n              {errors.employee && (\n                <p className=\"text-red-500 text-sm\">{errors.employee.message}</p>\n              )}\n            </div>\n\n\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 my-2\">\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Description <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"description\", {\n                  required: \"Description is required\",\n                })}\n                className={`${inputClassName} ${errors.description ? \"border-[1px] \" : \"border-gray-300\"}`}\n                placeholder=\"Enter Description\"\n              />\n              {errors.description && (\n                <p className=\"text-red-500 text-sm\">{errors.description.message}</p>\n              )}\n            </div>\n\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Apply Date <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"applyDate\"\n                control={control}\n                rules={{\n                  required:'Apply Date is Required'\n                }}\n                render={({ field }) => (\n                  <CustomDatePicker field={field} errors={errors} disabledDate={(current) => {\n                    return current && current.isBefore(moment().endOf('day'), 'day');\n                  }} />\n                )}\n              />\n              {errors.applyDate && (\n                <p className=\"text-red-500 text-sm\">Apply Date is required</p>\n              )}\n            </div>\n\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 my-2\">\n\n            \n\n          </div>\n\n          <div className=\"\">\n            <label className={`${inputLabelClassName}`}>\n              Documents \n            </label>\n            {!isPreview ? (\n              <div className=\"space-y-4\">\n                <input type=\"file\" onChange={handleFileChange} className=\"hidden\" id=\"file-upload\" />\n                <label htmlFor=\"file-upload\" className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-600 bg-white cursor-pointer\">\n                  <FaRegFile className=\"mr-2\" /> Add Documents\n                </label>\n\n                <div className=\"space-y-2\">\n                  {formData.attachments.map((file, index) => (\n                    <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                      <a\n                        href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                        className=\"flex items-center space-x-2\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                      >\n                        <FaRegFile className=\"text-gray-500\" />\n                        <span className=\"text-sm text-gray-600\">{file}</span>\n                      </a>\n                      <button\n                        type=\"button\"\n                        onClick={() => handleRemoveFile(index)}\n                        className=\"text-red-500 hover:text-red-700\"\n                      >\n                        <FaTimes />\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : (\n              <div className=\"space-y-2\">\n                {/* Attachments preview logic */}\n              </div>\n            )}\n          </div>\n\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={terminationLoading}\n              className={`${terminationLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded mt-3`}\n            >\n              {terminationLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default CreateTermination;\n"],"names":["CreateTermination","loading","terminationLoading","useSelector","state","Termination","register","handleSubmit","control","setValue","formState","errors","useForm","formData","setFormData","useState","attachments","dispatch","useDispatch","navigate","useNavigate","companyList","company","branchList","branch","employeList","employe","isPreview","setIsPreview","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","CompanyId","useWatch","name","defaultValue","branchId","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","companySearch","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","PDCompanyId","directorId","PDBranchId","employeId","employee","title","description","applyDate","dayjs","format","type","attachment","createTerminationFunc","then","error","inputLabelClassName","Controller","rules","required","render","_ref","field","Select","_objectSpread","inputAntdSelectClassName","Option","value","map","fullName","message","_ref2","onChange","showSearch","filterOption","input","option","String","toLowerCase","includes","_ref3","placeholder","onFocus","reqPayload","isTL","isHR","departmentId","designationId","employeSearch","inputClassName","_ref4","CustomDatePicker","disabledDate","current","isBefore","moment","endOf","e","reqData","filePath","target","files","isVideo","isMultiple","fileUploadFunc","res","_res$payload","payload","prev","_res$payload2","id","htmlFor","FaRegFile","file","index","href","process","rel","onClick","updatedAttachments","filter","_","i","handleRemoveFile","FaTimes","disabled","Loader"],"sourceRoot":""}