{"version":3,"file":"static/js/5283.ad5a4ceb.chunk.js","mappings":"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","sources":["pages/global/other/interviewRoundName copy/CreatePenalty.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  domainName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputClassNameSearch,\n  inputLabelClassName,\n} from \"../../../../constents/global\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { createpenaltyType } from \"./penaltyFeatures/_penalty_reducers\";\nimport { Select } from \"antd\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\nconst CreatePenalty = () => {\n  const { loading: penaltyLoading } = useSelector((state) => state.penalty);\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { companyList, companyListLoading } = useSelector((state) => state.company);\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n\n  // useEffect(() => {\n  //   dispatch(employeSearch());\n  // }, [dispatch]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      employeId: \"\",\n      companyId:\n        userInfoglobal?.userType === \"admin\"\n          ? data?.PDCompanyId\n          : userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n      directorId:\n        userInfoglobal?.userType === \"companyDirector\"\n          ? userInfoglobal?._id\n          : userInfoglobal?.directorId,\n      branchId:\n        userInfoglobal?.userType === \"admin\" ||\n          userInfoglobal?.userType === \"companyDirector\" ||\n          userInfoglobal?.userType === \"company\"\n          ? data?.PDBranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n      name: data?.name,\n      amount: Number(data?.amount),\n    };\n    dispatch(createpenaltyType(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId]);\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            {userInfoglobal?.userType === \"admin\" && (\n              <div className=\"\">\n                <label className={`${inputLabelClassName}`}>\n                  Company Name <span className=\"text-red-600\">*</span>\n                </label>\n                {/* <select\n                  {...register(\"PDCompanyId\", {\n                    required: \"company is required\",\n                  })}\n                  className={` ${inputClassName} ${errors.PDCompanyId ? \"border-[1px] \" : \"border-gray-300\"\n                    }`}\n                >\n                  <option className=\"\" value=\"\">\n                    Select Comapany\n                  </option>\n                  {companyList?.map((type) => (\n                    <option value={type?._id}>{type?.fullName}</option>\n                  ))}\n                </select> */}\n                <Controller\n                  control={control}\n                  name=\"PDCompanyId\"\n                  rules={{ required: \"Company is required\" }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      defaultValue={\"\"}\n                      className={`${inputAntdSelectClassName} `}\n                     filterOption={(input, option) =>\n                    String(option?.children).toLowerCase().includes(input.toLowerCase())\n                  }\n                    >\n                      <Select.Option value=\"\">Select Company</Select.Option>\n                      {companyListLoading ? <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option> : companyList?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.fullName}\n                        </Select.Option>\n                      ))}\n                    </Select>\n                  )}\n                />\n                {errors.PDCompanyId && (\n                  <p className=\"text-red-500 text-sm\">\n                    {errors.PDCompanyId.message}\n                  </p>\n                )}\n              </div>\n            )}\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>\n                    Branch Name <span className=\"text-red-600\">*</span>\n                  </label>\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    rules={{ required: \"Branch is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`${inputAntdSelectClassName} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                        showSearch\n                       filterOption={(input, option) =>\n                                String(option?.children).toLowerCase().includes(input.toLowerCase())\n                              }\n                        placeholder=\"Select Branch\"\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchListloading ? <Select.Option disabled>\n                          <ListLoader />\n                        </Select.Option> : (branchList?.map((type) => (\n                          <Select.Option key={type?._id} value={type?._id}>\n                            {type?.fullName}\n                          </Select.Option>\n                        )))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n\n            {/* Work Type Name */}\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Penalty Name <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"name\", {\n                  required: \"penalty Name is required\",\n                })}\n                className={`${inputClassName} ${errors.name ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter penalty Name\"\n              />\n              {errors.name && (\n                <p className=\"text-red-500 text-sm\">{errors.name.message}</p>\n              )}\n            </div>\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Amount <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"number\"\n                 step=\"0.01\"\n                {...register(\"amount\", {\n                  required: \"Amount is required\",\n                })}\n                className={`${inputClassName} ${errors.name ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Amount\"\n              />\n              {errors.amount && (\n                <p className=\"text-red-500 text-sm\">{errors.amount.message}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={penaltyLoading}\n              className={`${penaltyLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded mt-3`}\n            >\n              {penaltyLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default CreatePenalty;\n"],"names":["CreatePenalty","loading","penaltyLoading","useSelector","state","penalty","register","handleSubmit","control","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","companyList","companyListLoading","company","branchList","branchListloading","branch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","CompanyId","useWatch","name","defaultValue","useEffect","userType","branchSearch","text","sort","status","isPagination","companyId","_id","companySearch","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","employeId","PDCompanyId","directorId","branchId","PDBranchId","amount","Number","createpenaltyType","then","error","inputLabelClassName","Controller","rules","required","render","_ref","field","Select","_objectSpread","inputAntdSelectClassName","filterOption","input","option","String","toLowerCase","includes","Option","value","disabled","ListLoader","map","type","fullName","message","_ref2","showSearch","placeholder","inputClassName","step","Loader"],"sourceRoot":""}