{"version":3,"file":"static/js/5555.89784127.chunk.js","mappings":"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","sources":["../node_modules/antd/es/input/Input.js","../node_modules/antd/es/input/utils.js","pages/company/companyManagement/Razorpaykeys.js","pages/company/companyManagement/MyCompanyDetails.js","../node_modules/antd/es/input/hooks/useRemovePasswordTimeout.js"],"sourcesContent":["\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport React, { forwardRef, useContext, useEffect, useRef } from 'react';\nimport cls from 'classnames';\nimport RcInput from 'rc-input';\nimport { triggerFocus } from \"rc-input/es/utils/commonUtils\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport ContextIsolator from '../_util/ContextIsolator';\nimport getAllowClear from '../_util/getAllowClear';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { devUseWarning } from '../_util/warning';\nimport { useComponentConfig } from '../config-provider/context';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport useCSSVarCls from '../config-provider/hooks/useCSSVarCls';\nimport useSize from '../config-provider/hooks/useSize';\nimport { FormItemInputContext } from '../form/context';\nimport useVariant from '../form/hooks/useVariants';\nimport { useCompactItemContext } from '../space/Compact';\nimport useRemovePasswordTimeout from './hooks/useRemovePasswordTimeout';\nimport useStyle, { useSharedStyle } from './style';\nimport { hasPrefixSuffix } from './utils';\nexport { triggerFocus };\nconst Input = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      bordered = true,\n      status: customStatus,\n      size: customSize,\n      disabled: customDisabled,\n      onBlur,\n      onFocus,\n      suffix,\n      allowClear,\n      addonAfter,\n      addonBefore,\n      className,\n      style,\n      styles,\n      rootClassName,\n      onChange,\n      classNames,\n      variant: customVariant\n    } = props,\n    rest = __rest(props, [\"prefixCls\", \"bordered\", \"status\", \"size\", \"disabled\", \"onBlur\", \"onFocus\", \"suffix\", \"allowClear\", \"addonAfter\", \"addonBefore\", \"className\", \"style\", \"styles\", \"rootClassName\", \"onChange\", \"classNames\", \"variant\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    const {\n      deprecated\n    } = devUseWarning('Input');\n    deprecated(!('bordered' in props), 'bordered', 'variant');\n  }\n  const {\n    getPrefixCls,\n    direction,\n    allowClear: contextAllowClear,\n    autoComplete: contextAutoComplete,\n    className: contextClassName,\n    style: contextStyle,\n    classNames: contextClassNames,\n    styles: contextStyles\n  } = useComponentConfig('input');\n  const prefixCls = getPrefixCls('input', customizePrefixCls);\n  const inputRef = useRef(null);\n  // Style\n  const rootCls = useCSSVarCls(prefixCls);\n  const [wrapSharedCSSVar, hashId, cssVarCls] = useSharedStyle(prefixCls, rootClassName);\n  const [wrapCSSVar] = useStyle(prefixCls, rootCls);\n  // ===================== Compact Item =====================\n  const {\n    compactSize,\n    compactItemClassnames\n  } = useCompactItemContext(prefixCls, direction);\n  // ===================== Size =====================\n  const mergedSize = useSize(ctx => {\n    var _a;\n    return (_a = customSize !== null && customSize !== void 0 ? customSize : compactSize) !== null && _a !== void 0 ? _a : ctx;\n  });\n  // ===================== Disabled =====================\n  const disabled = React.useContext(DisabledContext);\n  const mergedDisabled = customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled;\n  // ===================== Status =====================\n  const {\n    status: contextStatus,\n    hasFeedback,\n    feedbackIcon\n  } = useContext(FormItemInputContext);\n  const mergedStatus = getMergedStatus(contextStatus, customStatus);\n  // ===================== Focus warning =====================\n  const inputHasPrefixSuffix = hasPrefixSuffix(props) || !!hasFeedback;\n  const prevHasPrefixSuffix = useRef(inputHasPrefixSuffix);\n  /* eslint-disable react-hooks/rules-of-hooks */\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Input');\n    useEffect(() => {\n      var _a;\n      if (inputHasPrefixSuffix && !prevHasPrefixSuffix.current) {\n        process.env.NODE_ENV !== \"production\" ? warning(document.activeElement === ((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.input), 'usage', `When Input is focused, dynamic add or remove prefix / suffix will make it lose focus caused by dom structure change. Read more: https://ant.design/components/input/#FAQ`) : void 0;\n      }\n      prevHasPrefixSuffix.current = inputHasPrefixSuffix;\n    }, [inputHasPrefixSuffix]);\n  }\n  /* eslint-enable */\n  // ===================== Remove Password value =====================\n  const removePasswordTimeout = useRemovePasswordTimeout(inputRef, true);\n  const handleBlur = e => {\n    removePasswordTimeout();\n    onBlur === null || onBlur === void 0 ? void 0 : onBlur(e);\n  };\n  const handleFocus = e => {\n    removePasswordTimeout();\n    onFocus === null || onFocus === void 0 ? void 0 : onFocus(e);\n  };\n  const handleChange = e => {\n    removePasswordTimeout();\n    onChange === null || onChange === void 0 ? void 0 : onChange(e);\n  };\n  const suffixNode = (hasFeedback || suffix) && (/*#__PURE__*/React.createElement(React.Fragment, null, suffix, hasFeedback && feedbackIcon));\n  const mergedAllowClear = getAllowClear(allowClear !== null && allowClear !== void 0 ? allowClear : contextAllowClear);\n  const [variant, enableVariantCls] = useVariant('input', customVariant, bordered);\n  return wrapSharedCSSVar(wrapCSSVar(/*#__PURE__*/React.createElement(RcInput, Object.assign({\n    ref: composeRef(ref, inputRef),\n    prefixCls: prefixCls,\n    autoComplete: contextAutoComplete\n  }, rest, {\n    disabled: mergedDisabled,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    style: Object.assign(Object.assign({}, contextStyle), style),\n    styles: Object.assign(Object.assign({}, contextStyles), styles),\n    suffix: suffixNode,\n    allowClear: mergedAllowClear,\n    className: cls(className, rootClassName, cssVarCls, rootCls, compactItemClassnames, contextClassName),\n    onChange: handleChange,\n    addonBefore: addonBefore && (/*#__PURE__*/React.createElement(ContextIsolator, {\n      form: true,\n      space: true\n    }, addonBefore)),\n    addonAfter: addonAfter && (/*#__PURE__*/React.createElement(ContextIsolator, {\n      form: true,\n      space: true\n    }, addonAfter)),\n    classNames: Object.assign(Object.assign(Object.assign({}, classNames), contextClassNames), {\n      input: cls({\n        [`${prefixCls}-sm`]: mergedSize === 'small',\n        [`${prefixCls}-lg`]: mergedSize === 'large',\n        [`${prefixCls}-rtl`]: direction === 'rtl'\n      }, classNames === null || classNames === void 0 ? void 0 : classNames.input, contextClassNames.input, hashId),\n      variant: cls({\n        [`${prefixCls}-${variant}`]: enableVariantCls\n      }, getStatusClassNames(prefixCls, mergedStatus)),\n      affixWrapper: cls({\n        [`${prefixCls}-affix-wrapper-sm`]: mergedSize === 'small',\n        [`${prefixCls}-affix-wrapper-lg`]: mergedSize === 'large',\n        [`${prefixCls}-affix-wrapper-rtl`]: direction === 'rtl'\n      }, hashId),\n      wrapper: cls({\n        [`${prefixCls}-group-rtl`]: direction === 'rtl'\n      }, hashId),\n      groupWrapper: cls({\n        [`${prefixCls}-group-wrapper-sm`]: mergedSize === 'small',\n        [`${prefixCls}-group-wrapper-lg`]: mergedSize === 'large',\n        [`${prefixCls}-group-wrapper-rtl`]: direction === 'rtl',\n        [`${prefixCls}-group-wrapper-${variant}`]: enableVariantCls\n      }, getStatusClassNames(`${prefixCls}-group-wrapper`, mergedStatus, hasFeedback), hashId)\n    })\n  }))));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Input.displayName = 'Input';\n}\nexport default Input;","export function hasPrefixSuffix(props) {\n  return !!(props.prefix || props.suffix || props.allowClear || props.showCount);\n}","import React, { useEffect, useState } from \"react\";\nimport { inputClassName } from \"../../../constents/global\";\nimport CryptoJS from \"crypto-js\";\nimport { FaCheckDouble, FaEye, FaEyeSlash } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  companyRazorPayfunc,\n  getCompanyDetails,\n  verifyAuthFunc,\n} from \"./companyFeatures/_company_reducers\";\nimport { Button, Input, Modal } from \"antd\";\nimport { useForm } from \"react-hook-form\";\nimport { showNotification } from \"../../../global_layouts/CustomNotification/NotificationManager\";\n\nfunction Razorpaykeys({ companyDetailsData }) {\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    formState: { errors },\n  } = useForm();\n\n  const [showKeys, setShowKeys] = useState(false);\n  const [passwordModalOpen, setPasswordModalOpen] = useState(false);\n  const [currentPassword, setCurrentPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const DATA_ENCRYPT_DCRYPT_KEY = \"12345678901234567890123456789012\";\n\n  const dataEncrypt = (text) =>\n    CryptoJS.AES.encrypt(text, DATA_ENCRYPT_DCRYPT_KEY).toString();\n\n  const dataDecrypt = (text) => {\n    if (!text) return \"\";\n    const bytes = CryptoJS.AES.decrypt(text, DATA_ENCRYPT_DCRYPT_KEY);\n    return bytes.toString(CryptoJS.enc.Utf8);\n  };\n\n  useEffect(() => {\n    if (companyDetailsData?.data) {\n      const keys = companyDetailsData.data.razorpayKey;\n      setValue(\"primaryRazoypayKey\", showKeys ? dataDecrypt(keys?.privateKey) : keys?.privateKey);\n      setValue(\"secretKeyrazorpay\", showKeys ? dataDecrypt(keys?.secretKey) : keys?.secretKey);\n    }\n  }, [companyDetailsData, showKeys]);\n\n  const handlePasswordSubmit = async (e) => {\n    e.preventDefault();\n    if (!currentPassword) {\n      setError(\"Please enter your current password\");\n      return;\n    }\n\n    const result = await dispatch(verifyAuthFunc({ password: currentPassword }));\n    if (!result?.error) {\n      setShowKeys(true);\n      setPasswordModalOpen(false);\n      setCurrentPassword(\"\");\n      setError(\"\");\n      const keys = companyDetailsData.data.razorpayKey;\n      setValue(\"primaryRazoypayKey\", dataDecrypt(keys?.privateKey));\n      setValue(\"secretKeyrazorpay\", dataDecrypt(keys?.secretKey));\n    } else {\n      setError(\"Password verification failed.\");\n    }\n  };\n\n  const handleSave = (data) => {\n    if (!showKeys) {\n      showNotification({\n        message: \"Please authenticate to view and edit keys\",\n        type: \"error\",\n      });\n      return;\n    }\n\n    const payload = {\n      privateKey: dataEncrypt(data?.primaryRazoypayKey),\n      secretKey: dataEncrypt(data?.secretKeyrazorpay),\n    };\n\n    dispatch(companyRazorPayfunc(payload)).then((res) => {\n      if (!res.error) {\n        dispatch(getCompanyDetails({ _id: companyDetailsData?.data?._id }));\n        setShowKeys(false);\n        showNotification({ message: \"Keys updated successfully\", type: \"success\" });\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"px-3 grid grid-cols-1 gap-4 items-end mb-3\">\n        <div className=\"border border-gray-300 pb-2 rounded-sm\">\n          <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md px-2\">\n            <div className=\"px-3 py-2 text-white font-semibold\">Razorpay Keys</div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                type=\"button\"\n                onClick={() => setPasswordModalOpen(true)}\n                className=\"text-white px-2 py-1\"\n              >\n                {showKeys ? <FaEyeSlash /> : <FaEye />}\n              </button>\n              <button\n                type=\"button\"\n                onClick={handleSubmit(handleSave)}\n                className=\"text-white px-2 py-1\"\n              >\n                <FaCheckDouble />\n              </button>\n            </div>\n          </div>\n\n          <div className=\"relative px-2 mb-3\">\n            <input\n              type={showKeys ? \"text\" : \"password\"}\n              {...register(\"primaryRazoypayKey\")}\n              className={`${inputClassName}`}\n              placeholder=\"Enter Primary Key\"\n            />\n            {errors.primaryRazoypayKey && (\n              <p className=\"text-red-500 text-sm\">{errors.primaryRazoypayKey.message}</p>\n            )}\n          </div>\n\n          <div className=\"relative px-2\">\n            <input\n              type={showKeys ? \"text\" : \"password\"}\n              {...register(\"secretKeyrazorpay\")}\n              className={`${inputClassName}`}\n              placeholder=\"Enter Secret Key\"\n            />\n            {errors.secretKeyrazorpay && (\n              <p className=\"text-red-500 text-sm\">{errors.secretKeyrazorpay.message}</p>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <Modal\n     \n        open={passwordModalOpen}\n        onCancel={() => {\n          setPasswordModalOpen(false);\n          setCurrentPassword(\"\");\n          setError(\"\");\n        }}\n        footer={null}\n        centered\n        destroyOnClose\n        maskClosable\n        maskStyle={{ backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}\n        className=\"password-modal antmodalclassName\"\n      >\n        <div>\n          <label htmlFor=\"current-password\" className=\"block text-sm font-medium text-black\">\n            Current Password\n          </label>\n          <Input.Password\n            id=\"current-password\"\n            placeholder=\"Enter your current password\"\n            value={currentPassword}\n            onChange={(e) => setCurrentPassword(e.target.value)}\n            autoFocus\n          />\n          {error && <p className=\"text-red-500 mt-1\">{error}</p>}\n        </div>\n        <Button\n          type=\"primary\"\n          onClick={handlePasswordSubmit}\n          block\n          className=\"mt-4\"\n          style={{ backgroundColor: \"#1E3A8A\", borderColor: \"#1E3A8A\" }}\n        >\n          Submit\n        </Button>\n      </Modal>\n    </>\n  );\n}\n\nexport default Razorpaykeys;\n","import { useEffect, useRef, useState } from \"react\";\nimport { Controller, useFieldArray, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LiaEditSolid } from \"react-icons/lia\";\nimport {\n  formButtonClassName,\n  inputClassName,\n  inputLabelClassName,\n  domainName,\n  inputerrorClassNameAutoComplete,\n  getLocationDataByPincode,\n  inputDisabledClassName,\n  inputAntdSelectClassName,\n  generateFinancialYearPairs,\n  inputCalanderClassName,\n  sortByPropertyAlphabetically,\n  getDefaultFinacialYear,\n} from \"../../../constents/global.js\";\nimport { FaCamera, FaLinkedin, FaUserAlt } from \"react-icons/fa\";\nimport { AiFillDelete, AiFillInstagram } from \"react-icons/ai\";\nimport { IoLogoFacebook } from \"react-icons/io\";\nimport { TbEditOff, TbWorld } from \"react-icons/tb\";\nimport { FaSquareXTwitter } from \"react-icons/fa6\";\nimport {\n  companyRazorPayfunc,\n  deleteCompanyOwner,\n  getCompanyDetails,\n  updateCompany,\n  updateCompanyOwner,\n} from \"./companyFeatures/_company_reducers\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { planSearch } from \"../../global/other/Plan/PlanFeatures/_plan_reducers\";\nimport {\n  countrySearch,\n  getCountryListFunc,\n} from \"../../global/address/country/CountryFeatures/_country_reducers\";\nimport { stateSearch } from \"../../global/address/state/featureStates/_state_reducers\";\nimport { citySearch } from \"../../global/address/city/CityFeatures/_city_reducers\";\nimport { indusSearch } from \"../../global/other/Industry/IndustryFeature/_industry_reducers.js\";\nimport { empDoctSearch, getEmployeeDocument } from \"../../global/other/employeeDocument/EmployeeDocumentFeatures/_emp_document_reducers.js\";\n\nimport {\n  updateDocument,\n  fileUploadFunc,\n  deleteDocument,\n  updateExperianceFunc,\n  deleteExperianceFunc,\n} from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers.js\";\nimport { orgTypeSearch } from \"../../organizationType/organizationTypeFeatures/_org_type_reducers.js\";\nimport { AutoComplete, DatePicker, Input, Select } from \"antd\";\nimport CustomMobileCodePicker from \"../../../global_layouts/MobileCode/MobileCodePicker.js\";\nimport Swal from \"sweetalert2\";\nimport { banknameSearch } from \"../../global/other/bankname/bankNameFeatures/_bankName_reducers.js\";\nimport { ProfileImageUpdate } from \"../../../redux/_reducers/_auth_reducers.js\";\nimport dayjs from \"dayjs\";\nimport CommonImageViewer from \"../../../global_layouts/ImageViewrModal/CommonImageViewer.js\";\nimport Razorpaykeys from \"./Razorpaykeys.js\";\nimport Loader from \"../../../global_layouts/Loader.js\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2.js\";\nimport ListLoader from \"../../../global_layouts/ListLoader.js\";\nimport PlanHistory from \"./planhistorylist/PlanHistory.js\";\nimport { elements } from \"chart.js\";\nimport getUserIds from \"../../../constents/getUserIds.js\";\n\nconst MyCompanyDetails = () => {\n  const fileInputRefs = useRef([]);\n  const bankfileRefs = useRef([]);\n  const fdRefs = useRef([]);\n  const experienceRef = useRef([]);\n\n  const companyId = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  )?._id;\n  const [step, setStep] = useState(1);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [isSameAsPermanent, setIsSameAsPermanent] = useState(false);\n  // const [documents, setDocuments] = useState([{ id: Date.now() }]);\n  const [banks, setBanks] = useState([1]);\n  const [experiance, setExperiance] = useState([{ id: 1 }]);\n  const [documents, setDocuments] = useState([\n    { id: 1, documentType: \"\", documentNo: \"\", file: [], isEditable: false },\n  ]);\n  const [financialInfo, setFinancialInfo] = useState([\n    {\n      name: \"\",\n      year: \"\",\n      isPeriod: \"\",\n      quarterName: \"\",\n      monthName: \"\",\n      file: [],\n    },\n  ]);\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const [formErrors, setFormErrors] = useState([]);\n  const [formErrorsBank, setFormErrorsBank] = useState([]);\n  const [formErrorsFinancial, setFormErrorsFinancial] = useState([]);\n  const [formErrorsExperiance, setFormErrorsExperiance] = useState([]);\n  const [profileImage, setProfileImage] = useState(null);\n  const [profileImagePayload, setProfileImagePayload] = useState();\n  const [isHovering, setIsHovering] = useState(false);\n  const [uploadedFilePath, setUploadedFilePath] = useState(\"\");\n  const [localCountryList, setLocalCountryList] = useState();\n  const { bankNameListData, loading: bankListLoading } = useSelector(\n    (state) => state.bankname\n  );\n  const { planListData } = useSelector((state) => state.plan);\n  const { countryListData, loading: countryLoading } = useSelector(\n    (state) => state.country\n  );\n  const { stateListData } = useSelector((state) => state.states);\n  const { cityListData } = useSelector((state) => state.city);\n  const { industryListData } = useSelector((state) => state.industry);\n  const { employeeDocumentList, loading: employeeListLoading } = useSelector(\n    (state) => state.employeeDocument\n  );\n  const { orgTypeList } = useSelector((state) => state.orgType);\n  const [fileName, setFileName] = useState({});\n  const [fileUrl, setFileUrl] = useState({});\n  const { companyDetailsData, loading: companyDetailsLoading } = useSelector(\n    (state) => state.company\n  );\n  const { loadingUpdateFile } = useSelector((state) => state.fileUpload);\n\n  const {\n    register,\n    handleSubmit,\n    setValue,\n    getValues,\n    unregister,\n    watch,\n    control,\n    reset,\n    setError,\n    clearErrors,\n    formState: { errors },\n  } = useForm();\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: \"ownerData\",\n  });\n  const dispatch = useDispatch();\n  const PrintAddress = useWatch({\n    control,\n    name: \"PDAddress\",\n    defaultValue: \"\",\n  });\n  const PrintCity = useWatch({\n    control,\n    name: \"PDCity\",\n    defaultValue: \"\",\n  });\n  const PrintState = useWatch({\n    control,\n    name: \"PDState\",\n    defaultValue: \"\",\n  });\n  const PrintCountry = useWatch({\n    control,\n    name: \"PDCountry\",\n    defaultValue: \"\",\n  });\n  const PrintSecondaryState = useWatch({\n    control,\n    name: \"PDSecondaryState\",\n    defaultValue: \"\",\n  });\n  const PrintSecondaryCountry = useWatch({\n    control,\n    name: \"PDSecondaryCountry\",\n    defaultValue: \"\",\n  });\n  const PrintPincode = useWatch({\n    control,\n    name: \"PDPinCode\",\n    defaultValue: \"\",\n  });\n  const PrintMail = useWatch({\n    control,\n    name: \"PDEmail\",\n    defaultValue: \"\",\n  });\n  const PrintMobile = useWatch({\n    control,\n    name: \"PDMobileNo\",\n    defaultValue: \"\",\n  });\n  const PrintMobileCode = useWatch({\n    control,\n    name: \"PDMobileCode\",\n    defaultValue: \"\",\n  });\n  const PrintCompanyName = useWatch({\n    control,\n    name: \"PDCompanyName\",\n    defaultValue: \"\",\n  });\n  const PrintTagLine = useWatch({\n    control,\n    name: \"PDTagline\",\n    defaultValue: \"\",\n  });\n  const PrintWebsite = useWatch({\n    control,\n    name: \"SMWebsite\",\n    defaultValue: \"\",\n  });\n  const PrintFacebook = useWatch({\n    control,\n    name: \"SMFacebook\",\n    defaultValue: \"\",\n  });\n  const PrintTwitter = useWatch({\n    control,\n    name: \"SMTwitter\",\n    defaultValue: \"\",\n  });\n  const PrintInstagram = useWatch({\n    control,\n    name: \"SMInstagram\",\n    defaultValue: \"\",\n  });\n  const printLinkedin = useWatch({\n    control,\n    name: \"SMLinkedIn\",\n    defaultValue: \"\",\n  });\n\n\n\n  useEffect(() => {\n    if (\n      PrintPincode &&\n      PrintPincode.length >= 4 &&\n      PrintPincode.length <= 6 &&\n      /^\\d{6}$/.test(PrintPincode) &&\n      PrintPincode !== companyDetailsData?.data?.addresses?.primary?.pinCode\n    ) {\n      getLocationDataByPincode(PrintPincode)\n        .then((data) => {\n          if (data) {\n            setValue(\"PDCity\", data.city);\n            setValue(\"PDState\", data.state);\n            setValue(\"PDCountry\", data.country);\n          }\n        })\n        .catch((error) => {\n          console.error(\"Error fetching data:\", error);\n        });\n    }\n  }, [PrintPincode]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setPageLoading(true);\n        await dispatch(\n          banknameSearch({\n            isPagination: false,\n            text: \"\",\n            sort: true,\n            status: true,\n          })\n        );\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const reqData = {\n        _id: companyId,\n      };\n      await dispatch(\n        countrySearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n      await dispatch(getCompanyDetails(reqData)).then((data) => {\n        setPageLoading(false);\n      });\n    } catch (error) {\n      console.error(\"Error fetching data:\", error);\n    }\n  };\n\n  useEffect(() => {\n    if (companyDetailsData?.data) {\n      const documentData = companyDetailsData?.data?.documentData?.length\n        ? companyDetailsData.data.documentData.map((document) => ({\n            _id: document?._id || \"\",\n            documentType: document?.name || \"\",\n            documentNo: document?.number || \"\",\n            file: document?.filePath || [],\n            isEditable: false,\n          }))\n        : [\n            {\n              _id: \"\",\n              documentType: \"\",\n              documentNo: \"\",\n              file: [],\n              isEditable: true,\n            },\n          ];\n\n          \n\n\n\n      setDocuments([...documentData]);\n      const bankData = companyDetailsData?.data?.bankData?.length\n        ? companyDetailsData.data.bankData.map((bank) => ({\n            _id: bank?._id || \"\",\n            accountType: bank?.accountType || \"\",\n            bankName: bank?.bankName || \"\",\n            branchName: bank?.branchName || \"\",\n            bankholderName: bank?.bankholderName || \"\",\n            accountNumber: bank?.accountNumber || \"\",\n            ifscCode: bank?.ifscCode || \"\",\n            file: bank?.filePath || [],\n          }))\n        : [\n            {\n              _id: \"\",\n              accountType: \"\",\n              bankName: \"\",\n              branchName: \"\",\n              bankholderName: \"\",\n              accountNumber: \"\",\n              ifscCode: \"\",\n              file: [],\n            },\n          ];\n\n      setBanks([...bankData]);\n\n      const ExperianceData = companyDetailsData?.data?.companyExperiencesData\n        ?.length\n        ? companyDetailsData.data.companyExperiencesData.map(\n            (experianceData) => ({\n              _id: experianceData?._id || \"\",\n              organizationName: experianceData?.organizationName || \"\",\n              industryType: experianceData?.industryType || \"\",\n              taskType: experianceData?.taskName ?? null,\n              startYear: dayjs(experianceData?.startYear) || \"\",\n              endYear: dayjs(experianceData?.endYear) || \"\",\n              file: experianceData?.attachment || [],\n            })\n          )\n        : [\n            {\n              id: \"\",\n              organizationName: \"\",\n              industryType: \"\",\n              taskType: null,\n              startYear: \"\",\n              endYear: \"\",\n              file: [],\n            },\n          ];\n\n      setExperiance([...ExperianceData]);\n      setFormErrorsExperiance([]);\n\n      const financialInfo = companyDetailsData?.data?.financialInfo?.length\n        ? companyDetailsData.data.financialInfo.map((element) => ({\n            _id: element?._id || \"\",\n            name: element?.name || \"\",\n            year: element?.yearRange || \"\",\n            isPeriod:element?.type || '',\n            quarterName:element?.monthQuaters || '',\n            monthName:element?.monthName || '',\n            file: element?.filePath || [],\n          }))\n        : [{ _id: \"\", name: \"\", year: getDefaultFinacialYear(),isPeriod:'',quarterName:'',monthName:'', file: [] }];\n\n      setFinancialInfo([...financialInfo]);\n\n      setProfileImage(\n        `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${companyDetailsData?.data?.profileImage}`\n      );\n\n      reset({\n        ownerData: [],\n      });\n      companyDetailsData?.data?.comapnyOwnerData?.forEach(\n        (ownerData, index) => {\n          const formattedownerData = {\n            _id: ownerData?._id,\n            fullName: ownerData?.fullName,\n            email: ownerData?.email,\n            mobile: {\n              code: ownerData?.mobile?.code,\n              number: ownerData?.mobile?.number,\n            },\n            landline: {\n              code: ownerData?.directorProfile?.landline?.code,\n            },\n            addresses: {\n              street: ownerData?.addresses?.primary?.street,\n              city: ownerData?.addresses?.primary?.city,\n              state: ownerData?.addresses?.primary?.state,\n              country: ownerData?.addresses?.primary?.country,\n              pinCode: ownerData?.addresses?.primary?.pinCode,\n            },\n          };\n          append(formattedownerData); // Append the formatted data\n        }\n      );\n\n      // Main company details\n      setValue(\"PDCompanyName\", companyDetailsData?.data?.fullName);\n      setValue(\"PDTagline\", companyDetailsData?.data?.companyProfile?.tagline);\n      setValue(\"PDStatus\", companyDetailsData?.data?.status);\n      setProfileImagePayload(companyDetailsData?.data?.profileImage);\n      // setValue(\"PDPlan\", companyDetailsData?.data?.planId);\n      setValue(\n        \"PDOrganizationType\",\n        companyDetailsData?.data?.companyProfile?.companyType\n      );\n      setValue(\n        \"PDIndustryType\",\n        companyDetailsData?.data?.companyProfile?.industryType\n      );\n      setValue(\n        \"PDPanNumber\",\n        companyDetailsData?.data?.companyProfile?.penNumber\n      );\n      setValue(\n        \"PDGstNumber\",\n        companyDetailsData?.data?.companyProfile?.GSTNumber\n      );\n      // Address details\n      setValue(\"PDCity\", companyDetailsData?.data?.addresses?.primary?.city);\n      setValue(\n        \"PDAddress\",\n        companyDetailsData?.data?.addresses?.primary?.street\n      );\n      setValue(\n        \"PDCountry\",\n        companyDetailsData?.data?.addresses?.primary?.country\n      );\n      setValue(\"PDState\", companyDetailsData?.data?.addresses?.primary?.state);\n      setValue(\n        \"PDPinCode\",\n        companyDetailsData?.data?.addresses?.primary?.pinCode\n      );\n\n      // Secondary address\n      setValue(\n        \"PDSecondaryAddress\",\n        companyDetailsData?.data?.addresses?.secondary?.street\n      );\n\n\n      setValue(\n        \"PDSecondaryCountry\",\n        companyDetailsData?.data?.addresses?.secondary?.country\n      );\n      setValue(\n        \"PDSecondaryState\",\n        companyDetailsData?.data?.addresses?.secondary?.state\n      );\n      setValue(\n        \"PDSecondaryCity\",\n        companyDetailsData?.data?.addresses?.secondary?.city\n      );\n      setValue(\n        \"PDSecondaryPinCode\",\n        companyDetailsData?.data?.addresses?.secondary?.pinCode\n      );\n\n      setValue(\"PDEmail\", companyDetailsData?.data?.email);\n      setValue(\"PDMobileCode\", companyDetailsData?.data?.mobile?.code);\n      setValue(\"PDMobileNo\", companyDetailsData?.data?.mobile?.number);\n\n      setValue(\"PDAadharNumber\", companyDetailsData?.data?.aadharNumber);\n      setValue(\"PDGstNuumber\", companyDetailsData?.data?.gstNumber);\n\n      setValue(\"PDfrn\", companyDetailsData?.data?.frn);\n      setValue(\"PDTanNumber\", companyDetailsData?.data?.tanNumber);\n      // ?.replace(/^https?:\\/\\//, '')\n      setValue(\n        \"planStartDate\",\n        companyDetailsData?.data?.planData?.startDate\n          ? dayjs(companyDetailsData?.data?.planData?.startDate)\n          : null\n      );\n      setValue(\n        \"planEndDate\",\n        companyDetailsData?.data?.planData?.endDate\n          ? dayjs(companyDetailsData?.data?.planData?.endDate)\n          : null\n      );\n      setValue(\"planType\", companyDetailsData?.data?.planData?.planType);\n      if (companyDetailsData?.data?.socialLinks?.length > 0) {\n        setValue(\n          \"SMInstagram\",\n          companyDetailsData?.data?.socialLinks\n            ?.find((element) => element?.name === \"instagram\")\n            ?.link?.replace(/^https?:\\/\\//, \"\") || \"\"\n        );\n        setValue(\n          \"SMTwitter\",\n          companyDetailsData?.data?.socialLinks\n            ?.find((element) => element?.name === \"twitter\")\n            ?.link?.replace(/^https?:\\/\\//, \"\") || \"\"\n        );\n        setValue(\n          \"SMFacebook\",\n          companyDetailsData?.data?.socialLinks\n            ?.find((element) => element?.name === \"facebook\")\n            ?.link?.replace(/^https?:\\/\\//, \"\") || \"\"\n        );\n        setValue(\n          \"SMWebsite\",\n          companyDetailsData?.data?.socialLinks\n            ?.find((element) => element?.name === \"website\")\n            ?.link?.replace(/^https?:\\/\\//, \"\") || \"\"\n        );\n        setValue(\n          \"SMLinkedIn\",\n          companyDetailsData?.data?.socialLinks\n            ?.find((element) => element?.name === \"linkedin\")\n            ?.link?.replace(/^https?:\\/\\//, \"\") || \"\"\n        );\n      }\n    }\n  }, [companyDetailsData]);\n  useEffect(() => {\n    if (step === 7) {\n      dispatch(\n        indusSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  }, [step]);\n\n  const handleAddMore = () => {\n    setDocuments([...documents, { id: Date.now(), isEditable: true }]);\n  };\n  const handleBankAddMore = () => {\n    setBanks([...banks, { id: Date.now() }]);\n  };\n\n  ;\n\n  // const handleProfileFileChange = (event) => {\n  //   const file = event.target.files[0];\n  //   dispatch(\n  //     fileUploadFunc({\n  //       filePath: file,\n  //       isVideo: false,\n  //       isMultiple: false,\n  //     })\n  //   ).then((res) => {\n  //     setProfileImagePayload(res?.payload?.data);\n  //   });\n  //   if (file) {\n  //     const reader = new FileReader();\n  //     reader.onloadend = () => {\n  //       setProfileImage(reader.result);\n  //     };\n  //     reader.readAsDataURL(file);\n  //   }\n  // };\n  const handleProfileFileChange = async (event) => {\n    const file = event.target.files[0];\n\n    if (!file) return; // Early return if no file is selected\n\n    try {\n      // Dispatch the file upload function and wait for the response\n      const res = await dispatch(\n        fileUploadFunc({\n          filePath: file,\n          isVideo: false,\n          isMultiple: false,\n        })\n      );\n\n      // If the file upload was successful and there is no error\n      if (!res.error) {\n        // Dispatch ProfileImageUpdate with the uploaded image path\n        const data = await dispatch(\n          ProfileImageUpdate({\n            _id: companyId,\n            imagePath: res?.payload?.data,\n          })\n        );\n\n        // If ProfileImageUpdate is successful and there's no error\n        if (!data?.error) {\n          setProfileImagePayload(res?.payload?.data); // Update the state with the new image path\n        }\n      }\n    } catch (error) {\n      console.error(\"Error during file upload or profile image update:\", error);\n    }\n\n    // Read the file to update the UI with the preview\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setProfileImage(reader.result); // Update the preview image\n    };\n    reader.readAsDataURL(file); // Read the file as a Data URL\n  };\n\n  const handleToggle = (e) => {\n    setIsSameAsPermanent((prev) => !prev);\n    if (!isSameAsPermanent) {\n      setValue(\"PDSecondaryAddress\", getValues(\"PDAddress\"));\n      setValue(\"PDSecondaryCity\", getValues(\"PDCity\"));\n      setValue(\"PDSecondaryState\", getValues(\"PDState\"));\n      setValue(\"PDSecondaryCountry\", getValues(\"PDCountry\"));\n      setValue(\"PDSecondaryPinCode\", getValues(\"PDPinCode\"));\n    } else {\n      setValue(\"PDSecondaryAddress\", \"\");\n      setValue(\"PDSecondaryCity\", \"\");\n      setValue(\"PDSecondaryState\", \"\");\n      setValue(\"PDSecondaryCountry\", \"\");\n      setValue(\"PDSecondaryPinCode\", \"\");\n    }\n  };\n\n  const handleEditButton = (index) => {\n    setDocuments((prevDocuments) =>\n      prevDocuments.map((doc, i) =>\n        i === index ? { ...doc, isEditable: !doc.isEditable } : doc\n      )\n    );\n  };\n\n  const onSubmit = async (data) => {\n    if (step === 1) {\n      const finalPayload = {\n        _id: companyId,\n        firstName: \"\",\n        lastName: \"\",\n        profileImage: profileImagePayload ?? \"\",\n        fullName: data?.PDCompanyName ?? \"\",\n        email: data?.PDEmail ?? \"\",\n        userType: \"company\",\n        planType: companyDetailsData?.data?.planData?.planType,\n        startDate: companyDetailsData?.data?.planData?.startDate\n          ? dayjs(companyDetailsData?.data?.planData?.startDate)\n          : null,\n        endDate: companyDetailsData?.data?.planData?.endDate\n          ? dayjs(companyDetailsData?.data?.planData?.endDate)\n          : null,\n        planId: companyDetailsData?.data?.planId,\n        status: companyDetailsData?.data?.status,\n        mobile: {\n          number: data?.PDMobileNo ?? \"\",\n          code: data?.PDMobileCode ?? \"\",\n        },\n        companyProfile: {\n          tagline: data?.PDTagline ?? \"\",\n          companyType: data?.PDOrganizationType ?? \"\",\n          industryType: data?.PDIndustryType ?? \"\",\n          penNumber: data?.PDPanNumber,\n          GSTNumber: data?.PDGstNumber,\n          secondaryEmail: data?.PDEmail ?? \"\",\n          secondaryMobile: {\n            number: data?.PDMobileNo ?? \"\",\n            code: data?.PDMobileCode ?? \"\",\n          },\n        },\n        addresses: {\n          primary: {\n            street: data?.PDAddress ?? \"\",\n            city: data?.PDCity ?? \"\",\n            state: data?.PDState ?? \"\",\n            country: data?.PDCountry ?? \"\",\n            pinCode: data?.PDPinCode ?? \"\",\n          },\n          secondary: {\n            street: data?.PDSecondaryAddress ?? \"\",\n            city: data?.PDSecondaryCity ?? \"\",\n            state: data?.PDSecondaryState ?? \"\",\n            country: data?.PDSecondaryCountry ?? \"\",\n            pinCode: data?.PDSecondaryPinCode ?? \"\",\n          },\n        },\n      };\n      await dispatch(updateCompany(finalPayload)).then((data) => {\n        if (!data.error) {\n          dispatch(\n            getCompanyDetails({\n              _id: companyId,\n            })\n          );\n          // setStep(step => step + 1);\n        }\n      });\n    }\n    if (step === 2) {\n      const reqPayload = {\n        companyId: companyId,\n        ownerArr: data?.ownerData?.map((owner) => {\n          return {\n            _id: owner?._id,\n            fullName: owner?.fullName,\n            email: owner?.email,\n            mobile: {\n              code: owner?.mobile?.code,\n              number: owner?.mobile?.number,\n            },\n\n            addresses: {\n              primary: {\n                street: owner?.addresses?.street,\n                city: owner?.addresses?.city,\n                state: owner?.addresses?.state,\n                country: owner?.addresses?.country,\n                pinCode: owner?.addresses?.pinCode,\n              },\n            },\n          };\n        }),\n      };\n      dispatch(updateCompanyOwner(reqPayload)).then((data) => {\n        if (!data.error) {\n          dispatch(\n            getCompanyDetails({\n              _id: companyId,\n            })\n          );\n        }\n      });\n    }\n    if (step === 3) {\n      if (validateForm()) {\n        const documentPayload = documents.map((doc, index) => {\n          if (doc?._id) {\n            return {\n              userId: companyId,\n              _id: doc?._id,\n              name: doc?.documentType,\n              number: doc?.documentNo,\n              filePath: doc?.file,\n            };\n          } else {\n            return {\n              userId: companyId,\n              name: doc?.documentType,\n              number: doc?.documentNo,\n              filePath: doc?.file,\n            };\n          }\n        });\n\n        const finalPayload = {\n          documents: documentPayload,\n          type: \"documents\",\n        };\n        await dispatch(updateDocument(finalPayload)).then((data) => {\n          if (!data.error) {\n            dispatch(\n              getCompanyDetails({\n                _id: companyId,\n              })\n            );\n          }\n          // newStep && setStep(newStep);\n          // setnewStep(null);\n          // setStep(step => step + 1);\n        });\n      }\n    }\n\n    if (step === 4) {\n      if (validateBankForm()) {\n        const bankPayload = banks.map((bank, index) => {\n          if (bank?._id) {\n            return {\n              userId: companyId,\n              _id: bank?._id,\n              bankholderName: bank?.bankholderName,\n              bankName: bank?.bankName,\n              accountNumber: bank?.accountNumber,\n              branchName: bank?.branchName,\n              ifscCode: bank?.ifscCode,\n              accountType: bank?.accountType,\n              filePath: bank?.file,\n            };\n          } else {\n            return {\n              userId: companyId,\n              bankholderName: bank?.bankholderName,\n              bankName: bank?.bankName,\n              accountNumber: bank?.accountNumber,\n              branchName: bank?.branchName,\n              ifscCode: bank?.ifscCode,\n              accountType: bank?.accountType,\n              filePath: bank?.file,\n            };\n          }\n        });\n\n        const finalPayload = {\n          bank: bankPayload,\n          type: \"bank\",\n        };\n        await dispatch(updateDocument(finalPayload)).then((data) => {\n          if (!data.error) {\n            dispatch(\n              getCompanyDetails({\n                _id: companyId,\n              })\n            );\n          }\n        });\n      }\n    }\n\n    if (step === 5) {\n      if (validateFDForm()) {\n        const financialInfoPayload = financialInfo.map((element, index) => {\n          if (element?._id) {\n            return {\n              userId: companyId,\n              _id: element?._id,\n              name: element?.name,\n              yearRange: element?.year,\n              filePath: element?.file,\n              type: element?.isPeriod,\n              monthName: (element?.isPeriod =='Quaterly' || element?.isPeriod =='Yearly' ) ? '' : element?.monthName,\n              monthQuaters: element?.isPeriod !='Quaterly' ?'': element?.quarterName,\n            };\n          } else {\n            return {\n              userId: companyId,\n              name: element?.name,\n              yearRange: element?.year,\n              filePath: element?.file,\n              type: element?.isPeriod,\n             monthName: (element?.isPeriod =='Quaterly' || element?.isPeriod =='Yearly' )  ? '' : element?.monthName,\n              monthQuaters: element?.isPeriod !='Quaterly' ?'': element?.quarterName,\n            };\n          }\n        });\n\n        const finalPayload = {\n          financialInfo: financialInfoPayload,\n          type: \"financial\",\n        };\n\n        await dispatch(updateDocument(finalPayload)).then((data) => {\n          if (!data.error) {\n            dispatch(\n              getCompanyDetails({\n                _id: companyId,\n              })\n            );\n          }\n          // newStep && setStep(newStep);\n          // setnewStep(null);\n          // setStep(step => step + 1);\n        });\n      }\n    }\n\n    if (step === 6) {\n      const finalPayload = {\n        ...companyDetailsData?.data,\n        planType: companyDetailsData?.data?.planData?.planType,\n        socialLinks: [\n          {\n            name: \"instagram\",\n            link: data?.SMInstagram\n              ? data?.SMInstagram?.startsWith(\"http\")\n                ? data?.SMInstagram\n                : `https://${data?.SMInstagram}`\n              : null,\n          },\n          {\n            name: \"twitter\",\n            link: data?.SMTwitter\n              ? data?.SMTwitter?.startsWith(\"http\")\n                ? data?.SMTwitter\n                : `https://${data?.SMTwitter}`\n              : null,\n          },\n          {\n            name: \"facebook\",\n            link: data?.SMFacebook\n              ? data?.SMFacebook?.startsWith(\"http\")\n                ? data?.SMFacebook\n                : `https://${data?.SMFacebook}`\n              : null,\n          },\n          {\n            name: \"website\",\n            link: data?.SMWebsite\n              ? data?.SMWebsite?.startsWith(\"http\")\n                ? data?.SMWebsite\n                : `https://${data?.SMWebsite}`\n              : null,\n          },\n          {\n            name: \"linkedin\",\n            link: data?.SMLinkedIn\n              ? data?.SMLinkedIn?.startsWith(\"http\")\n                ? data?.SMLinkedIn\n                : `https://${data?.SMLinkedIn}`\n              : null,\n          },\n        ],\n      };\n\n      await dispatch(updateCompany(finalPayload)).then((data) => {\n        if (!data.error) {\n          dispatch(\n            getCompanyDetails({\n              _id: companyId,\n            })\n          );\n        }\n      });\n    }\n    if (step === 7) {\n      if (validateExperianceForm()) {\n        const experiancePayload = experiance.map((experianceData, index) => {\n          if (experianceData?._id) {\n            return {\n              _id: experianceData?._id,\n              organizationName: experianceData?.organizationName,\n              industryType: experianceData?.industryType,\n              taskName: experianceData?.taskType,\n              startYear: dayjs(experianceData?.startYear).format(\"YYYY\"),\n              endYear: dayjs(experianceData?.endYear).format(\"YYYY\"),\n              attachment: experianceData?.file,\n            };\n          } else {\n            return {\n              organizationName: experianceData?.organizationName,\n              industryType: experianceData?.industryType,\n              taskName: experianceData?.taskType,\n              startYear: dayjs(experianceData?.startYear).format(\"YYYY\"),\n              endYear: dayjs(experianceData?.endYear).format(\"YYYY\"),\n              attachment: experianceData?.file,\n            };\n          }\n        });\n\n        const finalPayload = {\n          companyId: companyId,\n          experienceArr: experiancePayload,\n        };\n\n        await dispatch(updateExperianceFunc(finalPayload)).then((data) => {\n          if (!data.error) {\n            dispatch(\n              getCompanyDetails({\n                _id: companyId,\n              })\n            );\n          }\n        });\n      }\n    }\n  };\n  const navTabClick = async (clickedStep) => {\n    setStep(clickedStep);\n  };\n  useEffect(() => {\n    dispatch(empDoctSearch({ isPagination:false, companyId:getUserIds()?.userCompanyId,}));\n  }, []);\n  const handleInputChangeBank = (index, field, value) => {\n    const updatedBanks = [...banks];\n    const newFormErrors = [...formErrorsBank];\n\n    if (field === \"ifscCode\") {\n      const ifscPattern = /^[A-Z]{4}0[A-Z0-9]{6}$/;\n\n      if (!ifscPattern.test(value)) {\n        if (!newFormErrors[index]) newFormErrors[index] = {};\n        newFormErrors[index][field] = \"Invalid IFSC code. Example: SBIN0001234\";\n      } else {\n        if (newFormErrors[index]?.[field]) {\n          delete newFormErrors[index][field];\n        }\n      }\n    }\n\n    if (field === \"accountNumber\") {\n      const accountPattern = /^\\d{6,18}$/;\n\n      if (!accountPattern.test(value)) {\n        if (!newFormErrors[index]) newFormErrors[index] = {};\n        newFormErrors[index][field] =\n          \"Invalid account number. Must be 6 to 18 digits.\";\n      } else {\n        if (newFormErrors[index]?.[field]) {\n          delete newFormErrors[index][field];\n        }\n      }\n    }\n\n    updatedBanks[index][field] = value;\n    setBanks(updatedBanks);\n    setFormErrorsBank(newFormErrors);\n  };\n  const handleBankFileChange = (index, file) => {\n    if (!file) return;\n\n    let selectedFile = file;\n\n    const fileReader = new FileReader();\n    let filePreviewUrl = \"\";\n\n    fileReader.onload = (e) => {\n      filePreviewUrl = e.target.result;\n\n      const isPdf = file.type === \"application/pdf\";\n\n      Swal.fire({\n        title: \"Preview your file\",\n        html: `\n          <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n            <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n            ${\n              isPdf\n                ? `<p style=\"font-size: 16px; color: #074173;\">${file.name}</p>`\n                : `<img id=\"filePreview\" src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">` // Display image preview for non-PDF files\n            }\n            <br>\n          </div>\n        `,\n        showCancelButton: true,\n        confirmButtonText: \"Confirm!\",\n        cancelButtonText: \"Cancel\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            fileUploadFunc({\n              filePath: selectedFile,\n              isVideo: false,\n              isMultiple: false,\n            })\n          )\n            .then((data) => {\n              if (!data.error) {\n                const updatedBanks = [...banks];\n                updatedBanks[index].file = [data?.payload?.data];\n                setBanks(updatedBanks);\n                const newFormErrors = [...formErrorsBank];\n                if (newFormErrors[index]?.file) {\n                  delete newFormErrors[index].file;\n                }\n                setFormErrorsBank(newFormErrors);\n              }\n            })\n            .then((data) => {\n              if (bankfileRefs.current[index]) {\n                bankfileRefs.current[index].value = \"\";\n              }\n            });\n        } else {\n   \n        }\n      });\n    };\n\n    fileReader.readAsDataURL(file);\n  };\n  const handleDeleteBankImage = (index, file) => {\n    const updatedBanks = [...banks];\n    updatedBanks[index].file = [];\n    setBanks(updatedBanks);\n  };\n  const handleBankDelete = (bank, index) => {\n    if (bank?._id) {\n      dispatch(deleteDocument({ _id: bank?._id })).then((data) => {\n        if (!data.error) {\n          setBanks((prevBanks) =>\n            prevBanks.filter((_, index2) => index2 !== index)\n          );\n        }\n      });\n    } else {\n      setBanks((prevBanks) =>\n        prevBanks.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n  const validateBankForm = () => {\n    let errors = [];\n    banks.forEach((bank, index) => {\n      let error = {};\n      if (!bank.accountType) {\n        error.accountType = \"Account Type is required.\";\n      }\n      if (!bank.bankholderName) {\n        error.bankholderName = \"Account Holder name is required.\";\n      }\n      if (!bank.accountNumber) {\n        error.accountNumber = \"Account No is required.\";\n      }\n      if (!bank.bankName) {\n        error.bankName = \"Bank Name is required.\";\n      }\n      if (!bank.branchName) {\n        error.branchName = \"Branch Name is required.\";\n      }\n      if (!bank.ifscCode) {\n        error.ifscCode = \"Ifsc code is required.\";\n      }\n\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n    \n    setFormErrorsBank(errors);\n    return errors.every((error) => Object.keys(error).length === 0);\n  };\n\n  const handleExperianceAddMore = () => {\n    setExperiance([...experiance, { id: Date.now() }]);\n  };\n  const handleInputChangeExperiance = (index, field, value) => {\n    const updatedExperiance = [...experiance];\n    const newFormErrors = [...formErrorsExperiance];\n    updatedExperiance[index][field] = value;\n    setExperiance(updatedExperiance);\n    setFormErrorsExperiance(newFormErrors);\n  };\n  const handleExperianceFileChange = (index, file) => {\n    if (!file) return;\n\n    let selectedFile = file;\n\n    const fileReader = new FileReader();\n    let filePreviewUrl = \"\";\n\n    fileReader.onload = (e) => {\n      filePreviewUrl = e.target.result;\n\n      const isPdf = file.type === \"application/pdf\";\n\n      Swal.fire({\n        title: \"Preview your file\",\n        html: `\n          <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n            <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n            ${\n              isPdf\n                ? `<p style=\"font-size: 16px; color: #074173;\">${file.name}</p>`\n                : `<img id=\"filePreview\" src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">` // Display image preview for non-PDF files\n            }\n            <br>\n          </div>\n        `,\n        showCancelButton: true,\n        confirmButtonText: \"Confirm!\",\n        cancelButtonText: \"Cancel\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          dispatch(\n            fileUploadFunc({\n              filePath: selectedFile,\n              isVideo: false,\n              isMultiple: false,\n            })\n          )\n            .then((data) => {\n              if (!data.error) {\n                const updatedExperiance = [...experiance];\n                updatedExperiance[index].file = [data?.payload?.data];\n                setExperiance(updatedExperiance);\n                const newFormErrors = [...formErrorsExperiance];\n                if (newFormErrors[index]?.file) {\n                  delete newFormErrors[index].file;\n                }\n                setFormErrorsExperiance(newFormErrors);\n              }\n            })\n            .then(() => {\n              if (experienceRef.current[index]) {\n                experienceRef.current[index].value = \"\";\n              }\n            });\n        } else {\n        }\n      });\n    };\n\n    fileReader.readAsDataURL(file);\n  };\n  const handleDeleteExperianceImage = (index, file) => {\n    const updatedExperiance = [...experiance];\n    updatedExperiance[index].file = [];\n    setExperiance(updatedExperiance);\n    if (experienceRef.current[index]) {\n      experienceRef.current[index].value = \"\";\n    }\n  };\n  const handleExperianceDelete = (experiance, index) => {\n    if (experiance?._id) {\n      dispatch(deleteExperianceFunc({ _id: experiance?._id })).then((data) => {\n        if (!data.error) {\n          setExperiance((prevExperiance) =>\n            prevExperiance.filter((_, index2) => index2 !== index)\n          );\n        }\n      });\n    } else {\n      setExperiance((prevExperiance) =>\n        prevExperiance.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n  const validateExperianceForm = () => {\n    let errors = [];\n    experiance.forEach((experiance, index) => {\n      let error = {};\n      if (!experiance.organizationName) {\n        error.organizationName = \"Organization Name is required.\";\n      }\n      if (!experiance.industryType) {\n        error.industryType = \"Industry Type name is required.\";\n      }\n      if (!experiance.startYear) {\n        error.startYear = \"Start Year is required.\";\n      }\n      if (!experiance.endYear) {\n        error.endYear = \"End Year is required.\";\n      }\n      if (!experiance.taskType) {\n        error.taskType = \"Task Type is required.\";\n      }\n      if (!experiance.file || experiance.file.length === 0) {\n        error.file = \"Document file is required.\";\n      }\n\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n\n    \n    setFormErrorsExperiance(errors);\n    return errors.every((error) => Object.keys(error).length === 0);\n  };\n\n  const handleInputChange = (index, field, value) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index][field] = value;\n    setDocuments(updatedDocuments);\n    const newFormErrors = [...formErrors];\n    if (newFormErrors[index]?.[field]) {\n      delete newFormErrors[index][field];\n    }\n    setFormErrors(newFormErrors);\n  };\n\n  const handleFileChange = (index, file) => {\n    if (!file) return;\n\n    let selectedFile = file;\n\n    // Create a preview of the file\n    const fileReader = new FileReader();\n    let filePreviewUrl = \"\";\n\n    fileReader.onload = (e) => {\n      filePreviewUrl = e.target.result;\n      const isPdf = file.type === \"application/pdf\";\n\n      // Show SweetAlert to confirm upload\n      Swal.fire({\n        title: \"Preview your file\",\n        html: `\n          <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n            <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n            ${\n              isPdf\n                ? `<p style=\"font-size: 16px; color: #074173;\">${file.name}</p>`\n                : `<img id=\"filePreview\" src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">` // Display image preview for non-PDF files\n            }\n            <br>\n          </div>\n        `,\n        showCancelButton: true,\n        confirmButtonText: \"Confirm!\",\n        cancelButtonText: \"Cancel\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          // Use the updated selectedFile (which could be the original or changed file)\n          dispatch(\n            fileUploadFunc({\n              filePath: selectedFile,\n              isVideo: false,\n              isMultiple: false,\n            })\n          )\n            .then((data) => {\n              if (!data.error) {\n                const updatedDocuments = [...documents];\n                updatedDocuments[index].file = [data?.payload?.data];\n                setDocuments(updatedDocuments);\n                const newFormErrors = [...formErrors];\n                if (newFormErrors[index]?.file) {\n                  delete newFormErrors[index].file;\n                }\n                setFormErrors(newFormErrors);\n              }\n            })\n            .then((data) => {\n              if (fileInputRefs.current[index]) {\n                fileInputRefs.current[index].value = \"\";\n              }\n            });\n        } else {\n          // Handle the cancel case\n   \n        }\n      });\n    };\n\n    // Read the file to generate the preview\n    fileReader.readAsDataURL(file);\n  };\n\n  const handleDeleteDoctImage = (index, file) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments[index].file = [];\n    if (fileInputRefs.current[index]) {\n      fileInputRefs.current[index].value = \"\";\n    }\n    setDocuments(updatedDocuments);\n  };\n\n  const handleDelete = (document, index) => {\n    if (document?._id) {\n      dispatch(deleteDocument({ _id: document?._id })).then((data) => {\n        if (!data.error) {\n          setDocuments((prevDocuments) =>\n            prevDocuments.filter((_, index2) => index2 !== index)\n          );\n        }\n      });\n    } else {\n      setDocuments((prevDocuments) =>\n        prevDocuments.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n\n  const validateForm = () => {\n    let errors = [];\n    documents.forEach((document, index) => {\n      let error = {};\n      if (!document.documentType) {\n        error.documentType = \"Document Type is required.\";\n      }\n      if (!document.documentNo) {\n        error.documentNo = \"Document No is required.\";\n      }\n      if (!document.file || document.file.length === 0) {\n        error.file = \"Document file is required.\";\n      }\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n\n    setFormErrors(errors);\n    return errors.every((error) => Object.keys(error).length === 0); // returns true if no errors\n  };\n\n  const handleInputFDChange = (index, field, value) => {\n    const updatedFinancialInfo = [...financialInfo];\n    updatedFinancialInfo[index][field] = value;\n    setFinancialInfo(updatedFinancialInfo);\n    const newFormErrors = [...formErrorsFinancial];\n    if (newFormErrors[index]?.[field]) {\n      delete newFormErrors[index][field];\n    }\n  \n    setFormErrorsFinancial(newFormErrors);\n  };\n  const handleFileFDChange = (index, file) => {\n    if (!file) return;\n\n    // Variable to track the newly selected file\n    let selectedFile = file;\n\n    // Create a preview of the file\n    const fileReader = new FileReader();\n    let filePreviewUrl = \"\";\n\n    fileReader.onload = (e) => {\n      filePreviewUrl = e.target.result;\n      const isPdf = file.type === \"application/pdf\";\n      // Show SweetAlert to confirm upload\n      Swal.fire({\n        title: \"Preview your file\",\n        html: `\n          <div style=\"display: flex; flex-direction: column; align-items: center; justify-content: center; text-align: center;\">\n            <p style=\"margin-bottom: 20px;\">Do you want to upload this file?</p>\n            ${\n              isPdf\n                ? `<p style=\"font-size: 16px; color: #074173;\">${file.name}</p>`\n                : `<img id=\"filePreview\" src=\"${filePreviewUrl}\" alt=\"File Preview\" style=\"max-width: 100%; max-height: 300px; width: auto; height: auto;\">` // Display image preview for non-PDF files\n            }\n            <br>\n          </div>\n        `,\n        showCancelButton: true,\n        confirmButtonText: \"Confirm!\",\n        cancelButtonText: \"Cancel\",\n      }).then((result) => {\n        if (result.isConfirmed) {\n          // Use the updated selectedFile (which could be the original or changed file)\n          dispatch(\n            fileUploadFunc({\n              filePath: selectedFile, // Ensure the updated file is used here\n              isVideo: false,\n              isMultiple: false,\n            })\n          )\n            .then((data) => {\n              if (!data.error) {\n                const updatedFinancialInfo = [...financialInfo];\n                updatedFinancialInfo[index].file = [data?.payload?.data];\n                setFinancialInfo(updatedFinancialInfo);\n                const newFormErrors = [...formErrorsFinancial];\n                if (newFormErrors[index]?.file) {\n                  delete newFormErrors[index].file;\n                }\n                setFormErrorsFinancial(newFormErrors);\n              }\n            })\n            .then(() => {\n              if (fdRefs.current[index]) {\n                fdRefs.current[index].value = \"\";\n              }\n            });\n        } else {\n          // Handle the cancel case\n\n        }\n      });\n    };\n\n    // Read the file to generate the preview\n    fileReader.readAsDataURL(file);\n  };\n\n  const handleDeleteFDImage = (index, file) => {\n    const updatedFinancialInfo = [...financialInfo];\n    updatedFinancialInfo[index].file = [];\n    setFinancialInfo(updatedFinancialInfo);\n    if (fdRefs.current[index]) {\n      fdRefs.current[index].value = \"\";\n    }\n  };\n\n  const handleFDDelete = (document, index) => {\n    if (document?._id) {\n      dispatch(deleteDocument({ _id: document?._id })).then((data) => {\n        if (!data.error) {\n          setFinancialInfo((prevDocuments) =>\n            prevDocuments.filter((_, index2) => index2 !== index)\n          );\n          dispatch(\n            getCompanyDetails({\n              _id: companyId,\n            })\n          );\n        }\n      });\n    } else {\n      setFinancialInfo((prevDocuments) =>\n        prevDocuments.filter((_, index2) => index2 !== index)\n      );\n    }\n  };\n\n  const validateFDForm = () => {\n    let errors = [];\n    financialInfo.forEach((element, index) => {\n      let error = {};\n      if (!element.name) {\n        error.name = \"Name is required.\";\n      }\n      if (!element.year) {\n        error.year = \"Year is required.\";\n      }\n      if (!element.isPeriod) {\n        error.isPeriod = \"Type is required.\";\n      }\n      // if (!element.monthName) {\n      //   error.monthName = \"monthName is required.\";\n      // }\n      // if (!element.quarterName) {\n      //   error.quarterName = \"quarterName is required.\";\n      // }\n      if (!element.file || element.file.length === 0) {\n        error.file = \"Document file is required.\";\n      }\n      if (Object.keys(error).length > 0) {\n        errors[index] = error;\n      }\n    });\n\n\n    setFormErrorsFinancial(errors);\n    return errors.every((error) => Object.keys(error).length === 0); // returns true if no errors\n  };\n\n  const handleFDAddMore = () => {\n    setFinancialInfo([...financialInfo, { id: Date.now(), year:getDefaultFinacialYear() }]);\n  };\n\n  const handleFocusCountry = () => {\n    if (!localCountryList?.docs?.length) {\n      setLocalCountryList(countryListData);\n    }\n  };\n\n  const handleCountryChange = (e) => {\n    const value = e.target.value || \"\";\n    setValue(\"PDCountry\", value);\n    setValue(\"PDState\", \"\");\n    dispatch(\n      stateSearch({\n        isPagination: false,\n        text: value,\n        sort: true,\n        status: true,\n        countryId: \"\",\n      })\n    );\n  };\n\n  const handleFocusState = () => {\n    if (!stateListData?.docs?.length) {\n      dispatch(\n        stateSearch({\n          isPagination: false,\n          text: companyDetailsData.data?.addresses?.primary?.country,\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleStateChange = (e) => {\n    const value = e.target.value || \"\";\n    setValue(\"PDState\", value);\n    setValue(\"PDCity\", \"\");\n    dispatch(\n      citySearch({\n        isPagination: false,\n        text: value,\n        sort: true,\n        status: true,\n        countryId: \"\",\n        stateId: value,\n      })\n    );\n  };\n\n  const handleFocusCity = () => {\n    if (!stateListData?.docs?.length) {\n      dispatch(\n        citySearch({\n          isPagination: false,\n          text: companyDetailsData.data?.addresses?.primary?.state,\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusIndustry = () => {\n    if (!industryListData?.length) {\n      dispatch(\n        indusSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusPlan = () => {\n    if (!planListData?.length) {\n      dispatch(\n        planSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  };\n\n  const financialYearPairs = generateFinancialYearPairs();\n  const deleteData = (data, index) => {\n    if (data?._id) {\n      dispatch(\n        deleteCompanyOwner({\n          _id: data?._id,\n        })\n      ).then((res) => {\n        if (!res?.error) {\n          fetchData();\n        }\n      });\n    } else {\n      remove(index);\n    }\n  };\n\n  return (\n    <GlobalLayout>\n      {!pageLoading ? (\n        <div className=\"grid grid-cols-12 \">\n          <div className=\" md:col-span-3 col-span-12 w-full h-auto rounded-lg  \">\n            <div className=\"shadow bg-white rounded-xl py-2\">\n              <div className=\"relative w-[50px] h-[50px] mx-auto rounded-full border-2 border-slate-600 mt-3 flex items-center justify-center\">\n                <div\n                  className=\"w-full h-full rounded-full overflow-hidden bg-gray-200 flex items-center justify-center\"\n                  style={{\n                    backgroundImage: `url(${profileImage || \"\"})`,\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                  }}\n                >\n                  {!profileImage && (\n                    <FaUserAlt className=\"text-slate-500 w-[30px] h-[25px] cursor-pointer\" />\n                  )}\n                </div>\n\n                <div className=\"absolute bottom-0 right-0 bg-white p-[2px] rounded-full\">\n                  <FaCamera className=\"text-header w-[16px] h-[16px] \" />\n                </div>\n\n                <input\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleProfileFileChange}\n                  className=\"absolute inset-0 opacity-0 cursor-pointer\"\n                />\n              </div>\n              <div className=\"text-base font-medium overflow-auto mx-2 text-center mt-2 text-header \">\n                {PrintCompanyName ? PrintCompanyName : \"Organization Name\"}\n              </div>\n              <div className=\"text-xs font-normal text-center text-gray-600 \">\n                {PrintTagLine ? PrintTagLine : \"Tag Line\"}\n              </div>\n              <div className=\"border mx-2 px-2 my-2 py-3 rounded-lg \">\n                <div className=\"w-full\">\n                  <label className={`${inputLabelClassName}`}>Address</label>\n                  <div\n                    className={`mt-1 block w-full  overflow-auto px-2 py-[9px] shadow-sm rounded-lg text-xs  bg-[#f4f6f9] focus:outline-none cursor-default min-h-8`}\n                  >\n                    {PrintAddress && <>{PrintAddress}, </>}\n                    {PrintCity && <>{PrintCity}, </>}\n                    {PrintState && <>{PrintState}, </>}\n                    {PrintCountry && <>{PrintCountry}, </>}\n                    {PrintPincode && <>{PrintPincode}</>}\n                  </div>\n                </div>\n\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>Mail</label>\n                  <div\n                    className={`mt-1 block w-full overflow-auto px-2 py-[9px] shadow-sm rounded-lg text-xs  bg-[#f4f6f9] focus:outline-none cursor-default min-h-8`}\n                  >\n                    {PrintMail}\n                  </div>\n                </div>\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>\n                    Phone number\n                  </label>\n                  <div className=\"flex gap-2\">\n                    <div\n                      className={`mt-1 block overflow-auto text-center   py-[9px] shadow-sm rounded-lg text-xs capitalize bg-[#f4f6f9] focus:outline-none cursor-default min-h-8 min-w-8`}\n                    >\n                      {PrintMobileCode}\n                    </div>\n                    <div\n                      className={`mt-1 block overflow-auto w-full px-2 py-[9px] shadow-sm rounded-lg text-xs capitalize bg-[#f4f6f9] focus:outline-none cursor-default min-h-8`}\n                    >\n                      {PrintMobile}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex justify-center items-center text-[25px] text-header py-2 gap-1\">\n                {/* Website */}\n                <TbWorld\n                  onClick={() => {\n                    if (PrintWebsite) {\n                      const url = PrintWebsite.startsWith(\"http\")\n                        ? PrintWebsite\n                        : `https://${PrintWebsite}`;\n                      window.open(url, \"_blank\");\n                    }\n                  }}\n                />\n\n                {/* Instagram */}\n                <AiFillInstagram\n                  onClick={() => {\n                    if (PrintInstagram) {\n                      const url = PrintInstagram.startsWith(\"http\")\n                        ? PrintInstagram\n                        : `https://${PrintInstagram}`;\n                      window.open(url, \"_blank\");\n                    }\n                  }}\n                />\n\n                {/* Facebook */}\n                <IoLogoFacebook\n                  onClick={() => {\n                    if (PrintFacebook) {\n                      const url = PrintFacebook.startsWith(\"http\")\n                        ? PrintFacebook\n                        : `https://${PrintFacebook}`;\n                      window.open(url, \"_blank\");\n                    }\n                  }}\n                />\n\n                {/* Twitter */}\n                <FaSquareXTwitter\n                  onClick={() => {\n                    if (PrintTwitter) {\n                      const url = PrintTwitter.startsWith(\"http\")\n                        ? PrintTwitter\n                        : `https://${PrintTwitter}`;\n                      window.open(url, \"_blank\");\n                    }\n                  }}\n                />\n\n                {/* LinkedIn */}\n                <FaLinkedin\n                  onClick={() => {\n                    if (printLinkedin) {\n                      const url = printLinkedin.startsWith(\"http\")\n                        ? printLinkedin\n                        : `https://${printLinkedin}`;\n                      window.open(url, \"_blank\");\n                    }\n                  }}\n                />\n              </div>\n            </div>\n          </div>\n          <form\n            onSubmit={handleSubmit(onSubmit)}\n            className=\"space-y-2 md:col-span-9 col-span-12\"\n          >\n            <div className=\"flex bg-header justify-start items-center rounded-lg gap-5 px-3 pt-2 overflow-x-auto overflow-y-hidden text-nowrap\">\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(1)}\n                className={`flex relative flex-col items-center  pb-2 ${\n                  step === 1 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n              >\n                {step === 1 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold text-nowrap\">\n                  Primary Details\n                </span>\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(2)}\n                className={`flex flex-col items-center relative pb-2 ${\n                  step === 2 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n              >\n                {step === 2 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">Owner Details</span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(3)}\n                className={`flex flex-col items-center relative pb-2 ${\n                  step === 3 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n              >\n                {step === 3 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">KYC Documents</span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(4)}\n                className={`flex flex-col items-center relative pb-2 ${\n                  step === 4 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n              >\n                {step === 4 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">Bank Details</span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(5)}\n                className={`flex flex-col items-center relative pb-2 ${\n                  step === 5 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n              >\n                {step === 5 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">\n                  Financial Documents\n                </span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(6)}\n                className={`flex flex-col items-center relative pb-2 ${\n                  step === 6 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n              >\n                {step === 6 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">Social Media</span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(7)}\n                className={`flex flex-col items-center relative pb-2 ${\n                  step === 7 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n              >\n                {step === 7 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">Experience</span>\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(8)}\n                className={`flex flex-col items-center relative pb-2 ${\n                  step === 8 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n              >\n                {step === 8 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">RazorPay Keys</span>\n              </button>\n\n              <button\n                type=\"button\"\n                onClick={() => navTabClick(9)}\n                className={`flex flex-col items-center relative pb-2 ${\n                  step === 9 ? \"text-white ]\" : \"text-gray-200\"\n                } cursor-pointer`}\n              >\n                {step === 9 && (\n                  <div className=\"w-full h-3 bg-[#f4f6f9] absolute bottom-0 translate-y-1/2 rounded-2xl\"></div>\n                )}\n                <span className=\"text-sm font-semibold\">Plan History</span>\n              </button>\n            </div>\n            {step === 1 && (\n              <div>\n                <div className=\" \">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3\">\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Company Name <span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        {...register(\"PDCompanyName\", {\n                          required: \"Company Name is required\",\n                        })}\n                        disabled\n                        className={`placeholder: ${inputDisabledClassName} ${\n                          errors.PDCompanyName\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Company Name\"\n                      />\n                      {errors.PDCompanyName && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDCompanyName.message}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Tag Line\n                      </label>\n                      <input\n                        type=\"text\"\n                        {...register(\"PDTagline\")}\n                        className={`placeholder: ${inputClassName} ${\n                          errors.PDTagline ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Tag Line\"\n                      />\n                      {errors.PDTagline && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDTagline.message}\n                        </p>\n                      )}\n                    </div>\n\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Organization Type{\" \"}\n                        <span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        disabled\n                        {...register(\"PDOrganizationType\")}\n                        className={`placeholder: ${inputDisabledClassName} ${\n                          errors.PDOrganizationType\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Organization Type\"\n                      />\n\n                      {errors.PDOrganizationType && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDOrganizationType.message}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Industry Type <span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        disabled\n                        {...register(\"PDIndustryType\")}\n                        className={`placeholder: ${inputDisabledClassName} ${\n                          errors.PDIndustryType\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Industry Type\"\n                      />\n\n                      {errors.PDIndustryType && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDIndustryType.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3 md:mt-4\">\n                    <div className=\"col-span-2\">\n                      <label className={`${inputLabelClassName}`}>\n                        Primary Address <span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        {...register(\"PDAddress\", {\n                          required: \"Address  is required\",\n                        })}\n                        className={`${inputClassName} ${\n                          errors.PDAddress ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Address \"\n                      />\n                      {errors.PDAddress && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDAddress.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 md:gap-8 gap-3 md:my-1 px-3\">\n                    <div>\n                      <div className={`${inputLabelClassName}`}>\n                        Country <span className=\"text-red-600\">*</span>\n                      </div>\n                      <Controller\n                        control={control}\n                        name=\"PDCountry\"\n                        rules={{ required: \"Country is required\" }}\n                        render={({ field }) => (\n                          <AutoComplete\n                            className=\"w-full\"\n                            {...field}\n                            onChange={(value) => {\n                              // Directly handle country change by using setValue from React Hook Form\n                              field.onChange(value); // Update the value in the form control\n                            }}\n                            options={\n                              countryLoading\n                                ? []\n                                : countryListData?.docs?.map((type) => ({\n                                    value: type?.name,\n                                  }))\n                            }\n                            notFoundContent={countryListData && <ListLoader />}\n                          >\n                            <input\n                              placeholder=\"Enter Country\"\n                              onFocus={() => {\n                                dispatch(\n                                  countrySearch({\n                                    isPagination: false,\n                                    text: \"\",\n                                    sort: true,\n                                    status: true,\n                                  })\n                                );\n                              }}\n                              className={`${inputClassName} ${\n                                errors.PDCountry\n                                  ? \"border-[1px] \"\n                                  : \"border-gray-300\"\n                              }`}\n                            />\n                          </AutoComplete>\n                        )}\n                      />\n                      {errors.PDCountry && (\n                        <p className={`${inputerrorClassNameAutoComplete}`}>\n                          {errors.PDCountry.message}\n                        </p>\n                      )}\n                    </div>\n                    <div>\n                      <div className={`${inputLabelClassName}`}>\n                        State <span className=\"text-red-600\">*</span>\n                      </div>\n                      <Controller\n                        control={control}\n                        name=\"PDState\"\n                        rules={{ required: \"State is required\" }}\n                        render={({ field }) => (\n                          <AutoComplete\n                            className=\"w-full\"\n                            {...field}\n                            onChange={(value) => field.onChange(value)}\n                            options={stateListData?.docs?.map((type) => ({\n                              value: type?.name,\n                            }))}\n                          >\n                            <input\n                              placeholder=\"Enter State\"\n                              onFocus={() => {\n                                dispatch(\n                                  stateSearch({\n                                    isPagination: false,\n                                    text: \"\",\n                                    countryName: PrintCountry,\n                                    sort: true,\n                                    status: true,\n                                  })\n                                );\n                              }}\n                              className={`${inputClassName} ${\n                                errors.PDState\n                                  ? \"border-[1px] \"\n                                  : \"border-gray-300\"\n                              }`}\n                            />\n                          </AutoComplete>\n                        )}\n                      />\n                      {errors.PDState && (\n                        <p className={`${inputerrorClassNameAutoComplete}`}>\n                          {errors.PDState.message}\n                        </p>\n                      )}\n                    </div>\n\n                    {/* City Field */}\n                    <div>\n                      <div className={`${inputLabelClassName}`}>\n                        City <span className=\"text-red-600\">*</span>\n                      </div>\n                      <Controller\n                        control={control}\n                        name=\"PDCity\"\n                        rules={{ required: \"City is required\" }}\n                        render={({ field }) => (\n                          <AutoComplete\n                            className=\"w-full\"\n                            {...field}\n                            onChange={(value) => field.onChange(value)}\n                            options={cityListData?.docs?.map((type) => ({\n                              value: type?.name,\n                            }))}\n                          >\n                            <input\n                              onFocus={() => {\n                                dispatch(\n                                  citySearch({\n                                    isPagination: false,\n                                    text: \"\",\n                                    sort: true,\n                                    status: true,\n                                    stateName: PrintState,\n                                  })\n                                );\n                              }}\n                              placeholder=\"Enter City\"\n                              className={`${inputClassName} ${\n                                errors.PDCity\n                                  ? \"border-[1px] \"\n                                  : \"border-gray-300\"\n                              }`}\n                            />\n                          </AutoComplete>\n                        )}\n                      />\n                      {errors.PDCity && (\n                        <p className={`${inputerrorClassNameAutoComplete}`}>\n                          {errors.PDCity.message}\n                        </p>\n                      )}\n                    </div>\n                    <div>\n                      <label className={`${inputLabelClassName}`}>\n                        Pin Code <span className=\"text-red-600\">*</span>\n                      </label>\n                      <Controller\n                        control={control}\n                        name=\"PDPinCode\"\n                        rules={{ required: \"Pin Code is required\" }}\n                        render={({ field }) => (\n                          <input\n                            {...field}\n                            type=\"number\"\n                            placeholder=\"Enter Pin Code\"\n                            maxLength={6}\n                            onInput={(e) => {\n                              if (e.target.value.length > 6) {\n                                e.target.value = e.target.value.slice(0, 6);\n                              }\n                            }}\n                            className={`${inputClassName} ${\n                              errors.PDPinCode\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                            }`}\n                          />\n                        )}\n                      />\n                      {errors.PDPinCode && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDPinCode.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3 md:mt-4\">\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Email <span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"email\"\n                        disabled\n                        {...register(\"PDEmail\", {\n                          required: \"Email is required\",\n                          pattern: {\n                            value:\n                              /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                            message: \"Please enter a valid email address\",\n                          },\n                        })}\n                        className={` ${inputDisabledClassName} ${\n                          errors.PDEmail ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Email\"\n                      />\n                      {errors.PDEmail && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDEmail.message}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"flex gap-3\">\n                      <div className=\"w-[150px]\">\n                        <label className={`${inputLabelClassName}`}>\n                          Code <span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                          control={control}\n                          name=\"PDMobileCode\"\n                          rules={{ required: \"code is required\" }}\n                          render={({ field }) => (\n                            <CustomMobileCodePicker\n                              field={field}\n                              errors={errors}\n                            />\n                          )}\n                        />\n\n                        {errors[`PDMobileCode`] && (\n                          <p className={`${inputerrorClassNameAutoComplete}`}>\n                            {errors[`PDMobileCode`].message}\n                          </p>\n                        )}\n                      </div>\n                      <div className=\"w-full\">\n                        <label className={`${inputLabelClassName}`}>\n                          Mobile No <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"number\"\n                          {...register(`PDMobileNo`, {\n                            required: \"Mobile No is required\",\n                            minLength: {\n                              value: 10,\n                              message: \"Must be exactly 10 digits\",\n                            },\n                            maxLength: {\n                              value: 10,\n                              message: \"Must be exactly 10 digits\",\n                            },\n                          })}\n                          className={` ${inputClassName} ${\n                            errors[`PDMobileNo`]\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                          }`}\n                          placeholder=\"Enter Mobile No\"\n                          maxLength={10}\n                          onInput={(e) => {\n                            if (e.target.value.length > 10) {\n                              e.target.value = e.target.value.slice(0, 10);\n                            }\n                          }}\n                        />\n                        {errors[`PDMobileNo`] && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors[`PDMobileNo`].message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3 md:mt-4\">\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        GST Number\n                      </label>\n                      <input\n                        type=\"text\"\n                        {...register(\"PDGstNumber\", {\n                          pattern: {\n                            value:\n                              /^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}[Z]{1}[0-9A-Z]{1}$/,\n                            message:\n                              \"Invalid GST Number format (29AAACH7409R1ZX)\",\n                          },\n                        })}\n                        className={` ${inputClassName} ${\n                          errors.PDGstNumber\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter GST Number\"\n                        maxLength={15}\n                      />\n                      {errors.PDGstNumber && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDGstNumber.message}\n                        </p>\n                      )}\n                    </div>\n                    <div className=\"\">\n                      <label className={`${inputLabelClassName}`}>\n                        Pan Number <span className=\"text-red-600\">*</span>\n                      </label>\n                      <input\n                        type=\"text\"\n                        {...register(\"PDPanNumber\", {\n                          required: \"Pan Number is required\",\n                          pattern: {\n                            value: /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/,\n                            message: \"Invalid PAN card format (ABCDE1234E)\",\n                          },\n                        })}\n                        className={`  ${inputClassName} ${\n                          errors.PDPanNumber\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Pan Number\"\n                      />\n                      {errors.PDPanNumber && (\n                        <p className=\"text-red-500 text-sm\">\n                          {errors.PDPanNumber.message}\n                        </p>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button\n                    disabled={companyDetailsLoading}\n                    type=\"Submit\"\n                    className={`${\n                      companyDetailsLoading\n                        ? \"bg-[#7B8FA1] text-sm text-white py-2 px-3 rounded mt-4\"\n                        : formButtonClassName\n                    } text-center`}\n                  >\n                    {companyDetailsLoading ? <Loader /> : \" Submit Details\"}\n                  </button>\n                </div>\n              </div>\n            )}\n            {step === 8 && (\n              <>\n                <Razorpaykeys\n                  register={register}\n                  errors={errors}\n                  companyDetailsData={companyDetailsData}\n                  setValue={setValue}\n                  watch={watch}\n                />\n              </>\n            )}\n            {step === 2 && (\n              <>\n                {fields.map((item, index) => (\n                  <div\n                    key={item.id}\n                    className=\"border border-gray-300 rounded-md my-2\"\n                  >\n                    <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n                      <div className=\"px-3 py-2 text-white font-semibold\">\n                        Owner {index + 1}\n                      </div>\n\n                      <button\n                        type=\"button\"\n                        onClick={() => deleteData(item, index)}\n                        className=\"text-red-600 hover:text-red-800\"\n                      >\n                        <AiFillDelete size={20} className=\"m-2\" />\n                      </button>\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-1 px-3\">\n                      <div>\n                        <label className={`${inputLabelClassName}`}>\n                          Full Name <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          {...register(`ownerData.${index}.fullName`, {\n                            required: \"Full Name is required\",\n                          })}\n                          placeholder=\"Full Name\"\n                          className={`${inputClassName} ${\n                            errors?.ownerData?.[index]?.fullName\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                          }`}\n                        />\n                        {errors?.ownerData?.[index]?.fullName && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.ownerData[index].fullName.message}\n                          </p>\n                        )}\n                      </div>\n                      <div>\n                        <label className={`${inputLabelClassName}`}>\n                          Email <span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          placeholder=\"Email\"\n                          {...register(`ownerData.${index}.email`, {\n                            required: \"Email is required\",\n                            pattern: {\n                              value:\n                                /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/,\n                              message: \"Invalid email address\",\n                            },\n                          })}\n                          className={`${inputClassName} ${\n                            errors?.ownerData?.[index]?.email\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                          }`}\n                        />\n                        {errors?.ownerData?.[index]?.email && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.ownerData[index].email.message}\n                          </p>\n                        )}\n                      </div>\n\n                      <div>\n                        <label className={`${inputLabelClassName}`}>\n                          Mobile <span className=\"text-red-600\">*</span>\n                        </label>\n\n                        <div className=\"flex gap-2\">\n                          <div className=\"w-[150px]\">\n                            <Controller\n                              control={control}\n                              name={`ownerData.${index}.mobile.code`}\n                              rules={{ required: \"code is required\" }}\n                              render={({ field }) => (\n                                <CustomMobileCodePicker\n                                  field={field}\n                                  errors={errors}\n                                />\n                              )}\n                            />\n                          </div>\n                          <div className=\"w-full\">\n                            <input\n                              type=\"number\"\n                              {...register(`ownerData.${index}.mobile.number`, {\n                                required: \"Mobile number is required\",\n\n                                minLength: {\n                                  value: 10,\n                                  message: \"Must be exactly 10 digits\",\n                                },\n                                maxLength: {\n                                  value: 10,\n                                  message: \"Must be exactly 10 digits\",\n                                },\n                              })}\n                              maxLength={10}\n                              onInput={(e) => {\n                                if (e.target.value.length > 10) {\n                                  e.target.value = e.target.value.slice(0, 10);\n                                }\n                              }}\n                              placeholder=\"Number\"\n                              className={`${inputClassName} ${\n                                errors?.ownerData?.[index]?.mobile?.number\n                                  ? \"border-[1px] \"\n                                  : \"border-gray-300\"\n                              }`}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"flex gap-3\">\n                          {errors?.ownerData?.[index]?.mobile?.code && (\n                            <p className=\"text-red-500 text-sm\">\n                              {errors.ownerData[index].mobile.code.message}\n                            </p>\n                          )}\n                          {errors?.ownerData?.[index]?.mobile?.number && (\n                            <p className=\"text-red-500 text-sm\">\n                              {errors.ownerData[index].mobile.number.message}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 gap-3 md:my-1 px-3\">\n                      <div className=\"col-span-2\">\n                        <label className={`${inputLabelClassName}`}>\n                          Primary Address<span className=\"text-red-600\">*</span>\n                        </label>\n                        <input\n                          type=\"text\"\n                          {...register(`ownerData.${index}.addresses.street`, {\n                            required: \"Primary Address is required\",\n                          })}\n                          className={`${inputClassName} ${\n                            errors.ownerData?.[index]?.addresses?.street\n                              ? \"border-[1px] \"\n                              : \"border-gray-300\"\n                          }`}\n                          placeholder=\"Enter Primary Address\"\n                        />\n                        {errors.ownerData?.[index]?.addresses?.street && (\n                          <p className=\"text-red-500 text-sm\">\n                            {\n                              errors.ownerData?.[index]?.addresses?.street\n                                .message\n                            }\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 xl:grid-cols-4 md:gap-8 gap-3 md:my-2 px-3\">\n                      <div>\n                        <div className={`${inputLabelClassName}`}>\n                          Country <span className=\"text-red-600\">*</span>\n                        </div>\n                        <Controller\n                          control={control}\n                          name={`ownerData.${index}.addresses.country`}\n                          rules={{ required: \"Country is required\" }}\n                          render={({ field }) => (\n                            <AutoComplete\n                              {...field}\n                              onChange={(value) => field.onChange(value)}\n                              className=\"w-full\"\n                              options={\n                                countryLoading\n                                  ? []\n                                  : countryListData?.docs?.map((type) => ({\n                                      value: type?.name,\n                                    }))\n                              }\n                              notFoundContent={\n                                countryListData && <ListLoader />\n                              }\n                            >\n                              <input\n                                placeholder=\"Enter Country\"\n                                onFocus={() => {\n                                  dispatch(\n                                    countrySearch({\n                                      isPagination: false,\n                                      text: \"\",\n                                      sort: true,\n                                      status: true,\n                                    })\n                                  );\n                                }}\n                                className={`${inputClassName} ${\n                                  errors.ownerData?.[index]?.addresses?.country\n                                    ? \"border-[1px] \"\n                                    : \"border-gray-300\"\n                                }`}\n                              />\n                            </AutoComplete>\n                          )}\n                        />\n                        {errors.ownerData?.[index]?.addresses?.country && (\n                          <p className={`${inputerrorClassNameAutoComplete}`}>\n                            {errors.ownerData[index].addresses.country.message}\n                          </p>\n                        )}\n                      </div>\n                      <div>\n                        <div className={`${inputLabelClassName}`}>\n                          State <span className=\"text-red-600\">*</span>\n                        </div>\n                        <Controller\n                          control={control}\n                          name={`ownerData.${index}.addresses.state`}\n                          rules={{ required: \"State is required\" }}\n                          render={({ field }) => (\n                            <AutoComplete\n                              {...field}\n                              onChange={(value) => field.onChange(value)} // Handle state change\n                              className=\"w-full\"\n                              options={stateListData?.docs?.map((type) => ({\n                                value: type?.name,\n                              }))}\n                            >\n                              <input\n                                placeholder=\"Enter State\"\n                                onFocus={() => {\n                                  dispatch(\n                                    stateSearch({\n                                      isPagination: false,\n                                      text: \"\",\n                                      countryName: watch(\n                                        `ownerData.${index}.addresses.country`\n                                      ),\n                                      sort: true,\n                                      status: true,\n                                    })\n                                  );\n                                }}\n                                className={`${inputClassName} ${\n                                  errors.ownerData?.[index]?.addresses?.state\n                                    ? \"border-[1px] \"\n                                    : \"border-gray-300\"\n                                }`}\n                              />\n                            </AutoComplete>\n                          )}\n                        />\n                        {errors.ownerData?.[index]?.addresses?.state && (\n                          <p className={`${inputerrorClassNameAutoComplete}`}>\n                            {errors.ownerData[index].addresses.state.message}\n                          </p>\n                        )}\n                      </div>\n                      <div>\n                        <div className={`${inputLabelClassName}`}>\n                          City <span className=\"text-red-600\">*</span>\n                        </div>\n                        <Controller\n                          control={control}\n                          name={`ownerData.${index}.addresses.city`}\n                          rules={{ required: \"City is required\" }}\n                          render={({ field }) => (\n                            <AutoComplete\n                              {...field}\n                              onChange={(value) => field.onChange(value)} // Handle city change\n                              className=\"w-full\"\n                              options={cityListData?.docs?.map((type) => ({\n                                value: type?.name,\n                              }))}\n                            >\n                              <input\n                                placeholder=\"Enter City\"\n                                onFocus={() => {\n                                  dispatch(\n                                    citySearch({\n                                      isPagination: false,\n                                      text: \"\",\n                                      sort: true,\n                                      status: true,\n                                      stateName: watch(\n                                        `ownerData.${index}.addresses.state`\n                                      ),\n                                    })\n                                  );\n                                }}\n                                className={`${inputClassName} ${\n                                  errors.ownerData?.[index]?.addresses?.city\n                                    ? \"border-[1px] \"\n                                    : \"border-gray-300\"\n                                }`}\n                              />\n                            </AutoComplete>\n                          )}\n                        />\n                        {errors.ownerData?.[index]?.addresses?.city && (\n                          <p className={`${inputerrorClassNameAutoComplete}`}>\n                            {errors.ownerData[index].addresses.city.message}\n                          </p>\n                        )}\n                      </div>\n                      {/* Pin Code Field */}\n                      <div>\n                        <label className={`${inputLabelClassName}`}>\n                          Pin Code <span className=\"text-red-600\">*</span>\n                        </label>\n                        <Controller\n                          control={control}\n                          name={`ownerData.${index}.addresses.pinCode`}\n                          rules={{ required: \"Pin Code is required\" }}\n                          render={({ field }) => (\n                            <input\n                              {...field}\n                              type=\"number\"\n                              placeholder=\"Enter Pin Code\"\n                              maxLength={6}\n                              onInput={(e) => {\n                                if (e.target.value.length > 6) {\n                                  e.target.value = e.target.value.slice(0, 6);\n                                }\n                              }}\n                              className={`${inputClassName} ${\n                                errors.ownerData?.[index]?.addresses?.pinCode\n                                  ? \"border-[1px] \"\n                                  : \"border-gray-300\"\n                              }`}\n                            />\n                          )}\n                        />\n                        {errors.ownerData?.[index]?.addresses?.pinCode && (\n                          <p className=\"text-red-500 text-sm\">\n                            {errors.ownerData[index].addresses.pinCode.message}\n                          </p>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n\n                <div className=\"flex gap-2 justify-between items-center my-2\">\n                  <button\n                    type=\"button\"\n                    onClick={() =>\n                      append({\n                        fullName: \"\",\n\n                        email: \"\",\n                        mobile: { code: \"\", number: \"\" },\n                        addresses: {\n                          street: \"\",\n                          city: \"\",\n                          state: \"\",\n                          country: \"\",\n                          pinCode: \"\",\n                        },\n                      })\n                    }\n                    className=\"bg-header px-2 py-2 text-sm rounded-md text-white\"\n                  >\n                    Add New Owner\n                  </button>\n\n                  <div className=\"flex justify-between px-3 pb-2\">\n                    <button\n                      disabled={companyDetailsLoading}\n                      type=\"Submit\"\n                      className={`${\n                        companyDetailsLoading\n                          ? \"bg-[#7B8FA1] text-sm text-white py-2 px-3 rounded mt-4\"\n                          : formButtonClassName\n                      } text-center`}\n                    >\n                      {companyDetailsLoading ? <Loader /> : \" Submit Details\"}\n                    </button>\n                  </div>\n                </div>\n              </>\n            )}\n            {step === 3 && (\n              <div>\n                <div className=\"rounded-md\">\n                  {documents?.map((document, index) => (\n                    <div\n                      className=\"border border-gray-300 rounded-md my-2\"\n                      key={index}\n                    >\n                      <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n                        <div className=\"px-3 py-2 text-white font-semibold\">\n                          {\" \"}\n                          Document {index + 1}\n                        </div>\n                        <div className=\"flex justify-end gap-2 items-center\">\n                          <button\n                            type=\"button\"\n                            onClick={() => handleDelete(document, index)}\n                            className=\"text-red-600 hover:text-red-800\"\n                          >\n                            <AiFillDelete size={20} className=\"m-2\" />\n                          </button>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleEditButton(index)}\n                            className=\"text-white\"\n                          >\n                            {document?.isEditable ? (\n                              <TbEditOff size={20} className=\"m-2\" />\n                            ) : (\n                              <LiaEditSolid size={20} className=\"m-2\" />\n                            )}\n                          </button>\n                        </div>\n                      </div>\n                      <div\n                        key={index}\n                        className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\"\n                      >\n                        <div>\n                          <label className={`${inputLabelClassName}`}>\n                            Document Type{\" \"}\n                            <span className=\"text-red-600\">*</span>\n                          </label>\n\n                          <Select\n                            disabled={!document.isEditable}\n                            value={document.documentType}\n                            className={` ${inputAntdSelectClassName} ${\n                              errors.PDPlan\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                            }`}\n                            onChange={(e) =>\n                              handleInputChange(index, \"documentType\", e)\n                            }\n                            placeholder=\"Select Document Type\"\n                            showSearch\n                          >\n                            <Select.Option value=\"\">\n                              Select Document\n                            </Select.Option>\n                            {employeeListLoading ? (\n                              <Select.Option disabled>\n                                <ListLoader />\n                              </Select.Option>\n                            ) : (\n                              employeeDocumentList\n                                ?.filter((data) => data?.type === \"General\")\n\n                                .map((type) => (\n                                  <Select.Option\n                                    key={type.name}\n                                    value={type.name}\n                                  >\n                                    {type.name}\n                                  </Select.Option>\n                                ))\n                            )}\n                          </Select>\n\n                          {formErrors[index]?.documentType && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrors[index].documentType}\n                            </p>\n                          )}\n                        </div>\n                        <div>\n                          <label className={`${inputLabelClassName}`}>\n                            Document No <span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            disabled={!document?.isEditable}\n                            type=\"text\"\n                            value={document.documentNo}\n                            onChange={(e) =>\n                              handleInputChange(\n                                index,\n                                \"documentNo\",\n                                e.target.value\n                              )\n                            }\n                            className={`${\n                              document?.isEditable\n                                ? inputClassName\n                                : inputDisabledClassName\n                            } ${\n                              formErrors[index]?.documentNo\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                            placeholder=\"Enter Document No\"\n                          />\n                          {formErrors[index]?.documentNo && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrors[index].documentNo}\n                            </p>\n                          )}\n                        </div>\n\n                        <div className=\"flex items-center gap-2\">\n                          <div>\n                            <label className={`${inputLabelClassName}`}>\n                              Upload Document{\" \"}\n                              <span className=\"text-red-600\">*</span>\n                            </label>\n                            <input\n                              disabled={!document?.isEditable}\n                              type=\"file\"\n                              accept=\".pdf,image/*\"\n                              id={`documentUpload${index}`}\n                              ref={(el) => (fileInputRefs.current[index] = el)}\n                              className=\"hidden\"\n                              onChange={(e) =>\n                                handleFileChange(index, e.target.files[0])\n                              }\n                            />\n                            <br />\n                            <label\n                              htmlFor={`documentUpload${index}`}\n                              className={`${\n                                document?.isEditable\n                                  ? \"bg-header\"\n                                  : \"bg-gray-400\"\n                              } text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer`}\n                            >\n                              Upload\n                            </label>\n                          </div>\n                          {document?.file?.length > 0\n                            ? document.file.map((file, fileIndex) => (\n                                <div key={fileIndex} className=\"relative\">\n                                  <CommonImageViewer\n                                    // key={index}\n                                    src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public${file}`}\n                                    alt={`Uploaded ${fileIndex + 1}`}\n                                  />\n                                  <button\n                                    disabled={!document.isEditable}\n                                    className={`absolute -top-1 -right-2 ${\n                                      document?.isEditable\n                                        ? \"bg-red-600\"\n                                        : \"bg-gray-400\"\n                                    } text-white rounded-full w-5 h-5 flex items-center justify-center text-xs`}\n                                    onClick={() =>\n                                      handleDeleteDoctImage(index, file)\n                                    }\n                                  >\n                                    ✕\n                                  </button>\n                                </div>\n                              ))\n                            : null}\n                          {formErrors[index]?.file && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrors[index].file}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  <div className=\"flex justify-between px-3 pb-2\">\n                    <button\n                      type=\"button\"\n                      onClick={handleAddMore}\n                      className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n                    >\n                      Add More\n                    </button>\n                  </div>\n                </div>\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button\n                    disabled={loadingUpdateFile}\n                    type=\"Submit\"\n                    className={`${formButtonClassName}`}\n                  >\n                    {loadingUpdateFile || companyDetailsLoading ? (\n                      <Loader />\n                    ) : (\n                      \"Submit Details\"\n                    )}\n                  </button>\n                </div>\n              </div>\n            )}\n            {step === 4 && (\n              <div>\n                <div className=\"rounded-md\">\n                  {banks.map((bank, index) => (\n                    <div\n                      className=\"border border-gray-300 rounded-md my-2\"\n                      key={index}\n                    >\n                      <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n                        <div className=\"px-3 py-2 text-white font-semibold\">\n                          {\" \"}\n                          Bank Document {index + 1}\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={() => handleBankDelete(bank, index)}\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <AiFillDelete size={20} className=\"m-2\" />\n                        </button>\n                      </div>\n                      <div className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\">\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Account Holder Name{\" \"}\n                            <span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            value={bank.bankholderName}\n                            onChange={(e) =>\n                              handleInputChangeBank(\n                                index,\n                                \"bankholderName\",\n                                e.target.value\n                              )\n                            }\n                            className={`${inputClassName} ${\n                              formErrorsBank[index]?.bankholderName\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                            placeholder=\"Enter Account Holder name\"\n                          />\n                          {formErrorsBank[index]?.bankholderName && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsBank[index].bankholderName}\n                            </p>\n                          )}\n                        </div>\n\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Bank Name <span className=\"text-red-600\">*</span>\n                          </label>\n                          <Select\n                            value={bank.bankName}\n                            onChange={(e) =>\n                              handleInputChangeBank(index, \"bankName\", e)\n                            }\n                            showSearch\n                            className={`${inputAntdSelectClassName} ${\n                              formErrorsBank[index]?.bankName\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                          >\n                            <Select.Option value=\"\">\n                              Select Bank Name\n                            </Select.Option>\n                            {bankListLoading ? (\n                              <Select.Option disabled>\n                                <ListLoader />\n                              </Select.Option>\n                            ) : (\n                              bankNameListData?.map((data) => (\n                                <Select.Option\n                                  key={data.name}\n                                  value={data.name}\n                                >\n                                  {data.name}\n                                </Select.Option>\n                              ))\n                            )}\n                          </Select>\n\n                          {formErrorsBank[index]?.bankName && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsBank[index].bankName}\n                            </p>\n                          )}\n                        </div>\n\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Branch Name <span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            value={bank.branchName}\n                            onChange={(e) =>\n                              handleInputChangeBank(\n                                index,\n                                \"branchName\",\n                                e.target.value\n                              )\n                            }\n                            className={`${inputClassName} ${\n                              formErrorsBank[index]?.branchName\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                            placeholder=\"Enter Branch name\"\n                          />\n                          {formErrorsBank[index]?.branchName && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsBank[index].branchName}\n                            </p>\n                          )}\n                        </div>\n\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Account Number\n                            <span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"number\"\n                            value={bank.accountNumber}\n                            onChange={(e) =>\n                              handleInputChangeBank(\n                                index,\n                                \"accountNumber\",\n                                e.target.value\n                              )\n                            }\n                            className={`${inputClassName} ${\n                              formErrorsBank[index]?.accountNumber\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                            placeholder=\"Enter Account Number\"\n                          />\n                          {formErrorsBank[index]?.accountNumber && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsBank[index].accountNumber}\n                            </p>\n                          )}\n                        </div>\n\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            IFSC Code<span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            value={bank.ifscCode}\n                            onChange={(e) =>\n                              handleInputChangeBank(\n                                index,\n                                \"ifscCode\",\n                                e.target.value\n                              )\n                            }\n                            className={`${inputClassName} ${\n                              formErrorsBank[index]?.ifscCode\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                            placeholder=\"Enter IFSC Code\"\n                          />\n                          {formErrorsBank[index]?.ifscCode && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsBank[index].ifscCode}\n                            </p>\n                          )}\n                        </div>\n\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Account Type <span className=\"text-red-600\">*</span>\n                          </label>\n\n                          <Select\n                            value={bank.accountType}\n                            onChange={(e) =>\n                              handleInputChangeBank(index, \"accountType\", e)\n                            }\n                            className={`${inputAntdSelectClassName} ${\n                              formErrorsBank[index]?.accountType\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                          >\n                            <Select.Option value=\"\">\n                              Select Account Type\n                            </Select.Option>\n                            <Select.Option className=\"\" value=\"saving\">\n                              Saving\n                            </Select.Option>\n                            <Select.Option className=\"\" value=\"current\">\n                              Current\n                            </Select.Option>\n                            <Select.Option className=\"\" value=\"Salary\">\n                              Salary\n                            </Select.Option>\n                            <Select.Option className=\"\" value=\"Joint\">\n                              Joint\n                            </Select.Option>\n                          </Select>\n                          {formErrorsBank[index]?.accountType && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsBank[index].accountType}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"flex items-center gap-2\">\n                          <div>\n                            <label className={`${inputLabelClassName}`}>\n                              Upload Document\n                            </label>\n                            <input\n                              type=\"file\"\n                              ref={(el) => (bankfileRefs.current[index] = el)}\n                              accept=\".pdf,image/*\"\n                              id={`bankUpload${index}`}\n                              className=\"hidden\"\n                              onChange={(e) =>\n                                handleBankFileChange(index, e.target.files[0])\n                              }\n                            />\n                            <br />\n                            <label\n                              htmlFor={`bankUpload${index}`}\n                              className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                            >\n                              Upload\n                            </label>\n                          </div>\n                          {bank?.file?.length > 0\n                            ? bank.file.map((file, fileIndex) => (\n                                <div key={fileIndex} className=\"relative\">\n                                  <CommonImageViewer\n                                    // key={index}\n                                    src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                                    alt={`Uploaded ${fileIndex + 1}`}\n                                  />\n                                  <button\n                                    className=\"absolute -top-1 -right-2 bg-red-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs\"\n                                    onClick={() =>\n                                      handleDeleteBankImage(index, file)\n                                    }\n                                  >\n                                    ✕\n                                  </button>\n                                </div>\n                              ))\n                            : null}\n                          {formErrorsBank[index]?.file && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsBank[index].file}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  <div className=\"flex justify-between px-3 pb-2\">\n                    <button\n                      type=\"button\"\n                      onClick={handleBankAddMore}\n                      className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n                    >\n                      Add More\n                    </button>\n                  </div>\n                </div>\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button\n                    disabled={loadingUpdateFile}\n                    type=\"Submit\"\n                    className={`${formButtonClassName}`}\n                  >\n                    {loadingUpdateFile || companyDetailsLoading ? (\n                      <Loader />\n                    ) : (\n                      \"Submit Details\"\n                    )}\n                  </button>\n                </div>\n              </div>\n            )}\n            {step === 5 && (\n              <div>\n                <div className=\"rounded-md\">\n                  {financialInfo?.map((element, index) => {\n                    const dropdownType = element.isPeriod;\n\n                    return (\n                      <div\n                        className=\"border border-gray-300 rounded-md my-2\"\n                        key={index}\n                      >\n                        <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n                          <div className=\"px-3 py-2 text-white font-semibold\">\n                            {\" \"}\n                            Financial Document {index + 1}\n                          </div>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleFDDelete(element, index)}\n                            className=\"text-red-600 hover:text-red-800\"\n                          >\n                            <AiFillDelete size={20} className=\"m-2\" />\n                          </button>\n                        </div>\n                        <div\n                          key={index}\n                          className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\"\n                        >\n                          <div>\n                            <label className={`${inputLabelClassName}`}>\n                              Document Type{\" \"}\n                              <span className=\"text-red-600\">*</span>\n                            </label>\n\n                            <Select\n                              value={element.name}\n                              showSearch\n                              onChange={(e) =>\n                                handleInputFDChange(index, \"name\", e)\n                              }\n                              className={`${inputAntdSelectClassName} ${\n                                formErrorsFinancial[index]?.name\n                                  ? \"border-[1px] \"\n                                  : \"\"\n                              }`}\n                            >\n                              <Select.Option value=\"\">\n                                Select Document\n                              </Select.Option>\n                              {employeeDocumentList\n                                ?.filter((data) => data?.type === \"Financial\")\n\n                                .map((type) => (\n                                  <Select.Option\n                                    key={type.name}\n                                    value={type.name}\n                                  >\n                                    {type.name}\n                                  </Select.Option>\n                                ))}\n                            </Select>\n                            {formErrorsFinancial[index]?.name && (\n                              <p className=\"text-red-600 text-sm\">\n                                {formErrorsFinancial[index].name}\n                              </p>\n                            )}\n                          </div>\n                          <div className=\"w-full\">\n                            <label className={`${inputLabelClassName}`}>\n                              Year <span className=\"text-red-600\">*</span>\n                            </label>\n                            <Select\n                              value={element.year}\n                              // defaultValue={getDefaultFinacialYear()}\n                              onChange={(e) =>\n                                handleInputFDChange(index, \"year\", e)\n                              }\n                              className={`${inputAntdSelectClassName} ${\n                                formErrorsFinancial[index]?.name\n                                  ? \"border-[1px] \"\n                                  : \"\"\n                              }`}\n                            >\n                              <Select.Option value=\"\">\n                                Select Financial Year\n                              </Select.Option>\n                              {financialYearPairs.map((yearPair) => (\n                                <Select.Option key={yearPair} value={yearPair}>\n                                  {yearPair}\n                                </Select.Option>\n                              ))}\n                            </Select>\n\n                            {formErrorsFinancial[index]?.year && (\n                              <p className=\"text-red-600 text-sm\">\n                                {formErrorsFinancial[index].year}\n                              </p>\n                            )}\n                          </div>\n\n                          <div>\n                            <label className={`${inputLabelClassName}`}>\n                              Type <span className=\"text-red-600\">*</span>\n                            </label>\n\n                            <Select\n                              defaultValue={\"\"}\n                              onChange={(e) =>\n                                handleInputFDChange(index, \"isPeriod\", e)\n                              }\n                              value={element?.isPeriod}\n                              className={`${inputAntdSelectClassName} `}\n                            >\n                              <Select.Option value=\"\">\n                                Select Type\n                              </Select.Option>\n                              <Select.Option value=\"Quaterly\">\n                                {\" \"}\n                                Quaterly\n                              </Select.Option>\n                              <Select.Option value=\"Monthly\">\n                                Monthly\n                              </Select.Option>\n                              <Select.Option value=\"Yearly\">\n                                Yearly\n                              </Select.Option>\n                            </Select>\n\n                            {formErrorsFinancial[index]?.isPeriod && (\n                              <p className=\"text-red-600 text-sm\">\n                                {formErrorsFinancial[index].isPeriod}\n                              </p>\n                            )}\n                          </div>\n\n                          {dropdownType === \"Quaterly\" && (\n                            <div>\n                              <label className={`${inputLabelClassName}`}>\n                                Quarter <span className=\"text-red-600\">*</span>\n                              </label>\n                              <Select\n                                defaultValue={\"\"}\n                                className={`${inputAntdSelectClassName} `}\n                                onChange={(e) =>\n                                  handleInputFDChange(index, \"quarterName\", e)\n                                }\n                                value={element?.quarterName}\n                              >\n                                <Select.Option value=\"\">\n                                  Select Quarter\n                                </Select.Option>\n                                {quarter.map((qtr) => (\n                                  <Select.Option key={qtr} value={qtr}>\n                                    {qtr}\n                                  </Select.Option>\n                                ))}\n                              </Select>\n                              {formErrorsFinancial[index]?.quarterName && (\n                                <p className=\"text-red-600 text-sm\">\n                                  {formErrorsFinancial[index].quarterName}\n                                </p>\n                              )}\n                            </div>\n                          )}\n                          {dropdownType === \"Monthly\" && (\n                            <div>\n                              <label className={`${inputLabelClassName}`}>\n                                Month <span className=\"text-red-600\">*</span>\n                              </label>\n\n                              <Select\n                                defaultValue={\"\"}\n                                className={`${inputAntdSelectClassName} `}\n                                onChange={(e) =>\n                                  handleInputFDChange(index, \"monthName\", e)\n                                }\n                                value={element?.monthName}\n                              >\n                                <Select.Option value=\"\">\n                                  Select Month\n                                </Select.Option>\n                                {months.map((month) => (\n                                  <Select.Option key={month} value={month}>\n                                    {month}\n                                  </Select.Option>\n                                ))}\n                              </Select>\n\n                              {formErrorsFinancial[index]?.monthName && (\n                                <p className=\"text-red-600 text-sm\">\n                                  {formErrorsFinancial[index].monthName}\n                                </p>\n                              )}\n                            </div>\n                          )}\n\n                          <div className=\"flex items-center gap-2\">\n                            <div>\n                              <label className={`${inputLabelClassName}`}>\n                                Upload Document{\" \"}\n                                <span className=\"text-red-600\">*</span>\n                              </label>\n                              <input\n                                type=\"file\"\n                                accept=\".pdf,image/*\"\n                                ref={(el) => (fdRefs.current[index] = el)}\n                                id={`documentUpload${index}`}\n                                className=\"hidden\"\n                                onChange={(e) =>\n                                  handleFileFDChange(index, e.target.files[0])\n                                }\n                              />\n                              <br />\n                              <label\n                                htmlFor={`documentUpload${index}`}\n                                className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                              >\n                                Upload\n                              </label>\n                            </div>\n                            {element?.file?.length > 0\n                              ? element.file.map((file, fileIndex) => (\n                                  <div key={fileIndex} className=\"relative\">\n                                    <CommonImageViewer\n                                      // key={index}\n                                      src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                                      alt={`Uploaded ${fileIndex + 1}`}\n                                    />\n                                    <button\n                                      className=\"absolute -top-1 -right-2 bg-red-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs\"\n                                      onClick={() =>\n                                        handleDeleteFDImage(index, file)\n                                      }\n                                    >\n                                      ✕\n                                    </button>\n                                  </div>\n                                ))\n                              : null}\n                            {formErrorsFinancial[index]?.file && (\n                              <p className=\"text-red-600 text-sm\">\n                                {formErrorsFinancial[index].file}\n                              </p>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n                  <div className=\"flex justify-between px-3 pb-2\">\n                    <button\n                      type=\"button\"\n                      onClick={handleFDAddMore}\n                      className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n                    >\n                      Add More\n                    </button>\n                  </div>\n                </div>\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button\n                    disabled={loadingUpdateFile}\n                    type=\"Submit\"\n                    className={`${formButtonClassName}`}\n                  >\n                    {loadingUpdateFile ? <Loader /> : \"Submit Details\"}\n                  </button>\n                </div>\n              </div>\n            )}\n            {step === 6 && (\n              <div>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3\">\n                  {/* Instagram Link */}\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      <i className=\"fab fa-instagram mr-2\"></i> Instagram\n                    </label>\n                    <div className=\"flex\">\n                      <input\n                        className=\"mt-1 block w-[70px] px-2 py-[12px] shadow-sm rounded-l-[5px] text-sm bg-gray-200 focus:outline-none\"\n                        disabled\n                        value={\"https://\"}\n                      />\n                      <input\n                        type=\"text\"\n                        {...register(\"SMInstagram\")}\n                        className={`mt-1 block w-full px-2 py-[12px] shadow-sm rounded-r-[5px] text-sm bg-white focus:outline-none ${\n                          errors.SMInstagram\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Instagram Link\"\n                      />\n                    </div>\n                    {errors.SMInstagram && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.SMInstagram.message}\n                      </p>\n                    )}\n                  </div>\n\n                  {/* Twitter Link */}\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      <i className=\"fab fa-twitter mr-2\"></i> Twitter\n                    </label>\n                    <div className=\"flex\">\n                      <input\n                        className=\"mt-1 block w-[70px] px-2 py-[12px] shadow-sm rounded-l-[5px] text-sm bg-gray-200 focus:outline-none\"\n                        disabled\n                        value={\"https://\"}\n                      />\n                      <input\n                        type=\"text\"\n                        {...register(\"SMTwitter\")}\n                        className={`mt-1 block w-full px-2 py-[12px] shadow-sm rounded-r-[5px] text-sm bg-white focus:outline-none ${\n                          errors.SMTwitter ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Twitter Link\"\n                      />\n                    </div>\n                    {errors.SMTwitter && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.SMTwitter.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-2 md:gap-8 md:my-1 px-3\">\n                  {/* LinkedIn Link */}\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      <i className=\"fab fa-linkedin mr-2\"></i> LinkedIn\n                    </label>\n                    <div className=\"flex\">\n                      <input\n                        className=\"mt-1 block w-[70px] px-2 py-[12px] shadow-sm rounded-l-[5px] text-sm bg-gray-200 focus:outline-none\"\n                        disabled\n                        value={\"https://\"}\n                      />\n                      <input\n                        type=\"text\"\n                        {...register(\"SMLinkedIn\")}\n                        className={`mt-1 block w-full px-2 py-[12px] shadow-sm rounded-r-[5px] text-sm bg-white focus:outline-none ${\n                          errors.SMLinkedIn\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter LinkedIn Link\"\n                      />\n                    </div>\n                    {errors.SMLinkedIn && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.SMLinkedIn.message}\n                      </p>\n                    )}\n                  </div>\n\n                  {/* Facebook Link */}\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      <i className=\"fab fa-facebook mr-2\"></i> Facebook\n                    </label>\n                    <div className=\"flex\">\n                      <input\n                        className=\"mt-1 block w-[70px] px-2 py-[12px] shadow-sm rounded-l-[5px] text-sm bg-gray-200 focus:outline-none\"\n                        disabled\n                        value={\"https://\"}\n                      />\n                      <input\n                        type=\"text\"\n                        {...register(\"SMFacebook\")}\n                        className={`mt-1 block w-full px-2 py-[12px] shadow-sm rounded-r-[5px] text-sm bg-white focus:outline-none ${\n                          errors.SMFacebook\n                            ? \"border-[1px] \"\n                            : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Facebook Link\"\n                      />\n                    </div>\n                    {errors.SMFacebook && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.SMFacebook.message}\n                      </p>\n                    )}\n                  </div>\n\n                  {/* Website Link */}\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>\n                      <i className=\"fas fa-globe mr-2\"></i> Website\n                    </label>\n                    <div className=\"flex\">\n                      <input\n                        className=\"mt-1 block w-[70px] px-2 py-[12px] shadow-sm rounded-l-[5px] text-sm bg-gray-200 focus:outline-none\"\n                        disabled\n                        value={\"https://\"}\n                      />\n                      <input\n                        type=\"text\"\n                        {...register(\"SMWebsite\")}\n                        className={`mt-1 block w-full px-2 py-[12px] shadow-sm rounded-r-[5px] text-sm bg-white focus:outline-none ${\n                          errors.SMWebsite ? \"border-[1px] \" : \"border-gray-300\"\n                        }`}\n                        placeholder=\"Enter Website Link\"\n                      />\n                    </div>\n                    {errors.SMWebsite && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.SMWebsite.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button type=\"submit\" className={`${formButtonClassName}`}>\n                    Submit\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {step === 7 && (\n              <div>\n                <div className=\"rounded-md\">\n                  {experiance.map((experiancedata, index) => (\n                    <div\n                      className=\"border border-gray-300 rounded-md my-2\"\n                      key={index}\n                    >\n                      <div className=\"flex justify-between items-center mb-4 bg-header rounded-t-md\">\n                        <div className=\"px-3 py-2 text-white font-semibold\">\n                          {\" \"}\n                          Experience Document {index + 1}\n                        </div>\n                        <button\n                          type=\"button\"\n                          onClick={() =>\n                            handleExperianceDelete(experiancedata, index)\n                          }\n                          className=\"text-red-600 hover:text-red-800\"\n                        >\n                          <AiFillDelete size={20} className=\"m-2\" />\n                        </button>\n                      </div>\n                      <div className=\"px-3 grid sm:grid-cols-2 grid-cols-1 gap-4 mb-3\">\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Organization Name{\" \"}\n                            <span className=\"text-red-600\">*</span>\n                          </label>\n                          <input\n                            type=\"text\"\n                            value={experiancedata.organizationName}\n                            onChange={(e) =>\n                              handleInputChangeExperiance(\n                                index,\n                                \"organizationName\",\n                                e.target.value\n                              )\n                            }\n                            className={`${inputClassName} ${\n                              formErrorsExperiance[index]?.organizationName\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                            placeholder=\"Enter Organization Name\"\n                          />\n                          {formErrorsExperiance[index]?.organizationName && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsExperiance[index].organizationName}\n                            </p>\n                          )}\n                        </div>\n\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Industry Type{\" \"}\n                            <span className=\"text-red-600\">*</span>\n                          </label>\n                          <Select\n                            value={experiancedata.industryType}\n                            onChange={(e) =>\n                              handleInputChangeExperiance(\n                                index,\n                                \"industryType\",\n                                e\n                              )\n                            }\n                            showSearch\n                            className={`${inputAntdSelectClassName} ${\n                              formErrorsExperiance[index]?.industryType\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                          >\n                            <Select.Option value=\"\">\n                              Select Industry Type\n                            </Select.Option>\n                            {sortByPropertyAlphabetically(\n                              industryListData,\n                              \"name\"\n                            )?.map((type) => (\n                              <Select.Option key={type?._id} value={type?.name}>\n                                {type?.name}\n                              </Select.Option>\n                            ))}\n                          </Select>\n                          {formErrorsExperiance[index]?.industryType && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsExperiance[index].industryType}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Assignment Name{\" \"}\n                            <span className=\"text-red-600\">*</span>\n                          </label>\n                          <Select\n                            mode=\"tags\"\n                            placeholder=\"Please Enter\"\n                            value={experiancedata.taskType}\n                            onChange={(e) =>\n                              handleInputChangeExperiance(index, \"taskType\", e)\n                            }\n                            className={`${inputAntdSelectClassName} ${\n                              formErrorsExperiance[index]?.taskType\n                                ? \"border-[1px] \"\n                                : \"\"\n                            }`}\n                            \n                          />\n                          {formErrorsExperiance[index]?.taskType && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsExperiance[index].taskType}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            Start Year <span className=\"text-red-600\">*</span>\n                          </label>\n                          <DatePicker\n                            className={`${inputCalanderClassName} py-2.5 ${\n                              errors.recurrence?.date\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                            } `}\n                            popupClassName={\"!z-[1580]\"}\n                            value={experiancedata.startYear}\n                            onChange={(e) =>\n                              handleInputChangeExperiance(index, \"startYear\", e)\n                            }\n                            picker=\"year\"\n                          />\n\n                          {formErrorsExperiance[index]?.startYear && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsExperiance[index].startYear}\n                            </p>\n                          )}\n                        </div>\n                        <div className=\"w-full\">\n                          <label className={`${inputLabelClassName}`}>\n                            End Year <span className=\"text-red-600\">*</span>\n                          </label>\n                          <DatePicker\n                            className={`${inputCalanderClassName} py-2.5 ${\n                              errors.recurrence?.date\n                                ? \"border-[1px] \"\n                                : \"border-gray-300\"\n                            } `}\n                            popupClassName={\"!z-[1580]\"}\n                            value={experiancedata.endYear}\n                            onChange={(e) =>\n                              handleInputChangeExperiance(index, \"endYear\", e)\n                            }\n                            picker=\"year\"\n                          />\n                          {formErrorsExperiance[index]?.endYear && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsExperiance[index].endYear}\n                            </p>\n                          )}\n                        </div>\n\n                        <div className=\"flex items-center gap-2\">\n                          <div>\n                            <label className={`${inputLabelClassName}`}>\n                              Upload Document{\" \"}\n                              <span className=\"text-red-600\">*</span>\n                            </label>\n                            <input\n                              type=\"file\"\n                              id={`bankUpload${index}`}\n                              accept=\".pdf,image/*\"\n                              ref={(el) => (experienceRef.current[index] = el)}\n                              className=\"hidden\"\n                              onChange={(e) =>\n                                handleExperianceFileChange(\n                                  index,\n                                  e.target.files[0]\n                                )\n                              }\n                            />\n                            <br />\n                            <label\n                              htmlFor={`bankUpload${index}`}\n                              className=\"bg-header text-white mt-2 py-1.5 px-3 text-nowrap text-sm rounded cursor-pointer\"\n                            >\n                              Upload\n                            </label>\n                          </div>\n                          {experiancedata?.file?.length > 0\n                            ? experiancedata?.file?.map((file, fileIndex) => (\n                                <div key={fileIndex} className=\"relative\">\n                                  <CommonImageViewer\n                                    src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                                    alt={`Uploaded ${fileIndex + 1}`}\n                                  />\n                                  <button\n                                    className=\"absolute -top-1 -right-2 bg-red-600 text-white rounded-full w-5 h-5 flex items-center justify-center text-xs\"\n                                    onClick={() =>\n                                      handleDeleteExperianceImage(index, file)\n                                    }\n                                  >\n                                    ✕\n                                  </button>\n                                </div>\n                              ))\n                            : null}\n                          {formErrorsExperiance[index]?.file && (\n                            <p className=\"text-red-600 text-sm\">\n                              {formErrorsExperiance[index].file}\n                            </p>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                  <div className=\"flex justify-between px-3 pb-2\">\n                    <button\n                      type=\"button\"\n                      onClick={handleExperianceAddMore}\n                      className=\"bg-header text-white py-1.5 px-3 text-nowrap text-sm rounded \"\n                    >\n                      Add More\n                    </button>\n                  </div>\n                </div>\n                <div className=\"flex justify-between px-3 pb-2\">\n                  <button\n                    disabled={loadingUpdateFile}\n                    type=\"Submit\"\n                    className={`${formButtonClassName}`}\n                  >\n                    {loadingUpdateFile ? \"Submitting ...\" : \"Submit Details\"}\n                  </button>\n                </div>\n              </div>\n            )}\n\n            {step === 9 && <PlanHistory companyId={companyId} />}\n          </form>\n        </div>\n      ) : (\n        <Loader2 />\n      )}\n    </GlobalLayout>\n  );\n};\n\nexport default MyCompanyDetails;\n","import { useEffect, useRef } from 'react';\nexport default function useRemovePasswordTimeout(inputRef, triggerOnMount) {\n  const removePasswordTimeoutRef = useRef([]);\n  const removePasswordTimeout = () => {\n    removePasswordTimeoutRef.current.push(setTimeout(() => {\n      var _a, _b, _c, _d;\n      if (((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.input) && ((_b = inputRef.current) === null || _b === void 0 ? void 0 : _b.input.getAttribute('type')) === 'password' && ((_c = inputRef.current) === null || _c === void 0 ? void 0 : _c.input.hasAttribute('value'))) {\n        (_d = inputRef.current) === null || _d === void 0 ? void 0 : _d.input.removeAttribute('value');\n      }\n    }));\n  };\n  useEffect(() => {\n    if (triggerOnMount) {\n      removePasswordTimeout();\n    }\n    return () => removePasswordTimeoutRef.current.forEach(timer => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    });\n  }, []);\n  return removePasswordTimeout;\n}"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","forwardRef","props","ref","prefixCls","customizePrefixCls","bordered","status","customStatus","size","customSize","disabled","customDisabled","onBlur","onFocus","suffix","allowClear","addonAfter","addonBefore","className","style","styles","rootClassName","onChange","classNames","variant","customVariant","rest","getPrefixCls","direction","contextAllowClear","autoComplete","contextAutoComplete","contextClassName","contextStyle","contextClassNames","contextStyles","useComponentConfig","inputRef","useRef","rootCls","useCSSVarCls","wrapSharedCSSVar","hashId","cssVarCls","useSharedStyle","wrapCSSVar","useStyle","compactSize","compactItemClassnames","useCompactItemContext","mergedSize","useSize","ctx","_a","React","DisabledContext","mergedDisabled","contextStatus","hasFeedback","feedbackIcon","useContext","FormItemInputContext","mergedStatus","getMergedStatus","inputHasPrefixSuffix","prefix","showCount","hasPrefixSuffix","removePasswordTimeout","useRemovePasswordTimeout","suffixNode","mergedAllowClear","getAllowClear","enableVariantCls","useVariant","RcInput","assign","composeRef","cls","ContextIsolator","form","space","input","concat","getStatusClassNames","affixWrapper","wrapper","groupWrapper","_ref","companyDetailsData","register","handleSubmit","setValue","formState","errors","useForm","showKeys","setShowKeys","useState","passwordModalOpen","setPasswordModalOpen","currentPassword","setCurrentPassword","error","setError","dispatch","useDispatch","DATA_ENCRYPT_DCRYPT_KEY","dataEncrypt","text","CryptoJS","encrypt","toString","dataDecrypt","decrypt","Utf8","useEffect","data","keys","razorpayKey","privateKey","secretKey","_jsxs","_Fragment","children","_jsx","type","onClick","FaEyeSlash","FaEye","showNotification","message","payload","primaryRazoypayKey","secretKeyrazorpay","companyRazorPayfunc","then","res","_companyDetailsData$d","getCompanyDetails","_id","FaCheckDouble","_objectSpread","inputClassName","placeholder","Modal","open","onCancel","footer","centered","destroyOnClose","maskClosable","maskStyle","backgroundColor","htmlFor","Input","Password","id","value","target","autoFocus","Button","async","preventDefault","result","verifyAuthFunc","password","block","borderColor","MyCompanyDetails","_JSON$parse","fileInputRefs","bankfileRefs","fdRefs","experienceRef","companyId","JSON","parse","localStorage","getItem","domainName","step","setStep","pageLoading","setPageLoading","isSameAsPermanent","setIsSameAsPermanent","banks","setBanks","experiance","setExperiance","documents","setDocuments","documentType","documentNo","file","isEditable","financialInfo","setFinancialInfo","name","year","isPeriod","quarterName","monthName","quarter","months","formErrors","setFormErrors","formErrorsBank","setFormErrorsBank","formErrorsFinancial","setFormErrorsFinancial","formErrorsExperiance","setFormErrorsExperiance","profileImage","setProfileImage","profileImagePayload","setProfileImagePayload","isHovering","setIsHovering","uploadedFilePath","setUploadedFilePath","localCountryList","setLocalCountryList","bankNameListData","loading","bankListLoading","useSelector","state","bankname","planListData","plan","countryListData","countryLoading","country","stateListData","states","cityListData","city","industryListData","industry","employeeDocumentList","employeeListLoading","employeeDocument","orgTypeList","orgType","fileName","setFileName","fileUrl","setFileUrl","companyDetailsLoading","company","loadingUpdateFile","fileUpload","getValues","unregister","watch","control","reset","clearErrors","fields","append","remove","useFieldArray","PrintAddress","useWatch","defaultValue","PrintCity","PrintState","PrintCountry","PrintPincode","PrintMail","PrintMobile","PrintMobileCode","PrintCompanyName","PrintTagLine","PrintWebsite","PrintFacebook","PrintTwitter","PrintInstagram","printLinkedin","_companyDetailsData$d2","_companyDetailsData$d3","test","addresses","primary","pinCode","getLocationDataByPincode","catch","console","fetchData","banknameSearch","isPagination","sort","reqData","countrySearch","_companyDetailsData$d4","_companyDetailsData$d5","_companyDetailsData$d6","_companyDetailsData$d7","_companyDetailsData$d8","_companyDetailsData$d9","_companyDetailsData$d0","_companyDetailsData$d1","_companyDetailsData$d10","_companyDetailsData$d11","_companyDetailsData$d12","_companyDetailsData$d13","_companyDetailsData$d14","_companyDetailsData$d15","_companyDetailsData$d16","_companyDetailsData$d17","_companyDetailsData$d18","_companyDetailsData$d19","_companyDetailsData$d20","_companyDetailsData$d21","_companyDetailsData$d22","_companyDetailsData$d23","_companyDetailsData$d24","_companyDetailsData$d25","_companyDetailsData$d26","_companyDetailsData$d27","_companyDetailsData$d28","_companyDetailsData$d29","_companyDetailsData$d30","_companyDetailsData$d31","_companyDetailsData$d32","_companyDetailsData$d33","_companyDetailsData$d34","_companyDetailsData$d35","_companyDetailsData$d36","_companyDetailsData$d37","_companyDetailsData$d38","_companyDetailsData$d39","_companyDetailsData$d40","_companyDetailsData$d41","_companyDetailsData$d42","_companyDetailsData$d43","_companyDetailsData$d44","_companyDetailsData$d45","_companyDetailsData$d46","_companyDetailsData$d47","_companyDetailsData$d48","_companyDetailsData$d49","_companyDetailsData$d50","_companyDetailsData$d51","_companyDetailsData$d52","_companyDetailsData$d53","_companyDetailsData$d54","_companyDetailsData$d55","_companyDetailsData$d56","_companyDetailsData$d57","_companyDetailsData$d58","_companyDetailsData$d59","_companyDetailsData$d60","_companyDetailsData$d61","_companyDetailsData$d62","_companyDetailsData$d63","_companyDetailsData$d64","_companyDetailsData$d65","_companyDetailsData$d66","_companyDetailsData$d67","_companyDetailsData$d68","_companyDetailsData$d69","_companyDetailsData$d70","_companyDetailsData$d71","_companyDetailsData$d72","_companyDetailsData$d73","_companyDetailsData$d74","_companyDetailsData$d75","_companyDetailsData$d76","documentData","map","document","number","filePath","bankData","bank","accountType","bankName","branchName","bankholderName","accountNumber","ifscCode","ExperianceData","companyExperiencesData","experianceData","_experianceData$taskN","organizationName","industryType","taskType","taskName","startYear","dayjs","endYear","attachment","element","yearRange","monthQuaters","getDefaultFinacialYear","_companyDetailsData$d77","_companyDetailsData$d78","_companyDetailsData$d79","_companyDetailsData$d80","_companyDetailsData$d81","_companyDetailsData$d82","_companyDetailsData$d83","_companyDetailsData$d84","_companyDetailsData$d85","_companyDetailsData$d86","_companyDetailsData$d87","_companyDetailsData$d88","_companyDetailsData$d89","_companyDetailsData$d90","_companyDetailsData$d91","_companyDetailsData$d92","_companyDetailsData$d93","_companyDetailsData$d94","_companyDetailsData$d95","_companyDetailsData$d96","process","ownerData","comapnyOwnerData","forEach","index","_ownerData$mobile","_ownerData$mobile2","_ownerData$directorPr","_ownerData$directorPr2","_ownerData$addresses","_ownerData$addresses$","_ownerData$addresses2","_ownerData$addresses3","_ownerData$addresses4","_ownerData$addresses5","_ownerData$addresses6","_ownerData$addresses7","_ownerData$addresses8","_ownerData$addresses9","formattedownerData","fullName","email","mobile","code","landline","directorProfile","street","companyProfile","tagline","companyType","penNumber","GSTNumber","secondary","aadharNumber","gstNumber","frn","tanNumber","planData","startDate","endDate","planType","socialLinks","find","link","replace","indusSearch","navTabClick","clickedStep","_getUserIds","empDoctSearch","getUserIds","userCompanyId","handleInputChangeBank","field","updatedBanks","newFormErrors","_newFormErrors$index","_newFormErrors$index2","validateBankForm","every","handleInputChangeExperiance","updatedExperiance","validateExperianceForm","handleInputChange","_newFormErrors$index5","updatedDocuments","validateForm","handleInputFDChange","_newFormErrors$index7","updatedFinancialInfo","validateFDForm","financialYearPairs","generateFinancialYearPairs","GlobalLayout","Loader2","backgroundImage","backgroundSize","backgroundPosition","FaUserAlt","FaCamera","accept","event","files","fileUploadFunc","isVideo","isMultiple","_res$payload","ProfileImageUpdate","imagePath","_res$payload2","reader","FileReader","onloadend","readAsDataURL","inputLabelClassName","TbWorld","url","startsWith","window","AiFillInstagram","IoLogoFacebook","FaSquareXTwitter","FaLinkedin","onSubmit","_data$PDCompanyName","_data$PDEmail","_companyDetailsData$d97","_companyDetailsData$d98","_companyDetailsData$d99","_companyDetailsData$d100","_companyDetailsData$d101","_companyDetailsData$d102","_companyDetailsData$d103","_companyDetailsData$d104","_companyDetailsData$d105","_companyDetailsData$d106","_companyDetailsData$d107","_companyDetailsData$d108","_data$PDMobileNo","_data$PDMobileCode","_data$PDTagline","_data$PDOrganizationT","_data$PDIndustryType","_data$PDEmail2","_data$PDMobileNo2","_data$PDMobileCode2","_data$PDAddress","_data$PDCity","_data$PDState","_data$PDCountry","_data$PDPinCode","_data$PDSecondaryAddr","_data$PDSecondaryCity","_data$PDSecondaryStat","_data$PDSecondaryCoun","_data$PDSecondaryPinC","finalPayload","firstName","lastName","PDCompanyName","PDEmail","userType","planId","PDMobileNo","PDMobileCode","PDTagline","PDOrganizationType","PDIndustryType","PDPanNumber","PDGstNumber","secondaryEmail","secondaryMobile","PDAddress","PDCity","PDState","PDCountry","PDPinCode","PDSecondaryAddress","PDSecondaryCity","PDSecondaryState","PDSecondaryCountry","PDSecondaryPinCode","updateCompany","_data$ownerData","reqPayload","ownerArr","owner","_owner$mobile","_owner$mobile2","_owner$addresses","_owner$addresses2","_owner$addresses3","_owner$addresses4","_owner$addresses5","updateCompanyOwner","doc","userId","updateDocument","_companyDetailsData$d109","_companyDetailsData$d110","_data$SMInstagram","_data$SMTwitter","_data$SMFacebook","_data$SMWebsite","_data$SMLinkedIn","SMInstagram","SMTwitter","SMFacebook","SMWebsite","SMLinkedIn","experiancePayload","format","experienceArr","updateExperianceFunc","required","inputDisabledClassName","Controller","rules","render","_countryListData$docs","AutoComplete","options","docs","notFoundContent","ListLoader","inputerrorClassNameAutoComplete","_ref2","_stateListData$docs3","stateSearch","countryName","_ref3","_cityListData$docs","citySearch","stateName","_ref4","maxLength","onInput","slice","pattern","_ref5","CustomMobileCodePicker","minLength","formButtonClassName","Loader","Razorpaykeys","item","_errors$ownerData","_errors$ownerData$ind","_errors$ownerData2","_errors$ownerData2$in","_errors$ownerData3","_errors$ownerData3$in","_errors$ownerData4","_errors$ownerData4$in","_errors$ownerData5","_errors$ownerData5$in","_errors$ownerData5$in2","_errors$ownerData6","_errors$ownerData6$in","_errors$ownerData6$in2","_errors$ownerData7","_errors$ownerData7$in","_errors$ownerData7$in2","_errors$ownerData8","_errors$ownerData8$in","_errors$ownerData8$in2","_errors$ownerData9","_errors$ownerData9$in","_errors$ownerData9$in2","_errors$ownerData0","_errors$ownerData0$in","_errors$ownerData0$in2","_errors$ownerData10","_errors$ownerData10$i","_errors$ownerData10$i2","_errors$ownerData12","_errors$ownerData12$i","_errors$ownerData12$i2","_errors$ownerData14","_errors$ownerData14$i","_errors$ownerData14$i2","_errors$ownerData16","_errors$ownerData16$i","_errors$ownerData16$i2","deleteData","deleteCompanyOwner","AiFillDelete","_ref6","_ref7","_countryListData$docs2","_errors$ownerData1","_errors$ownerData1$in","_errors$ownerData1$in2","_ref8","_stateListData$docs4","_errors$ownerData11","_errors$ownerData11$i","_errors$ownerData11$i2","_ref9","_cityListData$docs2","_errors$ownerData13","_errors$ownerData13$i","_errors$ownerData13$i2","_ref0","_errors$ownerData15","_errors$ownerData15$i","_errors$ownerData15$i2","_formErrors$index","_formErrors$index2","_formErrors$index3","_document$file","_formErrors$index4","handleDelete","deleteDocument","prevDocuments","filter","_","index2","handleEditButton","TbEditOff","LiaEditSolid","Select","inputAntdSelectClassName","PDPlan","showSearch","Option","el","current","handleFileChange","selectedFile","fileReader","filePreviewUrl","onload","isPdf","Swal","title","html","showCancelButton","confirmButtonText","cancelButtonText","isConfirmed","_data$payload3","_newFormErrors$index6","fileIndex","CommonImageViewer","src","alt","handleDeleteDoctImage","handleAddMore","Date","now","_formErrorsBank$index","_formErrorsBank$index2","_formErrorsBank$index3","_formErrorsBank$index4","_formErrorsBank$index5","_formErrorsBank$index6","_formErrorsBank$index7","_formErrorsBank$index8","_formErrorsBank$index9","_formErrorsBank$index0","_formErrorsBank$index1","_formErrorsBank$index10","_bank$file","_formErrorsBank$index11","handleBankDelete","prevBanks","handleBankFileChange","_data$payload","_newFormErrors$index3","handleDeleteBankImage","handleBankAddMore","_formErrorsFinancial$","_formErrorsFinancial$2","_formErrorsFinancial$3","_formErrorsFinancial$4","_formErrorsFinancial$5","_formErrorsFinancial$6","_formErrorsFinancial$7","_element$file","_formErrorsFinancial$8","dropdownType","handleFDDelete","yearPair","qtr","month","handleFileFDChange","_data$payload4","_newFormErrors$index8","handleDeleteFDImage","handleFDAddMore","experiancedata","_formErrorsExperiance","_formErrorsExperiance2","_formErrorsExperiance3","_sortByPropertyAlphab","_formErrorsExperiance4","_formErrorsExperiance5","_formErrorsExperiance6","_errors$recurrence","_formErrorsExperiance7","_errors$recurrence2","_formErrorsExperiance8","_experiancedata$file","_experiancedata$file2","_formErrorsExperiance9","handleExperianceDelete","deleteExperianceFunc","prevExperiance","sortByPropertyAlphabetically","mode","DatePicker","inputCalanderClassName","recurrence","date","popupClassName","picker","handleExperianceFileChange","_data$payload2","_newFormErrors$index4","handleDeleteExperianceImage","handleExperianceAddMore","PlanHistory","triggerOnMount","removePasswordTimeoutRef","push","setTimeout","_b","_c","_d","getAttribute","hasAttribute","removeAttribute","timer","clearTimeout"],"sourceRoot":""}