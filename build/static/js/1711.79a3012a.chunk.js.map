{"version":3,"file":"static/js/1711.79a3012a.chunk.js","mappings":"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","sources":["../node_modules/dayjs/plugin/utc.js","pages/hr/employeeSalary/employeeSalaryModule/PayrollDatafullList.js","pages/hr/employeeSalary/employeePayrollModule/CreatePayrollModal.js","pages/hr/employeeSalary/employeePayrollModule/EmployeePayrollList.js","global_layouts/Loader/Loader.js"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs_plugin_utc=i()}(this,(function(){\"use strict\";var t=\"minute\",i=/[+-]\\d\\d(?::?\\d\\d)?/g,e=/([+-]|\\d\\d)/g;return function(s,f,n){var u=f.prototype;n.utc=function(t){var i={date:t,utc:!0,args:arguments};return new f(i)},u.utc=function(i){var e=n(this.toDate(),{locale:this.$L,utc:!0});return i?e.add(this.utcOffset(),t):e},u.local=function(){return n(this.toDate(),{locale:this.$L,utc:!1})};var o=u.parse;u.parse=function(t){t.utc&&(this.$u=!0),this.$utils().u(t.$offset)||(this.$offset=t.$offset),o.call(this,t)};var r=u.init;u.init=function(){if(this.$u){var t=this.$d;this.$y=t.getUTCFullYear(),this.$M=t.getUTCMonth(),this.$D=t.getUTCDate(),this.$W=t.getUTCDay(),this.$H=t.getUTCHours(),this.$m=t.getUTCMinutes(),this.$s=t.getUTCSeconds(),this.$ms=t.getUTCMilliseconds()}else r.call(this)};var a=u.utcOffset;u.utcOffset=function(s,f){var n=this.$utils().u;if(n(s))return this.$u?0:n(this.$offset)?a.call(this):this.$offset;if(\"string\"==typeof s&&(s=function(t){void 0===t&&(t=\"\");var s=t.match(i);if(!s)return null;var f=(\"\"+s[0]).match(e)||[\"-\",0,0],n=f[0],u=60*+f[1]+ +f[2];return 0===u?0:\"+\"===n?u:-u}(s),null===s))return this;var u=Math.abs(s)<=16?60*s:s,o=this;if(f)return o.$offset=u,o.$u=0===s,o;if(0!==s){var r=this.$u?this.toDate().getTimezoneOffset():-1*this.utcOffset();(o=this.local().add(u+r,t)).$offset=u,o.$x.$localOffset=r}else o=this.utc();return o};var h=u.format;u.format=function(t){var i=t||(this.$u?\"YYYY-MM-DDTHH:mm:ss[Z]\":\"\");return h.call(this,i)},u.valueOf=function(){var t=this.$utils().u(this.$offset)?0:this.$offset+(this.$x.$localOffset||this.$d.getTimezoneOffset());return this.$d.valueOf()-6e4*t},u.isUTC=function(){return!!this.$u},u.toISOString=function(){return this.toDate().toISOString()},u.toString=function(){return this.toDate().toUTCString()};var l=u.toDate;u.toDate=function(t){return\"s\"===t&&this.$offset?n(this.format(\"YYYY-MM-DD HH:mm:ss:SSS\")).toDate():l.call(this)};var c=u.diff;u.diff=function(t,i,e){if(t&&this.$u===t.$u)return c.call(this,t,i,e);var s=this.local(),f=n(t).local();return c.call(s,f,i,e)}}}));","import React, { useEffect } from 'react';\nimport { Modal, Table, Select, Button, Tooltip } from 'antd';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { payrollDetailsFullListFunc } from '../employeePayrollModule/employeePayRollFeatures/_payroll_reducers';\nimport dayjs from 'dayjs';\n\nconst PayrollDatafullList = ({ isOpen, onClose, element }) => {\n  const dispatch = useDispatch()\n  const { loading, payrolsalaryReportData } = useSelector(\n    (state) => state.payrollReducer\n  );\n  const calculateTotals = () => {\n    const data = payrolsalaryReportData?.jsonData?.employeDayWiseReport || [];\n    const totals = {\n      presentDays: 0,\n      holidayDays: 0,\n      workingDays: 0,\n      sandwichDays: 0,\n      perDayTargetMin: 0,\n      totalEmployeWorkingMin: 0,\n      perDayEmployminMinutes: 0,\n      perDayEmployPendingMin: 0,\n      perDayEmployOvertimeMin: 0,\n      employePerDaySalary: 0,\n      perDaySalary: 0,\n      employePerExtraDaySalary: 0,\n      totalDiffrence :0,\n      totalSalary: 0\n    };\n\n    data.forEach(item => {\n      totals.perDayTargetMin += item.perDayTargetMin || 0;\n      totals.totalEmployeWorkingMin += item.totalEmployeWorkingMin || 0;\n      totals.perDayEmployminMinutes += item.perDayEmployminMinutes || 0;\n      totals.perDayEmployPendingMin += item.perDayEmployPendingMin || 0;\n      totals.perDayEmployOvertimeMin += item.perDayEmployOvertimeMin || 0;\n\n      if (item.isPresent) totals.presentDays++;\n      if (item.isHoliday) totals.holidayDays++;\n      if (item.isWorkingDay) totals.workingDays++;\n      if (item.assignedShiftDetail?.isApplySandwich) totals.sandwichDays++;\n\n      if (item.salary) {\n        totals.employePerDaySalary += item.salary.employePerDaySalary || 0;\n        totals.perDaySalary += item.salary.perDaySalary || 0;\n        totals.employePerExtraDaySalary += item.salary.employePerExtraDaySalary || 0;\n        totals.totalSalary += (item.salary.employePerDaySalary || 0) + (item.salary.employePerExtraDaySalary || 0);\n        totals.totalDiffrence = totals.totalSalary - totals.perDaySalary;\n      }\n    });\n\n    return totals;\n  };\n  const totals = calculateTotals();\n  const footer = () => {\n    return (\n      <Table.Summary fixed>\n        <Table.Summary.Row style={{ fontWeight: 'bold', background: '#f0f0f0' }}>\n          <Table.Summary.Cell index={0} colSpan={3}>Total</Table.Summary.Cell>\n          <Table.Summary.Cell index={4}>{totals.perDayTargetMin ?\n            Math.floor(totals.perDayTargetMin / 60).toString().padStart(2, '0') + ':' +\n            (totals.perDayTargetMin % 60).toString().padStart(2, '0')\n            : '-'} hrs</Table.Summary.Cell>\n          <Table.Summary.Cell index={5}>{totals.totalEmployeWorkingMin ?\n            Math.floor(totals.totalEmployeWorkingMin / 60).toString().padStart(2, '0') + ':' +\n            (totals.totalEmployeWorkingMin % 60).toString().padStart(2, '0')\n            : '-'} hrs</Table.Summary.Cell>\n          <Table.Summary.Cell index={6}>{totals.perDayEmployPendingMin ?\n            Math.floor(totals.perDayEmployPendingMin / 60).toString().padStart(2, '0') + ':' +\n            (totals.perDayEmployPendingMin % 60).toString().padStart(2, '0')\n            : '-'} hrs</Table.Summary.Cell>\n          <Table.Summary.Cell index={9}>{totals.perDayEmployOvertimeMin ?\n            Math.floor(totals.perDayEmployOvertimeMin / 60).toString().padStart(2, '0') + ':' +\n            (totals.perDayEmployOvertimeMin % 60).toString().padStart(2, '0')\n            : '-'} hrs</Table.Summary.Cell>\n          <Table.Summary.Cell index={10}>{(totals?.perDaySalary)?.toFixed(2)}</Table.Summary.Cell>\n          <Table.Summary.Cell index={10}>-</Table.Summary.Cell>\n          <Table.Summary.Cell index={12}>{totals.totalSalary?.toFixed(2)}</Table.Summary.Cell>\n        </Table.Summary.Row>\n      </Table.Summary>\n    );\n  };\n  useEffect(() => {\n    dispatch(payrollDetailsFullListFunc({\n      _id: element\n    }))\n  }, [element])\n\n\n  const columns = [\n    {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Date\">\n          <span style={{ fontSize: '12px' }}>Date</span>\n        </Tooltip>\n      ),\n      dataIndex: 'date',\n      key: 'date',\n    },\n    {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Day of Week\">\n          <span style={{ fontSize: '12px' }}>Day</span>\n        </Tooltip>\n      ),\n      dataIndex: 'dayOfWeek',\n      key: 'dayOfWeek',\n    },\n\n        {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Day of Week\">\n          <span style={{ fontSize: '12px' }}>Is WFH</span>\n        </Tooltip>\n      ),\n      dataIndex: 'iswfh',\n      key: 'iswfh',\n       render: (text, data) => (\n        <div>\n          {data.attendanceData ? (\n          \n              data.attendanceData?.wfhReqData ? \"Yes\" : \"No\"\n           \n          ) : (\n            '-'\n          )}\n        </div>)\n    },\n\n    {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Per Day Target (Hours)\">\n          <span style={{ fontSize: '12px' }}>Office Timing</span>\n        </Tooltip>\n      ),\n      dataIndex: 'perDayTargetMinwe',\n      key: 'perDayTargetMinwe',\n      render: (text, data) => (\n        <div>\n          {data.assignedShiftDetail ? (\n            <>\n              {data.assignedShiftDetail?.openingTime} -\n              {data.assignedShiftDetail?.closingTime}\n            </>\n          ) : (\n            '-'\n          )}\n        </div>)\n    },\n    {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Per Day Target (Hours)\">\n          <span style={{ fontSize: '12px' }}>Target (Hours)</span>\n        </Tooltip>\n      ),\n      dataIndex: 'perDayTargetMin',\n      key: 'perDayTargetMin',\n      render: (text) => (text ?\n        Math.floor(text / 60).toString().padStart(2, '0') + ':' +\n        (text % 60).toString().padStart(2, '0')\n        : '-'),\n    },\n    {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Total Employee Working (Hours)\">\n          <span style={{ fontSize: '12px' }}>Worked Hours</span>\n        </Tooltip>\n      ),\n      dataIndex: 'totalEmployeWorkingMin',\n      key: 'totalEmployeWorkingMin',\n      render: (text) => (text ?\n        Math.floor(text / 60).toString().padStart(2, '0') + ':' +\n        (text % 60).toString().padStart(2, '0')\n        : '-'),\n    },\n\n    {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Per Day Employee Pending (Hours)\">\n          <span style={{ fontSize: '12px' }}>Pending (Hours)</span>\n        </Tooltip>\n      ),\n      dataIndex: 'perDayEmployPendingMin',\n      key: 'perDayEmployPendingMin',\n      render: (text) => (text ?\n        Math.floor(text / 60).toString().padStart(2, '0') + ':' +\n        (text % 60).toString().padStart(2, '0')\n        : '-'),\n    },\n    {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Per Day Employee Overtime (Hours)\">\n          <span style={{ fontSize: '12px' }}>Overtime (Hours)</span>\n        </Tooltip>\n      ),\n      dataIndex: 'perDayEmployOvertimeMin',\n      key: 'perDayEmployOvertimeMin',\n      render: (text) => (text ?\n        Math.floor(text / 60).toString().padStart(2, '0') + ':' +\n        (text % 60).toString().padStart(2, '0')\n        : '-'),\n    },\n    {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Employee Per Day Salary\">\n          <span style={{ fontSize: '12px' }}>Per Day Salary</span>\n        </Tooltip>\n      ),\n      dataIndex: 'salary.perDaySalary',\n      render: (text, record) => (\n        <div>{record.salary.perDaySalary !== null && record.salary.perDaySalary !== undefined\n          ? record.salary.perDaySalary?.toFixed(2)\n          : '-'}</div>\n      ),\n      key: 'salary.perDaySalary',\n    },\n   \n    {\n  title: (\n    <Tooltip placement=\"topLeft\" title=\"Difference between Total and Calculated Salary\">\n      <span style={{ fontSize: '12px' }}>Salary diffrence</span>\n    </Tooltip>\n  ),\n  key: 'salaryDifference',\n  render: (text, record) => {\n   const employePerDaySalary = record.salary.perDaySalary;\n   const perDaySalary = record.salary.employePerExtraDaySalary + record.salary.employePerDaySalary  \n\n    if (\n      employePerDaySalary !== null &&\n      employePerDaySalary !== undefined &&\n      perDaySalary !== null &&\n      perDaySalary !== undefined&&\n      perDaySalary !== 0  \n    ) {\n      const diff = perDaySalary - employePerDaySalary;\n      const sign = diff > 0 ? '+' : diff < 0 ? '-' : '';\n      return <div>{sign + Math.abs(diff).toFixed(2)}</div>;\n    } else {\n      return <div>-</div>;\n    }\n  },\n},\n    {\n      title: (\n        <Tooltip placement=\"topLeft\" title=\"Total Per Day Salary\">\n          <span style={{ fontSize: '12px' }}>Total Salary</span>\n        </Tooltip>\n      ),\n      dataIndex: 'salary.totalperDaySalary',\n      key: 'salary.totalperDaySalary',\n      render: (text, record) => (\n        <div>{(record.salary.employePerExtraDaySalary + record.salary.employePerDaySalary)?.toFixed(2)}</div>\n      ),\n    },\n  ];\n\n  if (!isOpen) return null;\n  return (\n    <Modal\n      title={`Payroll Data - ${payrolsalaryReportData?.employeId?.fullName} / ${dayjs(payrolsalaryReportData?.jsonData?.employeDayWiseReport?.date).format(\"MMMM\")} / ${payrolsalaryReportData?.employeId?.email} `}\n      visible={isOpen}\n      onCancel={onClose}\n      footer={null}\n      className=\"antmodalclassName\"\n      width={1400}\n    >\n      <Table\n        columns={columns}\n        dataSource={payrolsalaryReportData?.jsonData?.employeDayWiseReport || []}\n        rowKey=\"_id\"\n        pagination={false}\n        size='small'\n        bordered\n        scroll={{ x: 'max-content' }}\n        locale={{\n          emptyText: 'Record Not Found',\n        }}\n        rowClassName={(record, index) => (index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white')}\n        summary={footer}\n      />\n\n    </Modal>\n  );\n};\n\nexport default PayrollDatafullList;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Controller, useForm, useWatch } from 'react-hook-form';\nimport moment from 'moment';\nimport { employeSearch } from '../../../employeManagement/employeFeatures/_employe_reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { domainName, inputAntdSelectClassName, inputCalanderClassName, inputClassName, inputLabelClassName, inputLabelClassNameReactSelect } from '../../../../constents/global';\nimport { companySearch } from '../../../company/companyManagement/companyFeatures/_company_reducers';\nimport { deptSearch } from '../../../department/departmentFeatures/_department_reducers';\nimport { branchSearch } from '../../../branch/branchManagement/branchFeatures/_branch_reducers';\nimport ReactSelect from \"react-select\";\nimport Swal from 'sweetalert2';\nimport { createPayroll, getLeaveDashboard, getPayrollEmployeeList, getPayrollList } from './employeePayRollFeatures/_payroll_reducers';\nimport { leaveTypeSearch } from '../../../global/other/leavetypeManagment/LeaveTypeFeatures/_leave_type_reducers';\nimport { FaRegFile, FaTimes } from 'react-icons/fa';\nimport { fileUploadFunc } from '../../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers';\nimport { getAllowanceList } from '../Allowance/allowancefeature/_allowanceList_reducers';\nimport { getdeductionsList } from '../Deductions/deductionsfeature/_deductionsList_reducers';\nimport { encrypt } from '../../../../config/Encryption';\nimport CustomDatePicker from '../../../../global_layouts/DatePicker/CustomDatePicker';\nimport { Modal, Select } from 'antd';\nimport ListLoader from '../../../../global_layouts/ListLoader';\nimport { DatePicker } from 'antd';\nimport dayjs from \"dayjs\";\nimport utc from \"dayjs/plugin/utc\";\nimport Loader from '../../../../global_layouts/Loader';\n\ndayjs.extend(utc);\n\nconst CreatePayrollModal = ({ isOpen, onClose, fetchattendanceListData }) => {\n\n  const { register, handleSubmit, control, watch, setValue, formState: { errors } } = useForm({\n    defaultValues: {\n      employeeName: '',\n      date: moment().format('YYYY-MM-DD'),\n      checkInTime: '',\n      checkOutTime: '',\n      reason: '',\n      errors: {},\n      month: null,\n      startDate: null,\n      endDate: null,\n    }\n  });\n const { loading, payrollEmployeeList } = useSelector(\n    (state) => state.payrollReducer\n  );\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const dispatch = useDispatch();\n  const { loading: payrolLoading } = useSelector((state) => state.payrollReducer);\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const { companyList, companyListLoading } = useSelector((state) => state.company);\n  const { employeList, employeeListLoading } = useSelector((state) => state.employe);\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const monthdate = useWatch({\n    control,\n    name: \"month\",\n    defaultValue: \"\",\n  });\n\n\n  const onFormSubmit = (data) => {\n    const reqData = {\n      employeId: data?.employee,\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      directorId: \"\",\n      startDate: data?.startDate,\n      endDate: data?.endDate,\n      allowanceId: [],\n      deductionId: [],\n      penalties: []\n    };\n    dispatch(createPayroll(reqData)).then((response) => {\n      if (!response.error) {\n\n        fetchattendanceListData();\n        onClose();\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(companySearch({ text: \"\", sort: true, status: true, isPagination: false }))\n    }\n  }, [])\n\n  useEffect(() => {\n    if ((userInfoglobal?.userType === \"admin\" && companyId) || (userInfoglobal?.userType === \"company\" && userInfoglobal?._id) || userInfoglobal?.userType === \"companyDirector\") {\n      setValue(\"PDDepartmentId\", \"\");\n      setValue(\"PDDesignationId\", \"\");\n      setValue(\"PDBranchId\", \"\");\n\n      dispatch(branchSearch({\n        companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        text: \"\", sort: true, status: true, isPagination: false\n      }))\n    }\n  }, [companyId])\n\n  useEffect(() => {\n    if ((companyId || userInfoglobal?.userType !== \"admin\") && (branchId || userInfoglobal?.userType !== \"companBranch\" || userInfoglobal?.userType === \"employee\") && monthdate) {\n      fetchEmployeListData()\n      getPayrollFunc()\n    }\n  }, [companyId, branchId,monthdate])\n\n\n  const fetchEmployeListData = () => {\n    const reqPayload = {\n      text: \"\",\n      status: true,\n      sort: true,\n      isTL: \"\",\n      isHR: \"\",\n      isPagination: false,\n      departmentId: '',\n      designationId: '',\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n    };\n\n    dispatch(employeSearch(reqPayload));\n  };\n  const getPayrollFunc = () => {\n    const selectedDate = monthdate || dayjs(); // Use current date if no date selected\n    const year = selectedDate.year();\n    const month = selectedDate.month() + 1; // Months are 0-indexed in dayjs\n    const data = {\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      text: '',\n      sort: true,\n      year: year, // Add year to payload\n      month: month.toString().padStart(2, '0'), // Add month to payload (with leading zero)\n      status: '',\n      isPagination: false,\n      directorId: \"\",\n      employeId: \"\",\n    }\n\n    dispatch(getPayrollEmployeeList(data));\n  };\n  if (!isOpen) return null;\n\n  const handleMonthChange = (date, field, setValue) => {\n    if (date && dayjs(date).isValid()) {\n      const startDate = dayjs(date).startOf(\"month\").format(\"YYYY-MM-DD\");\n      const endDate = dayjs(date).endOf(\"month\").format(\"YYYY-MM-DD\");\n      setValue(\"startDate\", startDate, { shouldValidate: true });\n      setValue(\"endDate\", endDate, { shouldValidate: true });\n      field.onChange(date);\n    } else {\n      setValue(\"startDate\", null);\n      setValue(\"endDate\", null);\n      field.onChange(null);\n    }\n  };\n\n\n\n  const restemployeList = employeList?.filter((emp) => {\n    const isPayrollExists = payrollEmployeeList?.some((payroll) => payroll?.employeData?._id === emp?._id);\n    return !isPayrollExists;\n  }) || [];\n\n\n\n  return (\n\n    // <div className=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-[1560]\" onClick={onClose} >\n    //   <div className=\"bg-gray-100 rounded-lg p-6 w-full max-w-full md:max-w-2xl\" onClick={(e) => e.stopPropagation()}>\n    <Modal\n      open={true}\n      onCancel={onClose}\n      footer={null}\n      centered\n      className=\"antmodalclassName\"\n      width={800}\n      zIndex={1050}\n    // height={800}\n    // destroyOnClose\n    >\n      <div>\n        <form autoComplete=\"off\" onSubmit={handleSubmit(onFormSubmit)} className=\"\">\n          <div className=\"grid grid-col-1 md:grid-cols-2 gap-4\">\n            {userInfoglobal?.userType === \"admin\" && (\n              <div>\n                <label className={`${inputLabelClassName}`}>Company <span className=\"text-red-600\">*</span></label>\n                <Controller\n                  name=\"PDCompanyId\"\n                  control={control}\n                  rules={{\n                    required: \"Company is required\",\n                  }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      getPopupContainer={(trigger) => trigger.parentNode}\n                      placeholder=\"Select Company\"\n                      showSearch\n\n                    >\n                      <Select.Option value=\"\">Select Company</Select.Option>\n                      {companyListLoading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                        companyList\n                          ?.map((element) => (\n                            <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                          ))\n                      }\n                    </Select>\n                  )}\n                />\n                {errors.PDCompanyId && <p className=\"text-red-500 text-sm\">{errors.PDCompanyId.message}</p>}\n              </div>\n            )}\n\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && (\n              <div>\n                <label className={`${inputLabelClassName}`}>Branch <span className=\"text-red-600\"> *</span></label>\n                {/* <select\n                    {...register(\"PDBranchId\", { required: \"Branch is required\" })}\n                    className={`${inputClassName} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                  >\n                    <option value=\"\">Select Branch</option>\n                    {branchList?.map((type) => (\n                      <option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </option>\n                    ))}\n                  </select> */}\n                <Controller\n                  name=\"PDBranchId\"\n                  control={control}\n                  rules={{\n                    required: \"Branch is required\",\n                  }}\n\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      onChange={(value) => {\n                        setValue(\"employee\", '')\n                        field.onChange(value);\n                      }}\n                      className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      getPopupContainer={() => document.body}\n                      dropdownStyle={{ zIndex: 2000 }}\n                      placeholder=\"Select Branch\"\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Branch</Select.Option>\n                      {branchListloading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                        (branchList\n                          ?.map((element) => (\n                            <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                          )))\n                      }\n                    </Select>\n                  )}\n                />\n                {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n              </div>\n            )}\n\n \n\n\n            <div className=''>\n              <label className={inputLabelClassName}>\n                Select Month <span className=\"text-red-600\">*</span>\n              </label>\n\n              <Controller\n                name=\"month\"\n                control={control}\n                rules={{ required: \"Month is required\" }}\n                render={({ field }) => (\n                  <DatePicker\n                    {...field}\n                    size={'large'}\n                    picker=\"month\"\n                    format=\"MMMM YYYY\"\n                    placeholder=\"Select Month\"\n                    className={`${inputCalanderClassName}`}\n                    getPopupContainer={(triggerNode) => document.body}\n                    popupStyle={{ zIndex: 1600 }}\n                    disabledDate={(current) => {\n                      if (!current) return false;\n                      const selectedMonth = current.clone().startOf(\"month\").valueOf();\n                      const nowMonth = dayjs().startOf(\"month\").valueOf();\n                      return selectedMonth >= nowMonth;\n                    }}\n                    onChange={(date) => handleMonthChange(date, field, setValue)}\n                    value={field.value ? dayjs(field.value) : null}\n                  />\n                )}\n              />\n\n              {errors.month && (\n                <p className=\"text-red-500 text-sm\">{errors.month.message}</p>\n              )}\n            </div>\n                       <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Employee <span className=\"text-red-600\"> *</span></label>\n\n              <Controller\n                name=\"employee\"\n                control={control}\n                rules={{ required: \"Employee is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.employee ? \"border-[1px]\" : \"border-gray-300\"}`}\n                    getPopupContainer={() => document.body}\n                    dropdownStyle={{ zIndex: 2000 }}\n                    placeholder=\"Select Employee\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }                     >\n                    <Select.Option value=\"\">Select Employee</Select.Option>\n                    {employeeListLoading ? (\n                      <Select.Option disabled><ListLoader /></Select.Option>\n                    ) : (\n                      restemployeList?.map((item) => (\n                        <Select.Option key={item?._id} value={item?._id}>\n                          {item?.fullName}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n\n\n              {errors.employee && <p className=\"text-red-500 text-sm\">{errors.employee.message}</p>}\n            </div>\n          </div>\n\n          <div className='my-2'>\n\n            <div className=\"grid grid-col-1 md:grid-cols-2 gap-4\">\n\n\n\n\n              {/* <div>\n                  <label className={`${inputLabelClassName}`}>Start Date  <span className=\"text-red-600\"> *</span></label>\n                  <Controller\n                    name=\"startDate\"\n                    control={control}\n                    rules={{\n                      required: 'Start date is required'\n                    }}\n                    render={({ field }) => (\n                      <CustomDatePicker field={field} errors={errors} disabledDate={(current) => {\n                        return current && current.isAfter(moment().endOf('day'), 'day');\n                      }} />\n                    )}\n                  />\n                  {errors.startDate && <p className=\"text-red-500 text-sm\">StartDate is required</p>}\n                </div>\n\n                <div>\n                  <label className={`${inputLabelClassName}`}>End Date  <span className=\"text-red-600\"> *</span></label>\n                  <Controller\n                    name=\"endDate\"\n                    control={control}\n                    rules={{\n                      required: 'End Date is required'\n                    }}\n                    render={({ field }) => (\n                      <CustomDatePicker field={field} errors={errors} disabledDate={(current) => {\n                        return current && current.isAfter(moment().endOf('day'), 'day');\n                      }} />\n                    )}\n                  />\n                  {errors.endDate && <p className=\"text-red-500 text-sm\">EndDate is required</p>}\n                </div> */}\n\n            </div>\n          </div>\n          <div className=\"flex justify-end space-x-2 mt-4\">\n            <button\n              type=\"submit\"\n              disabled={payrolLoading}\n\n              className={` ${payrolLoading ? 'bg-gray-400' : 'bg-header'} px-4 py-2 text-sm font-medium text-white bg-header rounded-md hover:bg-[#063156]`}\n            >\n              {payrolLoading ? <Loader /> : 'Submit'}\n\n\n            </button>\n          </div>\n        </form>\n      </div>\n    </Modal>\n    //   </div>\n    // </div>\n\n  );\n};\n\nexport default CreatePayrollModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaCircleChevronDown, FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { FaPlus, FaAngleDown } from \"react-icons/fa6\";\nimport { HiOutlineDotsVertical, HiOutlineFilter } from \"react-icons/hi\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport Loader from \"../../../../global_layouts/Loader/Loader\";\nimport { encrypt } from \"../../../../config/Encryption\";\nimport {\n  deleteLeaveRequest,\n  deletePayroll,\n  getPayrollList,\n  payrollStatusFunc,\n  updateLeaveRequestStatus,\n} from \"./employeePayRollFeatures/_payroll_reducers\";\nimport {\n  domainName,\n  inputClassNameSearch,\n  inputClassName,\n  formatNumber,\n  inputAntdSelectClassNameFilter,\n  inputLabelClassName,\n} from \"../../../../constents/global\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { FaCheck, FaCheckCircle, FaDollarSign, FaEye, FaTimesCircle } from \"react-icons/fa\";\nimport moment from \"moment\";\n\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { AiFillEdit } from \"react-icons/ai\";\nimport { BsFillTrash2Fill } from \"react-icons/bs\";\nimport CreatePayrollModal from \"./CreatePayrollModal\";\nimport { Select, Tooltip, Dropdown } from \"antd\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport PayrollDatafullList from \"../employeeSalaryModule/PayrollDatafullList\";\nimport { CgDetailsMore } from \"react-icons/cg\";\nimport { PiDotsThreeOutlineVerticalBold } from \"react-icons/pi\";\nimport dayjs from \"dayjs\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\n\nfunction EmployeePayrollList() {\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm({\n    defaultValues: {\n      date: dayjs(),\n    }\n  });\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { loading, payrollRequestData, totalPayrollquestCount,payrollSummary } = useSelector(\n    (state) => state.payrollReducer\n  );\n\n\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const status = useWatch({\n    control,\n    name: 'status',\n    defaultValue: ''\n  })\n  const date = useWatch({\n    control,\n    name: 'date',\n    defaultValue: dayjs()\n\n  })\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isCraeteModalOpen, setIsCraeteModalOpen] = useState(false);\n  const [currentMonth, setCurrentMonth] = useState(dayjs().format(\"YYYY-MM\"));\n  const [isEditModalOpen, setisEditModalOpen] = useState({\n    _id: null,\n    visible: false\n  });\n\n  const handleviewAttendacelist = (element) => {\n    setisEditModalOpen({\n      _id: element?._id,\n      visible: true\n    })\n  }\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const limit = 15;\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  const filters = [CompanyId, BranchId, searchText, status, date].join(\"-\");\n  const [isFirstRender, setisFirstRender] = useState(false)\n\n  useEffect(() => {\n    if (!isFirstRender) {\n      setisFirstRender(state => true);\n      return;\n    }\n    if (currentPage === 1) {\n      getPayrollFunc();\n    } else {\n      setCurrentPage(1);\n    }\n  }, [filters])\n\n  useEffect(() => {\n    getPayrollFunc();\n  }, [currentPage]);\n\n  const getPayrollFunc = () => {\n    const selectedDate = date || dayjs(); // Use current date if no date selected\n    const year = selectedDate.year();\n    const month = selectedDate.month() + 1; // Months are 0-indexed in dayjs\n    const data = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqData: {\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        text: searchText,\n        sort: true,\n        year: year, // Add year to payload\n        month: month.toString().padStart(2, '0'), // Add month to payload (with leading zero)\n        status: status,\n        isPagination: true,\n        directorId: \"\",\n        employeId: \"\",\n      },\n    };\n    dispatch(getPayrollList(data));\n  };\n\n\n  const handleReject = (id) => {\n    dispatch(\n      deletePayroll({\n        _id: id,\n      })\n    ).then((data) => {\n      // getPayrollFunc();\n      if (currentPage > 1 && payrollRequestData?.length == 1) {\n        setCurrentPage(Number(currentPage - 1));\n\n      } else {\n        getPayrollFunc();\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (\n      CompanyId ||\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n  }, [CompanyId]);\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n\n\n  const handlePayrollStatusChange = (e, id) => {\n    // Show a confirmation dialog when the user tries to change the status\n    Swal.fire({\n      title: 'Are you sure?',\n      text: `Do you want to update the payroll status as ${e} ?`,\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Yes, update it!',\n      cancelButtonText: 'Cancel',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // Proceed with dispatching if the user clicks \"Yes\"\n        dispatch(\n          payrollStatusFunc({\n            _id: id,\n            status: e,\n          })\n        ).then((data) => {\n          if (!data?.error) {\n            // On success, show a success alert\n            Swal.fire(\n              'Updated!',\n              'The payroll status has been updated successfully.',\n              'success'\n            );\n            getPayrollFunc(); // Fetch updated payroll\n          } else {\n            // On error, show an error alert\n            Swal.fire(\n              'Error!',\n              'Something went wrong while updating the payroll status.',\n              'error'\n            );\n          }\n        });\n      }\n    });\n  }\n\n  const onChange = (e) => {\n    ;\n    setSearchText(e);\n  };\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"flex justify-start items-center  my-1\">\n        <button\n          onClick={() => navigate(\"/admin/standardPayroll\")}\n          className=\" px-3 border border-black py-2 rounded-l-md flex justify-center items-center space-x-2 text-black\"\n\n        >\n\n          <span className=\"text-[12px]\">Standard payroll</span>\n        </button>\n        <button\n          className=\"bg-header px-3 py-2 border border-header rounded-r-md flex justify-center items-center space-x-2 text-white\"\n        >\n\n          <span className=\"text-[12px]\">Actual Payslip</span>\n        </button>\n      </div>\n\n      <>\n        <div className=\"bg-grey-100 w-full\">\n          <div className=\"sm:flex justify-between items-center md:space-y-0 space-y-2 py-1\">\n            <div className=\"sm:flex gap-2 md:space-y-0 space-y-1\">\n              {userInfoglobal?.userType === \"admin\" && (\n                <div className=\"\">\n                  <Controller\n                    control={control}\n                    name=\"PDCompanyId\"\n                    rules={{ required: \"Company is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        defaultValue={\"\"}\n                        disabled={loading}\n                        className={`${inputAntdSelectClassNameFilter} `}\n                      >\n                        <Select.Option value=\"\">Select Company</Select.Option>\n                        {companyList?.map((type) => (\n                          <Select.Option key={type?._id} value={type?._id}>\n                            {type?.fullName}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDCompanyId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDCompanyId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n              {(userInfoglobal?.userType === \"admin\" ||\n                userInfoglobal?.userType === \"company\" ||\n                userInfoglobal?.userType === \"companyDirector\") && (\n                  <div className=\"\">\n                    <Controller\n                      control={control}\n                      name=\"PDBranchId\"\n                      rules={{ required: \"Branch is required\" }}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          defaultValue={\"\"}\n                          disabled={loading}\n                          className={`${inputAntdSelectClassNameFilter} `}\n                        >\n                          <Select.Option value=\"\">Select Branch</Select.Option>\n                          {branchList?.map((type) => (\n                            <Select.Option key={type?._id} value={type?._id}>\n                              {type?.fullName}\n                            </Select.Option>\n                          ))}\n                        </Select>\n                      )}\n                    />\n                    {errors.PDBranchId && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.PDBranchId.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n              <div className=\"\">\n                <Controller\n                  name=\"status\"\n                  control={control}\n                  rules={{\n                  }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      placeholder=\"Select Status\"\n                      disabled={loading}\n                      showSearch\n                    >\n                      <Select.Option value=\"\">Select Status</Select.Option>\n                      <Select.Option value=\"Draft\" > Draft  </Select.Option>\n                      <Select.Option value=\"Approved\" > Approved  </Select.Option>\n                      {/* <Select.Option value=\"Rejected\" > Rejected  </Select.Option> */}\n                      <Select.Option value=\"Paid\" > Paid  </Select.Option>\n\n                    </Select>\n                  )}\n                />\n              </div>\n\n\n\n              <div className=\"\">\n                <Controller\n                  name=\"date\"\n                  control={control}\n                  render={({ field }) => (\n                    <CustomDatePicker\n                      field={field}\n                      errors={errors}\n                      picker=\"month\"\n                      report={true}\n                      format=\"MM/YYYY\"\n                      disabledDate={(current) => {\n                        return (\n                          current && current.isAfter(moment().endOf(\"day\"), \"day\")\n                        );\n                      }}\n                    />\n                  )}\n                />\n              </div>\n\n\n\n              <button\n                onClick={() => {\n                  setValue(\"PDBranchId\", '')\n                  setValue(\"PDCompanyId\", \"\")\n                  setValue(\"status\", \"\")\n                  setValue(\"date\", dayjs())\n\n                }}\n                className=\"bg-header py-[6px] w-full rounded-md flex px-5 justify-center items-center  text-white\">\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n\n              <Tooltip placement=\"topLeft\" title=\"Create Payroll\">\n                <button\n                  onClick={() => {\n                    setIsCraeteModalOpen(true);\n                  }}\n                  className=\"bg-header px-2 py-1.5 rounded-md flex justify-center whitespace-nowrap items-center space-x-2 text-white\"\n                >\n                  <FaPlus />\n                  <span className=\"text-[12px]\">Generate Payslip</span>\n                </button>\n              </Tooltip>\n            </div>\n          </div>\n        </div>\n        {payrollSummary && (\n          <div className=\"bg-white p-4 rounded-lg shadow-md mb-4\">\n            <h3 className=\"text-lg font-semibold mb-3\">Payroll Summary for {dayjs(date).format('MMMM YYYY')}</h3>\n\n            <div className=\"overflow-x-auto\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                  <tr>\n                    <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Metric</th>\n                    <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Amount</th>\n                    <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Metric</th>\n                    <th className=\"px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase\">Amount</th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n               \n                  <tr>\n                    <td className=\"px-4 py-2 text-sm font-medium text-gray-900\"> Standard Salary</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-900\">₹{formatNumber(payrollSummary.totalTargetSalary).toFixed(2)}</td>   \n                     <td className=\"px-4 py-2 text-sm font-medium text-gray-900\"> Base Salary</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-900\">₹{formatNumber(payrollSummary.totalBasicSalary).toFixed(2)}</td>              \n                  </tr>\n                  <tr>\n                   \n                     <td className=\"px-4 py-2 text-sm font-medium text-gray-900\">Total Allowances</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-900\">₹{formatNumber(payrollSummary.totalAllowancesFromSummary).toFixed(2)}</td>\n                    <td className=\"px-4 py-2 text-sm font-medium text-gray-900\">Gross Salary</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-900\">₹{formatNumber(payrollSummary.totalGrossSalary).toFixed(2)}</td>\n                 \n                  </tr>\n                  <tr>\n                    <td className=\"px-4 py-2 text-sm font-medium text-gray-900\">Total Deductions</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-900\">₹{formatNumber(payrollSummary.totalNetSalary - payrollSummary.totalGrossSalary ).toFixed(2)}</td>\n                      <td className=\"px-4 py-2 text-sm font-medium text-gray-900\">Net Salary</td>\n                    <td className=\"px-4 py-2 text-sm text-gray-900\">₹{formatNumber(payrollSummary.totalNetSalary).toFixed(2)}</td>\n                  </tr>\n             \n                </tbody>\n              </table>\n            </div>\n          </div>\n        )}\n        <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n            <thead className=\"\">\n              <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[#ffff] font-[500] h-[40px]\">\n                <th className=\"tableHead w-[10%]\">S.No.</th>\n                <th className=\"tableHead w-[10%]\">Employee Name</th>\n                <th className=\"tableHead w-[10%]\">Designation</th>\n                {/* <th className=\"tableHead\">Start date</th>\n                <th className=\"tableHead\">End date</th> */}\n                {/* <th className=\"tableHead\">Basic Salary</th> */}\n                                <th className=\"tableHead\">Standard Salary</th>\n                <th className=\"tableHead\">Gross Salary</th>\n                <th className=\"tableHead\">Deductions</th>\n                <th className=\"tableHead\">Net Salary</th>\n\n                <th className=\"tableHead\">createdAt</th>\n                <th className=\"tableHead\">Status</th>\n                <th className=\"tableHead w-[10%]\">Action</th>\n              </tr>\n            </thead>\n            {loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n\n              <tbody>\n                {payrollRequestData && payrollRequestData.length > 0 ? (\n                  payrollRequestData.map((element, index) => (\n                    <tr\n                      key={element?._id}\n                      className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-b-[1px] border-[#DDDDDD]`}\n                    >\n                      <td className=\"tableData\">\n                        {index + 1 + (currentPage - 1) * limit}\n                      </td>\n                      <td className=\"tableData\">\n                        {element?.employeName}\n                      </td>\n                      <td className=\"tableData\">\n                        {element?.designationName || \"-\"}\n                      </td>\n                      {/* <td className=\"tableData\">\n                        {moment(element?.startDate).format(\"DD-MM-YYYY\")}\n                      </td>\n                      <td className=\"tableData\">\n                        {moment(element?.endDate).format(\"DD-MM-YYYY\")}\n                      </td> */}\n                      {/* <td className=\"tableData whitespace-nowrap\">\n                        {formatNumber(element?.basicSalary).toFixed(2)} ₹\n                      </td> */}\n                       <td className=\"tableData whitespace-nowrap\">\n                        {formatNumber(element?.currentSalaryPerMonth).toFixed(2)} ₹\n                      </td>\n                      <td className=\"tableData  whitespace-nowrap\">\n                        {formatNumber(element?.grossSalary).toFixed(2)} ₹\n                      </td>\n                      <td className=\"tableData  whitespace-nowrap\">\n                        {formatNumber(element?.grossSalary - element?.netSalary).toFixed(2)} ₹\n                      </td>\n                      <td className=\"tableData whitespace-nowrap\">\n                        {formatNumber(element?.netSalary).toFixed(2)} ₹\n                      </td>\n                     \n                      <td className=\"tableData\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm A\")}\n                      </td>\n                      <td className=\"tableData\">\n                        <span\n                          className={`tableData px-2 py-1 text-xs rounded-md border-[1px] font-medium\n                          ${element?.status === 'Draft'\n                              ? 'text-gray-600 bg-gray-100 border-gray-300'\n                              : element?.status === 'Approved'\n                                ? 'text-green-600 bg-green-100 border-green-300'\n                                : element?.status === 'Rejected'\n                                  ? 'text-red-600 bg-red-100 border-red-300'\n                                  : element?.status === 'Paid'\n                                    ? 'text-yellow-600 bg-yellow-100 border-yellow-300'\n                                    : ''\n                            }`}\n                        >\n                          {element?.status}\n                        </span>\n\n                      </td>\n\n                      <td className=\"tableData\">\n                        {/* <span\n                          className={`py-1.5 flex justify-start items-center  space-x-2.5`}\n                        >\n                          <Tooltip placement=\"topLeft\"  title={\"Daily Report\"} >\n                            <button\n                              onClick={() => handleviewAttendacelist(element)}\n                              className={`px-2 py-1.5 rounded-md bg-transparent border border-muted `}\n                              type=\"button\"\n                            >\n                              <CgDetailsMore\n                                className={\"text-cyan-600 hover:text-cyan-500\"}\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>\n                          <Tooltip placement=\"topLeft\"  title={element?.status === \"Approved\" || element?.status === \"Rejected\" || element?.status === \"Paid\" ? \"Already Approved, Rejected, or Paid\" : \"Approve\"}>\n                            <button\n                              onClick={() => handlePayrollStatusChange(\"Approved\", element?._id)}\n                              className={`px-2 py-1.5 rounded-md bg-transparent border border-muted ${element?.status === \"Approved\" || element?.status === \"Rejected\" || element?.status === \"Paid\" ? \"text-gray-400 cursor-not-allowed\" : \"text-green-600 hover:text-green-500\"}`}\n                              type=\"button\"\n                              disabled={element?.status === \"Approved\" || element?.status === \"Rejected\" || element?.status === \"Paid\"} // Disable if not in Draft\n                            >\n                              <FaCheckCircle\n                                className={` ${element?.status === \"Approved\" || element?.status === \"Rejected\" || element?.status === \"Paid\" ? \"text-gray-400\" : \"text-green-600 hover:text-green-500\"}`}\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>\n\n                          <Tooltip placement=\"topLeft\"  title={element?.status !== \"Draft\" ? \"Cannot Reject if not in Draft\" : \"Reject\"}>\n                            <button\n                              onClick={() => handlePayrollStatusChange(\"Rejected\", element?._id)}\n                              className={`px-2 py-1.5 rounded-md bg-transparent border border-muted ${element?.status !== \"Draft\" ? \"text-gray-400 cursor-not-allowed\" : \"text-red-600 hover:text-red-500\"}`}\n                              type=\"button\"\n                              disabled={element?.status !== \"Draft\"}\n                            >\n                              <FaTimesCircle\n                                className={` ${element?.status !== \"Draft\" ? \"text-gray-400\" : \"text-red-600 hover:text-red-500\"}`}\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>\n\n                         \n\n\n                          <Tooltip placement=\"topLeft\"  title=\"View\">\n                            <button\n                              onClick={() =>\n                                navigate(\n                                  `/admin/paySlipData/${encrypt(element?._id)}`\n                                )\n                              }\n                              className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                            >\n                              <FaEye\n                                className={` ${\"text-sky-600 hover:text-sky-500\"}`}\n                                size={16}\n                              />\n                            </button>\n                          </Tooltip>\n                          {\n                            <Tooltip placement=\"topLeft\"  title=\"Delete\">\n                              <button\n                                onClick={() => handleReject(element?._id)}\n                                className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                type=\"button\"\n                                disabled={\n\n                                  element?.status !== \"Rejected\"\n                                }\n                              >\n                                <RiDeleteBin5Line\n                                  className={` ${element?.status === \"Rejected\"\n                                    ? \"text-red-600 hover:text-red-500\"\n                                    : \"text-gray-600 hover:text-gray-500\"\n                                    }`}\n                                  size={16}\n                                />\n                              </button>\n                            </Tooltip>\n                          }\n\n                        \n                        </span> */}\n                        <Dropdown\n                          trigger={['click']}\n                          menu={{\n                            items: [\n                              {\n                                key: 'daily-report',\n                                label: (\n                                  <span className=\"flex items-center text-cyan-600\">\n                                    <CgDetailsMore className=\"mr-2\" /> Daily Report\n                                  </span>\n                                ),\n                                onClick: () => handleviewAttendacelist(element),\n                              },\n                              {\n                                key: 'approve',\n                                label: (\n                                  <span\n                                    className={`flex items-center ${['Approved', 'Rejected', 'Paid'].includes(element?.status)\n                                      ? 'text-gray-400 cursor-not-allowed'\n                                      : 'text-green-600'\n                                      }`}\n                                  >\n                                    <FaCheckCircle className=\"mr-2\" />\n                                    Approve\n                                  </span>\n                                ),\n                                onClick: () =>\n                                  !['Approved', 'Rejected', 'Paid'].includes(element?.status) &&\n                                  handlePayrollStatusChange('Approved', element?._id),\n                                disabled: ['Approved', 'Rejected', 'Paid'].includes(element?.status),\n                              },\n                              // {\n                              //   key: 'reject',\n                              //   label: (\n                              //     <span\n                              //       className={`flex items-center ${element?.status !== 'Draft'\n                              //         ? 'text-gray-400 cursor-not-allowed'\n                              //         : 'text-red-600'\n                              //         }`}\n                              //     >\n                              //       <FaTimesCircle className=\"mr-2\" />\n                              //       Reject\n                              //     </span>\n                              //   ),\n                              //   onClick: () =>\n                              //     element?.status === 'Draft' &&\n                              //     handlePayrollStatusChange('Rejected', element?._id),\n                              //   disabled: element?.status !== 'Draft',\n                              // },\n                              {\n                                key: 'view',\n                                label: (\n                                  <span className=\"flex items-center text-sky-600\">\n                                    <FaEye className=\"mr-2\" />\n                                    View\n                                  </span>\n                                ),\n                                onClick: () =>\n                                  navigate(`/admin/paySlipData/${encrypt(element?._id)}`),\n                              },\n                              {\n                                key: 'delete',\n                                label: (\n                                  <span\n                                    className={`flex items-center ${element?.status === 'Draft'\n                                      ? 'text-red-600'\n                                      : 'text-gray-500 cursor-not-allowed'\n                                      }`}\n                                  >\n                                    <RiDeleteBin5Line className=\"mr-2\" />\n                                    Delete\n                                  </span>\n                                ),\n                                onClick: () =>\n                                  element?.status === 'Draft' && handleReject(element?._id),\n                                disabled: element?.status !== 'Draft',\n                              },\n                            ],\n                          }}\n                        >\n                          <Tooltip placement=\"topLeft\" title=\"More\">\n                            <button\n                              className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                              type=\"button\"\n                            >\n                              <PiDotsThreeOutlineVerticalBold\n                                size={16}\n                                className=\"text-[#3c8dbc] hover:text-[#337ab7]\"\n                              />\n                            </button>\n                          </Tooltip>\n                        </Dropdown>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={12}\n                      className=\"px-6 py-2 whitespace-nowrap font-[600] text-center text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>\n\n        <CustomPagination\n          totalCount={totalPayrollquestCount}\n          pageSize={limit}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n        {isCraeteModalOpen && (\n          <CreatePayrollModal\n            isOpen={true}\n            onClose={() => setIsCraeteModalOpen(false)}\n            fetchattendanceListData={getPayrollFunc}\n          />\n        )}\n        {\n          isEditModalOpen?.visible && <PayrollDatafullList\n            isOpen={true}\n            onClose={() => setisEditModalOpen({\n              _id: null,\n              visible: false\n            })}\n            element={isEditModalOpen?._id}\n          />\n        }\n      </>\n      {/* )} */}\n    </GlobalLayout >\n  );\n}\nexport default EmployeePayrollList;\n","import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n"],"names":["module","exports","t","i","e","s","f","n","u","prototype","utc","date","args","arguments","this","toDate","locale","$L","add","utcOffset","local","o","parse","$u","$utils","$offset","call","r","init","$d","$y","getUTCFullYear","$M","getUTCMonth","$D","getUTCDate","$W","getUTCDay","$H","getUTCHours","$m","getUTCMinutes","$s","getUTCSeconds","$ms","getUTCMilliseconds","a","match","Math","abs","getTimezoneOffset","$x","$localOffset","h","format","valueOf","isUTC","toISOString","toString","toUTCString","l","c","diff","_ref","_payrolsalaryReportDa2","_payrolsalaryReportDa3","_payrolsalaryReportDa4","_payrolsalaryReportDa5","_payrolsalaryReportDa6","isOpen","onClose","element","dispatch","useDispatch","loading","payrolsalaryReportData","useSelector","state","payrollReducer","totals","calculateTotals","_payrolsalaryReportDa","data","jsonData","employeDayWiseReport","presentDays","holidayDays","workingDays","sandwichDays","perDayTargetMin","totalEmployeWorkingMin","perDayEmployminMinutes","perDayEmployPendingMin","perDayEmployOvertimeMin","employePerDaySalary","perDaySalary","employePerExtraDaySalary","totalDiffrence","totalSalary","forEach","item","_item$assignedShiftDe","isPresent","isHoliday","isWorkingDay","assignedShiftDetail","isApplySandwich","salary","useEffect","payrollDetailsFullListFunc","_id","columns","title","_jsx","Tooltip","placement","children","style","fontSize","dataIndex","key","render","text","_data$attendanceData","attendanceData","wfhReqData","_data$assignedShiftDe","_data$assignedShiftDe2","_jsxs","_Fragment","openingTime","closingTime","floor","padStart","record","_record$salary$perDay","undefined","toFixed","sign","_ref2","Modal","concat","employeId","fullName","dayjs","email","visible","onCancel","footer","className","width","Table","dataSource","rowKey","pagination","size","bordered","scroll","x","emptyText","rowClassName","index","summary","_totals$perDaySalary","_totals$totalSalary","Summary","fixed","Row","fontWeight","background","Cell","colSpan","fetchattendanceListData","register","handleSubmit","control","watch","setValue","formState","errors","useForm","defaultValues","employeeName","moment","checkInTime","checkOutTime","reason","month","startDate","endDate","payrollEmployeeList","userInfoglobal","JSON","localStorage","getItem","domainName","payrolLoading","branchList","branchListloading","branch","companyList","companyListLoading","company","employeList","employeeListLoading","employe","branchId","useWatch","name","defaultValue","companyId","monthdate","userType","companySearch","sort","status","isPagination","branchSearch","fetchEmployeListData","getPayrollFunc","reqPayload","isTL","isHR","departmentId","designationId","employeSearch","selectedDate","year","directorId","getPayrollEmployeeList","restemployeList","filter","emp","some","payroll","_payroll$employeData","employeData","open","centered","zIndex","autoComplete","onSubmit","reqData","employee","allowanceId","deductionId","penalties","createPayroll","then","response","error","inputLabelClassName","Controller","rules","required","field","Select","_objectSpread","inputAntdSelectClassName","PDPlan","getPopupContainer","trigger","parentNode","placeholder","showSearch","Option","value","disabled","ListLoader","map","PDCompanyId","message","_ref3","onChange","document","body","dropdownStyle","filterOption","input","option","String","toLowerCase","includes","PDBranchId","_ref4","DatePicker","picker","inputCalanderClassName","triggerNode","popupStyle","disabledDate","current","clone","startOf","handleMonthChange","isValid","endOf","shouldValidate","_ref5","type","Loader","navigate","useNavigate","payrollRequestData","totalPayrollquestCount","payrollSummary","CompanyId","BranchId","currentPage","setCurrentPage","useState","isCraeteModalOpen","setIsCraeteModalOpen","currentMonth","setCurrentMonth","isEditModalOpen","setisEditModalOpen","searchText","setSearchText","filters","join","isFirstRender","setisFirstRender","pageSize","getPayrollList","GlobalLayout","onClick","inputAntdSelectClassNameFilter","CustomDatePicker","report","isAfter","FaPlus","formatNumber","totalTargetSalary","totalBasicSalary","totalAllowancesFromSummary","totalGrossSalary","totalNetSalary","Loader2","length","employeName","designationName","currentSalaryPerMonth","grossSalary","netSalary","createdAt","Dropdown","menu","items","label","CgDetailsMore","handleviewAttendacelist","FaCheckCircle","id","Swal","icon","showCancelButton","confirmButtonText","cancelButtonText","result","isConfirmed","payrollStatusFunc","handlePayrollStatusChange","FaEye","encrypt","RiDeleteBin5Line","deletePayroll","Number","PiDotsThreeOutlineVerticalBold","CustomPagination","totalCount","page","CreatePayrollModal","PayrollDatafullList","Spin"],"sourceRoot":""}