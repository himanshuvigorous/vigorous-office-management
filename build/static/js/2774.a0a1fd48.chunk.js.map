{"version":3,"file":"static/js/2774.a0a1fd48.chunk.js","mappings":"4WAkBA,MA+mBA,EA/mBoBA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxB,MAAQC,QAASC,IAAmBC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,UAC3D,eAAEC,IAAmBH,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,UAClD,aAAEE,IAAiBC,EAAAA,EAAAA,KACnBC,GAAYC,EAAAA,EAAAA,IAAQH,GACpBI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEX,kBAAEC,IAAsBZ,EAAAA,EAAAA,IAAaC,GAAUA,EAAMY,SACrD,YAAEC,IAAgBd,EAAAA,EAAAA,IAAaC,GAAUA,EAAMc,UAC9CC,EAAYC,IAAkBC,EAAAA,EAAAA,UAAS,KAExC,SACJC,EAAQ,aACRC,EAAY,QACZC,EAAO,UACPC,EAAS,MACTC,EACAC,WAAW,OAAEC,GAAQ,SACrBC,EAAQ,WACRC,GAAU,QACVC,KACEC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbC,sBAAsB,EACtBC,OAAO,EACPC,WAAW,EACXC,SAAU,EACVC,IAAK,EACLC,QAAS,EACTC,WAAY,KAKVJ,IAAYK,EAAAA,EAAAA,IAAS,CAAEjB,UAASkB,KAAM,cAEtCC,KADgBF,EAAAA,EAAAA,IAAS,CAAEjB,UAASkB,KAAM,aAC7BD,EAAAA,EAAAA,IAAS,CAAEjB,UAASkB,KAAM,gBACvCR,IAAuBO,EAAAA,EAAAA,IAAS,CAAEjB,UAASkB,KAAM,yBACjDL,IAAWI,EAAAA,EAAAA,IAAS,CAAEjB,UAASkB,KAAM,aACrCP,IAAQM,EAAAA,EAAAA,IAAS,CAAEjB,UAASkB,KAAM,UAClCJ,IAAMG,EAAAA,EAAAA,IAAS,CAAEjB,UAASkB,KAAM,QAChCE,IAAmBH,EAAAA,EAAAA,IAAS,CAAEjB,UAASkB,KAAM,qBAC7CF,IAAaC,EAAAA,EAAAA,IAAS,CAAEjB,UAASkB,KAAM,gBAG7CG,EAAAA,EAAAA,WAAU,KACJpC,GACFE,GAASmC,EAAAA,EAAAA,IAAkB,CAAEC,IAAKtC,MAEnC,CAACA,KAEJoC,EAAAA,EAAAA,WAAU,KACa,IAADG,EAAhB1C,IACFuB,EAAS,cAAe,QACxBA,EAAS,oBAAkC,OAAdvB,QAAc,IAAdA,OAAc,EAAdA,EAAgB2C,SAAU,GACvDpB,EAAS,cAA4B,OAAdvB,QAAc,IAAdA,GAAiC,QAAnB0C,EAAd1C,EAAgB4C,yBAAiB,IAAAF,OAAnB,EAAdA,EAAmCG,mBAAoB,GAC9EtB,EAAS,cAA4B,OAAdvB,QAAc,IAAdA,OAAc,EAAdA,EAAgB2C,SAAU,KAElD,CAAC3C,KAGJuC,EAAAA,EAAAA,WAAU,KACkBO,MAExB,IAAIC,EADUC,OAAOV,KAAqB,EAEtCW,EAAqB,EACrBC,EAAgB,EAChBC,EAAoB,EAexB,GAZIvB,KACFqB,EAAqBG,KAAKC,IAAIL,OAAOjB,KAAa,EAAGgB,GACrDA,GAAmBE,GAIjBpB,IAASkB,EAAkB,IAC7BG,EAAgBE,KAAKC,IAAIL,OAAOhB,KAAQ,EAAGe,GAC3CA,GAAmBG,GAIjBpB,IAAaiB,EAAkB,EAAG,CACpC,MAAMO,EAAmBN,OAAOX,KAAe,EAC/Cc,EAAoBC,KAAKC,IAAIC,EAAkBP,GAC/CA,GAAmBI,CACrB,CAGIvB,IACFL,EAAS,WAAY0B,EAAoB,CAAEM,gBAAgB,IAEzD1B,IACFN,EAAS,MAAO2B,EAAe,CAAEK,gBAAgB,IAE/CzB,IACFP,EAAS,UAAW4B,EAAmB,CAAEI,gBAAgB,IAG3DhC,EAAS,aAAcwB,EAAiB,CAAEQ,gBAAgB,KAG5DT,IACC,CAACR,GAAkBV,GAAsBG,GAAUF,GAAOG,GAAKF,GAAWO,MAG7EE,EAAAA,EAAAA,WAAU,KACHX,KACHJ,GAAW,YACXD,EAAS,WAAY,KAEtB,CAACK,MAEJW,EAAAA,EAAAA,WAAU,KACHV,KACHL,GAAW,OACXD,EAAS,MAAO,KAEjB,CAACM,MAEJU,EAAAA,EAAAA,WAAU,KACHT,KACHN,GAAW,WACXD,EAAS,UAAW,KAErB,CAACO,KAEJ,MA6DM0B,GAAoB,SAACC,GAAS,IAAEC,EAAQC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAI,OAAMG,IACzD,IAAIC,EAAQC,WAAWF,EAAEG,OAAOF,QAAU,EACtCA,EAAQ,IAAGA,EAAQ,GACN,OAAbL,GAAqBK,EAAQL,IAAUK,EAAQL,GACnDnC,EAASkC,EAAWM,EAAO,CAAER,gBAAgB,IAC7C,EAGIW,GAAiBA,IAAMlB,OAAOV,KAAqB,EACnD6B,GAAYA,KAChB,MAAMC,EAAQpB,OAAOV,KAAqB,EACpC+B,EAAiBzC,IAAwBoB,OAAOjB,KAAkB,EACxE,OAAOqB,KAAKkB,IAAI,EAAGF,EAAQC,IAGxBE,GAAsBT,IAC3B,IAAIC,EAAQC,WAAWF,EAAEG,OAAOF,QAAU,EACtCA,EAAQ,IAAGA,EAAQ,GAGvB,MAAMS,EAA4BlC,IACFV,GAAuBG,GAAW,IAClCF,GAAQG,GAAM,GACxCyC,EAAoBrB,KAAKC,IAAIhB,GAAYmC,GAG3CT,EAAQU,IACVV,EAAQU,GAGVlD,EAAS,UAAWwC,EAAO,CAAER,gBAAgB,IAG7C,MAAMmB,EAAgBF,EAA4BT,EAClDxC,EAAS,aAAcmD,EAAgB,EAAIA,EAAgB,IAG3D,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACXF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UACpBE,EAAAA,EAAAA,MAAA,QAAMC,aAAa,MAAMF,UAAU,yCAAyCG,SAAUhE,EArG3EiE,UAAiB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAE/B,UADsB9D,KACR,OAEd,MAAM+D,EAAU,CACd,IAAqB,OAAdxF,QAAc,IAAdA,OAAc,EAAdA,EAAgByC,IACvB,UAA2B,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgByF,UAC7B,WAA4B,OAAdzF,QAAc,IAAdA,OAAc,EAAdA,EAAgB0F,WAC9B,SAA0B,OAAd1F,QAAc,IAAdA,OAAc,EAAdA,EAAgB2F,SAC5B,WAAuC,cAAX,OAAd3F,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,MAAoC,OAAd5F,QAAc,IAAdA,GAAiC,QAAnBmF,EAAdnF,EAAgB6F,yBAAiB,IAAAV,OAAnB,EAAdA,EAAmC1C,IAAM,GAC7F,WAAuC,cAAX,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,MAAoC,OAAd5F,QAAc,IAAdA,GAA4B,QAAdoF,EAAdpF,EAAgB8F,oBAAY,IAAAV,OAAd,EAAdA,EAA8B3C,IAAM,GACxF,WAAuC,aAAX,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,MAAmC,OAAd5F,QAAc,IAAdA,GAA2B,QAAbqF,EAAdrF,EAAgB+F,mBAAW,IAAAV,OAAb,EAAdA,EAA6B5C,IAAM,GACtF,KAAsB,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,KACxB,YAAc1D,GAAa,EAAQ,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAMC,YAAa,OAClD,UAAa/D,GAAa,EAA2B,UAAlB,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAMC,aAA6B,OAAJD,QAAI,IAAJA,GAAgB,QAAZV,EAAJU,EAAME,kBAAU,IAAAZ,OAAZ,EAAJA,EAAkBvB,MAAM,KAAQ,GAC9F,UAAa7B,GAAa,EAA2B,UAAlB,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAMC,aAA6B,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMG,OAAS,KAAM,GACnF,SAAYjE,GAAa,EAA2B,YAAlB,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAMC,aAA+B,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMI,SAAW,KAAM,GACtF,cAAiBlE,GAAa,EAA2B,UAAlB,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAMC,aAA6B,OAAJD,QAAI,IAAJA,OAAI,EAAJA,EAAMK,cAAgB,KAAM,GAC9F,OAAc,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAM1D,iBAChB,mBAAoC,OAAdtC,QAAc,IAAdA,GAAiC,QAAnBuF,EAAdvF,EAAgB4C,yBAAiB,IAAA2C,OAAnB,EAAdA,EAAmC1C,iBACzD,UAAgB,OAAJmD,QAAI,IAAJA,OAAI,EAAJA,EAAMlE,aAAa,EAC/B,aAAoB,OAAJkE,QAAI,IAAJA,GAAAA,EAAMlE,YAAiB,OAAJkE,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,SAAU,EACnD,YAAmB,OAAJ+D,QAAI,IAAJA,OAAI,EAAJA,EAAM9D,WACrB,KAAY,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAMM,KACd,QAAWpE,GAAa,EAAS,OAAJ8D,QAAI,IAAJA,OAAI,EAAJA,EAAMO,SAAW,GAC9C,WAAc1F,EACd,OAAU,OACV,OAAa,OAAJmF,QAAI,IAAJA,OAAI,EAAJA,EAAMnE,SAAS,EACxB,UAAiB,OAAJmE,QAAI,IAAJA,GAAAA,EAAMnE,QAAa,OAAJmE,QAAI,IAAJA,OAAI,EAAJA,EAAMhE,KAAM,EACxC,YAAkB,OAAJgE,QAAI,IAAJA,OAAI,EAAJA,EAAMpE,wBAAwB,EAC5C,eAAsB,OAAJoE,QAAI,IAAJA,GAAAA,EAAMpE,uBAA4B,OAAJoE,QAAI,IAAJA,OAAI,EAAJA,EAAMjE,UAAW,GAGnE1B,GAASmG,EAAAA,EAAAA,IAAchB,IAAUiB,KAAMT,IAChCA,EAAKU,OACRnG,GAAU,OAkEmGsE,SAAA,EAC3GE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,sDAAqDD,SAAA,CACxC,aAAX,OAAd7E,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,OAAkB,GAAAe,QAAqB,OAAd3G,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,OAAO,GAAE,MAAAe,OAAmB,OAAd3G,QAAc,IAAdA,GAA2B,QAAbtB,EAAdsB,EAAgB+F,mBAAW,IAAArH,GAA3BA,EAA6BkI,YAAW,IAAAD,OAAqB,OAAd3G,QAAc,IAAdA,GAA2B,QAAbrB,EAAdqB,EAAgB+F,mBAAW,IAAApH,OAAb,EAAdA,EAA6BiI,aAAgB,GAAE,MAAAD,OAAmB,OAAd3G,QAAc,IAAdA,GAA2B,QAAbpB,EAAdoB,EAAgB+F,mBAAW,IAAAnH,GAA3BA,EAA6BiI,SAAQ,IAAAF,OAAoB,OAAd3G,QAAc,IAAdA,GAA2B,QAAbnB,EAAdmB,EAAgB+F,mBAAW,IAAAlH,OAAb,EAAdA,EAA6BgI,UAAa,GAAE,KAAAF,OAAmB,OAAd3G,QAAc,IAAdA,GAA2B,QAAblB,EAAdkB,EAAgB+F,mBAAW,IAAAjH,GAA3BA,EAA6BwH,KAAI,KAAAK,OAAQG,IAAqB,OAAd9G,QAAc,IAAdA,GAA2B,QAAbjB,EAAdiB,EAAgB+F,mBAAW,IAAAhH,OAAb,EAAdA,EAA6BuH,MAAMS,OAAO,cAAa,KAAM,IAC1V,cAAX,OAAd/G,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,OAAmB,GAAAe,QAAqB,OAAd3G,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,OAAQ,GAAE,MAAAe,OAAmB,OAAd3G,QAAc,IAAdA,GAAiC,QAAnBhB,EAAdgB,EAAgB6F,yBAAiB,IAAA7G,GAAjCA,EAAmCgI,aAAY,IAAAL,OAAqB,OAAd3G,QAAc,IAAdA,GAAiC,QAAnBf,EAAde,EAAgB6F,yBAAiB,IAAA5G,OAAnB,EAAdA,EAAmC+H,cAAiB,GAAE,MAAAL,OAAyD,YAAtC,OAAd3G,QAAc,IAAdA,GAAiC,QAAnBd,EAAdc,EAAgB6F,yBAAiB,IAAA3G,OAAnB,EAAdA,EAAmC8H,cAAyB,IAAAL,OAAqB,OAAd3G,QAAc,IAAdA,GAAiC,QAAnBb,EAAda,EAAgB6F,yBAAiB,IAAA1G,OAAnB,EAAdA,EAAmC8H,WAAS,IAAAN,OAAwB,OAAd3G,QAAc,IAAdA,GAAiC,QAAnBZ,EAAdY,EAAgB6F,yBAAiB,IAAAzG,OAAnB,EAAdA,EAAmC8H,iBAAiB,KAAAP,OAAmB,OAAd3G,QAAc,IAAdA,GAAiC,QAAnBX,EAAdW,EAAgB6F,yBAAiB,IAAAxG,GAAjCA,EAAmCiH,KAAI,KAAAK,OAAQG,IAAqB,OAAd9G,QAAc,IAAdA,GAAiC,QAAnBV,EAAdU,EAAgB6F,yBAAiB,IAAAvG,OAAnB,EAAdA,EAAmCgH,MAAMS,OAAO,cAAa,KAAM,IAC5c,cAAX,OAAd/G,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,OAAmB,GAAAe,QAAqB,OAAd3G,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,OAAQ,GAAE,KAAAe,OAAkB,OAAd3G,QAAc,IAAdA,GAA4B,QAAdT,EAAdS,EAAgB8F,oBAAY,IAAAvG,GAA5BA,EAA8BsH,SAAQ,IAAAF,OAAqB,OAAd3G,QAAc,IAAdA,GAA4B,QAAdR,EAAdQ,EAAgB8F,oBAAY,IAAAtG,OAAd,EAAdA,EAA8BqH,UAAa,GAAE,KAAAF,OAAkB,OAAd3G,QAAc,IAAdA,GAA4B,QAAdP,EAAdO,EAAgB8F,oBAAY,IAAArG,GAA5BA,EAA8B6G,KAAI,KAAAK,OAAQG,IAAqB,OAAd9G,QAAc,IAAdA,GAA4B,QAAdN,EAAdM,EAAgB8F,oBAAY,IAAApG,OAAd,EAAdA,EAA8B4G,MAAMS,OAAO,cAAa,KAAM,QAGxRhC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,CACO,aAAX,OAAd7E,QAAc,IAAdA,OAAc,EAAdA,EAAgB4F,QACfb,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iBAAgBD,SAAA,EAK7BE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAA6B,OAAKQ,EAAAA,GAAmB,sBAAqBtC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,SAAAyC,EAAAA,EAAAA,GAAA,CAAOxB,KAAK,YAAe5E,EAAS,2BACpC2D,EAAAA,EAAAA,KAAA,QAAMG,UAAU,mBAAkBD,SAAC,oBAErCE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAA6B,OAAKQ,EAAAA,GAAmB,sBAAqBtC,SAAA,EAC3DF,EAAAA,EAAAA,KAAA,SAAAyC,EAAAA,EAAAA,GAAA,CAAOxB,KAAK,YAAe5E,EAAS,YACpC2D,EAAAA,EAAAA,KAAA,QAAMG,UAAU,mBAAkBD,SAAC,kBAKzCF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6CAA4CD,UACzDE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,4BAA2BD,SAAA,EACxCE,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOG,UAAWqC,EAAAA,GAAoBtC,SAAC,kBACvCF,EAAAA,EAAAA,KAAA,SAAAyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACExB,KAAK,QACD5E,EAAS,qBAAmB,IAChC8D,UAAWuC,EAAAA,GACXC,UAAQ,QAIX1F,KACCmD,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOG,UAAWqC,EAAAA,GAAoBtC,SAAC,cACvCF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAU,CACTnF,KAAK,WACLlB,QAASA,EACTsG,MAAO,CACLC,SAAU1D,IACR,MAAM2D,EAAW1E,OAAOe,IAAU,EAClC,OAAI2D,EAAW,EAAU,gCACrBA,EAAWxD,OAAwB,0BAANyC,OAAiCzC,QAItEyD,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBjD,EAAAA,EAAAA,KAAA,SAAAyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMS,GAAK,IACTjC,KAAK,SACLkC,KAAK,OACLzE,IAAI,IACJiB,IAAKJ,KACLY,UAAWiD,EAAAA,GACXC,SAAUxE,GAAkB,WAAYU,YAI7C5C,EAAOS,WACN4C,EAAAA,EAAAA,KAAA,KAAGG,UAAU,4BAA2BD,SAAEvD,EAAOS,SAASkG,aAK/DpG,KACCkD,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOG,UAAWqC,EAAAA,GAAoBtC,SAAC,SACvCF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAU,CACTnF,KAAK,MACLlB,QAASA,EACTsG,MAAO,CACLC,SAAU1D,IACR,MAAM2D,EAAW1E,OAAOe,IAAU,EAClC,OAAI2D,EAAW,EAAU,2BACrBA,EAAWvD,OAAmB,qBAANwC,OAA4BxC,QAI5DwD,OAAQO,IAAA,IAAC,MAAEL,GAAOK,EAAA,OAChBvD,EAAAA,EAAAA,KAAA,SAAAyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMS,GAAK,IACTjC,KAAK,SACLkC,KAAK,OACLzE,IAAI,IACJiB,IAAKH,KACLW,UAAWiD,EAAAA,GACXC,SAAUxE,GAAkB,MAAOW,YAIxC7C,EAAOU,MACN2C,EAAAA,EAAAA,KAAA,KAAGG,UAAU,4BAA2BD,SAAEvD,EAAOU,IAAIiG,aAK1DnG,KACCiD,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOG,UAAWqC,EAAAA,GAAoBtC,SAAC,aACvCF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAU,CAC7BnF,KAAK,UACLlB,QAASA,EACTsG,MAAO,CACLC,SAAU1D,IACR,MAAM2D,EAAW1E,OAAOe,IAAU,EAClC,GAAI2D,EAAW,EAAG,MAAO,6BAEzB,MAAMlD,EAA4BlC,IACFV,GAAuBG,GAAW,IAClCF,GAAQG,GAAM,GACxCyC,EAAoBrB,KAAKC,IAAIhB,GAAYmC,GAE/C,QAAIkD,EAAWjD,IACP,yBAANkC,OAAgClC,KAKtCkD,OAAQQ,IAAgB,IAAf,MAAEN,GAAOM,EAChB,MAAM3D,EAA4BlC,IACFV,GAAuBG,GAAW,IAClCF,GAAQG,GAAM,GACxCyC,EAAoBrB,KAAKC,IAAIhB,GAAYmC,GAE/C,OACEG,EAAAA,EAAAA,KAAA,SAAAyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMS,GAAK,IACTjC,KAAK,SACLkC,KAAK,OACLzE,IAAI,IACJiB,IAAKG,EACLK,UAAWiD,EAAAA,GACXC,SAAUzD,UAKEQ,EAAAA,EAAAA,MAAA,OAAKD,UAAU,wBAAuBD,SAAA,CAAC,0BACbxC,MAEzBf,EAAOW,UACN0C,EAAAA,EAAAA,KAAA,KAAGG,UAAU,4BAA2BD,SAAEvD,EAAOW,QAAQgG,cAM/DlD,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOG,UAAWqC,EAAAA,GAAoBtC,SAAC,iBACvCF,EAAAA,EAAAA,KAAA,SAAAyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACExB,KAAK,QACD5E,EAAS,eAAa,IAC1B8D,UAAWuC,EAAAA,GACXC,UAAQ,gBAOjBtE,OAAOd,IAAc,IACpB6C,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gEAA+DD,SAAA,EAC5EE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EACfE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,0BAAyBD,SAAA,EACtCF,EAAAA,EAAAA,KAAA,SAAOG,UAAU,yBAAwBD,UACvCF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAU,CACTnF,KAAK,cACLlB,QAASA,EACTsG,MAAO,CAAEY,SAAU,oBACnBT,OAAQU,IAAA,IAAC,MAAER,GAAOQ,EAAA,OAChBtD,EAAAA,EAAAA,MAACuD,EAAAA,GAAAA,OAAWlB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAACmB,aAAc,QAAYV,GAAK,IAC5C9D,MAAY,OAAL8D,QAAK,IAALA,OAAK,EAALA,EAAO9D,MACdiE,SAAWlE,IAAK,IAAD0E,EAAAC,EACbZ,EAAMG,SAAU,OAADlE,QAAC,IAADA,GAAS,QAAR0E,EAAD1E,EAAGG,cAAM,IAAAuE,OAAR,EAADA,EAAWzE,OACL,SAAjB,OAADD,QAAC,IAADA,GAAS,QAAR2E,EAAD3E,EAAGG,cAAM,IAAAwE,OAAR,EAADA,EAAW1E,QACZxC,EAAS,SAAS,IAClBA,EAAS,gBAAgB,KAGzBA,EAAS,aAAa,KAExBsD,SAAA,EAEAF,EAAAA,EAAAA,KAAC2D,EAAAA,GAAK,CAACxD,UAAS,GAAA6B,OAAKQ,EAAAA,IAAuBpD,MAAM,OAAMc,SAAC,UACzDF,EAAAA,EAAAA,KAAC2D,EAAAA,GAAK,CAACxD,UAAS,GAAA6B,OAAKQ,EAAAA,IAAuBpD,MAAM,OAAMc,SAAC,kBAKhEvD,EAAOsE,OAAQjB,EAAAA,EAAAA,KAAA,QAAMG,UAAU,gBAAeD,SAAEvD,EAAOsE,KAAKqC,aAE9D3G,EAAOsE,OACNjB,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCvD,EAAOsE,KAAKqC,aAKO,SAAzB7G,EAAM,iBACL2D,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EACfE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAA6B,OAAKQ,EAAAA,IAAsBtC,SAAA,CAAC,eAC/BF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE5CF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAU,CACTrG,QAASA,EACTkB,KAAK,SACLoF,MAAO,CAAEY,SAAU,sBACnBT,OAAQe,IAAA,IAAAC,EAAAC,EAAA,IAAC,MAAEf,GAAOa,EAAA,OAChB3D,EAAAA,EAAAA,MAAC8D,EAAAA,GAAMzB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDS,GAAK,IACTU,aAAc,GACdzD,UAAS,GAAA6B,OAAKmC,EAAAA,GAAwB,KACtCC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQrE,UAAUuE,cAAcC,SAASJ,EAAMG,eAExDE,QAASA,KACPjJ,GAASkJ,EAAAA,EAAAA,IAAiB,CACxB9G,IAAmB,OAAdzC,QAAc,IAAdA,OAAc,EAAdA,EAAgB2F,aAEvBd,SAAA,EAEFF,EAAAA,EAAAA,KAACkE,EAAAA,EAAOW,OAAM,CAACzF,MAAM,GAAEc,SAAC,iBACN,OAAjBpE,QAAiB,IAAjBA,GAAuB,QAANkI,EAAjBlI,EAAmBuF,YAAI,IAAA2C,OAAN,EAAjBA,EAAyBc,YAA6B,OAAjBhJ,QAAiB,IAAjBA,GAAuB,QAANmI,EAAjBnI,EAAmBuF,YAAI,IAAA4C,OAAN,EAAjBA,EAAyBa,SAAS7F,QAAS,GAC/EnD,EAAkBuF,KAAKyD,SAASC,IAAK9D,IACnCjB,EAAAA,EAAAA,KAACkE,EAAAA,EAAOW,OAAM,CAAgBzF,MAAO6B,EAAKnD,IAAIoC,UAC3C8E,EAAAA,EAAAA,IAAwB/D,IADPA,EAAKnD,aAQlCnB,EAAO6E,SACNxB,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCvD,EAAO6E,OAAO8B,aAMG,SAAzB7G,EAAM,iBACL2D,EAAAA,EAAAA,MAAA,OAAKD,UAAU,SAAQD,SAAA,EACrBF,EAAAA,EAAAA,KAAA,SAAOG,UAAS,GAAA6B,OAAKQ,EAAAA,IAAsBtC,SAAC,cAC5CF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAU,CACTnF,KAAK,aACLlB,QAASA,EACTsG,MAAO,CAAEY,SAAU,wBACnBT,OAAQiC,IAAA,IAAC,MAAE/B,GAAO+B,EAAA,OAChBjF,EAAAA,EAAAA,KAACkF,EAAAA,IAAWzC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNS,GAAK,IACTyB,QAASA,IAAMjJ,GAASyJ,EAAAA,EAAAA,IAAc,CACpCC,KAAM,GACNC,QAAQ,EACRC,MAAM,EACNC,KAAM,GACNC,KAAM,GACNC,cAAc,EACdC,aAAc,GACdC,cAAe,GACf7E,UAAyB,OAAdzF,QAAc,IAAdA,OAAc,EAAdA,EAAgByF,UAC3BE,SAAwB,OAAd3F,QAAc,IAAdA,OAAc,EAAdA,EAAgB2F,YAE5B4E,QAAoB,OAAX5J,QAAW,IAAXA,OAAW,EAAXA,EAAa+I,IAAKc,IAAQ,CACjCzG,MAAe,OAARyG,QAAQ,IAARA,OAAQ,EAARA,EAAU/H,IACjBgI,MAAe,OAARD,QAAQ,IAARA,OAAQ,EAARA,EAAUE,YAEnBC,gBAAgB,eAChB7F,UAAS,GAAA6B,OAAKiE,EAAAA,GAA8B,KAAAjE,OAAIrF,EAAO4E,WAAa,gBAAkB,mBACtF2E,YAAY,wBAIjBvJ,EAAO4E,aAAcvB,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAEvD,EAAO4E,WAAW+B,aAIvD,SAAzB7G,EAAM,iBACL2D,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EACfE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAA6B,OAAKQ,EAAAA,IAAsBtC,SAAA,CAAC,kBAC5BF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE/CF,EAAAA,EAAAA,KAAA,SAAAyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACExB,KAAK,QACD5E,EAAS,gBAAiB,CAC5BoH,SAAU,gCACV,IACFtD,UAAS,IAAA6B,OAAMoB,EAAAA,GAAc,KAAApB,OAAIrF,EAAO+E,cAAgB,gBAAkB,mBAC1EwE,YAAY,0BAEbvJ,EAAO+E,gBACN1B,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCvD,EAAO+E,cAAc4B,iBAOhClD,EAAAA,EAAAA,MAAA,OAAKD,UAAU,OAAMD,SAAA,EACnBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EACfE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAA6B,OAAKQ,EAAAA,IAAsBtC,SAAA,CAAC,YAClCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAEzCF,EAAAA,EAAAA,KAAA,YAAAyC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMpG,EAAS,WAAY,CACvBoH,SAAU,0BACV,IACFtD,UAAS,IAAA6B,OAAMoB,EAAAA,GAAc,KAAApB,OAAIrF,EAAOiF,SAAW,gBAAkB,mBACrEsE,YAAY,oBAEbvJ,EAAOiF,WACN5B,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAChCvD,EAAOiF,SAAS0B,cAKvBlD,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOG,UAAS,GAAA6B,OAAKQ,EAAAA,IAAsBtC,SAAC,kBAC5CF,EAAAA,EAAAA,KAAC4C,EAAAA,GAAU,CACTnF,KAAK,OACLlB,QAASA,EACTyG,OAAQmD,IAAA,IAAC,MAAEjD,GAAOiD,EAAA,OAChBnG,EAAAA,EAAAA,KAACoG,EAAAA,EAAgB,CAAClD,MAAOA,EAAOvG,OAAQA,OAG3CA,EAAOgF,OAAQ3B,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAC,yBAGtDF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,OAAMD,UACnBE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,YAAWD,SAAA,EACxBF,EAAAA,EAAAA,KAAA,SACEiB,KAAK,OACLoC,SAjZMlE,IACxB,MAAMkH,EAAOlH,EAAEG,OAAOgH,MAAM,GAC5B,GAAID,EAAM,CACRlH,EAAEG,OAAOF,MAAQ,KACjB,MAAMmH,EAAU,CACdC,SAAUH,EACVI,SAAS,EACTC,YAAY,GAEdhL,GAASiL,EAAAA,EAAAA,IAAeJ,IAAUzE,KAAM8E,IAAS,IAADC,EACvC,OAAHD,QAAG,IAAHA,GAAY,QAATC,EAAHD,EAAK/F,eAAO,IAAAgG,GAAZA,EAAcxF,MAChBlF,EAAe2K,IAAI,IAAAC,EAAA,MAAI,IAAID,EAAiB,QAAbC,EAAEH,EAAI/F,eAAO,IAAAkG,OAAA,EAAXA,EAAa1F,SAGpD,GAoYkBlB,UAAU,SACV6G,GAAG,iBAEL5G,EAAAA,EAAAA,MAAA,SACE6G,QAAQ,cACR9G,UAAU,iIAAgID,SAAA,EAE1IF,EAAAA,EAAAA,KAACkH,EAAAA,IAAS,CAAC/G,UAAU,SAAS,uBAGhCH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,YAAWD,SACb,OAAVhE,QAAU,IAAVA,OAAU,EAAVA,EAAY6I,IAAI,CAACsB,EAAMc,KACtB/G,EAAAA,EAAAA,MAAA,OAAiBD,UAAU,8DAA6DD,SAAA,EACtFE,EAAAA,EAAAA,MAAA,KACEgH,KAAI,GAAApF,OAAKqF,gCAAyC,YAAArF,OAAWqE,GAC7DlG,UAAU,8BACVb,OAAO,SACPgI,IAAI,sBAAqBpH,SAAA,EAEzBF,EAAAA,EAAAA,KAACkH,EAAAA,IAAS,CAAC/G,UAAU,mBACrBH,EAAAA,EAAAA,KAAA,QAAMG,UAAU,wBAAuBD,SAAEmG,QAE3CrG,EAAAA,EAAAA,KAAA,UACEiB,KAAK,SACLsG,QAASA,IAzZTJ,KACxBhL,EAAe2K,GAAQA,EAAKU,OAAO,CAACC,EAAGC,IAAMA,IAAMP,KAwZZQ,CAAiBR,GAChChH,UAAU,kCAAiCD,UAE3CF,EAAAA,EAAAA,KAAC4H,EAAAA,IAAO,QAfFT,kBA0BxBnH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,uBAAsBD,UACnCF,EAAAA,EAAAA,KAAA,UACEiB,KAAK,SACL0B,SAAU1H,EACVkF,UAAS,GAAA6B,OAAK/G,EAAiB,cAAgB,YAAW,gCAA+BiF,SAExFjF,GAAiB+E,EAAAA,EAAAA,KAAC6H,EAAAA,EAAM,IAAM,oB","sources":["pages/financeManagement/payment/EditPayment.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { inputAntdSelectClassName, inputClassName, inputDisabledClassName, inputLabelClassName, inputLabelClassNameReactSelect, optionLabelForBankSlect } from \"../../../constents/global\";\nimport { getBranchDetails } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport ReactSelect from \"react-select\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport { fileUploadFunc } from \"../../global/other/fileManagement/FileManagementFeatures/_file_management_reducers\";\nimport { getpaymentDetails, updatepayment } from \"./paymentFeature/_payment_reducers\";\nimport { Radio, Select } from \"antd\";\nimport { decrypt } from \"../../../config/Encryption\";\nimport moment from \"moment\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport { FaRegFile, FaTimes } from \"react-icons/fa\";\nimport Loader from \"../../../global_layouts/Loader\";\n\nconst EditPayment = () => {\n  const { loading: paymentLoading } = useSelector((state) => state.payment);\n  const { paymentDetails } = useSelector((state) => state.payment);\n  const { paymentIdEnc } = useParams();\n  const paymentId = decrypt(paymentIdEnc);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { branchDetailsData } = useSelector((state) => state.branch);\n  const { employeList } = useSelector((state) => state.employe);\n  const [attachment, setAttachments] = useState([]);\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    getValues,\n    watch,\n    formState: { errors },\n    setValue,\n    resetField,\n    trigger\n  } = useForm({\n    defaultValues: {\n      isDiscountApplicable: false,\n      isTDS: false,\n      isAdvance: false,\n      discount: 0,\n      tds: 0,\n      advance: 0,\n      grandTotal: 0\n    }\n  });\n\n  // Watch all relevant fields\n  const isAdvance = useWatch({ control, name: \"isAdvance\" });\n  const advanceAmount = useWatch({ control, name: \"advance\" });\n  const maxAdvance = useWatch({ control, name: \"maxAdvance\" });\n  const isDiscountApplicable = useWatch({ control, name: \"isDiscountApplicable\" });\n  const discount = useWatch({ control, name: \"discount\" });\n  const isTDS = useWatch({ control, name: \"isTDS\" });\n  const tds = useWatch({ control, name: \"tds\" });\n  const totalBeforeGrand = useWatch({ control, name: \"totalBeforeGrand\" });\n  const grandTotal = useWatch({ control, name: \"grandTotal\" });\n\n  // Initialize form with payment details\n  useEffect(() => {\n    if (paymentId) {\n      dispatch(getpaymentDetails({ _id: paymentId }));\n    }\n  }, [paymentId]);\n\n  useEffect(() => {\n    if (paymentDetails) {\n      setValue(\"paymentMode\", 'cash');\n      setValue(\"totalBeforeGrand\", paymentDetails?.amount || 0);\n      setValue(\"maxAdvance\", paymentDetails?.applicableAdvance?.availableBalance || 0);\n      setValue(\"grandTotal\", paymentDetails?.amount || 0);\n    }\n  }, [paymentDetails]);\n\n  // Main calculation effect\n  useEffect(() => {\n    const calculatePayments = () => {\n      const total = Number(totalBeforeGrand) || 0;\n      let remainingAmount = total;\n      let calculatedDiscount = 0;\n      let calculatedTDS = 0;\n      let calculatedAdvance = 0;\n\n      // Apply discount first if applicable\n      if (isDiscountApplicable) {\n        calculatedDiscount = Math.min(Number(discount) || 0, remainingAmount);\n        remainingAmount -= calculatedDiscount;\n      }\n\n      // Then apply TDS if applicable\n      if (isTDS && remainingAmount > 0) {\n        calculatedTDS = Math.min(Number(tds) || 0, remainingAmount);\n        remainingAmount -= calculatedTDS;\n      }\n\n      // Finally apply advance if applicable\n      if (isAdvance && remainingAmount > 0) {\n        const availableAdvance = Number(maxAdvance) || 0;\n        calculatedAdvance = Math.min(availableAdvance, remainingAmount);\n        remainingAmount -= calculatedAdvance;\n      }\n\n      // Update form values\n      if (isDiscountApplicable) {\n        setValue(\"discount\", calculatedDiscount, { shouldValidate: true });\n      }\n      if (isTDS) {\n        setValue(\"tds\", calculatedTDS, { shouldValidate: true });\n      }\n      if (isAdvance) {\n        setValue(\"advance\", calculatedAdvance, { shouldValidate: true });\n      }\n\n      setValue(\"grandTotal\", remainingAmount, { shouldValidate: true });\n    };\n\n    calculatePayments();\n  }, [totalBeforeGrand, isDiscountApplicable, discount, isTDS, tds, isAdvance, maxAdvance]);\n\n  // Reset fields when checkboxes are unchecked\n  useEffect(() => {\n    if (!isDiscountApplicable) {\n      resetField(\"discount\");\n      setValue(\"discount\", 0);\n    }\n  }, [isDiscountApplicable]);\n\n  useEffect(() => {\n    if (!isTDS) {\n      resetField(\"tds\");\n      setValue(\"tds\", 0);\n    }\n  }, [isTDS]);\n\n  useEffect(() => {\n    if (!isAdvance) {\n      resetField(\"advance\");\n      setValue(\"advance\", 0);\n    }\n  }, [isAdvance]);\n\n  const onSubmit = async (data) => {\n    const isValid = await trigger();\n    if (!isValid) return;\n\n    const payload = {\n      \"_id\": paymentDetails?._id,\n      \"companyId\": paymentDetails?.companyId,\n      \"directorId\": paymentDetails?.directorId,\n      \"branchId\": paymentDetails?.branchId,\n      \"purchaseId\": paymentDetails?.type === \"purchase\" ? paymentDetails?.purchaseAssetData?._id : \"\",\n      \"cashBookId\": paymentDetails?.type === \"cashBook\" ? paymentDetails?.cashbookData?._id : \"\",\n      \"advanceAId\": paymentDetails?.type === \"advance\" ? paymentDetails?.advanceData?._id : \"\",\n      \"type\": paymentDetails?.type,\n      \"paymentMode\":grandTotal > 0 ? data?.paymentMode :'cash',\n      \"employeId\": grandTotal > 0 ? (data?.paymentMode === 'cash' ? data?.employeeId?.value:null) : '',\n      \"bankAccId\": grandTotal > 0 ? (data?.paymentMode !== 'cash' ? data?.bankId : null):'',\n      \"chequeNo\": grandTotal > 0 ? (data?.paymentMode === 'cheque' ? data?.chequeNo : null):'',\n      \"transactionNo\": grandTotal > 0 ? (data?.paymentMode === 'bank' ? data?.transactionNo : null):'',\n      \"amount\": data?.totalBeforeGrand,\n      \"totalAdjuustAmount\": paymentDetails?.applicableAdvance?.availableBalance,\n      \"isAdjust\": data?.isAdvance || false,\n      \"adjustAmount\": data?.isAdvance ? +data?.advance : 0,\n      \"totalAmount\": data?.grandTotal,\n      \"date\": data?.date,\n      \"remarks\": grandTotal > 0 ? (data?.naration) :'',\n      \"attachment\": attachment,\n      \"status\": \"Paid\",\n      \"isTDS\": data?.isTDS || false,\n      \"TDSAmount\": data?.isTDS ? +data?.tds : 0,\n      \"isDiscount\": data?.isDiscountApplicable || false,\n      \"discountAmount\": data?.isDiscountApplicable ? +data?.discount : 0,\n    };\n\n    dispatch(updatepayment(payload)).then((data) => {\n      if (!data.error) {\n        navigate(-1);\n      }\n    });\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      e.target.value = null;\n      const reqData = {\n        filePath: file,\n        isVideo: false,\n        isMultiple: false,\n      };\n      dispatch(fileUploadFunc(reqData)).then((res) => {\n        if (res?.payload?.data) {\n          setAttachments(prev => [...prev, res.payload?.data]);\n        }\n      });\n    }\n  };\n\n  const handleRemoveFile = (index) => {\n    setAttachments(prev => prev.filter((_, i) => i !== index));\n  };\n\n  const handleNumberInput = (fieldName, maxValue = null) => (e) => {\n    let value = parseFloat(e.target.value) || 0;\n    if (value < 0) value = 0;\n    if (maxValue !== null && value > maxValue) value = maxValue;\n    setValue(fieldName, value, { shouldValidate: true });\n  };\n\n  // Calculate maximum allowed values\n  const getMaxDiscount = () => Number(totalBeforeGrand) || 0;\n  const getMaxTDS = () => {\n    const total = Number(totalBeforeGrand) || 0;\n    const discountAmount = isDiscountApplicable ? (Number(discount) || 0) : 0;\n    return Math.max(0, total - discountAmount);\n  };\n\n const handleAdvanceInput = (e) => {\n  let value = parseFloat(e.target.value) || 0;\n  if (value < 0) value = 0;\n\n  // Calculate the maximum allowed advance\n  const remainingAfterDiscountTDS = totalBeforeGrand - \n                                 (isDiscountApplicable ? discount : 0) - \n                                 (isTDS ? tds : 0);\n  const maxAllowedAdvance = Math.min(maxAdvance, remainingAfterDiscountTDS);\n\n  // Cap the value at the maximum allowed\n  if (value > maxAllowedAdvance) {\n    value = maxAllowedAdvance;\n  }\n\n  setValue(\"advance\", value, { shouldValidate: true });\n  \n  // Update grand total\n  const newGrandTotal = remainingAfterDiscountTDS - value;\n  setValue(\"grandTotal\", newGrandTotal > 0 ? newGrandTotal : 0);\n};\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 border border-gray-200 rounded-xl\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"bg-header text-white text-xs px-3 py-2 rounded-t-xl\">\n            {paymentDetails?.type === \"advance\" && `${paymentDetails?.type ||''}  ${paymentDetails?.advanceData?.advanceType ? `/${paymentDetails?.advanceData?.advanceType}` : ''}  ${paymentDetails?.advanceData?.userName ?`/${paymentDetails?.advanceData?.userName}` : '' } ${paymentDetails?.advanceData?.date ? `/(${moment(paymentDetails?.advanceData?.date).format(\"DD/MM/YYYY\")})` : ''}`}\n            {paymentDetails?.type === \"purchase\" && `${paymentDetails?.type || ''}  ${paymentDetails?.purchaseAssetData?.purchaseType ? `/${paymentDetails?.purchaseAssetData?.purchaseType}` : ''}  ${paymentDetails?.purchaseAssetData?.purchaseType === \"Vendor\" ? `/${paymentDetails?.purchaseAssetData?.assetName}`  : `/${paymentDetails?.purchaseAssetData?.vendorOtherName}` } ${paymentDetails?.purchaseAssetData?.date ? `/(${moment(paymentDetails?.purchaseAssetData?.date).format(\"DD/MM/YYYY\")})` : ''}`}\n            {paymentDetails?.type === \"cashBook\" && `${paymentDetails?.type || ''} ${paymentDetails?.cashbookData?.userName ? `/${paymentDetails?.cashbookData?.userName}` : ''} ${paymentDetails?.cashbookData?.date ? `/(${moment(paymentDetails?.cashbookData?.date).format(\"DD/MM/YYYY\")})` : ''}`}\n          </div>\n\n          <div className=\"px-3\">\n            {paymentDetails?.type !== 'payroll' && (\n              <div className=\"space-y-2 mb-4\">\n                {/* <label className={`${inputLabelClassName} flex items-center`}>\n                  <input type=\"checkbox\" {...register(\"isAdvance\")} />\n                  <span className=\"mx-2 text-[15px]\">Is Advance</span>\n                </label> */}\n                <label className={`${inputLabelClassName} flex items-center`}>\n                  <input type=\"checkbox\" {...register(\"isDiscountApplicable\")} />\n                  <span className=\"mx-2 text-[15px]\">Is Discount</span>\n                </label>\n                <label className={`${inputLabelClassName} flex items-center`}>\n                  <input type=\"checkbox\" {...register(\"isTDS\")} />\n                  <span className=\"mx-2 text-[15px]\">Is TDS</span>\n                </label>\n              </div>\n            )}\n\n            <div className=\"w-full flex flex-row items-end justify-end\">\n              <div className=\"space-y-2 w-full max-w-md\">\n                <div>\n                  <label className={inputLabelClassName}>Total Amount</label>\n                  <input\n                    type=\"text\"\n                    {...register(\"totalBeforeGrand\")}\n                    className={inputDisabledClassName}\n                    disabled\n                  />\n                </div>\n\n                {isDiscountApplicable && (\n                  <div>\n                    <label className={inputLabelClassName}>Discount</label>\n                    <Controller\n                      name=\"discount\"\n                      control={control}\n                      rules={{\n                        validate: value => {\n                          const numValue = Number(value) || 0;\n                          if (numValue < 0) return \"Discount cannot be negative\";\n                          if (numValue > getMaxDiscount()) return `Discount cannot exceed ${getMaxDiscount()}`;\n                          return true;\n                        }\n                      }}\n                      render={({ field }) => (\n                        <input\n                          {...field}\n                          type=\"number\"\n                          step=\"0.01\"\n                          min=\"0\"\n                          max={getMaxDiscount()}\n                          className={inputClassName}\n                          onChange={handleNumberInput(\"discount\", getMaxDiscount())}\n                        />\n                      )}\n                    />\n                    {errors.discount && (\n                      <p className=\"text-red-500 text-sm mt-1\">{errors.discount.message}</p>\n                    )}\n                  </div>\n                )}\n\n                {isTDS && (\n                  <div>\n                    <label className={inputLabelClassName}>TDS</label>\n                    <Controller\n                      name=\"tds\"\n                      control={control}\n                      rules={{\n                        validate: value => {\n                          const numValue = Number(value) || 0;\n                          if (numValue < 0) return \"TDS cannot be negative\";\n                          if (numValue > getMaxTDS()) return `TDS cannot exceed ${getMaxTDS()}`;\n                          return true;\n                        }\n                      }}\n                      render={({ field }) => (\n                        <input\n                          {...field}\n                          type=\"number\"\n                          step=\"0.01\"\n                          min=\"0\"\n                          max={getMaxTDS()}\n                          className={inputClassName}\n                          onChange={handleNumberInput(\"tds\", getMaxTDS())}\n                        />\n                      )}\n                    />\n                    {errors.tds && (\n                      <p className=\"text-red-500 text-sm mt-1\">{errors.tds.message}</p>\n                    )}\n                  </div>\n                )}\n\n                {isAdvance && (\n                  <div>\n                    <label className={inputLabelClassName}>Advance</label>\n                    <Controller\n  name=\"advance\"\n  control={control}\n  rules={{\n    validate: value => {\n      const numValue = Number(value) || 0;\n      if (numValue < 0) return \"Advance cannot be negative\";\n      \n      const remainingAfterDiscountTDS = totalBeforeGrand - \n                                     (isDiscountApplicable ? discount : 0) - \n                                     (isTDS ? tds : 0);\n      const maxAllowedAdvance = Math.min(maxAdvance, remainingAfterDiscountTDS);\n      \n      if (numValue > maxAllowedAdvance) {\n        return `Advance cannot exceed ${maxAllowedAdvance}`;\n      }\n      return true;\n    }\n  }}\n  render={({ field }) => {\n    const remainingAfterDiscountTDS = totalBeforeGrand - \n                                   (isDiscountApplicable ? discount : 0) - \n                                   (isTDS ? tds : 0);\n    const maxAllowedAdvance = Math.min(maxAdvance, remainingAfterDiscountTDS);\n\n    return (\n      <input\n        {...field}\n        type=\"number\"\n        step=\"0.01\"\n        min=\"0\"\n        max={maxAllowedAdvance}\n        className={inputClassName}\n        onChange={handleAdvanceInput}\n      />\n    );\n  }}\n/>\n                    <div className=\"text-sm text-gray-600\">\n                      Max available advance: {maxAdvance}\n                    </div>\n                    {errors.advance && (\n                      <p className=\"text-red-500 text-sm mt-1\">{errors.advance.message}</p>\n                    )}\n                  </div>\n                )}\n\n\n                <div>\n                  <label className={inputLabelClassName}>Grand Total</label>\n                  <input\n                    type=\"text\"\n                    {...register(\"grandTotal\")}\n                    className={inputDisabledClassName}\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {Number(grandTotal) > 0 && (\n            <div className=\"py-2\">\n              <div className=\"grid grid-cols-1 md:grid-cols-1 md:gap-2 md:my-1 px-3 md:mt-2\">\n                <div className=\"\">\n                  <div className=\"flex items-center gap-4\">\n                    <label className=\"your-input-label-class\">\n                      <Controller\n                        name=\"paymentMode\"\n                        control={control}\n                        rules={{ required: \"Type is required\" }}\n                        render={({ field }) => (\n                          <Radio.Group defaultValue={\"cash\"} {...field}\n                          value={field?.value}\n                          onChange={(e)=>{\n                            field.onChange(e?.target?.value)\n                            if(e?.target?.value=='cash'){\n                              setValue('bankId','')\n                              setValue('transactionNo','')                              \n                            }\n                            else{\n                              setValue('employeeId','')                              \n                            }\n                          }}\n                          >\n                            <Radio className={`${inputLabelClassName}`} value=\"cash\">Cash</Radio>\n                            <Radio className={`${inputLabelClassName}`} value=\"bank\">Bank</Radio>\n                          </Radio.Group>\n                        )}\n                      />\n                    </label>\n                    {errors.type && <span className=\"error-message\">{errors.type.message}</span>}\n                  </div>\n                  {errors.type && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.type.message}\n                    </p>\n                  )}\n                </div>\n\n                {watch(\"paymentMode\") !== \"cash\" && (\n                  <div className=\"\">\n                    <label className={`${inputLabelClassName}`}>\n                      Sender Bank<span className=\"text-red-600\">*</span>\n                    </label>\n                    <Controller\n                      control={control}\n                      name=\"bankId\"\n                      rules={{ required: \"bankId is required\" }}\n                      render={({ field }) => (\n                        <Select\n                          {...field}\n                          defaultValue={\"\"}\n                          className={`${inputAntdSelectClassName} `}\n                          showSearch\n                          filterOption={(input, option) =>\n                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                          }\n                          onFocus={() => {\n                            dispatch(getBranchDetails({\n                              _id: paymentDetails?.branchId\n                            }))\n                          }}\n                        >\n                          <Select.Option value=\"\">Select Bank</Select.Option>\n                          {branchDetailsData?.data?.bankData && branchDetailsData?.data?.bankData.length > 0 &&\n                            branchDetailsData.data.bankData.map((type) => (\n                              <Select.Option key={type._id} value={type._id}>\n                                {optionLabelForBankSlect(type)}\n                              </Select.Option>\n                            ))\n                          }\n                        </Select>\n                      )}\n                    />\n                    {errors.bankId && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.bankId.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n\n                {watch(\"paymentMode\") === \"cash\" && (\n                  <div className=\"w-full\">\n                    <label className={`${inputLabelClassName}`}>Employee</label>\n                    <Controller\n                      name=\"employeeId\"\n                      control={control}\n                      rules={{ required: \"Employee is required\" }}\n                      render={({ field }) => (\n                        <ReactSelect\n                          {...field}\n                          onFocus={() => dispatch(employeSearch({\n                            text: \"\",\n                            status: true,\n                            sort: true,\n                            isTL: \"\",\n                            isHR: \"\",\n                            isPagination: false,\n                            departmentId: '',\n                            designationId: '',\n                            companyId: paymentDetails?.companyId,\n                            branchId: paymentDetails?.branchId,\n                          }))}\n                          options={employeList?.map((employee) => ({\n                            value: employee?._id,\n                            label: employee?.fullName,\n                          }))}\n                          classNamePrefix=\"react-select\"\n                          className={`${inputLabelClassNameReactSelect} ${errors.employeeId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                          placeholder=\"Select Employee\"\n                        />\n                      )}\n                    />\n                    {errors.employeeId && <p className=\"text-red-500 text-sm\">{errors.employeeId.message}</p>}\n                  </div>\n                )}\n\n                {watch(\"paymentMode\") === \"bank\" && (\n                  <div className=\"\">\n                    <label className={`${inputLabelClassName}`}>\n                      Transaction No<span className=\"text-red-600\">*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      {...register(\"transactionNo\", {\n                        required: \"transaction No is required\",\n                      })}\n                      className={` ${inputClassName} ${errors.transactionNo ? \"border-[1px] \" : \"border-gray-300\"}`}\n                      placeholder=\"Enter transaction no\"\n                    />\n                    {errors.transactionNo && (\n                      <p className=\"text-red-500 text-sm\">\n                        {errors.transactionNo.message}\n                      </p>\n                    )}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"px-3\">\n                <div className=\"\">\n                  <label className={`${inputLabelClassName}`}>\n                    Naration<span className=\"text-red-600\">*</span>\n                  </label>\n                  <textarea\n                    {...register(\"naration\", {\n                      required: \"Naration is required\",\n                    })}\n                    className={` ${inputClassName} ${errors.naration ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Enter Naration\"\n                  ></textarea>\n                  {errors.naration && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.naration.message}\n                    </p>\n                  )}\n                </div>\n\n                <div>\n                  <label className={`${inputLabelClassName}`}>Payment Date</label>\n                  <Controller\n                    name=\"date\"\n                    control={control}\n                    render={({ field }) => (\n                      <CustomDatePicker field={field} errors={errors} />\n                    )}\n                  />\n                  {errors.date && <p className=\"text-red-500 text-sm\">Date is required</p>}\n                </div>\n\n                <div className=\"pt-4\">\n                  <div className=\"space-y-4\">\n                    <input\n                      type=\"file\"\n                      onChange={handleFileChange}\n                      className=\"hidden\"\n                      id=\"file-upload\"\n                    />\n                    <label\n                      htmlFor=\"file-upload\"\n                      className=\"inline-flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white cursor-pointer\"\n                    >\n                      <FaRegFile className=\"mr-2\" /> Add Attachments\n                    </label>\n\n                    <div className=\"space-y-2\">\n                      {attachment?.map((file, index) => (\n                        <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 rounded-md\">\n                          <a\n                            href={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${file}`}\n                            className=\"flex items-center space-x-2\"\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            <FaRegFile className=\"text-gray-500\" />\n                            <span className=\"text-sm text-gray-600\">{file}</span>\n                          </a>\n                          <button\n                            type=\"button\"\n                            onClick={() => handleRemoveFile(index)}\n                            className=\"text-red-500 hover:text-red-700\"\n                          >\n                            <FaTimes />\n                          </button>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"flex justify-end m-2\">\n            <button\n              type=\"submit\"\n              disabled={paymentLoading}\n              className={`${paymentLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded`}\n            >\n              {paymentLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default EditPayment;"],"names":["EditPayment","_paymentDetails$advan2","_paymentDetails$advan3","_paymentDetails$advan4","_paymentDetails$advan5","_paymentDetails$advan6","_paymentDetails$advan7","_paymentDetails$purch2","_paymentDetails$purch3","_paymentDetails$purch4","_paymentDetails$purch5","_paymentDetails$purch6","_paymentDetails$purch7","_paymentDetails$purch8","_paymentDetails$cashb2","_paymentDetails$cashb3","_paymentDetails$cashb4","_paymentDetails$cashb5","loading","paymentLoading","useSelector","state","payment","paymentDetails","paymentIdEnc","useParams","paymentId","decrypt","dispatch","useDispatch","navigate","useNavigate","branchDetailsData","branch","employeList","employe","attachment","setAttachments","useState","register","handleSubmit","control","getValues","watch","formState","errors","setValue","resetField","trigger","useForm","defaultValues","isDiscountApplicable","isTDS","isAdvance","discount","tds","advance","grandTotal","useWatch","name","maxAdvance","totalBeforeGrand","useEffect","getpaymentDetails","_id","_paymentDetails$appli","amount","applicableAdvance","availableBalance","calculatePayments","remainingAmount","Number","calculatedDiscount","calculatedTDS","calculatedAdvance","Math","min","availableAdvance","shouldValidate","handleNumberInput","fieldName","maxValue","arguments","length","undefined","e","value","parseFloat","target","getMaxDiscount","getMaxTDS","total","discountAmount","max","handleAdvanceInput","remainingAfterDiscountTDS","maxAllowedAdvance","newGrandTotal","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","async","_paymentDetails$purch","_paymentDetails$cashb","_paymentDetails$advan","_data$employeeId","_paymentDetails$appli2","payload","companyId","directorId","branchId","type","purchaseAssetData","cashbookData","advanceData","data","paymentMode","employeeId","bankId","chequeNo","transactionNo","date","naration","updatepayment","then","error","concat","advanceType","userName","moment","format","purchaseType","assetName","vendorOtherName","inputLabelClassName","_objectSpread","inputDisabledClassName","disabled","Controller","rules","validate","numValue","render","_ref","field","step","inputClassName","onChange","message","_ref2","_ref3","required","_ref4","Radio","defaultValue","_e$target","_e$target2","_ref5","_branchDetailsData$da","_branchDetailsData$da2","Select","inputAntdSelectClassName","showSearch","filterOption","input","option","String","toLowerCase","includes","onFocus","getBranchDetails","Option","bankData","map","optionLabelForBankSlect","_ref6","ReactSelect","employeSearch","text","status","sort","isTL","isHR","isPagination","departmentId","designationId","options","employee","label","fullName","classNamePrefix","inputLabelClassNameReactSelect","placeholder","_ref7","CustomDatePicker","file","files","reqData","filePath","isVideo","isMultiple","fileUploadFunc","res","_res$payload","prev","_res$payload2","id","htmlFor","FaRegFile","index","href","process","rel","onClick","filter","_","i","handleRemoveFile","FaTimes","Loader"],"sourceRoot":""}