{"version":3,"file":"static/js/9842.624f5f69.chunk.js","mappings":"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","sources":["pages/Project management/ProjectManagement/ProjectDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { projectmanagementdashboard } from './ProjectManagementFeatures/_ProjectManagement_reducers';\nimport GlobalLayout from '../../../global_layouts/GlobalLayout/GlobalLayout';\nimport { useForm, Controller, useWatch } from 'react-hook-form';\nimport CustomDatePicker from '../../../global_layouts/DatePicker/CustomDatePicker';\nimport dayjs from 'dayjs';\nimport { domainName } from '../../../constents/global';\nimport {\n    Card,\n    Col,\n    Row,\n    Spin,\n    Table,\n    Tag,\n    Empty,\n    Badge,\n    Tabs,\n    Avatar,\n    Grid,\n    Space,\n    Typography,\n    Button,\n    Divider,\n    Alert,\n    Popover,\n    Progress\n} from 'antd';\nimport {\n    ProjectOutlined,\n    FileTextOutlined,\n    UserOutlined,\n    DollarOutlined,\n    BarChartOutlined,\n    ClockCircleOutlined,\n    ArrowUpOutlined,\n    ArrowDownOutlined,\n    CheckCircleOutlined,\n    SyncOutlined,\n    CloseCircleOutlined,\n    ExclamationCircleOutlined,\n    TeamOutlined,\n    PieChartOutlined,\n    WalletOutlined,\n    ArrowRightOutlined,\n    FundOutlined,\n    ShoppingOutlined,\n    CreditCardOutlined,\n    DashboardOutlined,\n    FilterOutlined,\n    InfoCircleOutlined,\n    CalendarOutlined\n} from '@ant-design/icons';\nimport { Chart } from 'chart.js/auto';\nimport { Doughnut, Bar } from 'react-chartjs-2';\nimport CountUp from 'react-countup';\nimport { encrypt } from '../../../config/Encryption';\nimport { useNavigate } from 'react-router-dom';\n\n// Register ChartJS components\nChart.register();\n\nconst { Title: AntTitle, Text } = Typography;\nconst { useBreakpoint } = Grid;\n\nconst statusColors = {\n    'NotStarted': 'default',\n    'InProgress': 'processing',\n    'OnHold': 'warning',\n    'Completed': 'success',\n    'Cancelled': 'error',\n    'Working': 'processing',\n    'Maintenance': 'warning'\n};\n\nconst statusIcons = {\n    'NotStarted': <ClockCircleOutlined />,\n    'InProgress': <SyncOutlined spin />,\n    'OnHold': <ExclamationCircleOutlined />,\n    'Completed': <CheckCircleOutlined />,\n    'Cancelled': <CloseCircleOutlined />,\n    'Working': <SyncOutlined spin />,\n    'Maintenance': <ExclamationCircleOutlined />\n};\n\nconst ProjectDashboard = () => {\n    const { control, setValue } = useForm();\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const screens = useBreakpoint();\n    const [loading, setLoading] = useState(false);\n    const [activeTab, setActiveTab] = useState('projects');\n    const [chartView, setChartView] = useState('status');\n    const [showDateFilter, setShowDateFilter] = useState(false);\n    const startDate = useWatch({ control, name: \"startDate\", defaultValue: null });\n    const endDate = useWatch({ control, name: \"endDate\", defaultValue: null });\n\n    const userInfoglobal = JSON.parse(\n        localStorage.getItem(`user_info_${domainName}`)\n    );\n\n    const { projectmanagementdashboardData } = useSelector((state) => state.projectManagement);\n\n    useEffect(() => {\n        setLoading(true);\n        if (!startDate && !endDate) return\n        dispatch(projectmanagementdashboard({\n            \"companyId\": userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n            \"directorId\": \"\",\n            \"branchId\": userInfoglobal?.userType === \"companyBranch\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.branchId,\n            startDate: startDate?.format(\"YYYY-MM-DD\"),\n            endDate: endDate?.format(\"YYYY-MM-DD\"),\n        })).finally(() => setLoading(false));\n    }, [startDate, endDate]);\n\n    useEffect(() => {\n        setValue('startDate', dayjs().subtract(1, \"month\"));\n        setValue('endDate', dayjs());\n    }, []);\n\n    // Format data for charts\n    const projectStatusData = {\n        labels: projectmanagementdashboardData?.projectOverview?.projectByStatus?.map(item => item.status) || [],\n        datasets: [\n            {\n                data: projectmanagementdashboardData?.projectOverview?.projectByStatus?.map(item => item.total) || [],\n                backgroundColor: [\n                    '#6366f1',\n                    '#3b82f6',\n                    '#f59e0b',\n                    '#10b981',\n                    '#ef4444',\n                    '#8b5cf6',\n                    '#ec4899'\n                ],\n                borderWidth: 0,\n            },\n        ],\n    };\n\n    const projectCategoryData = {\n        labels: projectmanagementdashboardData?.projectOverview?.projectByCategory?.map(item => item.catagoryName) || [],\n        datasets: [\n            {\n                label: 'Projects by Category',\n                data: projectmanagementdashboardData?.projectOverview?.projectByCategory?.map(item => item.total) || [],\n                backgroundColor: '#3b82f6',\n                borderColor: '#1d4ed8',\n                borderWidth: 1,\n                borderRadius: 4,\n            },\n        ],\n    };\n\n    const financialOverviewData = {\n        labels: ['Generated', 'Received'],\n        datasets: [\n            {\n                label: 'Amount (₹)',\n                data: [\n                    projectmanagementdashboardData?.dashboardCounts?.totalInvoices?.totalDebitAmount || 0,\n                    projectmanagementdashboardData?.dashboardCounts?.totalInvoices?.totalCreditAmount || 0\n                ],\n                backgroundColor: [\n                    'rgba(99, 102, 241, 0.8)',\n                    'rgba(16, 185, 129, 0.8)'\n                ],\n                borderColor: [\n                    'rgba(99, 102, 241, 1)',\n                    'rgba(16, 185, 129, 1)'\n                ],\n                borderWidth: 1,\n                borderRadius: 4,\n            },\n        ],\n    };\n\n    // Recent projects table columns\n    const projectColumns = [\n        {\n            title: 'Project Details',\n            dataIndex: 'projectCode',\n            onCell: () => ({\n                style: { whiteSpace: 'nowrap' },\n            }),\n            key: 'project',\n            render: (text, record) => (\n                <Space direction=\"vertical\" size={2}>\n                    <Text strong style={{ fontSize: '15px' }}>{record.title}</Text>\n                    <Text type=\"secondary\" style={{ fontSize: '13px' }}>{text}</Text>\n                    <Space size={4}>\n                        <Tag icon={statusIcons[record.status]} color={statusColors[record.status]}>\n                            {record.status}\n                        </Tag>\n                        {record.priority && (\n                            <Tag color={\n                                record.priority === 'High' ? 'red' :\n                                    record.priority === 'Medium' ? 'orange' : 'green'\n                            }>\n                                {record.priority}\n                            </Tag>\n                        )}\n                    </Space>\n                </Space>\n            ),\n        },\n        {\n            title: 'Client & Team',\n            dataIndex: 'clientName',\n            onCell: () => ({\n                style: { whiteSpace: 'nowrap' },\n            }),\n            key: 'client',\n            render: (text, record) => (\n                <Space direction=\"vertical\" size={2}>\n                    <div>\n                        <Text strong>Client: </Text>\n                        <Text>{text}</Text>\n                    </div>\n                    {record.teamLeadName && (\n                        <div>\n                            <Text strong>Team Lead: </Text>\n                            <Text>{record.teamLeadName}</Text>\n                        </div>\n                    )}\n                    {record.managerName && (\n                        <div>\n                            <Text strong>Manager: </Text>\n                            <Text>{record.managerName}</Text>\n                        </div>\n                    )}\n                </Space>\n            )\n        },\n        {\n            title: 'Financials',\n            key: 'financials',\n            onCell: () => ({\n                style: { whiteSpace: 'nowrap' },\n            }),\n            render: (_, record) => (\n                <Space direction=\"vertical\" size={2} style={{ textAlign: 'right' }}>\n                    <div>\n                        <Text strong>Total Bill Amount: </Text>\n                        <Text>₹{record.finalWithGSTAmount?.toLocaleString() || '0'}</Text>\n                    </div>\n                    <div>\n                        <Text strong>Amount Due: </Text>\n                        <Text type={record.invoiceSummary?.closingBalance < 0 ? 'danger' : 'success'}>\n                            ₹{Math.abs(record.invoiceSummary?.closingBalance || 0).toLocaleString()}\n                        </Text>\n                    </div>\n                  \n                   \n                </Space>\n            )\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            onCell: () => ({\n                style: { whiteSpace: 'nowrap' },\n            }),\n            width: 100,\n            render: (_, record) => (\n            \n                <Tag\n                    onClick={() => navigate(`/admin/project-invoicing/${encrypt(JSON.stringify(record))}`)}\n                    icon={<ArrowRightOutlined />}\n                    color=\"blue\"\n                    style={{ cursor: 'pointer', margin: 0 }}\n                >\n                    View\n                </Tag>\n            ),\n        }\n    ];\n\n    // Invoice table columns\n    const invoiceColumns = [\n        {\n            title: 'Transaction Details',\n            dataIndex: 'invoiceNumber',\n            key: 'transaction',\n            onCell: () => ({\n                style: { whiteSpace: 'nowrap' },\n            }),\n            render: (text, record) => (\n                <Space direction=\"vertical\" size={2}>\n                    <Text strong style={{ fontSize: '15px' }}>\n                        <Badge\n                            color={record.invoiceType === 'debit' ? 'blue' : 'green'}\n                            text={text}\n                        />\n                    </Text>\n                    <Text type=\"secondary\" style={{ fontSize: '13px' }}>\n                        {record.invoiceDate ? dayjs(record.invoiceDate).format('DD MMM YYYY') :\n                            record.paymentDate ? dayjs(record.paymentDate).format('DD MMM YYYY') : '-'}\n                    </Text>\n                    {record.paymentMethod && (\n                        <Tag color=\"geekblue\">{record.paymentMethod}</Tag>\n                    )}\n                </Space>\n            ),\n        },\n        {\n            title: 'Project',\n            dataIndex: 'projectId',\n            key: 'project',\n            onCell: () => ({\n                style: { whiteSpace: 'nowrap' },\n            }),\n            render: (_, record) => (\n                <Text strong>\n                    {projectmanagementdashboardData?.projectOverview?.recentProjects?.find(\n                        p => p._id === record.projectId\n                    )?.title || 'N/A'}\n                </Text>\n            )\n        },\n        {\n            title: 'Amount',\n            key: 'amount',\n            onCell: () => ({\n                style: { whiteSpace: 'nowrap' },\n            }),\n            render: (_, record) => (\n                <Space direction=\"vertical\" size={2} style={{ textAlign: 'right' }}>\n                    <Text strong style={{ fontSize: '16px' }}>\n                        ₹{(\n                            record.invoiceType === 'debit' ?\n                                record.finalWithGSTAmount :\n                                record.amountPaid\n                        )?.toLocaleString() || '0'}\n                    </Text>\n                </Space>\n            )\n        },\n        {\n            title: 'Type',\n            dataIndex: 'invoiceType',\n            key: 'type',\n            onCell: () => ({\n                style: { whiteSpace: 'nowrap' },\n            }),\n            render: (type) => (\n                <Tag color={type === 'debit' ? 'blue' : 'green'}>\n                    {type === 'debit' ? 'Invoice Generated' : 'Payment Received'}\n                </Tag>\n            )\n        }\n    ];\n\n    const SummaryCard = ({ title, value, icon, color, prefix, suffix, trend, description, isFiltered, onClick }) => {\n        return (\n            <Card\n                bordered={false}\n                style={{\n                    borderRadius: '12px',\n                    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n                    height: '100%',\n                    position: 'relative',\n                    overflow: 'hidden'\n                }}\n                bodyStyle={{ padding: '16px' }}\n                onClick={onClick}\n            >\n                {/* {isFiltered && (\n                    <div style={{\n                        position: 'absolute',\n                        top: '8px',\n                        right: '8px',\n                        backgroundColor: '#f0f5ff',\n                        padding: '2px 6px',\n                        borderRadius: '4px',\n                        fontSize: '10px',\n                        color: '#3b82f6',\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '4px'\n                    }}>\n                        <CalendarOutlined style={{ fontSize: '10px' }} />\n                        <span>Filtered</span>\n                    </div>\n                )} */}\n                <Space size=\"middle\" direction=\"vertical\" style={{ width: '100%' }}>\n                    <Space size=\"middle\" style={{ width: '100%', justifyContent: 'space-between' }}>\n                        <Text type=\"secondary\">{title}</Text>\n                        <Avatar\n                            size=\"large\"\n                            icon={icon}\n                            style={{\n                                backgroundColor: `${color}20`,\n                                color: color\n                            }}\n                        />\n                    </Space>\n                    <Space size=\"small\" direction=\"vertical\" style={{ width: '100%' }}>\n                        <AntTitle level={3} style={{ margin: 0 }}>\n                            {prefix}\n                            <CountUp\n                                end={value}\n                                duration={1}\n                                separator=\",\"\n                                style={{ color: color }}\n                            />\n                            {suffix}\n                        </AntTitle>\n                        {trend && (\n                            <Text type={trend.value > 0 ? 'success' : 'danger'}>\n                                {trend.value > 0 ? <ArrowUpOutlined /> : <ArrowDownOutlined />}\n                                {Math.abs(trend.value)}% {trend.label}\n                            </Text>\n                        )}\n                        {description && (\n                            <Text type=\"secondary\" style={{ fontSize: '12px' }}>{description}</Text>\n                        )}\n                    </Space>\n                </Space>\n            </Card>\n        );\n    };\n\n    const ChartContainer = ({ title, children, extra, isFiltered }) => {\n        return (\n            <Card\n                title={\n                    <Space>\n                        <Text>{title}</Text>\n                        {isFiltered && (\n                            <Tag icon={<CalendarOutlined />} color=\"blue\">\n                                Filtered\n                            </Tag>\n                        )}\n                    </Space>\n                }\n                bordered={false}\n                style={{\n                    borderRadius: '12px',\n                    height: '100%',\n                    boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)'\n                }}\n                extra={extra}\n            >\n                {children}\n            </Card>\n        );\n    };\n\n    const renderProjectTable = () => (\n        <Card\n            title={\n                <Space>\n                    <ProjectOutlined />\n                    <Text>Recent Projects</Text>\n                    <Tag icon={<CalendarOutlined />} color=\"blue\">\n                        Filtered\n                    </Tag>\n                </Space>\n            }\n            bordered={false}\n            style={{\n                borderRadius: '12px',\n                boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\n                marginBottom: '24px'\n            }}\n        >\n            <Table\n                columns={projectColumns}\n                dataSource={projectmanagementdashboardData?.projectOverview?.recentProjects || []}\n                rowKey=\"_id\"\n                pagination={{ pageSize: 5 }}\n                size=\"middle\"\n                scroll={{ x: true }}\n                locale={{\n                    emptyText: <Empty description=\"No projects found\" image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                }}\n            />\n        </Card>\n    );\n\n    const renderFinanceTables = () => (\n        <Card\n            title={\n                <Space>\n                    <DollarOutlined />\n                    <Text>Financial Transactions</Text>\n                    <Tag icon={<CalendarOutlined />} color=\"blue\">\n                        Filtered\n                    </Tag>\n                </Space>\n            }\n            bordered={false}\n            style={{\n                borderRadius: '12px',\n                boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\n                marginBottom: '24px'\n            }}\n        >\n            <Tabs\n                defaultActiveKey=\"all\"\n                items={[\n                    {\n                        key: 'all',\n                        label: (\n                            <Space>\n                                <DashboardOutlined />\n                                <Text>All Transactions</Text>\n                            </Space>\n                        ),\n                        children: (\n                            <Table\n                                columns={invoiceColumns}\n                                dataSource={[\n                                    ...(projectmanagementdashboardData?.invoiceOverview?.debitInvoiceList || []),\n                                    ...(projectmanagementdashboardData?.invoiceOverview?.creditInvoiceList || [])\n                                ].sort((a, b) => new Date(b.invoiceDate || b.paymentDate) - new Date(a.invoiceDate || a.paymentDate))}\n                                rowKey=\"_id\"\n                                pagination={{ pageSize: 5 }}\n                                size=\"middle\"\n                                scroll={{ x: true }}\n                                locale={{\n                                    emptyText: <Empty description=\"No transactions found\" image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                                }}\n                            />\n                        ),\n                    },\n                    {\n                        key: 'invoices',\n                        label: (\n                            <Space>\n                                <FileTextOutlined />\n                                <Text>Invoices Generated</Text>\n                            </Space>\n                        ),\n                        children: (\n                            <Table\n                                columns={invoiceColumns}\n                                dataSource={projectmanagementdashboardData?.invoiceOverview?.debitInvoiceList || []}\n                                rowKey=\"_id\"\n                                pagination={{ pageSize: 5 }}\n                                size=\"middle\"\n                                scroll={{ x: true }}\n                                locale={{\n                                    emptyText: <Empty description=\"No invoices generated\" image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                                }}\n                            />\n                        ),\n                    },\n                    {\n                        key: 'payments',\n                        label: (\n                            <Space>\n                                <WalletOutlined />\n                                <Text>Payments Received</Text>\n                            </Space>\n                        ),\n                        children: (\n                            <Table\n                                columns={invoiceColumns}\n                                dataSource={projectmanagementdashboardData?.invoiceOverview?.creditInvoiceList || []}\n                                rowKey=\"_id\"\n                                pagination={{ pageSize: 5 }}\n                                size=\"middle\"\n                                scroll={{ x: true }}\n                                locale={{\n                                    emptyText: <Empty description=\"No payments received\" image={Empty.PRESENTED_IMAGE_SIMPLE} />\n                                }}\n                            />\n                        ),\n                    },\n                ]}\n            />\n        </Card>\n    );\n\n    return (\n        <GlobalLayout isBreadCrump={false}>\n            <div className=\"project-dashboard-container\" style={{ padding: screens.xs ? '16px' : '24px' }}>\n                <Spin spinning={loading} tip=\"Loading dashboard...\" size=\"large\">\n                    {projectmanagementdashboardData ? (\n                        <>\n                            <Row justify=\"space-between\" align=\"middle\" style={{ marginBottom: '16px' }}>\n                                <Col>\n                                    <AntTitle level={3} style={{ margin: 0 }}>\n                                        Project Dashboard\n                                    </AntTitle>\n                                    <Text type=\"secondary\">\n                                        Overview of your projects and financials\n                                    </Text>\n                                </Col>\n                                <Col>\n                                    <Button\n                                        type={showDateFilter ? 'primary' : 'default'}\n                                        icon={<FilterOutlined />}\n                                        onClick={() => setShowDateFilter(!showDateFilter)}\n                                    >\n                                        {showDateFilter ? 'Hide Filters' : 'Filter Tables'}\n                                    </Button>\n                                </Col>\n                            </Row>\n\n                            {showDateFilter && (\n                                <div\n                                    className=\"filter-section\"\n                                    style={{\n                                        padding: '16px',\n                                        marginBottom: '24px',\n                                        borderRadius: '12px',\n                                        backgroundColor: '#f8fafc',\n                                        boxShadow: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)'\n                                    }}\n                                >\n                                    <Alert\n                                        message=\"Date filters only apply to tables below\"\n                                        type=\"info\"\n                                        showIcon\n                                        style={{ marginBottom: '16px' }}\n                                    />\n                                    <Row gutter={[16, 16]} align=\"middle\">\n                                        <Col xs={24} sm={12} md={6}>\n                                            <Controller\n                                                name=\"startDate\"\n                                                control={control}\n                                                render={({ field }) => (\n                                                    <CustomDatePicker\n                                                        report={true}\n                                                        defaultValue={dayjs().subtract(1, \"month\")}\n                                                        size={\"middle\"}\n                                                        field={field}\n                                                        allowClear={false}\n                                                        placeholder=\"Start Date\"\n                                                        style={{ width: '100%' }}\n                                                    />\n                                                )}\n                                            />\n                                        </Col>\n                                        <Col xs={24} sm={12} md={6}>\n                                            <Controller\n                                                name=\"endDate\"\n                                                control={control}\n                                                render={({ field }) => (\n                                                    <CustomDatePicker\n                                                        report={true}\n                                                        defaultValue={dayjs()}\n                                                        size={\"middle\"}\n                                                        field={field}\n                                                        allowClear={false}\n                                                        placeholder=\"End Date\"\n                                                        style={{ width: '100%' }}\n                                                    />\n                                                )}\n                                            />\n                                        </Col>\n                                        <Col xs={24} sm={24} md={12}>\n                                            <Space style={{ float: screens.md ? 'right' : 'none', width: screens.md ? 'auto' : '100%' }}>\n                                                <Button\n                                                    onClick={() => {\n                                                        setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n                                                        setValue(\"endDate\", dayjs());\n                                                    }}\n                                                >\n                                                    Reset Filters\n                                                </Button>\n                                                <Button\n                                                    type=\"primary\"\n                                                    onClick={() => setShowDateFilter(false)}\n                                                >\n                                                    Apply Filters\n                                                </Button>\n                                            </Space>\n                                        </Col>\n                                    </Row>\n                                </div>\n                            )}\n\n                            <Row gutter={[16, 16]} style={{ marginBottom: '16px' }}>\n                                <Col xs={24} sm={12} md={6}>\n                                    <SummaryCard\n                                        title=\"Total Projects\"\n                                        value={projectmanagementdashboardData?.dashboardCounts?.totalProjects || 0}\n                                        icon={<ProjectOutlined />}\n                                        color=\"#3b82f6\"\n                                        description=\"All projects in the system\"\n                                        onClick={()=>navigate('/admin/project-management')}\n                                    />\n                                </Col>\n                                <Col xs={24} sm={12} md={6}>\n                                    <SummaryCard\n                                        title=\"Project Transactions\"\n                                        value={projectmanagementdashboardData?.dashboardCounts?.totalInvoices?.totalInvoices || 0}\n                                        icon={<FileTextOutlined />}\n                                        color=\"#6366f1\"\n                                        description=\"Total Invoices And Payments\"\n                                        isFiltered={showDateFilter}\n                                    />\n                                </Col>\n                                <Col xs={24} sm={12} md={6}>\n                                    <SummaryCard\n                                        title=\"Accountants\"\n                                        value={projectmanagementdashboardData?.dashboardCounts?.totalAccountents || 0}\n                                        icon={<TeamOutlined />}\n                                        color=\"#8b5cf6\"\n                                        description=\"Active team members\"\n                                        onClick={()=>navigate('/admin/accountant-management')}\n                                    />\n                                </Col>\n                                <Col xs={24} sm={12} md={6}>\n                                    <SummaryCard\n                                        title=\"Purchase Expense\"\n                                        value={projectmanagementdashboardData?.dashboardCounts?.purchaseExpenseTotal || 0}\n                                        icon={<ShoppingOutlined />}\n                                        color=\"#f59e0b\"\n                                        prefix=\"₹\"\n                                        description=\"Total expenses on purchases\"\n                                        isFiltered={showDateFilter}\n                                        onClick={()=>navigate('/admin/project-purchase-and-expence')}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row gutter={[16, 16]} style={{ marginBottom: '24px' }}>\n                                <Col xs={24} sm={12} md={6}>\n                                    <SummaryCard\n                                        title=\"Invoices Generated\"\n                                        value={projectmanagementdashboardData?.dashboardCounts?.totalInvoices?.totalDebitCount || 0}\n                                        icon={<CreditCardOutlined />}\n                                        color=\"#3b82f6\"\n                                        description=\"Total invoices sent to clients\"\n                                        isFiltered={showDateFilter}\n                                    />\n                                </Col>\n                                <Col xs={24} sm={12} md={6}>\n                                    <SummaryCard\n                                        title=\"Invoice Amount\"\n                                        value={projectmanagementdashboardData?.dashboardCounts?.totalInvoices?.totalDebitAmount || 0}\n                                        icon={<DollarOutlined />}\n                                        color=\"#3b82f6\"\n                                        prefix=\"₹\"\n                                        description=\"Total amount invoiced\"\n                                        isFiltered={showDateFilter}\n                                    />\n                                </Col>\n                                <Col xs={24} sm={12} md={6}>\n                                    <SummaryCard\n                                        title=\"Payments Received\"\n                                        value={projectmanagementdashboardData?.dashboardCounts?.totalInvoices?.totalCreditCount || 0}\n                                        icon={<WalletOutlined />}\n                                        color=\"#10b981\"\n                                        description=\"Total payments received\"\n                                        isFiltered={showDateFilter}\n                                    />\n                                </Col>\n                                <Col xs={24} sm={12} md={6}>\n                                    <SummaryCard\n                                        title=\"Payment Amount\"\n                                        value={projectmanagementdashboardData?.dashboardCounts?.totalInvoices?.totalCreditAmount || 0}\n                                        icon={<FundOutlined />}\n                                        color=\"#10b981\"\n                                        prefix=\"₹\"\n                                        description=\"Total amount received\"\n                                        isFiltered={showDateFilter}\n                                    />\n                                </Col>\n                            </Row>\n\n                            <Row gutter={[16, 16]} style={{ marginBottom: '24px' }}>\n                                <Col xs={24} lg={12}>\n                                    <ChartContainer\n                                        title={\n                                            <Space>\n                                                <Text>Project Distribution</Text>\n                                                <div style={{ marginLeft: '10px' }}>\n                                                    <Button\n                                                        type={chartView === 'status' ? 'primary' : 'default'}\n                                                        size=\"small\"\n                                                        onClick={() => setChartView('status')}\n                                                        style={{ marginRight: 8 }}\n                                                    >\n                                                        By Status\n                                                    </Button>\n                                                    <Button\n                                                        type={chartView === 'category' ? 'primary' : 'default'}\n                                                        size=\"small\"\n                                                        onClick={() => setChartView('category')}\n                                                    >\n                                                        By Category\n                                                    </Button>\n                                                </div>\n                                            </Space>\n                                        }\n                                    >\n                                        <div style={{ height: '350px', marginTop: '16px' }}>\n                                            {chartView === 'status' ? (\n                                                <Doughnut\n                                                    data={projectStatusData}\n                                                    options={{\n                                                        responsive: true,\n                                                        maintainAspectRatio: false,\n                                                        plugins: {\n                                                            legend: {\n                                                                position: 'right',\n                                                                labels: {\n                                                                    padding: 20,\n                                                                    usePointStyle: true,\n                                                                    pointStyle: 'circle',\n                                                                    font: {\n                                                                        size: screens.xs ? 10 : 12\n                                                                    }\n                                                                }\n                                                            }\n                                                        },\n                                                        cutout: '65%'\n                                                    }}\n                                                />\n                                            ) : (\n                                                <Bar\n                                                    data={projectCategoryData}\n                                                    options={{\n                                                        responsive: true,\n                                                        maintainAspectRatio: false,\n                                                        plugins: {\n                                                            legend: {\n                                                                display: false\n                                                            }\n                                                        },\n                                                        scales: {\n                                                            y: {\n                                                                beginAtZero: true,\n                                                                ticks: {\n                                                                    precision: 0\n                                                                },\n                                                                grid: {\n                                                                    drawBorder: false\n                                                                }\n                                                            },\n                                                            x: {\n                                                                grid: {\n                                                                    display: false\n                                                                }\n                                                            }\n                                                        }\n                                                    }}\n                                                />\n                                            )}\n                                        </div>\n                                    </ChartContainer>\n                                </Col>\n                                <Col xs={24} lg={12}>\n                                    <ChartContainer\n                                        title=\"Financial Overview\"\n                                        extra={<BarChartOutlined />}\n                                        isFiltered={showDateFilter}\n                                    >\n                                        <div style={{ height: '350px', marginTop: '16px' }}>\n                                            <Bar\n                                                data={financialOverviewData}\n                                                options={{\n                                                    responsive: true,\n                                                    maintainAspectRatio: false,\n                                                    plugins: {\n                                                        legend: {\n                                                            display: false\n                                                        }\n                                                    },\n                                                    scales: {\n                                                        y: {\n                                                            beginAtZero: true,\n                                                            ticks: {\n                                                                callback: function (value) {\n                                                                    return '₹' + value.toLocaleString();\n                                                                }\n                                                            },\n                                                            grid: {\n                                                                drawBorder: false\n                                                            }\n                                                        },\n                                                        x: {\n                                                            grid: {\n                                                                display: false\n                                                            }\n                                                        }\n                                                    }\n                                                }}\n                                            />\n                                        </div>\n                                    </ChartContainer>\n                                </Col>\n                            </Row>\n\n                            <Tabs\n                                activeKey={activeTab}\n                                onChange={setActiveTab}\n                                items={[\n                                    {\n                                        key: 'projects',\n                                        label: (\n                                            <Space>\n                                                <ProjectOutlined />\n                                                <Text>Projects</Text>\n\n                                            </Space>\n                                        ),\n                                        children: renderProjectTable(),\n                                    },\n                                    {\n                                        key: 'finance',\n                                        label: (\n                                            <Space>\n                                                <DollarOutlined />\n                                                <Text>Financials</Text>\n\n                                            </Space>\n                                        ),\n                                        children: renderFinanceTables(),\n                                    }\n                                ]}\n                                style={{\n                                    borderRadius: '12px',\n                                    overflow: 'hidden'\n                                }}\n                            />\n                        </>\n                    ) : (\n                        <Card bordered={false} style={{ borderRadius: '12px' }}>\n                            <Empty\n                                description=\"No dashboard data available\"\n                                image={Empty.PRESENTED_IMAGE_SIMPLE}\n                            />\n                        </Card>\n                    )}\n                </Spin>\n            </div>\n        </GlobalLayout>\n    );\n};\n\nexport default ProjectDashboard;"],"names":["Chart","register","Title","AntTitle","Text","Typography","useBreakpoint","Grid","statusColors","statusIcons","_jsx","ClockCircleOutlined","SyncOutlined","spin","ExclamationCircleOutlined","CheckCircleOutlined","CloseCircleOutlined","ProjectDashboard","_projectmanagementdas","_projectmanagementdas2","_projectmanagementdas3","_projectmanagementdas4","_projectmanagementdas5","_projectmanagementdas6","_projectmanagementdas7","_projectmanagementdas8","_projectmanagementdas9","_projectmanagementdas0","_projectmanagementdas1","_projectmanagementdas10","_projectmanagementdas19","_projectmanagementdas20","_projectmanagementdas21","_projectmanagementdas22","_projectmanagementdas23","_projectmanagementdas24","_projectmanagementdas25","_projectmanagementdas26","_projectmanagementdas27","_projectmanagementdas28","_projectmanagementdas29","_projectmanagementdas30","_projectmanagementdas31","control","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","screens","loading","setLoading","useState","activeTab","setActiveTab","chartView","setChartView","showDateFilter","setShowDateFilter","startDate","useWatch","name","defaultValue","endDate","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","projectmanagementdashboardData","useSelector","state","projectManagement","useEffect","projectmanagementdashboard","userType","_id","companyId","branchId","format","finally","dayjs","subtract","projectStatusData","labels","projectOverview","projectByStatus","map","item","status","datasets","data","total","backgroundColor","borderWidth","projectCategoryData","projectByCategory","catagoryName","label","borderColor","borderRadius","financialOverviewData","dashboardCounts","totalInvoices","totalDebitAmount","totalCreditAmount","projectColumns","title","dataIndex","onCell","style","whiteSpace","key","render","text","record","_jsxs","Space","direction","size","children","strong","fontSize","type","Tag","icon","color","priority","teamLeadName","managerName","_","_record$finalWithGSTA","_record$invoiceSummar","_record$invoiceSummar2","textAlign","finalWithGSTAmount","toLocaleString","invoiceSummary","closingBalance","Math","abs","width","onClick","encrypt","stringify","ArrowRightOutlined","cursor","margin","invoiceColumns","Badge","invoiceType","invoiceDate","paymentDate","paymentMethod","_projectmanagementdas11","_projectmanagementdas12","_projectmanagementdas13","recentProjects","find","p","projectId","_ref","amountPaid","SummaryCard","_ref2","value","prefix","suffix","trend","description","isFiltered","Card","bordered","boxShadow","height","position","overflow","bodyStyle","padding","justifyContent","Avatar","level","CountUp","end","duration","separator","ArrowUpOutlined","ArrowDownOutlined","ChartContainer","_ref3","extra","CalendarOutlined","GlobalLayout","isBreadCrump","className","xs","Spin","spinning","tip","_Fragment","Row","justify","align","marginBottom","Col","Button","FilterOutlined","Alert","message","showIcon","gutter","sm","md","Controller","_ref4","field","CustomDatePicker","report","allowClear","placeholder","_ref5","float","totalProjects","ProjectOutlined","FileTextOutlined","totalAccountents","TeamOutlined","purchaseExpenseTotal","ShoppingOutlined","totalDebitCount","CreditCardOutlined","DollarOutlined","totalCreditCount","WalletOutlined","FundOutlined","lg","marginLeft","marginRight","marginTop","Doughnut","options","responsive","maintainAspectRatio","plugins","legend","usePointStyle","pointStyle","font","cutout","Bar","display","scales","y","beginAtZero","ticks","precision","grid","drawBorder","x","BarChartOutlined","callback","Tabs","activeKey","onChange","items","renderProjectTable","_projectmanagementdas14","Table","columns","dataSource","rowKey","pagination","pageSize","scroll","locale","emptyText","Empty","image","PRESENTED_IMAGE_SIMPLE","renderFinanceTables","_projectmanagementdas15","_projectmanagementdas16","_projectmanagementdas17","_projectmanagementdas18","defaultActiveKey","DashboardOutlined","invoiceOverview","debitInvoiceList","creditInvoiceList","sort","a","b","Date"],"sourceRoot":""}