{"version":3,"file":"static/js/1119.b57575eb.chunk.js","mappings":"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","sources":["pages/reportsManager/hrmsReports/recruitmentOnboardingreport/RecruitmentOnboardingReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { convertMinutesToHoursAndMinutes, domainName, pazeSizeReport, sortByPropertyAlphabetically } from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { recruitmentOnboardingReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { timeSlotSearch } from \"../../../timeSlot/timeSlotsFeatures/_timeSlots_reducers\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport { BsFileEarmarkPdfFill } from \"react-icons/bs\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\n\nfunction RecruitmentOnboardingReport() {\n  const { control, formState: { errors }, setValue } = useForm();\n  const dispatch = useDispatch();\n  const { recruitmentOnboardingReportList, recruitmentOnboardingReportFunc_loading, totalRecruitmentOnboardingReportCount, } = useSelector((state) => state.reports);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const { timeSlotsListData } = useSelector((state) => state.timeSlots);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const { departmentListData, loading: depLoading } = useSelector((state) => state.department);\n  const CompanyId = useWatch({ control, name: \"PDCompanyId\", defaultValue: \"\", });\n  const BranchId = useWatch({ control, name: \"PDBranchId\", defaultValue: \"\", });\n  const designationId = useWatch({ control, name: \"PdDesignationId\", defaultValue: \"\", });\n  const status = useWatch({ control, name: \"status\", defaultValue: \"\", });\n  const departmentId = useWatch({ control, name: \"departmentId\", });\n  const startDate = useWatch({ control, name: \"startDate\", defaultValue: dayjs().subtract(1, \"month\"), });\n  const endDate = useWatch({ control, name: \"endDate\", defaultValue: dayjs(), });\n  const [pageSize, setPageSize] = useState(10);\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        })\n      );\n    }\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      })\n    )\n    setValue('startDate', dayjs().subtract(1, \"month\"));\n    setValue('endDate', dayjs());\n  }, []);\n\n  useEffect(() => {\n    fetchRecruitmentOnboardingListData();\n  }, [\n    currentPage,\n    debouncedFilterText,\n\n    pageSize\n  ]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        \"jobpostId\": \"\",\n        \"offerLatterStatus\": \"\",\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        // startDate: startDate\n        //   ? dayjs(startDate).format(\"YYYY-MM-DD\")\n        //   : '',\n        // endDate: endDate\n        //   ? dayjs(endDate).format(\"YYYY-MM-DD\")\n        //   : '',\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        \"status\": status,\n        departmentId: departmentId,\n        \"departmentIds\": [],\n        designationId: designationId,\n        \"designationIds\": [],\n      },\n    };\n  }\n\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId ? departmentId : '',\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    )\n  };\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const fetchRecruitmentOnboardingListData = () => {\n    dispatch(recruitmentOnboardingReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const onChange = (e) => {\n    setSearchText(e);\n  }\n\n  const handleSubmit = async () => {\n    fetchRecruitmentOnboardingListData()\n  }\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Employee Attendance\");\n\n    worksheet.columns = [\n      { header: \"S.No\", key: \"sno\", width: 6 },\n      { header: \"Employee Name\", key: \"fullName\", width: 20 },\n      { header: \"Designation\", key: \"designation\", width: 20 },\n      { header: \"Department\", key: \"department\", width: 20 },\n      { header: \"Application Date\", key: \"applicationDate\", width: 22 },\n      { header: \"Application Status\", key: \"applicationStatus\", width: 22 },\n      { header: \"Interview Status\", key: \"interviewStatus\", width: 20 },\n      { header: \"Taken By\", key: \"takenBy\", width: 20 },\n      { header: \"OnBoarding Date\", key: \"onboardingDate\", width: 20 },\n      { header: \"OnBoarding Status\", key: \"onboardingStatus\", width: 20 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.recruitmentOnboardingReportFunc(requestPayLoadReturn(false));\n    if (!recruitmentOnboardingReportList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      const interviewList = data?.interviewData?.interviewList || [];\n      const completedIndex = data?.interviewData?.completedInterviews ?? 0;\n\n      const lastRound = interviewList?.find((_, i) => i + 1 === completedIndex);\n      const nextRound = interviewList?.find((_, i) => i === completedIndex);\n\n      return {\n        sno: index + 1,\n\n        fullName: data?.fullName || \"-\",\n        designation: data?.jobPostData?.title || \"-\",\n        department: data?.departmentName || \"-\",\n        applicationDate: data?.applicationData\n          ? dayjs(data?.applicationData?.createdAt).format(\"DD-MM-YYYY hh:mm a\")\n          : \"-\",\n        applicationStatus: data?.applicationData?.status || \"-\",\n        interviewStatus: data?.interviewData?.status || \"-\",\n        takenBy: data?.interviewData?.interviewerName || \"-\",\n        onboardingDate: data?.onboardingData?.createdAt\n          ? dayjs(data?.onboardingData?.createdAt).format(\"DD-MM-YYYY\")\n          : \"-\",\n        onboardingStatus: data?.onboardingData\n          ? data?.onboardingData?.status\n            ? \"Yes\"\n            : \"No\"\n          : \"-\",\n      };\n    });\n\n    // Data row styling\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n      if (item.resume?.hyperlink) {\n        const resumeCell = row.getCell(\"resume\");\n        resumeCell.value = {\n          text: item.resume.text,\n          hyperlink: item.resume.hyperlink,\n        };\n        resumeCell.font = { color: { argb: \"FF0000FF\" }, underline: true };\n      }\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"Employee_Recruitment_Onboarding_Report.xlsx\";\n      link.click();\n    });\n  };\n\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: 'landscape',\n      unit: 'pt',\n      format: 'A2', // Wide enough for many columns\n    });\n\n    doc.setFontSize(16);\n    doc.text(\"Employee Recruitment Onboarding Report\", 40, 30);\n\n    const headers = [\n      \"S.No\",\n      \"Employee Name\",\n      \"Designation\",\n      \"Department\",\n      \"Application Date\",\n      \"Application Status\",\n      \"interview Status\",\n      \"Taken By\",\n      \"OnBoarding Date\",\n      \"OnBoarding Status\",\n\n    ];\n\n    const response = await reportsServices?.recruitmentOnboardingReportFunc(requestPayLoadReturn(false));\n    const docs = response?.data?.docs || [];\n\n\n    const body = docs.map((data, index) => {\n      // const interviewList = data?.interviewData?.interviewList || [];\n      // const completedIndex = data?.interviewData?.completedInterviews ?? 0;\n\n      // const lastRound = interviewList?.find((_, i) => i + 1 === completedIndex);\n      // const nextRound = interviewList?.find((_, i) => i === completedIndex);\n\n      // const resumeLink = data?.resumeUrl\n      //   ? `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public${data.resumeUrl}`\n      //   : null;\n\n      return [\n        index + 1,\n\n        data?.fullName || \"-\",\n        data?.jobPostData?.title || \"-\",\n        data?.departmentName || \"-\",\n        data?.applicationData\n          ? dayjs(data.applicationData.createdAt).format(\"DD-MM-YYYY hh:mm a\")\n          : \"-\",\n        data?.applicationData?.status || \"-\",\n        data?.interviewData?.status || \"-\",\n        data?.interviewData?.interviewerName || \"-\",\n        data?.onboardingData\n          ? dayjs(data.onboardingData.createdAt).format(\"DD-MM-YYYY hh:mm a\")\n          : \"-\",\n        data?.onboardingData\n          ? data.onboardingData.status\n            ? \"Yes\"\n            : \"No\"\n          : \"-\"\n      ];\n    });\n\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 6,\n        fontSize: 9,\n        valign: 'middle',\n        halign: 'left',\n      },\n      headStyles: {\n        fillColor: [210, 210, 210],\n        textColor: 0,\n        fontStyle: 'bold',\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n      // didDrawCell: (data) => {\n      //   if (data.column.index === 6) { // Resume column\n      //     const rowIndex = data.row.index;\n      //     const resumeUrl = docs?.[rowIndex]?.resumeUrl;\n      //     if (resumeUrl) {\n      //       const fullLink = `${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public${resumeUrl}`;\n      //       doc.textWithLink(\"View Resume\", data.cell.x + 2, data.cell.y + 10, { url: fullLink });\n      //     }\n      //   }\n      // },\n    });\n\n    doc.save(\"Employee_Recruitment_Onboarding_Report.pdf\");\n  };\n\n\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1 gap-1 lg:flex justify-between items-center\">\n          <div className=\"sm:flex  grid grid-cols-1 gap-1.5 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div>\n              <Controller\n                name=\"departmentId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        deptSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\n                            \"admin\",\n                            \"company\",\n                            \"companyDirector\",\n                          ].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            {/* <div className=\"\">\n              <Controller\n                name=\"employeeId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    showSearch\n                    filterOption={(input, option) =>\n                      option?.label?.toLowerCase().includes(input.toLowerCase())\n                    }\n                    className=\"inputAntdMultiSelectClassNameFilterReport \"\n                    placeholder=\"Select Employee\"\n                    onFocus={handleEmployeeFocus}\n                    options={employeList?.map((element) => {\n                      return {\n                        label: element.fullName,\n                        value: element._id,\n                      }\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n\n\n                )}\n              />\n\n            </div> */}\n            <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    // mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Select Status\"\n                    options={[\n                      { label: 'Applied', value: 'Applied' },\n                      { label: 'Hold', value: 'Hold' },\n                      { label: 'Shortlisted', value: 'Shortlisted' },\n                      { label: 'Rejected', value: 'Rejected' },\n                      { label: 'Hired', value: 'Hired' },\n                    ]}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"PdCompanyId\", \"\");\n                setValue(\"departmentId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"employeeId\", \"\");\n                setValue(\"daterange\", \"\");\n                setValue(\"shift\", \"\");\n                setValue(\"workType\", \"\");\n                setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n                setValue(\"endDate\", dayjs());\n                handleSubmit()\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit()\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n\n                }}\n              />\n            )}\n          >\n          </Collapse>\n          <div className=\"space-y-1.5 sm:flex justify-between items-center \">\n            <div className=\"flex items-center gap-2 sm:pt-0 pt-1\">\n              <span htmlFor=\"pageSize\" className=\"text-sm font-light text-gray-500\">\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  <div className=\"flex justify-start items-center space-x-1\">\n                    <span>Profile</span>\n                  </div>\n                </th> */}\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Employee Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Designation\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Department\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Application Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Application Status\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Interview Status\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Taken By\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  onBoarding Date\n                </th>\n                <th className=\"tableHead\">\n                  <div className=\"flex justify-start items-center space-x-1\">\n                    <span>onBoarding Status</span>\n                    {/* <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                                      <FaAngleUp\n                                        onClick={() => handleSort(\"profileType\", \"asc\")}\n                                      />\n                                      <FaAngleDown\n                                        onClick={() => handleSort(\"profileType\", \"desc\")}\n                                      />\n                                    </div> */}\n                  </div>\n                </th>\n\n              </tr>\n            </thead>\n            {recruitmentOnboardingReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {recruitmentOnboardingReportList &&\n                  recruitmentOnboardingReportList?.length > 0 ? (\n                  recruitmentOnboardingReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.fullName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.jobPostData?.title || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.departmentName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {dayjs(element?.applicationDate?.createdAt).format('DD-MM-YYYY hh:mm a') || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.applicationData?.status || '-'}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.interviewData?.status || '-'}\n                      </td>\n                      <td className=\"tableData \">\n                        {element?.interviewData?.interviewerName}\n                      </td>\n                      <td className=\"tableData \">\n                        {element?.onboardingData ? (dayjs(element?.onboardingData?.createdAt).format('DD-MM-YYYY hh:mm a')) : '-'}\n                      </td>\n                      <td className=\"tableData \">\n                        {element?.onboardingData ? (element?.onboardingData?.status ? 'Yes' : 'No') : '-'}\n                      </td>\n\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n        </div>\n        <CustomPagination\n          totalCount={totalRecruitmentOnboardingReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default RecruitmentOnboardingReport;"],"names":["control","formState","errors","setValue","useForm","dispatch","useDispatch","recruitmentOnboardingReportList","recruitmentOnboardingReportFunc_loading","totalRecruitmentOnboardingReportCount","useSelector","state","reports","employeList","employe","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","timeSlotsListData","timeSlots","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","departmentListData","loading","depLoading","department","CompanyId","useWatch","name","defaultValue","BranchId","designationId","status","departmentId","pageSize","setPageSize","dayjs","subtract","useEffect","userType","branchSearch","text","sort","isPagination","companyId","_id","deptSearch","fetchRecruitmentOnboardingListData","timer","setTimeout","clearTimeout","requestPayLoadReturn","reqPayload","arguments","length","undefined","branchId","recruitmentOnboardingReportFunc","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","element","fullName","PDBranchId","message","_ref2","_sortByPropertyAlphab","onFocus","onChange","disabled","ListLoader","sortByPropertyAlphabetically","rules","_ref3","allowClear","options","val","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref4","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","htmlFor","id","Number","pazeSizeReport","_response$data2","doc","jsPDF","orientation","unit","format","setFontSize","response","reportsServices","body","data","docs","index","_data$jobPostData2","_data$applicationData3","_data$interviewData5","_data$interviewData6","jobPostData","title","departmentName","applicationData","createdAt","interviewData","interviewerName","onboardingData","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","type","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$interviewData","_data$interviewData$c","_data$interviewData2","_data$jobPostData","_data$applicationData","_data$applicationData2","_data$interviewData3","_data$interviewData4","_data$onboardingData","_data$onboardingData2","_data$onboardingData3","interviewList","completedIndex","completedInterviews","find","_","i","sno","designation","applicationDate","applicationStatus","interviewStatus","takenBy","onboardingDate","onboardingStatus","forEach","item","_item$resume","row","addRow","resume","hyperlink","resumeCell","getCell","underline","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","_element$jobPostData","_element$applicationD","_element$applicationD2","_element$interviewDat","_element$interviewDat2","_element$onboardingDa","_element$onboardingDa2","CustomPagination","totalCount","page"],"sourceRoot":""}