{"version":3,"file":"static/js/8037.6299c8a0.chunk.js","mappings":"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","sources":["pages/reportsManager/finance_report/cashbook_details_report/CashbookDetailsReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertIntoAmount,\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { cashbookDetailsReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\n\nimport { DatePicker } from 'antd';\n\n\n\nfunction CashbookDetailsReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const { RangePicker } = DatePicker;\n  const onOk = value => {\n\n  };\n\n  const [pageSize, setPageSize] = useState(10);\n\n\n\n  const dispatch = useDispatch();\n  const {\n    cashbookDetailsReportList,\n    cashbookDetailsReportFunc_loading,\n    cashbookDetailsReportCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList } = useSelector((state) => state.clientGroup);\n  const { clientList } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const time = useWatch({\n    control,\n    name: \"time\",\n    defaultValue: [],\n  });\n\n\n\n\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n        organizationId: PDOrganizationType,\n        organizationIds: [],\n        departmentId: department,\n        departmentIds: [],\n        industryId: PDindustrytype,\n        industryIds: [],\n        groupId: groupName,\n        groupIds: [],\n        startDate: time?.length > 0 ? dayjs(time[0]).format('YYYY-MM-DD') : '',\n        endDate: time?.length > 0 ? dayjs(time[0]).format('YYYY-MM-DD') : '',\n\n      },\n    };\n  };\n\n\n\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(cashbookDetailsReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n\n  const handleDepartmentModal = (element) => {\n    setDepartmentModalOpen(true);\n    setDepartmentModalData(element);\n  };\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"CashbookDetailsReport\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Employee Name\", key: \"employeeName\", width: 30 },\n      { header: \"Ttal Expenses\", key: \"totalExpenses\", width: 30 },\n      { header: \"Approved\", key: \"approved\", width: 25 },\n      { header: \"Paid\", key: \"paid\", width: 30 },\n      { header: \"Due\", key: \"due\", width: 30 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.cashbookDetailsReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n\n    if (!cashbookDetailsReportList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n\n      return {\n        sno: index + 1,\n\n        employeeName: data?.fullName || \"-\",\n        totalExpenses: data?.totalExpenses || \"-\",\n        approved: data?.approved || \"-\",\n        paid: data?.paid || \"-\",\n        due: data?.due || \"-\"\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"CashbookDetailsReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n    const headers = [\n      \"S.No.\",\n      \"Employee Name\",\n      \"Total Expenses\",\n      \"Approved\",\n      \"Paid\",\n      \"HSNCODE\",\n\n\n      \"Due\",\n\n    ]\n    const response = await reportsServices?.cashbookDetailsReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!cashbookDetailsReportList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        // name: data?.employeData[0].fullName || \"-\",\n        data?.invoiceLayoutData?.firmName || \"-\",\n        data?.fullName || \"-\",\n        data?.totalExpenses || \"-\",\n        data?.approved || \"-\",\n        data?.paid || \"-\",\n        data?.due || \"-\",\n\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`CashbookDetailsReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1 sm:flex justify-between items-center\">\n          <div className=\"\">\n            <Controller\n              name=\"time\"\n              control={control}\n              render={({ field }) => (\n                <RangePicker\n                  {...field}\n                  value={field.value}\n                  onChange={(value) => field.onChange(value)}\n                  format=\"YYYY-MM-DD\"\n                  onOk={onOk}\n                  getPopupContainer={() => document.body} // important: avoids layout issues\n                  popupClassName=\"vertical-range-calendar\"\n                  className=\"custom-range-picker\"\n\n                />\n              )}\n            />\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"PDOrganizationType\", \"\");\n                setValue(\"PDindustrytype\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"groupName\", \"\");\n                setValue('time', '')\n\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n\n        </div>\n      ),\n    },\n\n\n\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          >\n\n          </Collapse>\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1 justify-between items-center\">\n            <div className=\"flex py-1 items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 text-center whitespace-nowrap w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap\">\n                  Employee Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">\n                  Total Expenses\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">\n                  Approved\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">\n                  Paid\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-right\">\n                  Due\n                </th>\n\n\n\n\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th> */}\n              </tr>\n            </thead>\n            {cashbookDetailsReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {cashbookDetailsReportList &&\n                  cashbookDetailsReportList?.length > 0 ? (\n                  cashbookDetailsReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n                      <td className=\"border-none p-2\">\n                        <div className=\"max-w-[200px] overflow-hidden text-ellipsis\">\n                          <Tooltip title={element?.fullName || '-'}>\n                            <span className=\"whitespace-nowrap\">{element?.fullName || '-'}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2 text-right\">\n                        <div className=\"\">\n                          <Tooltip title={convertIntoAmount(element?.totalExpenses) || '-'}>\n                            <span className=\"whitespace-nowrap\">{convertIntoAmount(element?.totalExpenses) || '-'}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2 text-right\">\n                        <div className=\"\">\n                          <Tooltip title={convertIntoAmount(element?.approved) || '-'}>\n                            <span className=\"whitespace-nowrap\">{convertIntoAmount(element?.approved) || '-'}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2 text-right\">\n                        <div className=\"\">\n                          <Tooltip title={convertIntoAmount(element?.paid) || '-'}>\n                            <span className=\"whitespace-nowrap\">{convertIntoAmount(element?.paid) || '-'}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n                      <td className=\"border-none p-2 text-right\">\n                        <div className=\"\">\n                          <Tooltip title={convertIntoAmount(element?.due) || '-'}>\n                            <span className=\"whitespace-nowrap\">{convertIntoAmount(element?.due) || '-'}</span>\n                          </Tooltip>\n                        </div>\n                      </td>\n\n\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {dayjs(element?.createdAt).format(\"DD-MM-YYYY hh:mm a\")}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.createdBy}\n                      </td> */}\n                      {/* <td className=\"tableData \">\n                        {(\n                          <div className=\"flex justify-center items-center gap-1\">\n                            <span>{element?.departmentData?.length}</span>\n                            <span className=\"flex justify-center items-center cursor-pointer\">\n                              <FaEye\n                                onClick={() => handleDepartmentModal(element)}\n                                className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                size={14}\n                              />\n                            </span>\n                          </div>\n                        ) || \"-\"}\n                      </td> */}\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n\n        </div>\n        <CustomPagination\n          totalCount={cashbookDetailsReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default CashbookDetailsReport;\n"],"names":["control","formState","errors","setValue","watch","useForm","RangePicker","DatePicker","onOk","value","pageSize","setPageSize","useState","dispatch","useDispatch","cashbookDetailsReportList","cashbookDetailsReportFunc_loading","cashbookDetailsReportCount","useSelector","state","reports","departmentListData","loading","depLoading","department","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","clientGroup","clientList","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","PDOrganizationType","PDindustrytype","groupName","time","useEffect","timer","setTimeout","clearTimeout","generateFinancialYears","financialYears","year","push","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","status","organizationId","organizationIds","departmentId","departmentIds","industryId","industryIds","groupId","groupIds","startDate","dayjs","format","endDate","fetchClientServiceTaskReport","cashbookDetailsReportFunc","departmentModalOpen","setDepartmentModalOpen","branchSearch","subtract","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","_objectSpread","onChange","getPopupContainer","document","body","popupClassName","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref2","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","htmlFor","Select","id","Number","pazeSizeReport","map","Option","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","data","docs","index","_data$invoiceLayoutDa","invoiceLayoutData","firmName","fullName","totalExpenses","approved","paid","due","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","type","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","sno","employeeName","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","element","Tooltip","title","convertIntoAmount","CustomPagination","totalCount","page"],"sourceRoot":""}