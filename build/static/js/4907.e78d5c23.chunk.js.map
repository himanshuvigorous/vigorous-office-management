{"version":3,"file":"static/js/4907.e78d5c23.chunk.js","mappings":"geAoCA,MAAM,OAAEA,GAAWC,EAAAA,GACb,KAAEC,GAASC,EAAAA,EAmXjB,QAlXA,WACE,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OACT,SACJC,EAAQ,QACRC,IAEEC,EAAAA,EAAAA,OACA,cAAEC,EAAa,SAACC,EAAQ,aAAEC,IAAgBC,EAAAA,EAAAA,MAC1C,qBAAEC,EAAoB,uBAAEC,EAAsB,QAAEC,IAAYC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,eAExFC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,KAE3C,UAAEC,EAAS,QAAEC,EAAO,UAAEC,EAAS,UAAEC,IAAcC,EAAAA,EAAAA,MAC9C,WAAEC,EAAU,kBAAEC,IAAsBZ,EAAAA,EAAAA,IACxCC,GAAUA,EAAMY,SAOTC,EAAcC,IAAmBC,EAAAA,EAAAA,MAC7BC,EAAcC,SAASJ,EAAaK,IAAI,UAAY,EACpDC,EAAeF,SAASJ,EAAaK,IAAI,WAAa,GACtDE,EAAkBP,EAAaK,IAAI,aAAe,IACjDG,EAAaC,IAAkBlB,EAAAA,EAAAA,UAASY,IACxCO,GAAOC,KAAYpB,EAAAA,EAAAA,UAASe,IAC5BM,GAAYC,KAAiBtB,EAAAA,EAAAA,UAAS,KACtCuB,GAAUC,KAAexB,EAAAA,EAAAA,UAASgB,IAEzCS,EAAAA,EAAAA,WAAU,KACR,MAAMC,EAAS,IAAIC,gBACfV,EAAc,GAAGS,EAAOE,IAAI,OAAQX,GACpCE,IAAOO,EAAOE,IAAI,QAAST,IAC3BI,IAAUG,EAAOE,IAAI,WAAYL,IACrCb,EAAgBgB,IACf,CAAEH,GAAUF,GAAYJ,EAAaE,MACxCM,EAAAA,EAAAA,WAAU,KAENI,MAED,CAAEN,GAAUF,GAAYJ,EAAaE,KAExC,MAkBFU,GAAwBA,KAC5B,MAAMC,EAAc,CAClBX,MAAOA,GACPY,KAAMd,EACNe,WAAY,CACVC,KAAMZ,GACNa,MAAM,EACNX,SAASA,GACTY,UAAW/C,EACXgD,cAAc,EACdC,OAAQ,KAGZtD,GAASuD,EAAAA,EAAAA,IAAoBR,KAGzBS,GAAgBC,IACpB,IAAIC,EAAU,CACZC,IAAKF,GAGPG,IAAAA,KAAU,CACRC,MAAO,UACPX,KAAM,mCACNY,KAAM,UACNC,kBAAkB,EAClBC,iBAAkB,OACjBC,KAAMC,IACHA,EAAOC,aACTnE,GAASoE,EAAAA,EAAAA,IAAuBV,IAAUO,KAAMI,IAC1CnC,EAAc,GAAqC,IAAZ,OAApBzB,QAAoB,IAApBA,OAAoB,EAApBA,EAAsB6D,QAC3CnC,EAAeoC,OAAOrC,EAAc,KAEnCmC,EAAKG,OAAS1B,WAOvBJ,EAAAA,EAAAA,WAAU,KACJrC,GACFL,GACEyE,EAAAA,EAAAA,IAAa,CACXvB,KAAM,GACNC,MAAM,EACNG,QAAQ,EACRD,cAAc,EACdD,UAAW/C,MAIhB,CAACA,IAGJ,MAKIqE,GAAU,CACd,CACEb,MAAO,QACPc,UAAW,QACXC,IAAK,QACLC,MAAO,GACPC,OAAQA,CAACC,EAAGC,EAAQC,IAAUA,EAAQ,GAAK/C,EAAc,GAAKE,IAEhE,CACEyB,MAAO,qBACPc,UAAW,OACXC,IAAK,OACLE,OAAQA,CAAC5B,EAAM8B,KACbE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAAWC,UAEpDJ,EAAAA,EAAAA,KAACtF,EAAI,CAAA0F,SAAEpC,OAIb,CACEW,MAAO,aACPc,UAAW,YACXC,IAAK,YACLE,OAASS,IAAI,IAAAC,EAAA,OAA6C,QAA7CA,EAAKC,IAAMF,GAAMG,OAAO,6BAAqB,IAAAF,EAAAA,EAAI,MAEhE,CACE3B,MAAO,aACPc,UAAW,YACXC,IAAK,aAEP,CACEf,MAAO,SACPc,UAAW,SACXC,IAAK,SACLE,OAASxB,IACP4B,EAAAA,EAAAA,KAACS,EAAAA,EAAG,CAACC,MAAOtC,EAAS,QAAU,MAAMgC,SAClChC,EAAS,SAAW,cAI3B,CACEO,MAAO,SACPe,IAAK,SACLC,MAAO,IACPC,OAAQA,CAACC,EAAGC,KACVa,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,KAAK,QAAOT,SAAA,EACfN,EAAOgB,gBAAkB9E,IACzBgE,EAAAA,EAAAA,KAACe,EAAAA,EAAO,CAACpC,MAAM,kBAAiByB,UAC9BJ,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,CACLC,KAAK,OACLrC,MAAMoB,EAAAA,EAAAA,KAACkB,EAAAA,EAAY,IACnBC,QAASA,IAAMvG,EAAS,4CAADwG,OAA6CtB,EAAOrB,UAIhFvC,IACC8D,EAAAA,EAAAA,KAACe,EAAAA,EAAO,CAACpC,MAAM,OAAMyB,UACnBJ,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,CACLC,KAAK,OACLrC,MAAMoB,EAAAA,EAAAA,KAACqB,EAAAA,EAAY,IACnBF,QAASA,IAAMvG,EAAS,6BAADwG,QAA8BE,EAAAA,EAAAA,GAAQxB,EAAOrB,WAIzEtC,IACC6D,EAAAA,EAAAA,KAACe,EAAAA,EAAO,CAACpC,MAAM,SAAQyB,UACrBJ,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,CACLC,KAAK,OACLrC,MAAMoB,EAAAA,EAAAA,KAACuB,EAAAA,EAAc,IACrBJ,QAASA,IAAM7C,GAAawB,EAAOrB,KACnC+C,QAAM,WAqDpB,OACEb,EAAAA,EAAAA,MAACc,EAAAA,EAAY,CAAArB,SAAA,EACXJ,EAAAA,EAAAA,KAAA,OAAK0B,UAAU,gCAA+BtB,UAC5CO,EAAAA,EAAAA,MAAA,OAAKe,UAAU,yHAAwHtB,SAAA,EACvIO,EAAAA,EAAAA,MAAA,OAAKe,UAAU,8BAA6BtB,SAAA,EACjBJ,EAAAA,EAAAA,KAAA,QAAM0B,UAAU,mCAAkCtB,SAAC,oBAGnDJ,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,CACLC,MAAO1E,GACP2E,SA1IHC,IAC5B3E,GAASkC,OAAOyC,IAChB7E,EAAeoC,OAAO,KAyISqC,UAAU,mKAAkKtB,SAE3K2B,EAAAA,GAAaC,IAAKnB,IACjBb,EAAAA,EAAAA,KAAC2B,EAAAA,EAAOM,OAAM,CAAYL,MAAOf,EAAKT,SACnCS,GADiBA,UAMpC,UAAbzF,GACa,YAAbA,GACa,oBAAbA,KACA4E,EAAAA,EAAAA,KAAA,OAAK0B,UAAU,iFAAgFtB,UAEzFO,EAAAA,EAAAA,MAACgB,EAAAA,EAAM,CACLO,aAAc,GACdC,SAAU1G,EACVoG,SA1NoBD,IAC1BrE,GAAYqE,GACZ3E,EAAe,IAyNT2E,MAAOtE,GACPoE,UAAS,GAAAN,OAAKgB,EAAAA,GAA8B,KAC5CC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQpC,UACZsC,cACAC,SAASJ,EAAMG,eACnBtC,SAAA,EAEDJ,EAAAA,EAAAA,KAAC2B,EAAAA,EAAOM,OAAM,CAACL,MAAM,GAAExB,SAAC,kBACvB9D,GACC0D,EAAAA,EAAAA,KAAC2B,EAAAA,EAAOM,OAAM,CAACE,UAAQ,EAAA/B,UACrBJ,EAAAA,EAAAA,KAAC4C,EAAAA,EAAU,MAGH,OAAVvG,QAAU,IAAVA,OAAU,EAAVA,EAAY2F,IAAKf,IACfjB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAOM,OAAM,CAAiBL,MAAW,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,IAAI2B,SACzC,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAM4B,UADe,OAAJ5B,QAAI,IAAJA,OAAI,EAAJA,EAAMxC,YAWxCuB,EAAAA,EAAAA,KAAA,OAAK0B,UAAU,iCAAgCtB,UAC7CJ,EAAAA,EAAAA,KAAA,UACEmB,QAASA,KAlQTlE,EAAe,GACfM,GAAY,IACZJ,GAAS,IACTE,GAAc,KAkQdqE,UAAU,4FAA2FtB,UAErGJ,EAAAA,EAAAA,KAAA,QAAM0B,UAAU,cAAatB,SAAC,cAIhCpE,IACAgE,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,CACLC,KAAK,UACLrC,MAAMoB,EAAAA,EAAAA,KAACkB,EAAAA,EAAY,IACnBC,QAASA,IAAMvG,EAAS,+BAA+BwF,SACxD,sBAgBJ3E,GACCuE,EAAAA,EAAAA,KAAC8C,EAAAA,EAAO,KAERnC,EAAAA,EAAAA,MAAA,OAAKe,UAAU,qCAAoCtB,SAAA,EACjDJ,EAAAA,EAAAA,KAAC+C,EAAAA,EAAK,CACJvD,QAASA,GACTwD,WAAYzH,EACZ0H,OAAO,MACPC,WAAY,CACVC,kBA7IerD,IACzB,MAAMsD,EAAa,IACd5D,GAAQ6D,MAAM,GAAI,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAEpB9D,GAAQA,GAAQJ,OAAS,IAAE,IAC9BQ,OAAQA,CAACC,EAAG0D,KACV5C,EAAAA,EAAAA,MAACC,EAAAA,EAAK,CAACC,KAAK,QAAOT,SAAA,CAChBlE,IACC8D,EAAAA,EAAAA,KAACe,EAAAA,EAAO,CAACpC,MAAM,OAAMyB,UACnBJ,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,CACLC,KAAK,OACLrC,MAAMoB,EAAAA,EAAAA,KAACqB,EAAAA,EAAY,IACnBF,QAASA,IAAMvG,EAAS,6BAADwG,QAA8BE,EAAAA,EAAAA,GAAQiC,EAAU9E,WAI5EtC,IACC6D,EAAAA,EAAAA,KAACe,EAAAA,EAAO,CAACpC,MAAM,SAAQyB,UACrBJ,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,CACLC,KAAK,OACLrC,MAAMoB,EAAAA,EAAAA,KAACuB,EAAAA,EAAc,IACrBJ,QAASA,IAAM7C,GAAaiF,EAAU9E,KACtC+C,QAAM,YASpB,OACExB,EAAAA,EAAAA,KAAC+C,EAAAA,EAAK,CACJvD,QAAS4D,EACTJ,WAAYlD,EAAO0D,oBACnBP,OAAO,MACPQ,YAAY,EACZC,YAAY,EACZ7C,KAAK,QACLZ,MAAO,CAAE0D,gBAAiB,cAuGpBC,gBAAiB/H,EACjBgI,SAAUA,CAACC,EAAUhE,KAEjBhE,EADEgI,EACc,IAAIjI,EAAciE,EAAOrB,KAEzB5C,EAAakI,OAAOxF,GAAMA,IAAOuB,EAAOrB,OAG5DuF,cAAgBlE,IAAM,IAAAmE,EAAA,OAA+B,QAA1BA,EAAAnE,EAAO0D,2BAAmB,IAAAS,OAAA,EAA1BA,EAA4B7E,QAAS,IAElEqE,YAAY,EACZS,UAAQ,KAEVlE,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEkE,UAAW,GAAIC,UAAW,SAAUhE,UAChDJ,EAAAA,EAAAA,KAACqE,EAAAA,EAAgB,CACfC,WAAY9I,EACZ+I,SAAUrH,GACVF,YAAaA,EACb6E,SAnTwB/D,GAASb,EAAea,YA0T9D,C","sources":["pages/PreSalesManagement/LeadsManagementCategory/LeadsManagementCategory.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useNavigate, useSearchParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Table,\n  Tag,\n  Button,\n  Space,\n  Tooltip,\n  Input,\n  Card,\n  Typography,\n  Badge,\n  Select\n} from \"antd\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  PlusOutlined,\n  DownOutlined,\n  RightOutlined\n} from \"@ant-design/icons\";\nimport dayjs from \"dayjs\";\nimport getUserIds from \"../../../constents/getUserIds\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport { deleteLeadCategoryFunc, getLeadCategoryList } from \"./LeadCategoryFeatures/_LeadCategory_reducers\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport { encrypt } from \"../../../config/Encryption\";\nimport Swal from \"sweetalert2\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { inputAntdSelectClassNameFilter, pageSizeLead } from \"../../../constents/global\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\n\nconst { Search } = Input;\nconst { Text } = Typography;\nfunction LeadsManagementCategory() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n    const {\n      setValue,\n      control,\n     \n    } = useForm();\n  const { userCompanyId,userType ,userBranchId} = getUserIds();\n  const { LeadCategoryListData, totalLeadCategoryCount, loading } = useSelector((state) => state.leadCategory);\n\n  const [expandedRows, setExpandedRows] = useState([]);\n\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n   const { branchList, branchListloading } = useSelector(\n    (state) => state.branch\n  );\n\n\n\n\n\n     const [searchParams, setSearchParams] = useSearchParams();\n          const initialPage = parseInt(searchParams.get(\"page\")) || 1;\n          const initialLimit = parseInt(searchParams.get(\"limit\")) || 10;\n          const initialBranchId = searchParams.get(\"branchId\") || \"\";     \n          const [currentPage, setCurrentPage] = useState(initialPage);\n          const [limit, setLimit] = useState(initialLimit);   \n          const [searchText, setSearchText] = useState(\"\");   \n          const [branchId, setBranchId] = useState(initialBranchId);\n      \n          useEffect(() => {\n            const params = new URLSearchParams();\n            if (currentPage > 1) params.set(\"page\", currentPage);\n            if (limit) params.set(\"limit\", limit);\n            if (branchId) params.set(\"branchId\", branchId);\n            setSearchParams(params);\n          }, [ branchId, searchText, currentPage, limit]);\n          useEffect(() => {\n          \n              fetchLeadCategoryList();\n          \n          }, [ branchId, searchText, currentPage, limit]);\n        \n          const handleResetFilters = () => {\n            setCurrentPage(1);\n            setBranchId(\"\");\n            setLimit(10);\n            setSearchText(\"\");\n          };\n          const onChange = (e) => {\n            setSearchText(e);\n          };\n        \n          const onPaginationChange = (page) => setCurrentPage(page);\n          const handleBranchChange = (value) => {\n            setBranchId(value);\n            setCurrentPage(1);\n          };\n\n\n\n  const fetchLeadCategoryList = () => {\n    const reqListData = {\n      limit: limit,\n      page: currentPage,\n      reqPayload: {\n        text: searchText,\n        sort: true,\n        branchId:branchId,\n        companyId: userCompanyId,\n        isPagination: true,\n        status: \"\",\n      },\n    };\n    dispatch(getLeadCategoryList(reqListData));\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deleteLeadCategoryFunc(reqData)).then((data) => {\n          if (currentPage > 1 && LeadCategoryListData?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n          } else {\n            !data.error && fetchLeadCategoryList()\n          }\n        });\n      }\n    });\n  };\n\n    useEffect(() => {\n      if (userCompanyId) {\n        dispatch(\n          branchSearch({\n            text: \"\",\n            sort: true,\n            status: true,\n            isPagination: false,\n            companyId: userCompanyId,\n          })\n        );\n      }\n    }, [userCompanyId]);\n\n\n    const handlePageSizeChange = (e) => {\n      setLimit(Number(e));\n      setCurrentPage(Number(1))\n    };\n\n  const columns = [\n    {\n      title: \"S.No.\",\n      dataIndex: \"index\",\n      key: \"index\",\n      width: 80,\n      render: (_, record, index) => index + 1 + (currentPage - 1) * limit,\n    },\n    {\n      title: \"Lead Category Name\",\n      dataIndex: \"name\",\n      key: \"name\",\n      render: (text, record) => (\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n\n          <Text>{text}</Text>\n        </div>\n      ),\n    },\n    {\n      title: \"Created At\",\n      dataIndex: \"createdAt\",\n      key: \"createdAt\",\n      render: (date) => dayjs(date).format('DD-MM-YYYY hh:mm a') ?? \"-\",\n    },\n    {\n      title: \"Created By\",\n      dataIndex: \"createdBy\",\n      key: \"createdBy\",\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <Tag color={status ? \"green\" : \"red\"}>\n          {status ? \"Active\" : \"Inactive\"}\n        </Tag>\n      ),\n    },\n    {\n      title: \"Action\",\n      key: \"action\",\n      width: 150,\n      render: (_, record) => (\n        <Space size=\"small\">\n          {!record.leadCategoryId && canCreate && (\n            <Tooltip title=\"Add Subcategory\">\n              <Button\n                type=\"text\"\n                icon={<PlusOutlined />}\n                onClick={() => navigate(`/admin/lead-category/create?parentPageId=${record._id}`)}\n              />\n            </Tooltip>\n          )}\n          {canUpdate && (\n            <Tooltip title=\"Edit\">\n              <Button\n                type=\"text\"\n                icon={<EditOutlined />}\n                onClick={() => navigate(`/admin/lead-category/edit/${encrypt(record._id)}`)}\n              />\n            </Tooltip>\n          )}\n          {canDelete && (\n            <Tooltip title=\"Delete\">\n              <Button\n                type=\"text\"\n                icon={<DeleteOutlined />}\n                onClick={() => handleDelete(record._id)}\n                danger\n              />\n            </Tooltip>\n          )}\n        </Space>\n      ),\n    },\n  ];\n\n  const expandedRowRender = (record) => {\n    const subColumns = [\n      ...columns.slice(0, -1), // Copy all columns except the last one (Action)\n      {\n        ...columns[columns.length - 1], // Copy the Action column\n        render: (_, subRecord) => (\n          <Space size=\"small\">\n            {canUpdate && (\n              <Tooltip title=\"Edit\">\n                <Button\n                  type=\"text\"\n                  icon={<EditOutlined />}\n                  onClick={() => navigate(`/admin/lead-category/edit/${encrypt(subRecord._id)}`)}\n                />\n              </Tooltip>\n            )}\n            {canDelete && (\n              <Tooltip title=\"Delete\">\n                <Button\n                  type=\"text\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleDelete(subRecord._id)}\n                  danger\n                />\n              </Tooltip>\n            )}\n          </Space>\n        ),\n      },\n    ];\n\n    return (\n      <Table\n        columns={subColumns}\n        dataSource={record.leadSubCategoryData}\n        rowKey=\"_id\"\n        pagination={false}\n        showHeader={false}\n        size=\"small\"\n        style={{ backgroundColor: '#fafafa' }}\n      />\n    );\n  };\n\n  return (\n    <GlobalLayout>\n      <div className=\"flex justify-end items-center\">\n        <div className=\"grid grid-cols-1 gap-2 xl:grid-cols-5 2xl:grid-cols-7 lg:grid-cols-4 sm:grid-cols-2 md:grid-cols-4 w-full items-center\">\n        <div className=\"flex items-center p-2 gap-2\">\n                                   <span className=\"text-sm font-light text-gray-500\">\n                                     Rows per page:\n                                   </span>\n                                   <Select\n                                     value={limit}\n                                     onChange={handlePageSizeChange}\n                                     className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n                                   >\n                                     {pageSizeLead.map((size) => (\n                                       <Select.Option key={size} value={size}>\n                                         {size}\n                                       </Select.Option>\n                                     ))}\n                                   </Select>\n                                 </div>\n        {(userType === \"admin\" ||\n          userType === \"company\" ||\n          userType === \"companyDirector\") && (\n          <div className=\"relative md:flex justify-center items-center space-x-2  text-[14px] rounded-md\">\n      \n                <Select\n                  defaultValue={\"\"}\n                  disabled={loading}\n                  onChange={handleBranchChange}\n                  value={branchId}\n                  className={`${inputAntdSelectClassNameFilter} `}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">Select Branch</Select.Option>\n                  {branchListloading ? (\n                    <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>\n                  ) : (\n                    branchList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.fullName}\n                      </Select.Option>\n                    ))\n                  )}\n                </Select>\n            \n          </div>\n        )}\n\n        \n        <div className=\"flex justify-end  items-center\">\n          <button\n            onClick={() => {\n              handleResetFilters()\n            }}\n            className=\"bg-header w-full  py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\"\n          >\n            <span className=\"text-[12px]\">Reset</span>\n          </button>\n        </div>\n      \n         {canCreate && (\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => navigate(\"/admin/lead-category/create\")}\n          >\n            Add Category\n          </Button>\n        )}\n      </div>\n        {/* {canCreate && (\n          <Button\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => navigate(\"/admin/lead-category/create\")}\n          >\n            Add Category\n          </Button>\n        )} */}\n      </div>\n     \n      {loading ? (\n        <Loader2 />\n      ) : (\n        <div className=\"sm:w-full overflow-x-auto bg-white\">\n          <Table\n            columns={columns}\n            dataSource={LeadCategoryListData}\n            rowKey=\"_id\"\n            expandable={{\n              expandedRowRender,\n              expandedRowKeys: expandedRows,\n              onExpand: (expanded, record) => {\n                if (expanded) {\n                  setExpandedRows([...expandedRows, record._id]);\n                } else {\n                  setExpandedRows(expandedRows.filter(id => id !== record._id));\n                }\n              },\n              rowExpandable: (record) => record.leadSubCategoryData?.length > 0,\n            }}\n            pagination={false}\n            bordered\n          />\n          <div style={{ marginTop: 16, textAlign: 'right' }}>\n            <CustomPagination\n              totalCount={totalLeadCategoryCount}\n              pageSize={limit}\n              currentPage={currentPage}\n              onChange={onPaginationChange}\n            />\n          </div>\n        </div>\n      )}\n    </GlobalLayout>\n  );\n}\n\nexport default LeadsManagementCategory;"],"names":["Search","Input","Text","Typography","navigate","useNavigate","dispatch","useDispatch","setValue","control","useForm","userCompanyId","userType","userBranchId","getUserIds","LeadCategoryListData","totalLeadCategoryCount","loading","useSelector","state","leadCategory","expandedRows","setExpandedRows","useState","canCreate","canRead","canUpdate","canDelete","usePermissions","branchList","branchListloading","branch","searchParams","setSearchParams","useSearchParams","initialPage","parseInt","get","initialLimit","initialBranchId","currentPage","setCurrentPage","limit","setLimit","searchText","setSearchText","branchId","setBranchId","useEffect","params","URLSearchParams","set","fetchLeadCategoryList","reqListData","page","reqPayload","text","sort","companyId","isPagination","status","getLeadCategoryList","handleDelete","id","reqData","_id","Swal","title","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteLeadCategoryFunc","data","length","Number","error","branchSearch","columns","dataIndex","key","width","render","_","record","index","_jsx","style","display","alignItems","children","date","_dayjs$format","dayjs","format","Tag","color","_jsxs","Space","size","leadCategoryId","Tooltip","Button","type","PlusOutlined","onClick","concat","EditOutlined","encrypt","DeleteOutlined","danger","GlobalLayout","className","Select","value","onChange","e","pageSizeLead","map","Option","defaultValue","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","ListLoader","fullName","Loader2","Table","dataSource","rowKey","expandable","expandedRowRender","subColumns","slice","_objectSpread","subRecord","leadSubCategoryData","pagination","showHeader","backgroundColor","expandedRowKeys","onExpand","expanded","filter","rowExpandable","_record$leadSubCatego","bordered","marginTop","textAlign","CustomPagination","totalCount","pageSize"],"sourceRoot":""}