{"version":3,"file":"static/js/602.2849856e.chunk.js","mappings":"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","sources":["pages/reportsManager/taskReports/AllTaskReport/AllTaskReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  getDefaultFinacialYear,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { overAllTaskReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { useSearchParams } from \"react-router-dom\";\n\nfunction AllTaskReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  function getValidDayjsDate(dateString) {\n  if (!dateString) return null;\n\n  const trimmed = dateString.trim(); \n  const parsedDate = dayjs(trimmed);\n\n  return parsedDate.isValid() ? parsedDate : null;\n}\n\n\n\n function getStartAndEndDateFromFilter(filterType) {\n  const today = dayjs();\n\n  if (!filterType) return { startDate: null, endDate: null };\n\n  const type = filterType.trim().toLowerCase();\n  let startDate = null;\n  let endDate = null;\n\n  switch (type) {\n    case 'today':\n      startDate = today.startOf('day');\n      endDate = today.endOf('day');\n      break;\n\n    case 'last week': {\n      const lastWeek = today.subtract(1, 'week');\n      const weekday = lastWeek.day(); // 0 (Sun) to 6 (Sat)\n      startDate = lastWeek.subtract(weekday, 'day').startOf('day');\n      endDate = startDate.add(6, 'day').endOf('day');\n      break;\n    }\n\n    case 'last month':\n      startDate = today.subtract(1, 'month').startOf('month');\n      endDate = today.subtract(1, 'month').endOf('month');\n      break;\n\n    case 'last year':\n      startDate = today.subtract(1, 'year').startOf('year');\n      endDate = today.subtract(1, 'year').endOf('year');\n      break;\n\n    default:\n      return { startDate: null, endDate: null };\n  }\n\n  return { startDate, endDate };\n}\n\n\nconst [pageSize, setPageSize] = useState(10);\nconst [searchParams,setSearchParams]=useSearchParams()\nconst filterDate = searchParams.get('filterDate');\nconst taskToDate = getValidDayjsDate(searchParams.get('toDateNew'));\nconst taskFromDate = getValidDayjsDate(searchParams.get('fromDateNew'));\nconst filteredDate  =getStartAndEndDateFromFilter(filterDate)\n\n\n\n  const dispatch = useDispatch();\n  const {\n    overAllTaskReportList,\n    overAllTaskReportFunc_loading,\n    totaloverAllTaskCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n  const { taskTypeList, loading: taskTypeListLoading } = useSelector((state) => state.taskType);\n  const { clientGroupList, groupSearchLoading } = useSelector((state) => state.clientGroup);\n  const { clientList, loading: clientListLoading } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n  const daterange = useWatch({\n    control,\n    name: \"daterange\",\n    defaultValue: \"\",\n  });\n  // const employeeIds = useWatch({\n  //   control,\n  //   name: \"employeeId\",\n  //   defaultValue: [],\n  // });\n\n  const employeeId = useWatch({\n    control,\n    name: \"employeeId\",\n    defaultValue: \"\",\n  });\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n    defaultValue: filterDate !=='Custom Date' ? filteredDate?.startDate:filterDate =='Custom Date'? taskFromDate :dayjs().subtract(1, \"month\"),\n  });\n  const endDate = useWatch({\n    control,\n    name: \"endDate\",\n    defaultValue: filterDate !=='Custom Date' ? filteredDate?.endDate:filterDate =='Custom Date'? taskToDate :dayjs(),\n  });\n\n  const priority = useWatch({\n    control,\n    name: \"priority\",\n    defaultValue: \"\",\n  });\n\n  const financialYear = useWatch({\n    control,\n    name: \"financialYear\",\n    defaultValue: \"\",\n  });\n\n  const month = useWatch({\n    control,\n    name: \"month\",\n    defaultValue: \"\",\n  });\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const client = useWatch({\n    control,\n    name: \"client\",\n    defaultValue: \"\",\n  });\n\n  const task = useWatch({\n    control,\n    name: \"task\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const [empArray, setEmpArray] = useState([])\n  const [empModal, setEmpModal] = useState(false)\n  const handleEmployeeModal = (element) => {\n    setEmpArray(element ? element : [])\n    setEmpModal(true)\n  }\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const combinedMonth = [...months, ...quarter];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentIds: [],\n        clientIds: [],\n        employeIds: [],\n        taskTypeIds: [],\n        groupIds: [],\n        startDate: startDate ? dayjs(startDate).format(\"YYYY-MM-DD\") : \"\",\n        endDate: endDate ? dayjs(endDate).format(\"YYYY-MM-DD\") : \"\",\n        dateRange: daterange,\n        status: Status,\n        priority: priority,\n        monthName: months.find((data) => {\n          return data == month;\n        })\n          ? month\n          : \"\",\n        monthQuaters: quarter.find((data) => {\n          return data == month;\n        })\n          ? month\n          : \"\",\n        financialYear: financialYear,\n        departmentId: department,\n        clientId: client,\n        employeId: employeeId,\n        taskTypeId: task,\n        groupId: groupName,\n      },\n    };\n  };\n  useEffect(() => {\n    fetchOverAllTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchOverAllTaskReport = () => {\n    dispatch(overAllTaskReportFunc(requestPayLoadReturn(true)));\n  };\n\n  useEffect(() => { \n    setValue('startDate',filterDate !=='Custom Date' ? filteredDate?.startDate:filterDate =='Custom Date'? taskFromDate :dayjs().subtract(1, \"month\"))\n    setValue('endDate',filterDate !=='Custom Date' ? filteredDate?.endDate:filterDate =='Custom Date'? taskToDate :dayjs())\n  }, []);\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    // setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    // setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchOverAllTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"AllTaskReport\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Date\", key: \"date\", width: 15 },\n      { header: \"Task ID\", key: \"taskId\", width: 20 },\n      { header: \"Client Name\", key: \"clientName\", width: 30 },\n      { header: \"Department Name\", key: \"department\", width: 25 },\n      { header: \"Task Name\", key: \"taskName\", width: 30 },\n      { header: \"Assigned To\", key: \"assignedTo\", width: 30 },\n      { header: \"F.Y.\", key: \"financialYear\", width: 15 },\n      { header: \"Period\", key: \"period\", width: 25 },\n      { header: \"Due Date\", key: \"dueDate\", width: 15 },\n      { header: \"Overdue Period\", key: \"overduePeriod\", width: 20 },\n      { header: \"Latest Status\", key: \"status\", width: 20 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.overAllTaskReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n\n    if (!overAllTaskReportList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1,\n        date: data?.createdAt ? dayjs(data.createdAt).format(\"DD-MM-YYYY\") : \"-\",\n        taskId: data?.code || data?._id?.substring(0, 8) + \"...\" || \"-\",\n        clientName: data?.clientData?.fullName || \"-\",\n        department: data?.departmentData?.name || \"-\",\n        taskName: data?.taskName || \"-\",\n        assignedTo: Array.isArray(data?.employeData) ? data.employeData.map(emp => emp?.fullName || \"-\").join(\", \") : data?.employeData || \"-\",\n        financialYear: data?.financialYear || \"-\",\n        period: data?.monthName ? `${data.monthName} (${data?.monthQuaters || \"\"})` : data?.type || \"-\",\n        dueDate: data?.dueDate ? dayjs(data.dueDate).format(\"DD-MM-YYYY\") : \"-\",\n        overduePeriod: data?.isOverDue ? \n          (data?.dueDate ? \n            `${dayjs().diff(dayjs(data.dueDate), 'days')} days` : \n            \"Overdue\"\n          ) : \n          (data?.dueDate ? \n            (dayjs().isAfter(dayjs(data.dueDate)) ? \n              `${dayjs().diff(dayjs(data.dueDate), 'days')} days` : \n              \"Not Overdue\"\n            ) : \"-\"\n          ),\n        status: data?.status\n          ?.replace(/_/g, \" \")\n          .toLowerCase()\n          .replace(/\\b\\w/g, (char) => char.toUpperCase()) || \"-\"\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"AllTaskReport.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n    const headers = [\n      \"S.No.\",\n      \"Date\",\n      \"Task ID\",\n      \"Client Name\",\n      \"Department Name\",\n      \"Task Name\",\n      \"Assigned To\",\n      \"F.Y.\",\n      \"Period\",\n      \"Due Date\",\n      \"Overdue Period\",\n      \"Latest Status\",\n    ];\n    const response = await reportsServices?.overAllTaskReportFunc(\n      requestPayLoadReturn(false)\n    );\n    if (!overAllTaskReportList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        data?.createdAt ? dayjs(data.createdAt).format(\"DD-MM-YYYY\") : \"N/A\",\n        data?.code || data?._id?.substring(0, 8) + \"...\" || \"N/A\",\n        data?.clientData?.fullName || \"N/A\",\n        data?.departmentData?.name || \"N/A\",\n        data?.taskName || \"N/A\",\n        Array.isArray(data?.employeData) ? data.employeData.map(emp => emp?.fullName || \"-\").join(\", \") : data?.employeData || \"N/A\",\n        data?.financialYear || \"N/A\",\n        data?.monthName ? `${data.monthName} (${data?.monthQuaters || \"\"})` : data?.type || \"N/A\",\n        data?.dueDate ? dayjs(data.dueDate).format(\"DD-MM-YYYY\") : \"N/A\",\n        data?.isOverDue ? \n          (data?.dueDate ? \n            `${dayjs().diff(dayjs(data.dueDate), 'days')} days` : \n            \"Overdue\"\n          ) : \n          (data?.dueDate ? \n            (dayjs().isAfter(dayjs(data.dueDate)) ? \n              `${dayjs().diff(dayjs(data.dueDate), 'days')} days` : \n              \"Not Overdue\"\n            ) : \"N/A\"\n          ),\n        data?.status\n          ?.replace(/_/g, \" \")\n          .toLowerCase()\n          .replace(/\\b\\w/g, (char) => char.toUpperCase()) || \"N/A\",\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`AllTaskReport.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div className=\"\">\n              <Controller\n                name=\"groupName\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Group\"\n                    onFocus={() => {\n                      dispatch(\n                        clientGrpSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                          groupId: \"\",\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Group</Select.Option>\n                    {groupSearchLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(clientGroupList)?.map((element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName} ({element?.groupName})\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"department\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        deptSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\n                            \"admin\",\n                            \"company\",\n                            \"companyDirector\",\n                          ].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"client\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    placeholder=\"Select Client\"\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        clientSearch({\n                          companyId:\n                            userInfoglobal?.userType === \"company\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.companyId,\n                          branchId:\n                            userInfoglobal?.userType === \"company\" ||\n                              userInfoglobal?.userType === \"admin\" ||\n                              userInfoglobal?.userType === \"companyDirector\"\n                              ? watch(\"PDBranchId\")\n                              : userInfoglobal?.userType === \"companyBranch\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.branchId,\n                          groupId: groupName,\n                          directorId: \"\",\n                          organizationId: \"\",\n                          industryId: \"\",\n                          // departmentId: department,\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                  >\n                    <Select.Option value=\"\"> Select Client</Select.Option>\n                    {clientListLoading ?\n                      <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(clientList)?.map((element, index) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.fullName}\n                        </Select.Option>\n                      )))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"employeeId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    // mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport \"\n                    placeholder=\"Select Employee\"\n                    onFocus={handleEmployeeFocus}\n                    options={employeList?.map((data) => {\n                      return { value: data._id, label: data.fullName };\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n              {errors.employeeId && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.employeeId.message}\n                </p>\n              )}\n            </div>\n            <div>\n              <Controller\n                control={control}\n                name=\"task\"\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={\"\"}\n                    onFocus={() => {\n                      dispatch(\n                        taskTypeSearch({\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? watch(\"PDCompanyId\")\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId:\n                            userInfoglobal?.userType === \"company\" ||\n                              userInfoglobal?.userType === \"admin\" ||\n                              userInfoglobal?.userType === \"companyDirector\"\n                              ? watch(\"PDBranchId\")\n                              : userInfoglobal?.userType === \"companyBranch\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.branchId,\n                          // departmentId: watch(\"PDDepartmentId\")?.value,\n                          departmentId: \"\",\n                          directorId: \"\",\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                        })\n                      );\n                    }}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\"> Select Task Name</Select.Option>\n                    {taskTypeListLoading ?\n                      <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(taskTypeList)?.map((type, index) => (\n                        <Select.Option value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      )))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Please select Task Status\"\n                    options={CLIENT_TASK_STATUS_ARR?.map((array) => {\n                      return { value: array, label: array };\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"priority\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    placeholder=\"Select Priority\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Priority</Select.Option>\n                    {PRIORITY?.map((array) => {\n                      return (\n                        <Select.Option value={array}>{array}</Select.Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                control={control}\n                name=\"financialYear\"\n                rules={{ required: \"Financial year is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    defaultValue={filterDate ? '' :getDefaultFinacialYear()}\n                    placeholder={\"Select Financial year\"}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">\n                      Select Financial year\n                    </Select.Option>\n                    {financialYears?.map((year, index) => (\n                      <Select.Option key={index} value={year}>\n                        {year}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                control={control}\n                name=\"month\"\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    placeholder=\"Select month \"\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select month </Select.Option>\n                    {combinedMonth?.map((month, index) => (\n                      <Select.Option key={index} value={month}>\n                        {month}\n                      </Select.Option>\n                    ))}\n                  </Select>\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"startDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs().subtract(1, \"month\")}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"endDate\"\n                control={control}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    report={true}\n                    defaultValue={dayjs()}\n                    size={\"middle\"}\n                    field={field}\n                    errors={errors}\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"employeeId\", \"\");\n                setValue(\"daterange\", \"\");\n                setValue(\"shift\", \"\");\n                setValue(\"workType\", \"\");\n                setValue(\"startDate\", null);\n                setValue(\"endDate\", null);\n                setValue(\"priority\", \"\");\n                setValue(\"financialYear\", \"\");\n                setValue(\"month\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"client\", \"\");\n                setValue(\"task\", \"\");\n                setValue(\"groupName\", \"\");\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"space-y-1\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 sm:flex grid grid-cols-1 justify-between items-center\">\n            <div className=\"flex py-1 items-center gap-2\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Task ID\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Client Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Department Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Task Name\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Assigned To\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  F.Y.\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Period\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Due Date\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Overdue Period\n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap text-center\">\n                  Latest Status\n                </th>\n              </tr>\n            </thead>\n            {overAllTaskReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={12}\n                  className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {overAllTaskReportList && overAllTaskReportList?.length > 0 ? (\n                  overAllTaskReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.createdAt ? dayjs(element.createdAt).format(\"DD-MM-YYYY\") : \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.code || element?._id?.substring(0, 8) + \"...\" || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.clientData?.fullName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.departmentData?.name || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.taskName || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        <div className=\"flex gap-2\">\n                          <div> {element?.employeData?.[0]?.fullName || \"-\"}</div>  \n                          {element?.employeData?.length > 1 ? (\n                            <div className=\"text-header flex justify-center items-center gap-1 rounded-full text-semibold text-sm\"> \n                              + <div onClick={() => { handleEmployeeModal(element?.employeData) }} className=\"border justify-center items-center flex h-5 w-5 bg-header text-white text-[12px] rounded-full cursor-pointer\">\n                                {element?.employeData?.length - 1} \n                              </div>\n                            </div>\n                          ) : ''}\n                        </div>\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.financialYear || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.monthName ? `${element.monthName} (${element?.monthQuaters || \"\"})` : element?.type || \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.dueDate ? dayjs(element.dueDate).format(\"DD-MM-YYYY\") : \"-\"}\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        {element?.isOverDue ? \n                          (element?.dueDate ? \n                            `${dayjs().diff(dayjs(element.dueDate), 'days')} days` : \n                            \"Overdue\"\n                          ) : \n                          (element?.dueDate ? \n                            (dayjs().isAfter(dayjs(element.dueDate)) ? \n                              `${dayjs().diff(dayjs(element.dueDate), 'days')} days` : \n                              \"Not Overdue\"\n                            ) : \"-\"\n                          )\n                        }\n                      </td>\n                      <td className=\"whitespace-nowrap text-center border-none p-2\">\n                        <span className={`px-2 py-1 rounded-full text-xs ${\n                          element?.status?.toLowerCase() === 'completed' ? 'bg-green-100 text-green-800' :\n                          element?.status?.toLowerCase() === 'pending' ? 'bg-yellow-100 text-yellow-800' :\n                          element?.status?.toLowerCase() === 'in_progress' ? 'bg-blue-100 text-blue-800' :\n                          element?.status?.toLowerCase() === 'in_review' ? 'bg-purple-100 text-purple-800' :\n                          'bg-gray-100 text-gray-800'\n                        }`}>\n                          {element?.status\n                            ?.replace(/_/g, \" \")\n                            .toLowerCase()\n                            .replace(/\\b\\w/g, (char) => char.toUpperCase()) || \"-\"}\n                        </span>\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={12}\n                      className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n\n          <Modal\n            className=\"antmodalclassName !w-[60%] !h-[50%]\"\n            title=\"Employees\"\n            open={empModal}\n            onCancel={() => setEmpModal(false)}\n            footer={null}\n          >\n            <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                  <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                    S.No.\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">\n                    Employee Name\n                  </th>\n\n                  <th className=\"border-none p-2 whitespace-nowrap \">Email</th>\n                  <th className=\"border-none p-2 whitespace-nowrap \">Mobile</th>\n\n\n                </tr>\n              </thead>\n              {empArray.length == 0 ? (\n                <tr className=\"bg-white bg-opacity-5 \">\n                  <td\n                    colSpan={12}\n                    className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                  >\n                    <Loader2 />\n                  </td>\n                </tr>\n              ) : (\n                <tbody>\n                  {empArray &&\n                    empArray?.length > 0 ? (\n                    empArray?.map(\n                      (element, index) => (\n                        <tr\n                          className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                            } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                        >\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {index + 1}\n                          </td>\n\n                          {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                                  {element.profileImage ? (\n                                    <img\n                                      alt=\"\"\n                                      src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                                      className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                                    />\n                                  ) : (\n                                    <img\n                                      alt=\"\"\n                                      src={`/images/avatar.jpg`}\n                                      className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                                    />\n                                  )}\n                                </td> */}\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.fullName}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.email || \"-\"}\n                          </td>\n\n                          <td className=\"whitespace-nowrap  border-none p-2\">\n                            {element?.mobile?.code || \"-\"}{\" \"}\n                            {element?.mobile?.number || \"-\"}\n                          </td>\n\n\n                          {/* <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                                  <div onClick={()=>{handleDepartmentModal(element)}} className=\"flex justify-center items-center rounded-md h-10 w-10 border-2 border-cyan-500\">\n                                    {element?.departmentData?.length || 0}\n                                  </div>\n                                </td> */}\n                        </tr>\n                      )\n                    )\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td\n                        colSpan={12}\n                        className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                      >\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>\n              )}\n            </table>\n          </Modal>\n        </div>\n        <CustomPagination\n          totalCount={totaloverAllTaskCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default AllTaskReport;"],"names":["control","formState","errors","setValue","watch","useForm","getValidDayjsDate","dateString","trimmed","trim","parsedDate","dayjs","isValid","pageSize","setPageSize","useState","searchParams","setSearchParams","useSearchParams","filterDate","get","taskToDate","taskFromDate","filteredDate","filterType","today","startDate","endDate","toLowerCase","startOf","endOf","lastWeek","subtract","weekday","day","add","getStartAndEndDateFromFilter","dispatch","useDispatch","overAllTaskReportList","overAllTaskReportFunc_loading","totaloverAllTaskCount","useSelector","state","reports","departmentListData","loading","depLoading","department","taskTypeList","taskTypeListLoading","taskType","clientGroupList","groupSearchLoading","clientGroup","clientList","clientListLoading","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","daterange","employeeId","priority","financialYear","month","task","groupName","useEffect","timer","setTimeout","clearTimeout","empArray","setEmpArray","empModal","setEmpModal","financialYears","generateFinancialYears","year","push","months","quarter","combinedMonth","requestPayLoadReturn","reqPayload","text","sort","isPagination","arguments","length","undefined","companyId","userType","_id","directorId","branchId","departmentIds","clientIds","employeIds","taskTypeIds","groupIds","format","dateRange","status","monthName","find","data","monthQuaters","departmentId","clientId","employeId","taskTypeId","groupId","fetchOverAllTaskReport","handleEmployeeFocus","employeSearch","includes","isBranch","isDirector","overAllTaskReportFunc","branchSearch","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","Option","value","map","element","fullName","PDBranchId","message","_ref2","_sortByPropertyAlphab","onFocus","clientGrpSearch","onChange","disabled","ListLoader","sortByPropertyAlphabetically","_ref3","_sortByPropertyAlphab2","deptSearch","_ref4","_sortByPropertyAlphab3","clientSearch","organizationId","industryId","index","_ref5","allowClear","options","val","_ref6","_sortByPropertyAlphab4","taskTypeSearch","type","rules","_ref7","mode","CLIENT_TASK_STATUS_ARR","array","_ref8","PRIORITY","required","_ref9","getDefaultFinacialYear","_ref0","_ref1","CustomDatePicker","report","size","_ref10","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref11","isActive","MdKeyboardArrowDown","style","color","transform","transition","htmlFor","id","Number","pazeSizeReport","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","body","docs","_data$_id2","_data$clientData2","_data$departmentData2","_data$status2","createdAt","code","substring","clientData","departmentData","taskName","Array","isArray","employeData","emp","join","dueDate","isOverDue","diff","isAfter","replace","char","toUpperCase","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$_id","_data$clientData","_data$departmentData","_data$status","sno","date","taskId","clientName","assignedTo","period","overduePeriod","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","_element$_id","_element$clientData","_element$departmentDa","_element$employeData","_element$employeData$","_element$employeData2","_element$employeData3","_element$status","_element$status2","_element$status3","_element$status4","_element$status5","handleEmployeeModal","Modal","title","open","onCancel","footer","_element$mobile","_element$mobile2","email","mobile","number","CustomPagination","totalCount","page"],"sourceRoot":""}