{"version":3,"file":"static/js/6388.c47e7eb4.chunk.js","mappings":"6aAosBA,QA5qBA,WACE,MAAM,QAAEA,EAASC,WAAW,OAAEC,GAAQ,SAAEC,IAAaC,EAAAA,EAAAA,MAC/CC,GAAWC,EAAAA,EAAAA,OACX,wBAAEC,EAAuB,4BAAEC,EAA2B,oCAAEC,IAAwCC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,UAC7H,YAAEC,IAAgBH,EAAAA,EAAAA,IAAaC,GAAUA,EAAMG,UAC/C,gBAAEC,EAAiBC,QAAQC,IAAsBP,EAAAA,EAAAA,IAAaC,GAAUA,EAAMO,cAC7EC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,IACvCC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,OAC7DC,EAAaC,IAAkBT,EAAAA,EAAAA,UAAS,IACxCU,EAAqBC,IAA0BX,EAAAA,EAAAA,UAAS,KACzD,WAAEY,IAAevB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMuB,SAC9C,mBAAEC,EAAoBnB,QAASoB,IAAe1B,EAAAA,EAAAA,IAAaC,GAAUA,EAAM0B,YAC3EC,GAAYC,EAAAA,EAAAA,IAAS,CAAEvC,UAASwC,KAAM,cAAeC,aAAc,KACnEC,GAAWH,EAAAA,EAAAA,IAAS,CAAEvC,UAASwC,KAAM,aAAcC,aAAc,KACjEE,GAAgBJ,EAAAA,EAAAA,IAAS,CAAEvC,UAASwC,KAAM,kBAAmBC,aAAc,KAC3EG,GAAaL,EAAAA,EAAAA,IAAS,CAAEvC,UAASwC,KAAM,aAAcC,aAAc,KACnEI,GAASN,EAAAA,EAAAA,IAAS,CAAEvC,UAASwC,KAAM,SAAUC,aAAc,KAC3DK,GAAoBP,EAAAA,EAAAA,IAAS,CAAEvC,UAASwC,KAAM,oBAAqBC,aAAc,KACjFM,GAAeR,EAAAA,EAAAA,IAAS,CAAEvC,UAASwC,KAAM,kBAExCQ,EAAUC,KADEV,EAAAA,EAAAA,IAAS,CAAEvC,UAASwC,KAAM,eAAgBC,aAAc,MAC3CpB,EAAAA,EAAAA,UAAS,MAMzC6B,EAAAA,EAAAA,WAAU,KAEuB,aAAf,OAAd5B,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,WACa,qBAAf,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,WAEhB9C,GACE+C,EAAAA,EAAAA,IAAa,CACXC,KAAM,GACNC,MAAM,EACNT,QAAQ,EACRU,cAAc,EACdC,UAAwC,WAAf,OAAdlC,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACvBb,EAC6B,aAAf,OAAdhB,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACA,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IACF,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBkC,aAI5BnD,GACEqD,EAAAA,EAAAA,IAAW,CACTL,KAAM,GACNC,MAAM,EACNT,QAAQ,EACRU,cAAc,EACdC,UAAwC,aAAf,OAAdlC,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UAAuC,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IAAoB,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBkC,aAG9FrD,EAAS,YAAawD,MAAQC,SAAS,EAAG,UAC1CzD,EAAS,UAAWwD,QACnB,KACHT,EAAAA,EAAAA,WAAU,KACRW,MACC,CACDhC,EACAE,EACAiB,KAEFE,EAAAA,EAAAA,WAAU,KACR,MAAMY,EAAQC,WAAW,KACvB/B,EAAuBb,IACtB,KAEH,MAAO,KACL6C,aAAaF,KAEd,CAAC3C,IAEJ,MAAM8C,EAAuB,WAC3B,MAAO,CACLpC,YAAaA,EACbmB,SAAUA,EACVkB,WAAY,CACVb,KAAMtB,EACNuB,MAAM,EACNC,eAPkCY,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAQlCX,UAC+B,WAAf,OAAdlC,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACZb,EAC6B,aAAf,OAAdhB,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACA,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IACF,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBkC,UACxBc,SAC+B,aAAf,OAAdhD,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,WACe,WAAf,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,WACa,qBAAf,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACdT,EAC6B,mBAAf,OAAdpB,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACA,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IACF,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,SACxBC,cAAe,GACfxB,aAAcA,EAEd,KAAQ,GACR,UAAa,GACb,eAAkB,GAClB,KAAQ,GACRyB,WAAY5B,EACZ,OAAoB,QAAVC,GAAoC,SAAVA,GAA4B,GAChE,WAAc,2BACd,cAAiBF,EACjB,cAAiB,GACjB,QAAW,GACX,kBAAqBG,GAG3B,EACM2B,EAAsBA,KAC1BpE,GACEqE,EAAAA,EAAAA,IAAc,CACZlB,UAC+B,WAAf,OAAdlC,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACZb,EAC6B,aAAf,OAAdhB,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACA,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IACF,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBkC,UACxBc,SACE,CAAC,QAAS,UAAW,mBAAmBK,SAAuB,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UAC7DT,EAC6B,mBAAf,OAAdpB,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACA,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IACF,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,SACxBvB,aAAcA,GAA8B,GAC5C6B,WAAY,GACZvB,KAAM,GACNC,MAAM,EACNT,QAAQ,EACRU,cAAc,EACdsB,UAAU,EACVC,YAAY,MAQZjB,GAA2BA,KAC/BxD,GAAS0E,EAAAA,EAAAA,IAAwBd,GAAqB,MAKlDe,GAAeC,UACnBpB,MAmHIqB,GAAQ,CACZ,CACEC,IAAK,IACLC,OAAOC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,aAAYC,SAAC,oBACpCA,UACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+DAA8DC,SAAA,EAC3EC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4DAA2DC,SAAA,EACzC,WAAf,OAAdjE,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,WACa,aAAf,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,WACa,qBAAf,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,aACdqC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTjD,KAAK,aACLxC,QAASA,EACT0F,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBH,EAAAA,EAAAA,MAACK,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTN,UAAS,wCACTS,YAAY,gBACZC,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQZ,UACZc,cACA1B,SAASuB,EAAMG,eACnBd,SAAA,EAEDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAM,GAAEhB,SAAC,kBACb,OAAVtD,QAAU,IAAVA,OAAU,EAAVA,EAAYuE,IAAKC,IAChBjB,EAAAA,EAAAA,MAACK,EAAAA,EAAOS,OAAM,CAACC,MAAc,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAAShD,IAAI8B,SAAA,CAChC,IACO,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASC,SAAU,eAM7BxG,EAAOyG,aACNtB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uBAAsBC,SAChCrF,EAAOyG,WAAWC,cAK7BvB,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTjD,KAAK,eACLxC,QAASA,EACT0F,OAAQmB,IAAA,IAAAC,EAAA,IAAC,MAAElB,GAAOiB,EAAA,OAChBrB,EAAAA,EAAAA,MAACK,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTN,UAAS,uCACTU,YAAU,EACVC,aAAcA,CAACC,EAAOC,IACpBC,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQZ,UACZc,cACA1B,SAASuB,EAAMG,eAEpBU,QAASA,KACP1G,GACEqD,EAAAA,EAAAA,IAAW,CACTL,KAAM,GACNC,MAAM,EACNT,QAAQ,EACRU,cAAc,EACdC,UAC+B,WAAf,OAAdlC,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACZb,EAC6B,aAAf,OAAdhB,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACA,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IACF,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBkC,UACxBc,SAAU,CACR,QACA,UACA,mBACAK,SAAuB,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACvBT,EAC6B,mBAAf,OAAdpB,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACA,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IACF,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,aAI5B0C,SAAWT,IACTX,EAAMoB,SAAST,IAEjBR,YAAY,oBAAmBR,SAAA,EAE/BF,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAM,GAAEhB,SAAC,sBACvBnD,GACCiD,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACW,UAAQ,EAAA1B,UACrBF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,MAGmC,QAFhCJ,GAEhBK,EAAAA,EAAAA,IAA6BhF,UAAmB,IAAA2E,OAAA,EAAhDA,EAAkDN,IAC/CC,IACCpB,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAAoBC,MAAc,OAAPE,QAAO,IAAPA,OAAO,EAAPA,EAAShD,IAAI8B,SAC5C,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASjE,MADe,OAAPiE,QAAO,IAAPA,OAAO,EAAPA,EAAShD,gBAU3C4B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTjD,KAAK,kBACLxC,QAASA,EACT0F,OAAQ0B,IAAA,IAAAC,EAAA,IAAC,MAAEzB,GAAOwB,EAAA,OAChB5B,EAAAA,EAAAA,MAACK,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACTN,UAAU,uCACVU,YAAU,EACVD,YAAY,qBACZgB,QAASA,KACP1G,GACEiH,EAAAA,EAAAA,IAAkB,CAChBjE,KAAM,GACNC,MAAM,EACNT,QAAQ,EACRU,cAAc,EACdC,UAC+B,WAAf,OAAdlC,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACZb,EAC6B,aAAf,OAAdhB,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACA,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IACF,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBkC,UACxBc,SAAU,CAAC,QAAS,UAAW,mBAAmBK,SAAuB,OAAdrD,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACvET,EAC6B,mBAAf,OAAdpB,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,UACA,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgBmC,IACF,OAAdnC,QAAc,IAAdA,OAAc,EAAdA,EAAgBgD,aAI5B0C,SAAWT,GAAUX,EAAMoB,SAAST,GACpCN,aAAcA,CAACC,EAAOC,KAAM,IAAAoB,EAAA,OACF,QADEA,EAC1BnB,OAAa,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQZ,iBAAS,IAAAgC,OAAA,EAAxBA,EAA0BlB,cAAc1B,SAASuB,EAAMG,gBACxDd,SAAA,EAEDF,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACC,MAAM,GAAEhB,SAAC,uBACvBtE,GACCoE,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAACW,UAAQ,EAAA1B,UACrBF,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,MAGgC,QAF7BG,GAEhBF,EAAAA,EAAAA,IAA6BpG,UAAgB,IAAAsG,OAAA,EAA7CA,EAA+Cb,IAAKgB,IAClDnC,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAAiBC,MAAW,OAAJiB,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,IAAI8B,SACzC,OAAJiC,QAAI,IAAJA,OAAI,EAAJA,EAAMhF,MADe,OAAJgF,QAAI,IAAJA,OAAI,EAAJA,EAAM/D,gBAStC4B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTjD,KAAK,aACLxC,QAASA,EACT0F,OAAQ+B,IAAA,IAAC,MAAE7B,GAAO6B,EAAA,OAChBpC,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACL6B,KAAK,WACLC,YAAU,EACV3B,YAAU,EACVC,aAAcA,CAACC,EAAOC,KAAM,IAAAyB,EAAA,OACpB,OAANzB,QAAM,IAANA,GAAa,QAAPyB,EAANzB,EAAQf,aAAK,IAAAwC,OAAP,EAANA,EAAevB,cAAc1B,SAASuB,EAAMG,gBAE9Cf,UAAU,6CACVS,YAAY,kBACZgB,QAAStC,EACToD,QAAoB,OAAXhH,QAAW,IAAXA,OAAW,EAAXA,EAAa2F,IAAKC,IAClB,CACLrB,MAAOqB,EAAQC,SACfH,MAAOE,EAAQhD,OAGnB8C,MAAOX,EAAMW,OAAS,GACtBS,SAAWc,GAAQlC,EAAMoB,SAASc,WAK1CzC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTjD,KAAK,SACLxC,QAASA,EACT0F,OAAQqC,IAAA,IAAC,MAAEnC,GAAOmC,EAAA,OAChB1C,EAAAA,EAAAA,KAACQ,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IACT+B,YAAU,EAEVrC,UAAU,4CACVS,YAAY,gBACZ8B,QAAS,CACP,CAAEtB,MAAO,GAAInB,MAAO,iBACpB,CAAEmB,MAAO,OAAQnB,MAAO,UACxB,CAAEmB,MAAO,QAASnB,MAAO,aAE3BmB,MAAOX,EAAMW,MACbS,SAAWc,GAAQlC,EAAMoB,SAASc,YAK1CzC,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAACI,EAAAA,GAAU,CACTjD,KAAK,oBACLxC,QAASA,EACTgI,MAAO,CAAC,EACRtC,OAAQuC,IAAA,IAAC,MAAErC,GAAOqC,EAAA,OAChB5C,EAAAA,EAAAA,KAACQ,EAAAA,GAAMC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDF,GAAK,IAET+B,YAAU,EACVrC,UAAU,4CACVS,YAAY,gBACZ8B,QAAS,CACP,CAAEzC,MAAO,IAAKmB,MAAO,GACrB,CAAEnB,MAAO,IAAKmB,MAAO,GACrB,CAAEnB,MAAO,IAAKmB,MAAO,GACrB,CAAEnB,MAAO,IAAKmB,MAAO,GACrB,CAAEnB,MAAO,IAAKmB,MAAO,GACrB,CAAEnB,MAAO,IAAKmB,MAAO,IAEvBA,MAAOX,EAAMW,OAAS,GACtBS,SAAWc,GAAQlC,EAAMoB,SAASc,eAM5CtC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UACE6C,QAASA,KACP/H,EAAS,aAAc,IACvBA,EAAS,cAAe,IACxBA,EAAS,eAAgB,IACzBA,EAAS,kBAAmB,IAC5BA,EAAS,aAAc,IACvBA,EAAS,SAAU,IACnBA,EAAS,oBAAqB,IAC9B6E,MAEFM,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,aAEhCF,EAAAA,EAAAA,KAAA,UACE6C,QAASA,KACPlD,MAEFM,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,qBAQ1C,OACEF,EAAAA,EAAAA,KAAC8C,EAAAA,EAAY,CAACnB,SA/XEoB,IAChBhH,EAAcgH,IA8XmB7C,UAC/BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,GAAEC,SAAA,EACfF,EAAAA,EAAAA,KAACgD,EAAAA,EAAQ,CACP/C,UAAU,kBACVJ,MAAOA,GACPoD,iBAAkB,CAAC,GACnBC,WAAYC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OACvBnD,EAAAA,EAAAA,KAACqD,EAAAA,IAAmB,CAClBC,KAAM,GACNC,MAAO,CACLC,MAAO,QACPC,UAAWL,EAAW,iBAAmB,eACzCM,WAAY,6BAOpBvD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oDAAmDC,SAAA,EAChEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uCAAsCC,SAAA,EACnDF,EAAAA,EAAAA,KAAA,QAAM2D,QAAQ,WAAW1D,UAAU,mCAAkCC,SAAC,oBAGtEF,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACLoD,GAAG,WACH1C,MAAOvD,EACPgE,SAvhBgBoB,IAC5BnF,EAAYiG,OAAOd,IACnBtG,EAAeoH,OAAO,KAshBV5D,UAAU,mKAAkKC,SAE3K4D,EAAAA,GAAe3C,IAAKmC,IACnBtD,EAAAA,EAAAA,KAACQ,EAAAA,EAAOS,OAAM,CAAYC,MAAOoC,EAAKpD,SACnCoD,GADiBA,UAM1BnD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,UACE6C,QAASA,KAxVHjD,WAAa,IAADmE,EAAAC,EAC9B,MAAMC,EAAM,IAAIC,EAAAA,GAAM,CACpBC,YAAa,YACbC,KAAM,OAERH,EAAII,YAAY,IAChB,MACMC,QAAgC,OAAfC,EAAAA,QAAe,IAAfA,EAAAA,OAAe,EAAfA,EAAAA,EAAiB7E,wBAAwBd,GAAqB,KACrF,IAAK1D,IAA4BoJ,EAAU,OAC3C,MAAME,EAAe,OAARF,QAAQ,IAARA,GAAc,QAANP,EAARO,EAAUG,YAAI,IAAAV,GAAM,QAANC,EAAdD,EAAgBW,YAAI,IAAAV,OAAZ,EAARA,EAAsB7C,IAAI,CAACsD,EAAME,KAAW,IAADC,EACtD,MAAO,CACLD,EAAQ,GACJ,OAAJF,QAAI,IAAJA,OAAI,EAAJA,EAAMpD,WAAY,OACd,OAAJoD,QAAI,IAAJA,GAAoB,QAAhBG,EAAJH,EAAMI,sBAAc,IAAAD,OAAhB,EAAJA,EAAsBzH,OAAQ,MAC1B,OAAJsH,QAAI,IAAJA,OAAI,EAAJA,EAAMK,cACF,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMhH,sBAGVsH,EAAAA,EAAAA,IAAUd,EAAK,CACbe,OAAQ,GACRC,KAAM,CAdQ,CAAC,QAAS,gBAAiB,kBAAmB,uBAAwB,wBAepFT,KAAMA,EACNU,OAAQ,CAAEC,WAAY,IACtBC,OAAQ,CACNC,YAAa,EACbC,SAAU,GACVC,OAAQ,SACRC,OAAQ,QAEVC,WAAY,CACVC,UAAW,CAAC,IAAK,IAAK,KACtBC,UAAW,CAAC,EAAG,EAAG,GAClBC,UAAW,QAEbC,mBAAoB,CAClBH,UAAW,CAAC,IAAK,IAAK,QAG1BzB,EAAI6B,KAAK,mCAmTKC,IAEF9F,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,kBAEhCF,EAAAA,EAAAA,KAAA,UACE6C,QAASA,KAzaDjD,WAAa,IAADoG,EAAAC,EAChC,MAAMC,EAAW,IAAIC,EAAAA,SACfC,EAAYF,EAASG,aAAa,uBAExCD,EAAUE,QAAU,CAClB,CAAEC,OAAQ,OAAQzG,IAAK,MAAO0G,MAAO,IACrC,CAAED,OAAQ,gBAAiBzG,IAAK,OAAQ0G,MAAO,IAC/C,CAAED,OAAQ,aAAczG,IAAK,iBAAkB0G,MAAO,IACtD,CAAED,OAAQ,iBAAkBzG,IAAK,gBAAiB0G,MAAO,IACzD,CAAED,OAAQ,iBAAkBzG,IAAK,WAAY0G,MAAO,KAGpCJ,EAAUK,OAAO,GACzBC,SAAUC,IAClBA,EAAKC,KAAO,CACVzE,KAAM,UACN0E,QAAS,QACTC,QAAS,CAAEC,KAAM,aAEnBJ,EAAKK,KAAO,CAAEC,MAAM,GACpBN,EAAKO,UAAY,CAAEC,SAAU,SAAUhC,WAAY,UACnDwB,EAAKS,OAAS,CACZC,IAAK,CAAE9D,MAAO,QACd+D,KAAM,CAAE/D,MAAO,QACfgE,OAAQ,CAAEhE,MAAO,QACjBiE,MAAO,CAAEjE,MAAO,WAIpB,MAAMe,QAAgC,OAAfC,EAAAA,QAAe,IAAfA,EAAAA,OAAe,EAAfA,EAAAA,EAAiB7E,wBAAwBd,GAAqB,KACrF,IAAK1D,IAA4BoJ,EAAU,OAC3C,MAAMmD,EAAkB,OAARnD,QAAQ,IAARA,GAAc,QAAN0B,EAAR1B,EAAUG,YAAI,IAAAuB,GAAM,QAANC,EAAdD,EAAgBtB,YAAI,IAAAuB,OAAZ,EAARA,EAAsB9E,IAAI,CAACsD,EAAME,KAAW,IAAD+C,EACzD,MAAO,CACLC,IAAKhD,EAAQ,EACbxH,MAAU,OAAJsH,QAAI,IAAJA,OAAI,EAAJA,EAAMpD,WAAY,MACxBuG,gBAAoB,OAAJnD,QAAI,IAAJA,GAAoB,QAAhBiD,EAAJjD,EAAMI,sBAAc,IAAA6C,OAAhB,EAAJA,EAAsBvK,OAAQ,MAC9C2H,cAAmB,OAAJL,QAAI,IAAJA,OAAI,EAAJA,EAAMK,cACrB+C,SAAc,OAAJpD,QAAI,IAAJA,OAAI,EAAJA,EAAMhH,qBAMb,OAAPgK,QAAO,IAAPA,GAAAA,EAASK,QAASC,IACJ3B,EAAU4B,OAAOD,GACzBrB,SAAUC,IACZA,EAAKO,UAAY,CAAEC,SAAU,SAAUhC,WAAY,QACnDwB,EAAKS,OAAS,CACZC,IAAK,CAAE9D,MAAO,QACd+D,KAAM,CAAE/D,MAAO,QACfgE,OAAQ,CAAEhE,MAAO,QACjBiE,MAAO,CAAEjE,MAAO,aAMtB6C,EAAU6B,WAAa,CACrBC,KAAM,KACNC,GAAI,MAINjC,EAASkC,KAAKC,cAAcC,KAAMC,IAChC,MAAMC,EAAO,IAAIC,KAAK,CAACF,GAAS,CAC9BpG,KAAM,sEAEFuG,EAAOC,SAASC,cAAc,KACpCF,EAAKG,KAAOC,IAAIC,gBAAgBP,GAChCE,EAAKM,SAAW,kCAChBN,EAAKO,WAoWOC,IAEFjJ,UAAU,uFAAsFC,UAEhGF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,cAAaC,SAAC,6BAKtCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,UACnEC,EAAAA,EAAAA,MAAA,SAAOF,UAAU,+CAA8CC,SAAA,EAC7DF,EAAAA,EAAAA,KAAA,SAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,kGAAiGC,SAAA,EAC7GF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,uDAAsDC,SAAC,WAIrEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,mBAInDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,qBACnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,0BACnDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qCAAoCC,SAAC,6BAWtD/E,GAA8B6E,EAAAA,EAAAA,KAAA,MAAIC,UAAU,yBAAwBC,UACnEF,EAAAA,EAAAA,KAAA,MACEmJ,QAAS,GACTlJ,UAAU,gEAA+DC,UAEzEF,EAAAA,EAAAA,KAACoJ,EAAAA,EAAO,SAGVpJ,EAAAA,EAAAA,KAAA,SAAAE,SACGhF,IAAkD,OAAvBA,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyB6D,QAAS,EACrC,OAAvB7D,QAAuB,IAAvBA,OAAuB,EAAvBA,EAAyBiG,IAAI,CAACC,EAASuD,KAAK,IAAA0E,EAAA,OAC1ClJ,EAAAA,EAAAA,MAAA,MACEF,UAAS,kBAAA3D,OAAoBqI,EAAQ,IAAM,EAAI,kBAAoB,WAAU,gDAC5BzE,SAAA,EAEjDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,SACrDyE,EAAQ,GAAMnI,EAAc,GAAKmB,KAGpCqC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,UAC9C,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAASC,WAAY,SAExBrB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,UAC9C,OAAPkB,QAAO,IAAPA,GAAuB,QAAhBiI,EAAPjI,EAASyD,sBAAc,IAAAwE,OAAhB,EAAPA,EAAyBlM,OAAQ,SAKpC6C,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,SAC9C,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAAS0D,iBAEZ9E,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2CAA0CC,SAC9C,OAAPkB,QAAO,IAAPA,OAAO,EAAPA,EAAS3D,0BAiBhBuC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wBAAuBC,UACnCF,EAAAA,EAAAA,KAAA,MACEmJ,QAAS,GACTlJ,UAAU,gEAA+DC,SAC1E,+BAQbF,EAAAA,EAAAA,KAACsJ,EAAAA,EAAgB,CACfC,WAAYnO,EACZuC,SAAUA,EACVnB,YAAaA,EACbmF,SAzhBoB6H,IAC1B/M,EAAe+M,UA6hBnB,C","sources":["pages/reportsManager/hrmsReports/employePerformanceReports/EmployePerformanceReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { convertMinutesToHoursAndMinutes, domainName, pazeSizeReport, sortByPropertyAlphabetically } from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Flex, Rate, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { employeePerformanceFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { timeSlotSearch } from \"../../../timeSlot/timeSlotsFeatures/_timeSlots_reducers\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport { designationSearch } from \"../../../designation/designationFeatures/_designation_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\nfunction EmployePerformanceReport() {\n  const { control, formState: { errors }, setValue } = useForm();\n  const dispatch = useDispatch();\n  const { employeePerformanceList, employeePerformance_loading, totalemployeePerformanceReportCount } = useSelector((state) => state.reports);\n  const { employeList } = useSelector((state) => state.employe);\n  const { designationList ,loading:designationloading} = useSelector((state) => state.designation);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const { departmentListData, loading: depLoading } = useSelector((state) => state.department);\n  const CompanyId = useWatch({ control, name: \"PDCompanyId\", defaultValue: \"\", });\n  const BranchId = useWatch({ control, name: \"PDBranchId\", defaultValue: \"\", });\n  const designationId = useWatch({ control, name: \"PdDesignationId\", defaultValue: \"\", });\n  const employeeId = useWatch({ control, name: \"employeeId\", defaultValue: [], });\n  const status = useWatch({ control, name: \"status\", defaultValue: \"\", });\n  const averageTaskRating = useWatch({ control, name: \"averageTaskRating\", defaultValue: \"\", });\n  const departmentId = useWatch({ control, name: \"departmentId\", });\n  const directorId = useWatch({ control, name: \"PDDirectorId\", defaultValue: \"\", });\n  const [pageSize, setPageSize] = useState(10);\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n    setCurrentPage(Number(1))\n  };\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        })\n      );\n    }\n    dispatch(\n      deptSearch({\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        companyId: userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      })\n    )\n    setValue('startDate', dayjs().subtract(1, \"month\"));\n    setValue('endDate', dayjs());\n  }, []);\n  useEffect(() => {\n    fetchPerformanceListData();\n  }, [\n    currentPage,\n    debouncedFilterText,\n    pageSize\n  ]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentIds: [],\n        departmentId: departmentId,\n\n        \"isTL\": \"\",\n        \"isManager\": \"\",\n        \"isReceptionist\": \"\",\n        \"isHR\": \"\",\n        employeIds: employeeId,\n        \"status\": status == \"true\" ? true : status == \"false\" ? false : '',\n        \"directorId\": \"67b30b81551ce7595c5c2d88\",\n        \"designationId\": designationId,\n        \"departmentIds\": [],\n        \"roleKey\": \"\",\n        \"averageTaskRating\": averageTaskRating,\n      },\n    };\n  }\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        departmentId: departmentId ? departmentId : '',\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: false,\n        isDirector: false,\n      })\n    )\n  };\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const fetchPerformanceListData = () => {\n    dispatch(employeePerformanceFunc(requestPayLoadReturn(true)));\n  };\n  const onChange = (e) => {\n    setSearchText(e);\n  }\n  const handleSubmit = async () => {\n    fetchPerformanceListData()\n  }\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"Employee Attendance\");\n\n    worksheet.columns = [\n      { header: \"S.No\", key: \"sno\", width: 10 },\n      { header: \"Employee Name\", key: \"name\", width: 30 },\n      { header: \"Department\", key: \"departmentName\", width: 20 },\n      { header: \"Task Completed\", key: \"taskCompleted\", width: 20 },\n      { header: \"Average Rating\", key: \"avRating\", width: 20 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.employeePerformanceFunc(requestPayLoadReturn(false));\n    if (!employeePerformanceList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1,\n        name: data?.fullName || \"N/A\",\n        departmentName: data?.departmentData?.name || \"N/A\",\n        taskCompleted: data?.taskCompleted,\n        avRating: data?.averageTaskRating,\n      };\n    });\n\n\n    // Data row styling\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"Employe_Performance_Report.xlsx\";\n      link.click();\n    });\n  };\n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: 'landscape',\n      unit: 'pt'\n    });\n    doc.setFontSize(16);\n    const headers = ['S.No.', 'Employee Name', \"Department Name\", 'Total Task Completed', 'Average Task Rating'];\n    const response = await reportsServices?.employeePerformanceFunc(requestPayLoadReturn(false));\n    if (!employeePerformanceList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        data?.fullName || \"N/A\",\n        data?.departmentData?.name || \"N/A\",\n        data?.taskCompleted,\n        data?.averageTaskRating,\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: 'middle',\n        halign: 'left',\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: 'bold',\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`Employe_Performance_Report.pdf`);\n  }\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec] space-y-1 2xl:flex justify-between items-center\">\n          <div className=\"sm:flex grid grid-cols-1 gap-1.5 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            <div>\n              <Controller\n                name=\"departmentId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                    onFocus={() => {\n                      dispatch(\n                        deptSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\n                            \"admin\",\n                            \"company\",\n                            \"companyDirector\",\n                          ].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => {\n                      field.onChange(value);\n                    }}\n                    placeholder=\"Select Department\"\n                  >\n                    <Select.Option value=\"\">Select Department</Select.Option>\n                    {depLoading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(departmentListData)?.map(\n                        (element) => (\n                          <Select.Option key={element?._id} value={element?._id}>\n                            {element?.name}\n                          </Select.Option>\n                        )\n                      )\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"PdDesignationId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className=\"inputAntdSelectClassNameFilterReport\"\n                    showSearch\n                    placeholder=\"Select Designation\"\n                    onFocus={() => {\n                      dispatch(\n                        designationSearch({\n                          text: \"\",\n                          sort: true,\n                          status: true,\n                          isPagination: false,\n                          companyId:\n                            userInfoglobal?.userType === \"admin\"\n                              ? CompanyId\n                              : userInfoglobal?.userType === \"company\"\n                                ? userInfoglobal?._id\n                                : userInfoglobal?.companyId,\n                          branchId: [\"admin\", \"company\", \"companyDirector\"].includes(userInfoglobal?.userType)\n                            ? BranchId\n                            : userInfoglobal?.userType === \"companyBranch\"\n                              ? userInfoglobal?._id\n                              : userInfoglobal?.branchId,\n                        })\n                      );\n                    }}\n                    onChange={(value) => field.onChange(value)}\n                    filterOption={(input, option) =>\n                      String(option?.children)?.toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Designation</Select.Option>\n                    {designationloading ? (\n                      <Select.Option disabled>\n                        <ListLoader />\n                      </Select.Option>\n                    ) : (\n                      sortByPropertyAlphabetically(designationList)?.map((type) => (\n                        <Select.Option key={type?._id} value={type?._id}>\n                          {type?.name}\n                        </Select.Option>\n                      ))\n                    )}\n                  </Select>\n                )}\n              />\n            </div>\n            <div className=\"\">\n              <Controller\n                name=\"employeeId\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    mode=\"multiple\"\n                    allowClear\n                    showSearch\n                    filterOption={(input, option) =>\n                      option?.label?.toLowerCase().includes(input.toLowerCase())\n                    }\n                    className=\"inputAntdMultiSelectClassNameFilterReport \"\n                    placeholder=\"Select Employee\"\n                    onFocus={handleEmployeeFocus}\n                    options={employeList?.map((element) => {\n                      return {\n                        label: element.fullName,\n                        value: element._id,\n                      }\n                    })}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    allowClear\n                    // mode=\"multiple\"\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Select Status\"\n                    options={[\n                      { value: '', label: \"Select Status\" },\n                      { value: 'true', label: \"Active\" },\n                      { value: 'false', label: \"Inactive\" },\n                    ]}\n                    value={field.value}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div>\n            <div>\n              <Controller\n                name=\"averageTaskRating\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    // mode=\"multiple\"\n                    allowClear\n                    className=\"inputAntdMultiSelectClassNameFilterReport\"\n                    placeholder=\"Select Rating\"\n                    options={[\n                      { label: '0', value: 0 },\n                      { label: '1', value: 1 },\n                      { label: '2', value: 2 },\n                      { label: '3', value: 3 },\n                      { label: '4', value: 4 },\n                      { label: '5', value: 5 },\n                    ]}\n                    value={field.value || []}\n                    onChange={(val) => field.onChange(val)}\n                  />\n                )}\n              />\n            </div>\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"PdCompanyId\", \"\");\n                setValue(\"departmentId\", \"\");\n                setValue(\"PdDesignationId\", \"\")\n                setValue(\"employeeId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"averageTaskRating\", \"\");\n                handleSubmit()\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit()\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n\n                }}\n              />\n            )}\n          >\n          </Collapse>\n          <div className=\"space-y-1.5 sm:flex justify-between items-center \">\n            <div className=\"flex items-center gap-2 sm:pt-0 pt-1\">\n              <span htmlFor=\"pageSize\" className=\"text-sm font-light text-gray-500\">\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n            <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap text-center w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Employee Name\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">Department Name</th>\n                <th className=\"border-none p-2 whitespace-nowrap \">Total Task Complete </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Average Task Rating\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                 Rating by reporting person \n                </th>\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Rating by admin \n                </th> */}\n              </tr>\n            </thead>\n            {employeePerformance_loading ? <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={10}\n                className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr> :\n              <tbody>\n                {employeePerformanceList && employeePerformanceList?.length > 0 ? (\n                  employeePerformanceList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none px-2 py-3\">\n                        {index + 1 + ((currentPage - 1) * pageSize)}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none px-2 py-3\">\n                        {element?.fullName || \"N/A\"}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none px-2 py-3\">\n                        {element?.departmentData?.name || \"N/A\"}\n                      </td>\n\n\n\n                      <td className=\"whitespace-nowrap  border-none px-2 py-3\">\n                        {element?.taskCompleted}\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none px-2 py-3\">\n                        {element?.averageTaskRating}\n                      </td>\n                      {/* <td className=\"whitespace-nowrap  border-none px-2 py-3\">\n                        <Flex gap=\"middle\" vertical>\n                          <Rate disabled defaultValue={element?.averageTaskRating || 0} />\n                        </Flex>\n                      </td>\n                      <td className=\"whitespace-nowrap  border-none px-2 py-3\">\n                        {element?.designationData?.roleKey || \"N/A\"}\n                      </td> */}\n\n\n\n\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>}\n          </table>\n        </div>\n        <CustomPagination\n          totalCount={totalemployeePerformanceReportCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default EmployePerformanceReport;"],"names":["control","formState","errors","setValue","useForm","dispatch","useDispatch","employeePerformanceList","employeePerformance_loading","totalemployeePerformanceReportCount","useSelector","state","reports","employeList","employe","designationList","loading","designationloading","designation","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","departmentListData","depLoading","department","CompanyId","useWatch","name","defaultValue","BranchId","designationId","employeeId","status","averageTaskRating","departmentId","pageSize","setPageSize","useEffect","userType","branchSearch","text","sort","isPagination","companyId","_id","deptSearch","dayjs","subtract","fetchPerformanceListData","timer","setTimeout","clearTimeout","requestPayLoadReturn","reqPayload","arguments","length","undefined","branchId","departmentIds","employeIds","handleEmployeeFocus","employeSearch","includes","directorId","isBranch","isDirector","employeePerformanceFunc","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","Option","value","map","element","fullName","PDBranchId","message","_ref2","_sortByPropertyAlphab","onFocus","onChange","disabled","ListLoader","sortByPropertyAlphabetically","_ref3","_sortByPropertyAlphab2","designationSearch","_String","type","_ref4","mode","allowClear","_option$label","options","val","_ref5","rules","_ref6","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref7","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","htmlFor","id","Number","pazeSizeReport","_response$data2","_response$data2$docs","doc","jsPDF","orientation","unit","setFontSize","response","reportsServices","body","data","docs","index","_data$departmentData2","departmentData","taskCompleted","autoTable","startY","head","margin","horizontal","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","save","generatePDF","_response$data","_response$data$docs","workbook","ExcelJS","worksheet","addWorksheet","columns","header","width","getRow","eachCell","cell","fill","pattern","fgColor","argb","font","bold","alignment","vertical","border","top","left","bottom","right","apiData","_data$departmentData","sno","departmentName","avRating","forEach","item","addRow","autoFilter","from","to","xlsx","writeBuffer","then","buffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","click","generateExcel","colSpan","Loader2","_element$departmentDa","CustomPagination","totalCount","page"],"sourceRoot":""}