{"version":3,"file":"static/js/7280.83b3240a.chunk.js","mappings":"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","sources":["../node_modules/antd/es/col/index.js","../node_modules/antd/es/statistic/Number.js","../node_modules/antd/es/statistic/style/index.js","../node_modules/antd/es/statistic/Statistic.js","../node_modules/antd/es/statistic/utils.js","../node_modules/antd/es/statistic/Timer.js","../node_modules/antd/es/statistic/Countdown.js","../node_modules/antd/es/statistic/index.js","../node_modules/antd/es/row/index.js","pages/hr/attendance/AttendanceDataModal.js","pages/hr/attendance/AllEmployeeAttendanceRecord.js","pages/hr/attendance/ManualAttendanceModal.js"],"sourcesContent":["\"use client\";\n\nimport { Col } from '../grid';\nexport default Col;","\"use client\";\n\nimport * as React from 'react';\nconst StatisticNumber = props => {\n  const {\n    value,\n    formatter,\n    precision,\n    decimalSeparator,\n    groupSeparator = '',\n    prefixCls\n  } = props;\n  let valueNode;\n  if (typeof formatter === 'function') {\n    // Customize formatter\n    valueNode = formatter(value);\n  } else {\n    // Internal formatter\n    const val = String(value);\n    const cells = val.match(/^(-?)(\\d*)(\\.(\\d+))?$/);\n    // Process if illegal number\n    if (!cells || val === '-') {\n      valueNode = val;\n    } else {\n      const negative = cells[1];\n      let int = cells[2] || '0';\n      let decimal = cells[4] || '';\n      int = int.replace(/\\B(?=(\\d{3})+(?!\\d))/g, groupSeparator);\n      if (typeof precision === 'number') {\n        decimal = decimal.padEnd(precision, '0').slice(0, precision > 0 ? precision : 0);\n      }\n      if (decimal) {\n        decimal = `${decimalSeparator}${decimal}`;\n      }\n      valueNode = [/*#__PURE__*/React.createElement(\"span\", {\n        key: \"int\",\n        className: `${prefixCls}-content-value-int`\n      }, negative, int), decimal && (/*#__PURE__*/React.createElement(\"span\", {\n        key: \"decimal\",\n        className: `${prefixCls}-content-value-decimal`\n      }, decimal))];\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-content-value`\n  }, valueNode);\n};\nexport default StatisticNumber;","import { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\nconst genStatisticStyle = token => {\n  const {\n    componentCls,\n    marginXXS,\n    padding,\n    colorTextDescription,\n    titleFontSize,\n    colorTextHeading,\n    contentFontSize,\n    fontFamily\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      [`${componentCls}-title`]: {\n        marginBottom: marginXXS,\n        color: colorTextDescription,\n        fontSize: titleFontSize\n      },\n      [`${componentCls}-skeleton`]: {\n        paddingTop: padding\n      },\n      [`${componentCls}-content`]: {\n        color: colorTextHeading,\n        fontSize: contentFontSize,\n        fontFamily,\n        [`${componentCls}-content-value`]: {\n          display: 'inline-block',\n          direction: 'ltr'\n        },\n        [`${componentCls}-content-prefix, ${componentCls}-content-suffix`]: {\n          display: 'inline-block'\n        },\n        [`${componentCls}-content-prefix`]: {\n          marginInlineEnd: marginXXS\n        },\n        [`${componentCls}-content-suffix`]: {\n          marginInlineStart: marginXXS\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport const prepareComponentToken = token => {\n  const {\n    fontSizeHeading3,\n    fontSize\n  } = token;\n  return {\n    titleFontSize: fontSize,\n    contentFontSize: fontSizeHeading3\n  };\n};\nexport default genStyleHooks('Statistic', token => {\n  const statisticToken = mergeToken(token, {});\n  return genStatisticStyle(statisticToken);\n}, prepareComponentToken);","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport pickAttrs from \"rc-util/es/pickAttrs\";\nimport { useComponentConfig } from '../config-provider/context';\nimport Skeleton from '../skeleton';\nimport StatisticNumber from './Number';\nimport useStyle from './style';\nconst Statistic = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      rootClassName,\n      style,\n      valueStyle,\n      value = 0,\n      title,\n      valueRender,\n      prefix,\n      suffix,\n      loading = false,\n      /* --- FormatConfig starts --- */\n      formatter,\n      precision,\n      decimalSeparator = '.',\n      groupSeparator = ',',\n      /* --- FormatConfig starts --- */\n      onMouseEnter,\n      onMouseLeave\n    } = props,\n    rest = __rest(props, [\"prefixCls\", \"className\", \"rootClassName\", \"style\", \"valueStyle\", \"value\", \"title\", \"valueRender\", \"prefix\", \"suffix\", \"loading\", \"formatter\", \"precision\", \"decimalSeparator\", \"groupSeparator\", \"onMouseEnter\", \"onMouseLeave\"]);\n  const {\n    getPrefixCls,\n    direction,\n    className: contextClassName,\n    style: contextStyle\n  } = useComponentConfig('statistic');\n  const prefixCls = getPrefixCls('statistic', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const valueNode = /*#__PURE__*/React.createElement(StatisticNumber, {\n    decimalSeparator: decimalSeparator,\n    groupSeparator: groupSeparator,\n    prefixCls: prefixCls,\n    formatter: formatter,\n    precision: precision,\n    value: value\n  });\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, contextClassName, className, rootClassName, hashId, cssVarCls);\n  const internalRef = React.useRef(null);\n  React.useImperativeHandle(ref, () => ({\n    nativeElement: internalRef.current\n  }));\n  const restProps = pickAttrs(rest, {\n    aria: true,\n    data: true\n  });\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", Object.assign({}, restProps, {\n    ref: internalRef,\n    className: cls,\n    style: Object.assign(Object.assign({}, contextStyle), style),\n    onMouseEnter: onMouseEnter,\n    onMouseLeave: onMouseLeave\n  }), title && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-title`\n  }, title), /*#__PURE__*/React.createElement(Skeleton, {\n    paragraph: false,\n    loading: loading,\n    className: `${prefixCls}-skeleton`\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: valueStyle,\n    className: `${prefixCls}-content`\n  }, prefix && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-content-prefix`\n  }, prefix), valueRender ? valueRender(valueNode) : valueNode, suffix && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-content-suffix`\n  }, suffix)))));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Statistic.displayName = 'Statistic';\n}\nexport default Statistic;","// Countdown\nconst timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365],\n// years\n['M', 1000 * 60 * 60 * 24 * 30],\n// months\n['D', 1000 * 60 * 60 * 24],\n// days\n['H', 1000 * 60 * 60],\n// hours\n['m', 1000 * 60],\n// minutes\n['s', 1000],\n// seconds\n['S', 1] // million seconds\n];\nexport function formatTimeStr(duration, format) {\n  let leftDuration = duration;\n  const escapeRegex = /\\[[^\\]]*]/g;\n  const keepList = (format.match(escapeRegex) || []).map(str => str.slice(1, -1));\n  const templateText = format.replace(escapeRegex, '[]');\n  const replacedText = timeUnits.reduce((current, [name, unit]) => {\n    if (current.includes(name)) {\n      const value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(`${name}+`, 'g'), match => {\n        const len = match.length;\n        return value.toString().padStart(len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  let index = 0;\n  return replacedText.replace(escapeRegex, () => {\n    const match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nexport function formatCounter(value, config, down) {\n  const {\n    format = ''\n  } = config;\n  const target = new Date(value).getTime();\n  const current = Date.now();\n  const diff = down ? Math.max(target - current, 0) : Math.max(current - target, 0);\n  return formatTimeStr(diff, format);\n}","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport { useEvent } from 'rc-util';\nimport raf from \"rc-util/es/raf\";\nimport { cloneElement } from '../_util/reactNode';\nimport Statistic from './Statistic';\nimport { formatCounter } from './utils';\nfunction getTime(value) {\n  return new Date(value).getTime();\n}\nconst StatisticTimer = props => {\n  const {\n      value,\n      format = 'HH:mm:ss',\n      onChange,\n      onFinish,\n      type\n    } = props,\n    rest = __rest(props, [\"value\", \"format\", \"onChange\", \"onFinish\", \"type\"]);\n  const down = type === 'countdown';\n  // We reuse state here to do same as `forceUpdate`\n  const [showTime, setShowTime] = React.useState(null);\n  // ======================== Update ========================\n  const update = useEvent(() => {\n    const now = Date.now();\n    const timestamp = getTime(value);\n    setShowTime({});\n    const timeDiff = !down ? now - timestamp : timestamp - now;\n    onChange === null || onChange === void 0 ? void 0 : onChange(timeDiff);\n    // Only countdown will trigger `onFinish`\n    if (down && timestamp < now) {\n      onFinish === null || onFinish === void 0 ? void 0 : onFinish();\n      return false;\n    }\n    return true;\n  });\n  // Effect trigger\n  React.useEffect(() => {\n    let rafId;\n    const clear = () => raf.cancel(rafId);\n    const rafUpdate = () => {\n      rafId = raf(() => {\n        if (update()) {\n          rafUpdate();\n        }\n      });\n    };\n    rafUpdate();\n    return clear;\n  }, [value, down]);\n  React.useEffect(() => {\n    setShowTime({});\n  }, []);\n  // ======================== Format ========================\n  const formatter = (formatValue, config) => showTime ? formatCounter(formatValue, Object.assign(Object.assign({}, config), {\n    format\n  }), down) : '-';\n  const valueRender = node => cloneElement(node, {\n    title: undefined\n  });\n  // ======================== Render ========================\n  return /*#__PURE__*/React.createElement(Statistic, Object.assign({}, rest, {\n    value: value,\n    valueRender: valueRender,\n    formatter: formatter\n  }));\n};\nexport default StatisticTimer;","\"use client\";\n\nimport * as React from 'react';\nimport { devUseWarning } from '../_util/warning';\nimport StatisticTimer from './Timer';\nconst Countdown = props => {\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Countdown');\n    warning.deprecated(false, '<Statistic.Countdown />', '<Statistic.Timer type=\"countdown\" />');\n  }\n  return /*#__PURE__*/React.createElement(StatisticTimer, Object.assign({}, props, {\n    type: \"countdown\"\n  }));\n};\nexport default /*#__PURE__*/React.memo(Countdown);","\"use client\";\n\nimport Countdown from './Countdown';\nimport Statistic from './Statistic';\nimport Timer from './Timer';\nStatistic.Timer = Timer;\nStatistic.Countdown = Countdown;\nexport default Statistic;","\"use client\";\n\nimport { Row } from '../grid';\nexport default Row;","import React from 'react';\nimport { Modal } from 'antd';\nimport { convertMinutesToHoursAndMinutes } from '../../../constents/global';\nimport dayjs from 'dayjs';\nimport moment from 'moment';\n\nconst AttendanceDataModal = ({ isOpen, onClose, modalData }) => {\n  if (!isOpen || !modalData) return null;\n\n  const dayData = modalData.DayData;\n\n  return (\n    <Modal\n      open={isOpen}\n      onCancel={onClose}\n      footer={null}\n      title={\n        <div className=\"text-sm md:text-lg font-semibold text-header\">\n          Attendance Details - ({moment(dayData?.date)?.format(\"MMMM\")})\n        </div>\n      }\n      width={800}\n      bodyStyle={{ maxHeight: '60vh', overflowY: 'auto', padding: '16px' }}\n      centered\n    >\n      {/* Employee Information Section */}\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold text-header mb-3\">Employee Information</h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600\">\n          <div><strong>Name:</strong> {modalData.employee.employeeName}</div>\n          <div><strong>Total Present Days:</strong> {modalData.employee.totalPresent}</div>\n          <div><strong>Total Absent Days:</strong> {modalData.employee.totalAbsent}</div>\n          <div><strong>Total Leaves:</strong> {modalData.employee.totalLeaves}</div>\n          <div><strong>First Half Days:</strong> {modalData.employee.firstHalfDay}</div>\n          <div><strong>Second Half Days:</strong> {modalData.employee.secondHalfDay}</div>\n        </div>\n      </div>\n\n      {/* Day Data Section */}\n      <div>\n        <h3 className=\"text-lg font-semibold text-header mb-3\">\n          Day {dayData.day} - {moment(dayData?.date).format(\"DD/MM/YYYY\")}\n        </h3>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600\">\n          <div className=\"capitalize\"><strong>Status:</strong> {dayData.isPresentDay}</div>\n          <div>\n            <strong>Check-in Time:</strong> {\n              (dayData?.checkInTime && dayData?.checkInTime !== \"-\")\n                ? dayjs(dayData?.checkInTime).format('hh:mm A')\n                : \"-\"\n            }\n          </div>\n          <div>\n            <strong>Check-out Time:</strong> {\n              (dayData?.checkOutTime && dayData?.checkOutTime !== \"-\")\n                ? dayjs(dayData?.checkOutTime).format('hh:mm A')\n                : \"-\"\n            }\n          </div>\n          <div>\n            <strong>Worked Hours:</strong> {\n              dayData?.workedHRS ? convertMinutesToHoursAndMinutes(dayData?.workedHRS ?? 0) : \"-\"\n            }\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default AttendanceDataModal;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { FaPlus } from \"react-icons/fa\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getAllAttendanceRecord } from \"./AttendanceFeatures/_attendance_reducers\";\nimport { domainName, inputLabelClassName } from \"../../../constents/global\";\nimport moment from \"moment\";\nimport ManualAttendanceModal from \"./ManualAttendanceModal\";\nimport AttendanceDataModal from \"./AttendanceDataModal\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport usePermissions from \"../../../config/usePermissions\";\n\nimport { Tooltip, Table, Tag, Card, Statistic, Row, Col } from \"antd\";\n\nconst getCurrentMonth = () => {\n  const today = new Date();\n  const year = today.getFullYear();\n  const month = (today.getMonth() + 1).toString().padStart(2, \"0\");\n\n  return `${year}-${month}-01`;\n};\n\nfunction generateAttendanceReport(data) {\n  const moment = require('moment');\n  const report = [];\n  const dailyStatus = data.dailyStatus || [];\n\n  const currentMonth = moment().month();\n  const currentYear = moment().year();\n  const daysInMonth = moment().daysInMonth();\n\n  for (let day = 1; day <= daysInMonth; day++) {\n    const currentDate = moment({ year: currentYear, month: currentMonth, day: day }).startOf('day');\n    const formattedDate = currentDate.toISOString();\n\n    const dayData = dailyStatus.find((entry) => entry.day === day);\n\n    if (dayData) {\n      report.push({\n        day: day,\n        date: formattedDate,\n        isPresentDay: dayData.isPresentDay || \"-\",\n        checkInTime: dayData.checkInTime || \"-\",\n        checkOutTime: dayData.checkOutTime || \"-\",\n        workedHRS: dayData.workedHRS || \"-\",\n      });\n    } else {\n      report.push({\n        day: day,\n        date: formattedDate,\n        isPresentDay: \"-\",\n        checkInTime: \"-\",\n        checkOutTime: \"-\",\n        workedHRS: \"-\",\n      });\n    }\n  }\n\n  return report;\n}\n\nconst statusData = [\n  { label: \"H\", description: \"Half Day\", bgColor: \"bg-yellow-100\", color: \"gold\" },\n  { label: \"P\", description: \"Present\", bgColor: \"bg-green-700 text-white\", color: \"green\" },\n  { label: \"L\", description: \"Leave\", bgColor: \"bg-orange-100\", color: \"orange\" },\n  { label: \"A\", description: \"Absent\", bgColor: \"bg-red-700 text-white\", color: \"red\" },\n  { label: \"W\", description: \"Weekend\", bgColor: \"bg-orange-700 text-white\", color: \"volcano\" },\n  { label: \"D\", description: \"holiday\", bgColor: \"bg-blue-700 text-white\", color: \"blue\" },\n];\n\nconst AllEmployeeAttendanceRecord = () => {\n  const dispatch = useDispatch();\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { AllAttendanceRecordData, loading } = useSelector((state) => state.attendance);\n  const [allmonthattendaceData, setallmonthattendaceData] = useState([]);\n  const date = moment();\n  const day = date.format(\"D\");\n  const monthName = date.format(\"MMMM\");\n  const [isManualModalOpen, setIsManualModalOpen] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm();\n\n  const [modalData, setModalData] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [monthlySummary, setMonthlySummary] = useState({});\n  const [todaySummary, setTodaySummary] = useState({});\n  const selectedDate = useWatch({\n    control,\n    name: \"date\",\n    defaultValue: \"\",\n  });\n\n  const openModal = (data) => {\n    setModalData(data);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setModalData(null);\n  };\n\n  useEffect(() => {\n    if (selectedDate) {\n      dispatch(\n        getAllAttendanceRecord({\n          companyId:\n            userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n          branchId:\n            userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n          employeId: null,\n          currentMonth: selectedDate,\n        })\n      );\n    }\n  }, [selectedDate]);\n\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n\n  useEffect(() => {\n    fetchattendanceListData();\n  }, []);\n\n  const fetchattendanceListData = () => {\n    dispatch(\n      getAllAttendanceRecord({\n        companyId:\n          userInfoglobal?.userType === \"company\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        employeId: null,\n        currentMonth: getCurrentMonth(),\n      })\n    );\n  };\n\n  // Function to calculate attendance summary for all employees\n  const calculateAllSummary = (data) => {\n    const monthlySummary = {\n      P: 0, // Present\n      H: 0, // Half day\n      L: 0, // Leave\n      A: 0, // Absent\n      W: 0, // Weekend\n      D: 0, // Holiday\n    };\n\n    const todaySummary = {\n      P: 0,\n      H: 0,\n      L: 0,\n      A: 0,\n      W: 0,\n      D: 0,\n    };\n\n    const today = moment().date();\n\n    data?.forEach(employee => {\n      employee.dailyStatus?.forEach(day => {\n        switch (day?.isPresentDay) {\n          case \"firstHalf\":\n          case \"secondHalf\":\n            monthlySummary.H++;\n            if (day.day === today) todaySummary.H++;\n            break;\n          case \"present\":\n            monthlySummary.P++;\n            if (day.day === today) todaySummary.P++;\n            break;\n          case \"leave\":\n            monthlySummary.L++;\n            if (day.day === today) todaySummary.L++;\n            break;\n          case \"absent\":\n            monthlySummary.A++;\n            if (day.day === today) todaySummary.A++;\n            break;\n          case \"off\":\n            monthlySummary.W++;\n            if (day.day === today) todaySummary.W++;\n            break;\n          case \"holiday\":\n            monthlySummary.D++;\n            if (day.day === today) todaySummary.D++;\n            break;\n        }\n      });\n    });\n\n    return { monthlySummary, todaySummary };\n  };\n\n  useEffect(() => {\n    setallmonthattendaceData([]);\n    const employeeateendenceData = AllAttendanceRecordData?.map((data) => {\n      return {\n        ...data,\n        dailyStatus: generateAttendanceReport(data),\n      };\n    });\n\n    const { monthlySummary, todaySummary } = calculateAllSummary(employeeateendenceData);\n    setMonthlySummary(monthlySummary);\n    setTodaySummary(todaySummary);\n    setallmonthattendaceData(employeeateendenceData);\n  }, [AllAttendanceRecordData]);\n\n  // Function to calculate attendance summary for an employee\n  const calculateAttendanceSummary = (dailyStatus) => {\n    const summary = {\n      P: 0, // Present\n      H: 0, // Half day\n      L: 0, // Leave\n      A: 0, // Absent\n      W: 0, // Weekend\n      D: 0, // Holiday\n    };\n\n    dailyStatus.forEach(day => {\n      switch (day?.isPresentDay) {\n        case \"firstHalf\":\n        case \"secondHalf\":\n          summary.H++;\n          break;\n        case \"present\":\n          summary.P++;\n          break;\n        case \"leave\":\n          summary.L++;\n          break;\n        case \"absent\":\n          summary.A++;\n          break;\n        case \"off\":\n          summary.W++;\n          break;\n        case \"holiday\":\n          summary.D++;\n          break;\n      }\n    });\n\n    return summary;\n  };\n\n  // Prepare columns for Ant Design Table\n  const prepareColumns = () => {\n    const dayColumns = Array.from({ length: moment().daysInMonth() }, (_, i) => {\n      const dayNumber = i + 1;\n      return {\n        title: (\n          <span className={`${Number(day) === dayNumber ? \"bg-yellow-600 rounded-full px-1.5 py-1\" : \"\"}`}>\n            {dayNumber}\n          </span>\n        ),\n        dataIndex: `day_${dayNumber}`,\n        key: `day_${dayNumber}`,\n        width: 50,\n        align: 'center',\n        onCell: (record) => {\n          const status = record.dailyStatus.find(s => s.day === dayNumber);\n          let bgColor = '';\n\n          switch (status?.isPresentDay) {\n            case \"firstHalf\":\n            case \"secondHalf\":\n              bgColor = \"bg-yellow-100\";\n              break;\n            case \"present\":\n              bgColor = \"bg-green-700\";\n              break;\n            case \"leave\":\n              bgColor = \"bg-orange-100\";\n              break;\n            case \"absent\":\n              bgColor = \"bg-red-700\";\n              break;\n            case \"off\":\n              bgColor = \"bg-orange-700\";\n              break;\n            case \"holiday\":\n              bgColor = \"bg-blue-700\";\n              break;\n            default:\n              bgColor = \"bg-violet-100\";\n              break;\n          }\n\n          return {\n            className: `${bgColor} ${['bg-green-700', 'bg-red-700', 'bg-orange-700', 'bg-blue-700'].includes(bgColor) ? 'text-white' : ''}`,\n            onClick: () => openModal({ DayData: status, employee: record })\n          };\n        },\n        render: (_, record) => {\n          const status = record.dailyStatus.find(s => s.day === dayNumber);\n          let label = '-';\n\n          switch (status?.isPresentDay) {\n            case \"firstHalf\":\n            case \"secondHalf\":\n              label = \"H\";\n              break;\n            case \"present\":\n              label = \"P\";\n              break;\n            case \"leave\":\n              label = \"L\";\n              break;\n            case \"absent\":\n              label = \"A\";\n              break;\n            case \"off\":\n              label = \"W\";\n              break;\n            case \"holiday\":\n              label = \"D\";\n              break;\n          }\n\n          return (\n            <span className=\"cursor-pointer\">\n              {label}\n            </span>\n          );\n        }\n      };\n    });\n\n    return [\n      {\n        title: 'S.No',\n        dataIndex: 'sno',\n        key: 'sno',\n        fixed: 'left',\n        width: 60,\n        render: (_, __, index) => index + 1,\n      },\n      {\n        title: 'Employee',\n        dataIndex: 'employeeName',\n        key: 'employeeName',\n       \n        width: 150,\n      },\n      {\n        title: 'Summary',\n        key: 'summary',\n      \n        width: 200,\n        render: (_, record) => {\n          const summary = calculateAttendanceSummary(record.dailyStatus);\n          return (\n            <div className=\"flex flex-wrap gap-1\">\n              {Object.entries(summary).map(([key, value]) => {\n                if (value > 0) {\n                  const status = statusData.find(s => s.label === key);\n                  return (\n                    <Tag\n                      key={key}\n                      color={status?.color || 'default'}\n                      className=\"flex items-center\"\n                    >\n                      {key}: {value}\n                    </Tag>\n                  );\n                }\n                return null;\n              })}\n            </div>\n          );\n        },\n      },\n      ...dayColumns\n    ];\n  };\n\n  // Prepare data for Ant Design Table\n  const prepareTableData = () => {\n    return allmonthattendaceData?.map((employee, index) => {\n      const rowData = {\n        key: employee._id || index,\n        ...employee,\n        sno: index + 1\n      };\n\n      // Add day status to row data\n      employee.dailyStatus.forEach(day => {\n        rowData[`day_${day.day}`] = day;\n      });\n\n      return rowData;\n    });\n  };\n\n  return (\n    <GlobalLayout className=\"p-4\">\n      <form autoComplete=\"off\">\n        <div>\n          <label className={`${inputLabelClassName}`}>Date</label>\n          <Controller\n            name=\"date\"\n            control={control}\n            render={({ field }) => (\n              <CustomDatePicker\n                field={field}\n                errors={errors}\n                picker=\"month\"\n                format=\"MM/YYYY\"\n                disabledDate={(current) => {\n                  return (\n                    current && current.isAfter(moment().endOf(\"day\"), \"day\")\n                  );\n                }}\n              />\n            )}\n          />\n          {errors.date && (\n            <p className=\"text-red-500 text-sm\">Date is required</p>\n          )}\n        </div>\n      </form>\n\n\n      <Row gutter={[16, 16]} className=\"my-4\">\n        <Col xs={24} md={12}>\n          <Card\n            title=\"Monthly Summary\"\n            bordered={false}\n            headStyle={{ fontSize: '0.9rem', padding: '8px 16px' }}\n            bodyStyle={{ padding: '12px' }}\n          >\n            <Row gutter={[8, 8]}>\n              {Object.entries(monthlySummary).map(([key, value]) => {\n                const status = statusData.find(s => s.label === key);\n                return (\n                  <Col xs={12} sm={8} key={key}>\n                    <Card\n                      size=\"small\"\n                      bodyStyle={{ padding: '8px' }}\n                    >\n                      <Statistic\n                        title={\n                          <span\n                            className={`${status?.bgColor} px-1 py-0.5 rounded text-xs`}\n                            style={{ display: 'inline-block' }}\n                          >\n                            {key}: {status?.description}\n                          </span>\n                        }\n                        value={value}\n                        valueStyle={{\n                          color: status?.color,\n                          fontWeight: 'bold',\n                          fontSize: '0.9rem'\n                        }}\n                        prefix={value > 0 ? '+' : ''}\n                      />\n                    </Card>\n                  </Col>\n                );\n              })}\n            </Row>\n          </Card>\n        </Col>\n\n        <Col xs={24} md={12}>\n          <Card\n            title={`Today's Summary (Day ${day})`}\n            bordered={false}\n            headStyle={{ fontSize: '0.9rem', padding: '8px 16px' }}\n            bodyStyle={{ padding: '12px' }}\n          >\n            <Row gutter={[8, 8]}>\n              {Object.entries(todaySummary).map(([key, value]) => {\n                const status = statusData.find(s => s.label === key);\n                return (\n                  <Col xs={12} sm={8} key={key}>\n                    <Card\n                      size=\"small\"\n                      bodyStyle={{ padding: '8px' }}\n                    >\n                      <Statistic\n                        title={\n                          <span\n                            className={`${status?.bgColor} px-1 py-0.5 rounded text-xs`}\n                            style={{ display: 'inline-block' }}\n                          >\n                            {key}: {status?.description}\n                          </span>\n                        }\n                        value={value}\n                        valueStyle={{\n                          color: status?.color,\n                          fontWeight: 'bold',\n                          fontSize: '0.9rem'\n                        }}\n                        prefix={value > 0 ? '+' : ''}\n                      />\n                    </Card>\n                  </Col>\n                );\n              })}\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n\n      <div className=\"\">\n        <div className=\"flex justify-between items-center mt-4 mb-2\">\n          <div>Attendance Report - {monthName}</div>\n          {canCreate && canRead && (\n            <Tooltip placement=\"topLeft\"  title='Add Manual Attendance'>\n              <button\n                onClick={() => setIsManualModalOpen(true)}\n                className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n              >\n                <FaPlus />\n                <span className=\"text-[12px]\">Manual Attendance</span>\n              </button>\n            </Tooltip>\n          )}\n        </div>\n      </div>\n\n      <div className=\"flex flex-wrap gap-2\">\n        {statusData.map((status, i) => (\n          <div\n            key={i}\n            className={`flex items-center ${status.bgColor} rounded px-2 py-1 sm:text-sm text-xs font-semibold mb-2`}\n          >\n            <span className=\"mr-2\">{status.label}</span>\n            <span>{`> ${status.description}`}</span>\n          </div>\n        ))}\n      </div>\n\n      {canRead && (\n        <div className=\"w-full overflow-hidden bg-white shadow-xl\">\n          <Table\n            columns={prepareColumns()}\n            dataSource={prepareTableData()}\n            loading={loading}\n            scroll={{ x: 'max-content', y: 'calc(100vh - 400px)' }}\n            bordered\n            size=\"small\"\n            pagination={false}\n            rowHoverable={false}\n            components={{\n              body: {\n                cell: (props) => (\n                  <td\n                    {...props}\n                    style={{\n                      padding: '4px 8px',\n                      ...props.style\n                    }}\n                  />\n                )\n              }\n            }}\n            locale={{\n              emptyText: (\n                <div className=\"px-4 py-2 text-center bg-gray-200\">\n                  No data available\n                </div>\n              )\n            }}\n          />\n\n          {isManualModalOpen && (\n            <ManualAttendanceModal\n              isOpen={true}\n              onClose={() => setIsManualModalOpen(false)}\n              fetchattendanceListData={fetchattendanceListData}\n            />\n          )}\n          {isModalOpen && (\n            <AttendanceDataModal\n              isOpen={true}\n              onClose={() => setIsModalOpen(false)}\n              modalData={modalData}\n            />\n          )}\n        </div>\n      )}\n    </GlobalLayout>\n  );\n};\n\nexport default AllEmployeeAttendanceRecord;","import React, { useEffect } from 'react';\nimport { Controller, useForm, useWatch } from 'react-hook-form';\nimport moment from 'moment';\nimport { employeSearch } from '../../employeManagement/employeFeatures/_employe_reducers';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { domainName, inputAntdSelectClassName, inputClassName, inputLabelClassName, inputLabelClassNameReactSelect, sortByPropertyAlphabetically } from '../../../constents/global';\nimport { companySearch } from '../../company/companyManagement/companyFeatures/_company_reducers';\nimport { deptSearch } from '../../department/departmentFeatures/_department_reducers';\nimport { branchSearch } from '../../branch/branchManagement/branchFeatures/_branch_reducers';\nimport { attendancegCreate } from './AttendanceFeatures/_attendance_reducers';\nimport { useNavigate } from 'react-router-dom';\nimport ReactSelect from \"react-select\";\nimport Swal from 'sweetalert2';\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker.js\";\nimport dayjs from 'dayjs';\nimport { Modal, Select, TimePicker } from 'antd';\nimport Loader from '../../../global_layouts/Loader.js';\nimport ListLoader from '../../../global_layouts/ListLoader.js';\nimport { timeSlotSearch } from '../../timeSlot/timeSlotsFeatures/_timeSlots_reducers.js';\nconst ManualAttendanceModal = ({ isOpen, onClose, fetchattendanceListData }) => {\n  const { register, handleSubmit,watch, control, setValue, reset, formState: { errors } } = useForm({\n    defaultValues: {\n      employeeName: '',\n      date: '',\n      checkInTime: '',\n      checkOutTime: '',\n      reason: '',\n      errors: {},\n    }\n  });\n  const Option = Select.Option;\n  const { timeSlotsListData } = useSelector(state => state.timeSlots)\n  const navigate = useNavigate();\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n\n  const departmentId = useWatch({\n    control,\n    name: \"PDDepartmentId\",\n    defaultValue: \"\",\n  });\n  const designationId = useWatch({\n    control,\n    name: \"PDDesignationId\",\n    defaultValue: \"\",\n  });\n  const userInfoglobal = JSON.parse(localStorage.getItem(`user_info_${domainName}`));\n  const dispatch = useDispatch();\n  const { branchList, branchListloading } = useSelector((state) => state.branch);\n  const { companyList, companyListLoading } = useSelector((state) => state.company);\n  const { loading: atentdanceLoading } = useSelector((state) => state.attendance);\n  const { employeList } = useSelector((state) => state.employe);\n\nconst parseToISOString = (date, timeStr) => {\n  if (!timeStr) return null;\n  const formattedDate = dayjs(date).format('YYYY-MM-DD');\n  const trimmedTime = timeStr.trim();\n  const hasAMPM = /AM|PM/i.test(trimmedTime);\n  const format = hasAMPM ? 'YYYY-MM-DD HH:mm A' : 'YYYY-MM-DD HH:mm';\n  const dateTimeString = `${formattedDate} ${trimmedTime}`;\n\n  const parsed = moment(dateTimeString, format, true); // strict parsing\n  if (!parsed.isValid()) {\n    return null;\n  }\n  return parsed.toISOString();\n};\n  const onFormSubmit = (data) => {\n\nconsole.log(data)\n    const reqData = {\n      employeId: data?.employee,\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      directorId: userInfoglobal?.userType === \"companyDirector\" ? userInfoglobal?._id : userInfoglobal?.directorId,\n      // checkInTime: new Date(new Date(data.date).setHours(...data.checkInTime.split(':').map(Number), 0, 0)).toISOString(),\n      // checkOutTime: data.checkOutTime ? new Date(new Date(data.date).setHours(...data.checkOutTime.split(':').map(Number), 0, 0)).toISOString() : null,\n      attendanceDate: dayjs(data.checkInTime).format('YYYY-MM-DD'),\n     checkInTime: data?.checkInTime ? data?.checkInTime : null,\n    checkOutTime: data.checkOutTime ? data?.checkOutTime : null,\n      method: \"hr_portal\",\n      reason: data.reason,\n      employeeName: data.employeeName,\n      isVerified: true,\n      shift: data.shift,\n    };\n\n    dispatch(attendancegCreate(reqData)).then((response) => {\n      if (!response.error) {\n\n        Swal.fire({\n          icon: 'success',\n          title: 'Success!',\n          text: 'Attendance record has been created successfully.',\n          confirmButtonText: 'OK',\n          customClass: {\n            confirmButton: 'bg-header text-white hover:bg-[#063156]',\n          },\n        });\n        fetchattendanceListData();\n        onClose();\n      }\n\n    });\n  };\n\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(companySearch({ text: \"\", sort: true, status: true, isPagination: false }))\n    }\n  }, [])\n\n  useEffect(() => {\n    if (userInfoglobal?.userType !== \"admin\" || companyId) {\n      setValue(\"PDDepartmentId\", \"\");\n      setValue(\"PDDesignationId\", \"\");\n      setValue(\"PDBranchId\", \"\");\n      dispatch(deptSearch({\n        companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        text: \"\", sort: true, status: true, isPagination: false\n      }))\n      dispatch(branchSearch({\n\n        companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n        text: \"\", sort: true, status: true, isPagination: false\n      }))\n    }\n  }, [companyId])\n\n\n\n  useEffect(() => {\n    if ((companyId || userInfoglobal?.userType !== \"admin\") && (branchId || userInfoglobal?.userType !== \"companBranch\" || userInfoglobal?.userType === \"employee\")) {\n      fetchEmployeListData()\n\n    }\n  }, [companyId, branchId, departmentId, designationId])\n  useEffect(() => {\n    fetchTimeSlotFunc()\n  }, [branchId,])\n\n  const fetchEmployeListData = () => {\n    const reqPayload = {\n      text: \"\",\n      status: true,\n      sort: true,\n      isTL: \"\",\n      isHR: \"\",\n      isPagination: false,\n      departmentId: '',\n      designationId: '',\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n    };\n\n    dispatch(employeSearch(reqPayload));\n  };\n  const fetchTimeSlotFunc = () => {\n    dispatch(timeSlotSearch({\n      directorId: '',\n      companyId: userInfoglobal?.userType === \"admin\" ? companyId : userInfoglobal?.userType === \"company\" ? userInfoglobal?._id : userInfoglobal?.companyId,\n      branchId: userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"companyDirector\" ? branchId : userInfoglobal?.userType === \"companyBranch\" ? userInfoglobal?._id : userInfoglobal?.branchId,\n      text: \"\",\n      sort: true,\n      status: \"\",\n      isPagination: false,\n    }))\n  }\n  if (!isOpen) return null;\n  return (\n    <Modal\n      visible={isOpen}\n      onCancel={() => {\n        onClose();\n        reset()\n      }}\n\n      className=\"antmodalclassName\"\n      footer={null}\n      title=\"Apply Attendence\"\n      width={600}\n      height={400}\n    >\n      <div>\n        <form autoComplete=\"off\" onSubmit={handleSubmit(onFormSubmit)} className=\"\">\n          <div className=\"grid grid-col-1 md:grid-cols-2 gap-4\">\n            {userInfoglobal?.userType === \"admin\" && (\n              <div>\n                <label className={`${inputLabelClassName}`}>Company</label>\n                <Controller\n                  name=\"PDCompanyId\"\n                  control={control}\n                  rules={{\n                    required: \"Company is required\",\n                  }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"}`}\n\n                      placeholder=\"Select Company\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                      getPopupContainer={(trigger) => trigger.parentNode}\n                    >\n                      <Select.Option value=\"\">Select Company</Select.Option>\n                      {companyListLoading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                        (companyList\n                          ?.map((element) => (\n                            <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                          )))\n                      }\n                    </Select>\n                  )}\n                />\n                {errors.PDCompanyId && <p className=\"text-red-500 text-sm\">{errors.PDCompanyId.message}</p>}\n              </div>\n            )}\n\n            {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && (\n              <div>\n                <label className={`${inputLabelClassName}`}>Branch < span className=\"text-red-600\" >* </span></label>\n                <Controller\n                  name=\"PDBranchId\"\n                  control={control}\n                  rules={{\n                    required: \"Branch is required\",\n                  }}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      onChange={(value) => {\n                        setValue(\"employee\", '')\n                        setValue(\"shift\", '')\n                        field.onChange(value);\n                      }}\n                      className={` ${inputAntdSelectClassName} ${errors.PDPlan ? \"border-[1px] \" : \"border-gray-300\"} `}\n                      dropdownStyle={{ zIndex: 2000 }}\n                      placeholder=\"Select Branch\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                      getPopupContainer={() => document.body}\n                    >\n                      <Select.Option value=\"\">Select Branch</Select.Option>\n                      {branchListloading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                        (sortByPropertyAlphabetically(branchList, 'fullName')\n                          ?.map((element) => (\n                            <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                          )))\n                      }\n                    </Select>\n                  )}\n                />\n                {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n              </div>\n            )}\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Employee < span className=\"text-red-600\" >* </span></label>\n              <Controller\n                name=\"employee\"\n                control={control}\n                rules={{ required: \"Employee is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    onChange={(value) => {\n                      const selectedEmployee = employeList.find(emp => emp._id === value);\n                      setValue('employee', value);\n                      setValue(\"shift\", selectedEmployee?.shiftTimeSlot?._id || '');\n                    }}\n\n                    dropdownStyle={{ zIndex: 2000 }}\n                    getPopupContainer={() => document.body}\n                    // options={sortByPropertyAlphabetically(employeList,'fullName')?.map((employee) => ({\n                    //   value: employee?._id,\n                    //   label: employee?.fullName,\n                    // }))}\n                    classNamePrefix=\"react-select\"\n                    className={`${inputAntdSelectClassName} ${errors.employee ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    placeholder=\"Select Employee\"\n                  >\n                    <Select.Option value=\"\">Select Employee</Select.Option>\n                    {branchListloading ? <Select.Option disabled><ListLoader /></Select.Option> :\n                      (sortByPropertyAlphabetically(employeList, 'fullName')\n                        ?.map((element) => (\n                          <Select.Option value={element?._id} > {element?.fullName} </Select.Option>\n                        )))\n                    }\n                  </Select>\n                )}\n              />\n              {errors.employee && <p className=\"text-red-500 text-sm\">{errors.employee.message}</p>}\n            </div>\n\n            {/* <div>\n              <label className={`${inputLabelClassName}`}>Date < span className=\"text-red-600\" >* </span></label>\n              <Controller\n                name=\"date\"\n                control={control}\n                rules={{ required: \"Date is required\" }}\n                render={({ field }) => (\n                  <CustomDatePicker field={field} errors={errors}\n                    disabledDate={(current) => {\n                      const today = moment();\n                      return current && (\n                        current.isAfter(today, 'day') ||\n                        !current.isSame(today, 'month')\n                      );\n                    }}\n                  />\n                )}\n              />\n              {errors.date && <p className=\"text-red-500 text-sm\">Date is required</p>}\n            </div> */}\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Check-in Time <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"checkInTime\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <CustomDatePicker\n                    field={field}\n                    showTime={true}\n                    format=\"DD/MM/YYYY HH:mm\"\n                    errors={errors}\n                    disabledDate={(current) => {\n                      const today = moment();\n                      const currentDate = today.date(); // Day of month: 1, 2, 3, ...\n                      const isFirstThreeDays = currentDate <= 3;\n                    \n                      const startOfPrevMonth = today.clone().subtract(1, 'month').startOf('month');\n                      const endOfPrevMonth = today.clone().subtract(1, 'month').endOf('month');\n                    \n                      const isFromPrevMonth = current.isSame(startOfPrevMonth, 'month');\n                      const isFromCurrentMonth = current.isSame(today, 'month');\n                      const isAfterToday = current.isAfter(today, 'day');\n                    \n                    \n                      if (isFirstThreeDays) {\n                        return (\n                          isAfterToday ||\n                          (!isFromPrevMonth && !isFromCurrentMonth)\n                        );\n                      }\n                    \n                     \n                      return (\n                        isAfterToday ||\n                        !isFromCurrentMonth\n                      );\n                    }}\n                  />\n                )}\n              />\n              {errors.checkInTime && (\n                <p className=\"text-red-500 text-sm\">Check-in time is required</p>\n              )}\n            </div>\n\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Check-out Time <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"checkOutTime\"\n                control={control}\n                rules={{ required: true }}\n                render={({ field }) => (\n                  <CustomDatePicker\n                  field={field}\n                  showTime={true}\n                  format=\"DD/MM/YYYY HH:mm\"\n                  errors={errors}\n                  disabledDate={(current) => {\n                    const selectedDate = watch('checkInTime'); // should be a dayjs object or parse it\n                    if (!selectedDate) return true; // Disable all if no date selected\n                \n                    const selected = dayjs(selectedDate).startOf('day');\n                    const oneExyytaDay = selected.add(1, 'day');\n                \n                    return (\n                      !current.isSame(selected, 'day') &&\n                      !current.isSame(oneExyytaDay, 'day')\n                    );\n                  }}\n                />\n                )}\n              />\n              {errors.checkOutTime && (\n                <p className=\"text-red-500 text-sm\">Check-out time is required</p>\n              )}\n            </div>\n            <div className=\"\">\n              {/* Select Shift */}\n              <label className={`${inputLabelClassName}`}>\n                Select Shift <span className=\"text-red-600\">*</span>\n              </label>\n              <Controller\n                name=\"shift\"\n                control={control}\n                rules={{ required: \"Shift is required\" }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.shift ? '' : 'border-gray-300'}`}\n                    placeholder=\"Select Shift\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                    getPopupContainer={() => document.body}\n                    dropdownStyle={{ zIndex: 2000 }}\n\n                  >\n                    <Option value=\"\">Select Shift</Option>\n                    {timeSlotsListData?.map((type) =>\n                      <Option key={type?._id} value={type?._id}>\n                        {type?.shiftName}\n                      </Option>\n                    )}\n                  </Select>\n                )}\n              />\n\n              {errors.shift && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.shift.message}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className={`${inputLabelClassName}`}>Reason < span className=\"text-red-600\" >* </span></label>\n              <input\n                type=\"text\"\n                {...register('reason', { required: true })}\n                className={`${inputClassName} ${errors.reason ? \"border-[1px] \" : \"border-gray-300\"}`}\n                rows=\"3\"\n              />\n              {errors.reason && <p className=\"text-red-500 text-sm\">Reason is required </p>}\n            </div>\n          </div>\n          <div className=\"flex justify-end space-x-2 mt-4\">\n            <button\n              type=\"submit\"\n              disabled={atentdanceLoading}\n              className={`px-4 py-2 text-sm font-medium text-white ${atentdanceLoading ? \"bg-gray-400\" : 'bg-header hover:bg-[#063156]'} rounded-md `}\n            >\n              {atentdanceLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </Modal>\n\n\n  );\n};\n\nexport default ManualAttendanceModal;\n"],"names":["props","value","formatter","precision","decimalSeparator","groupSeparator","prefixCls","valueNode","val","String","cells","match","negative","int","decimal","replace","padEnd","slice","concat","React","key","className","genStyleHooks","token","componentCls","marginXXS","padding","colorTextDescription","titleFontSize","colorTextHeading","contentFontSize","fontFamily","Object","assign","resetComponent","marginBottom","color","fontSize","paddingTop","display","direction","marginInlineEnd","marginInlineStart","genStatisticStyle","mergeToken","fontSizeHeading3","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","Statistic","ref","customizePrefixCls","rootClassName","style","valueStyle","title","valueRender","prefix","suffix","loading","onMouseEnter","onMouseLeave","rest","getPrefixCls","contextClassName","contextStyle","useComponentConfig","wrapCSSVar","hashId","cssVarCls","useStyle","StatisticNumber","cls","classNames","internalRef","nativeElement","current","restProps","pickAttrs","aria","data","Skeleton","paragraph","timeUnits","formatCounter","config","down","format","target","Date","getTime","now","duration","leftDuration","escapeRegex","keepList","map","str","templateText","replacedText","reduce","_ref","name","unit","includes","Math","floor","RegExp","len","toString","padStart","index","formatTimeStr","max","onChange","onFinish","type","showTime","setShowTime","update","useEvent","timestamp","rafId","rafUpdate","raf","clear","cancel","node","cloneElement","undefined","formatValue","Countdown","StatisticTimer","Timer","_moment","_dayData$workedHRS","isOpen","onClose","modalData","dayData","DayData","_jsxs","Modal","open","onCancel","footer","children","moment","date","width","bodyStyle","maxHeight","overflowY","centered","_jsx","employee","employeeName","totalPresent","totalAbsent","totalLeaves","firstHalfDay","secondHalfDay","day","isPresentDay","checkInTime","dayjs","checkOutTime","workedHRS","convertMinutesToHoursAndMinutes","getCurrentMonth","today","year","getFullYear","month","getMonth","generateAttendanceReport","require","report","dailyStatus","currentMonth","currentYear","daysInMonth","formattedDate","startOf","toISOString","find","entry","push","statusData","label","description","bgColor","AllEmployeeAttendanceRecord","dispatch","useDispatch","userInfoglobal","JSON","parse","localStorage","getItem","domainName","AllAttendanceRecordData","useSelector","state","attendance","allmonthattendaceData","setallmonthattendaceData","useState","monthName","isManualModalOpen","setIsManualModalOpen","register","handleSubmit","control","setValue","formState","errors","useForm","setModalData","isModalOpen","setIsModalOpen","monthlySummary","setMonthlySummary","todaySummary","setTodaySummary","selectedDate","useWatch","defaultValue","useEffect","getAllAttendanceRecord","companyId","userType","_id","branchId","employeId","canCreate","canRead","canUpdate","canDelete","usePermissions","fetchattendanceListData","employeeateendenceData","_objectSpread","P","H","L","A","W","D","forEach","_employee$dailyStatus","calculateAllSummary","GlobalLayout","autoComplete","inputLabelClassName","Controller","render","_ref2","field","CustomDatePicker","picker","disabledDate","isAfter","endOf","Row","gutter","Col","xs","md","Card","bordered","headStyle","entries","_ref3","status","sm","size","fontWeight","_ref4","Tooltip","placement","onClick","FaPlus","Table","columns","dataIndex","fixed","_","__","record","summary","calculateAttendanceSummary","Tag","Array","from","dayNumber","Number","align","onCell","dataSource","rowData","sno","scroll","x","y","pagination","rowHoverable","components","body","cell","locale","emptyText","ManualAttendanceModal","AttendanceDataModal","watch","reset","defaultValues","reason","Option","Select","timeSlotsListData","timeSlots","useNavigate","departmentId","designationId","branchList","branchListloading","branch","companyList","companyListLoading","company","atentdanceLoading","employeList","employe","companySearch","text","sort","isPagination","deptSearch","branchSearch","fetchEmployeListData","fetchTimeSlotFunc","reqPayload","isTL","isHR","employeSearch","timeSlotSearch","directorId","visible","height","onSubmit","console","log","reqData","attendanceDate","method","isVerified","shift","attendancegCreate","then","response","error","Swal","icon","confirmButtonText","customClass","confirmButton","rules","required","inputAntdSelectClassName","PDPlan","placeholder","showSearch","filterOption","input","option","toLowerCase","getPopupContainer","trigger","parentNode","disabled","ListLoader","element","fullName","PDCompanyId","message","_sortByPropertyAlphab","dropdownStyle","zIndex","document","sortByPropertyAlphabetically","PDBranchId","_sortByPropertyAlphab2","_selectedEmployee$shi","selectedEmployee","emp","shiftTimeSlot","classNamePrefix","_ref5","isFirstThreeDays","startOfPrevMonth","clone","subtract","isFromPrevMonth","isSame","isFromCurrentMonth","isAfterToday","_ref6","selected","oneExyytaDay","add","_ref7","shiftName","inputClassName","rows","Loader"],"sourceRoot":""}