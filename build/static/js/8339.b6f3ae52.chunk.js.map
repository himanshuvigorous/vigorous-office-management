{"version":3,"file":"static/js/8339.b6f3ae52.chunk.js","mappings":"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","sources":["global_layouts/Loader/Loader.js","pages/global/other/commonEmailTemplate/CommonEmailList.js"],"sourcesContent":["import { Spin } from \"antd\"\n\nfunction Loader() {\n    return (\n       <div className=\"flex justify-center items-center h-[80vh]\">\n         {/* <div class=\"loader\"></div> */} \n         <Spin size=\"large\" />\n       </div>\n    )\n}\n\nexport default Loader\n","import React, { useEffect, useState } from \"react\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport Swal from \"sweetalert2\";\nimport { encrypt } from \"../../../../config/Encryption\";\nimport { FaPlus } from \"react-icons/fa6\";\nimport Loader from \"../../../../global_layouts/Loader/Loader\";\nimport { deletecommonEmail, getcommonEmailList } from \"./commonEmailFeatures/_common_email_reducers\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { domainName, inputAntdSelectClassNameFilter, inputClassNameSearch, sortByPropertyAlphabetically, } from \"../../../../constents/global\";\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport { CgEyeAlt } from \"react-icons/cg\";\nimport { Select, Tooltip } from \"antd\";\nimport getUserIds from \"../../../../constents/getUserIds\";\nimport { HiOutlineFilter } from \"react-icons/hi\";\nimport usePermissions from \"../../../../config/usePermissions\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport dayjs from \"dayjs\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\n\n\nfunction CommonEmailTemplateList() {\n  const { register, control, setValue, formState: { errors } } = useForm();\n  const { userCompanyId, userBranchId, userType } = getUserIds();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { commonEmailData, totalcommonEmailCount, loading } = useSelector((state) => state.emailTemplate);\n  const [searchText, setSearchText] = useState(\"\");\n  // const [status, setStatus] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList, loading: branchSearchLoading } = useSelector(\n    (state) => state.branch\n  );\n  const companyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: userCompanyId,\n  });\n  const branchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: userBranchId,\n  });\n  const status = useWatch({\n    control,\n    name: 'status',\n    defaultValue: ''\n  });\n  const limit = 10;\n\n\n  const filters = [branchId, companyId, status, searchText].join(\"-\");\n  const [isFirstRender ,setisFirstRender] = useState(false)\n  \n  useEffect(() => {\n    if (!isFirstRender) {\n      setisFirstRender(state=>true);\n      return;\n    }\n    if (currentPage === 1) {\n      getCommonEmailRequest();\n    } else {\n      setCurrentPage(1);\n    }\n  }, [filters]);\n\n  useEffect(() => {\n    getCommonEmailRequest();\n  }, [currentPage]);\n\n  const getCommonEmailRequest = () => {\n    const data = {\n      currentPage: currentPage,\n      pageSize: limit,\n      reqData: {\n        directorId: \"\",\n        companyId: companyId || \"\",\n        branchId: branchId || \"\",\n        \"text\": searchText,\n        \"sort\": true,\n        status: status === \"true\" ? true : status === \"false\" ? false : \"\",\n        \"isPagination\": true,\n      }\n    };\n    dispatch(getcommonEmailList(data));\n  };\n\n  const handleDelete = (id) => {\n    let reqData = {\n      _id: id,\n    };\n    Swal.fire({\n      title: \"Warning\",\n      text: \"Are you sure you want to delete!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      cancelButtonText: \"No\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(deletecommonEmail(reqData)).then((data) => {\n          // getCommonEmailRequest()\n          if (currentPage > 1 && commonEmailData?.length == 1) {\n            setCurrentPage(Number(currentPage - 1));\n\n          } else {\n            getCommonEmailRequest();\n          }\n        });\n      }\n    });\n  };\n  useEffect(() => {\n    if (\n      companyId ||\n      userType === \"company\" ||\n      userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId: companyId\n        })\n      );\n    }\n  }, [companyId])\n  useEffect(() => {\n    if (userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedTemplate, setSelectedTemplate] = useState(null); // State to store the selected template data\n  const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n  // Function to open the modal with the template details\n  const openModal = (template) => {\n    setSelectedTemplate(template);\n    setModalOpen(true);\n  };\n\n  // Function to close the modal\n  const closeModal = () => {\n    setModalOpen(false);\n    setSelectedTemplate(null);\n  };\n\n  const onChange = (e) => {\n\n    setSearchText(e);\n  };\n\n  return (\n    <GlobalLayout onChange={onChange}>\n\n      <>\n        <div className=\"\">\n          <div className=\"sm:flex justify-between items-center md:space-y-0 space-y-2 py-1\">\n            <div className=\"grid sm:grid-cols-2 grid-cols-1 lg:grid-cols-3 sm:gap-3 gap-1.5\">\n              {userInfoglobal?.userType === \"admin\" && (\n                <div className=\"\">\n                  <select\n                    {...register(\"PDCompanyId\", {\n                      required: \"company is required\",\n                    })}\n                    className={` ${inputClassNameSearch} ${errors.PDCompanyId ? \"border-[1px] \" : \"border-gray-300\"\n                      }`}\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <option className=\"\" value=\"\">\n                      Select Comapany\n                    </option>\n                    {companyList?.map((type) => (\n                      <option value={type?._id}>{type?.fullName}</option>\n                    ))}\n                  </select>\n                  {errors.PDCompanyId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDCompanyId.message}\n                    </p>\n                  )}\n                </div>)}\n              {(userType === \"admin\" || userType === \"company\" || userType === \"companyDirector\") &&\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    rules={{ required: \"Branch is required\" }}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`w-full ${inputAntdSelectClassNameFilter} ${errors.PDBranchId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children).toLowerCase().includes(input.toLowerCase())\n                        }\n                        placeholder=\"Select Branch\"\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchSearchLoading ? (\n                          <Select.Option disabled>\n                            <ListLoader />\n                          </Select.Option>\n                        ) : (\n                          sortByPropertyAlphabetically(branchList)?.map((type) => (\n                            <Select.Option key={type?._id} value={type?._id}>\n                              {type?.fullName}\n                            </Select.Option>\n                          ))\n                        )}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && <p className=\"text-red-500 text-sm\">{errors.PDBranchId.message}</p>}\n                </div>}\n              <div className=\"\">\n                <Controller\n                  name=\"status\"\n                  control={control}\n                  rules={{}}\n                  render={({ field }) => (\n                    <Select\n                      {...field}\n                      className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.status\n                        ? \"border-[1px] \"\n                        : \"border-gray-300\"\n                        }`}\n                      placeholder=\"Select Status\"\n                      showSearch\n                      filterOption={(input, option) =>\n                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                      }\n                    >\n                      <Select.Option value=\"\">Select Status</Select.Option>\n                      <Select.Option value=\"true\"> Active </Select.Option>\n                      <Select.Option value=\"false\"> InActive </Select.Option>\n                    </Select>\n                  )}\n                />\n              </div>\n            </div>\n\n            <div className=\"flex justify-end items-center gap-2 \">\n              <button\n                onClick={() => {\n                  setValue(\"status\", \"\");\n                  setValue(\"PDBranchId\", '');\n                  setValue(\"PdDepartmentId\", \"\");\n                  setValue(\"PdCompanyId\", \"\");\n                }}\n                className=\"bg-header py-[6px] rounded-md flex px-5 justify-center items-center text-white\">\n                <span className=\"text-[12px]\">Reset</span>\n              </button>\n              {canCreate &&\n                <Tooltip placement=\"topLeft\"  title='Email Template'>\n                  <button\n                    onClick={() => {\n                      navigate(\"/admin/email-template/create\");\n                    }}\n                    className=\"bg-header px-2 py-1.5 rounded-md flex justify-center items-center space-x-2 text-white\"\n                  >\n                    <FaPlus />\n                    <span className=\"text-[12px]\">Add Email Template</span>\n                  </button>\n                </Tooltip>}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full\">\n          <div className=\"bg-[#ffffff] w-full overflow-x-auto mt-1 rounded-xl\">\n            {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n              <thead>\n                <tr className=\"border-b-[1px] border-[#DDDDDD] bg-header capitalize text-[12px] text-[#ffff] font-[500] h-[40px]\">\n                  <th className=\"p-2 whitespace-nowrap w-[10%]\">S.No.</th>\n                  <th className=\"p-2 whitespace-nowrap\">Template Title</th>\n                  <th className=\"p-2 whitespace-nowrap\">create At</th>\n                  <th className=\"p-2 whitespace-nowrap\">created By</th>\n                  <th className=\"p-2 whitespace-nowrap\">Status</th>\n                  {(canRead || canDelete || canUpdate) && <th className=\"p-2 whitespace-nowrap w-[10%]\">Action</th>}\n                </tr>\n              </thead>\n              {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={10}\n                  className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr> :\n                <tbody>\n                  {commonEmailData && commonEmailData?.length > 0 ? (\n                    commonEmailData?.map((element, index) => (\n                      <React.Fragment key={element._id}>\n                        <tr\n                          className={`text-black ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"} text-[14px] border-b-[1px] border-[#DDDDDD]`}\n                        >\n                          <td className=\"whitespace-nowrap p-2\">\n                            {index + 1 + (currentPage - 1) * limit}\n                          </td>\n                          <td className=\"whitespace-nowrap p-2\">{element?.title}</td>\n                          <td className=\"whitespace-nowrap p-2\">{dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a')}</td>\n                          <td className=\"whitespace-nowrap p-2\">{element?.createdBy}</td>\n                          <td className=\"whitespace-nowrap border-none p-2 \">\n                            <span\n                              className={`${element?.status ? \"bg-[#E0FFBE] border-green-500\" : \"bg-red-200 border-red-500\"} border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}\n                            >\n                              {element?.status ? \"Active\" : \"Inactive\"}\n                            </span>\n                          </td>\n                          {(canUpdate || canRead || canDelete) && <td className=\"whitespace-nowrap p-2\">\n                            <span className=\"py-1.5 flex justify-start items-center space-x-2.5\">\n                              {canUpdate && <Tooltip placement=\"topLeft\"  title='Edit'>\n                                <button\n                                  onClick={() => {\n                                    navigate(`/admin/email-template/edit/${encrypt(element?._id)}`);\n                                  }}\n                                  className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                  type=\"button\"\n                                >\n                                  <FaPenToSquare className=\"hover:text-[#337ab7] text-[#3c8dbc]\" size={16} />\n                                </button>\n                              </Tooltip>}\n                              {canRead && <Tooltip placement=\"topLeft\"  title='View Details'>\n                                <button\n                                  onClick={() => openModal(element)}\n                                  className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                  type=\"button\"\n                                >\n                                  <CgEyeAlt className=\"text-cyan-600 hover:text-cyan-500\" size={16} />\n                                </button>\n                              </Tooltip>}\n                              {canDelete && <Tooltip placement=\"topLeft\"  title='Delete'>\n                                <button\n                                  onClick={() => handleDelete(element?._id)}\n                                  className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\"\n                                  type=\"button\"\n                                >\n                                  <RiDeleteBin5Line className=\"text-red-600 hover:text-red-500\" size={16} />\n                                </button>\n                              </Tooltip>}\n                            </span>\n                          </td>}\n\n                        </tr>\n                      </React.Fragment>\n                    ))\n                  ) : (\n                    <tr className=\"bg-white bg-opacity-5\">\n                      <td colSpan={6} className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\">\n                        Record Not Found\n                      </td>\n                    </tr>\n                  )}\n                </tbody>}\n            </table>}\n          </div>\n          {commonEmailData?.length > 0 &&\n            <CustomPagination\n              totalCount={totalcommonEmailCount}\n              pageSize={limit}\n              currentPage={currentPage}\n              onChange={onPaginationChange}\n            />}\n        </div>\n\n        {modalOpen && selectedTemplate && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[1501]\" onClick={closeModal}>\n            <div className=\"animate-slideInFromTop bg-white rounded-lg px-6 pt-6 pb-3 w-[800px] max-h-[70vh] overflow-y-hidden\" onClick={(e) => e.stopPropagation()}>\n              <div className=\"mt-4\">\n                <div dangerouslySetInnerHTML={{ __html: selectedTemplate?.content }}></div>\n              </div>\n              <div className=\"mt-4 flex justify-end\">\n                <button\n                  onClick={closeModal}\n                  className=\"px-4 py-2 text-white bg-header rounded-md\"\n                >\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </>\n\n    </GlobalLayout>\n  );\n}\nexport default CommonEmailTemplateList;\n"],"names":["_jsx","className","children","Spin","size","register","control","setValue","formState","errors","useForm","userCompanyId","userBranchId","userType","getUserIds","navigate","useNavigate","dispatch","useDispatch","commonEmailData","totalcommonEmailCount","loading","useSelector","state","emailTemplate","searchText","setSearchText","useState","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","currentPage","setCurrentPage","companyList","company","branchList","branchSearchLoading","branch","companyId","useWatch","name","defaultValue","branchId","status","filters","join","isFirstRender","setisFirstRender","useEffect","getCommonEmailRequest","data","pageSize","reqData","directorId","getcommonEmailList","branchSearch","text","sort","isPagination","companySearch","modalOpen","setModalOpen","selectedTemplate","setSelectedTemplate","canCreate","canRead","canUpdate","canDelete","usePermissions","closeModal","GlobalLayout","onChange","e","_jsxs","_Fragment","_objectSpread","required","inputClassNameSearch","PDCompanyId","showSearch","filterOption","input","option","String","toLowerCase","includes","value","map","type","_id","fullName","message","Controller","rules","render","_ref","_sortByPropertyAlphab","field","Select","inputAntdSelectClassNameFilter","PDBranchId","placeholder","Option","disabled","ListLoader","sortByPropertyAlphabetically","_ref2","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","element","index","React","dayjs","createdAt","format","createdBy","encrypt","FaPenToSquare","CgEyeAlt","id","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deletecommonEmail","Number","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","page","stopPropagation","dangerouslySetInnerHTML","__html","content"],"sourceRoot":""}