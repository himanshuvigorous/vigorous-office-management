{"version":3,"file":"static/js/8666.5cbe7c0b.chunk.js","mappings":"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","sources":["pages/hr/employeeSalary/Allowance/UpdateAllowance.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {\n  domainName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputLabelClassName,\n} from \"../../../../constents/global\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport {\n  allowanceCreate,\n  allowanceDetails,\n  allowanceUpdate,\n} from \"./allowancefeature/_allowanceList_reducers\";\nimport { decrypt } from \"../../../../config/Encryption\";\nimport { Select } from \"antd\";\nimport Loader from \"../../../../global_layouts/Loader\";\n\nconst UpdateAllowance = () => {\n  const { loading: allowanceLoading } = useSelector(\n    (state) => state.allowance\n  );\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { allowanceIdEnc } = useParams();\n  const allowanceId = decrypt(allowanceIdEnc);\n  const { allowanceDetailsData } = useSelector((state) => state.allowance);\n\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n\n  const isPercentage = useWatch({\n    control,\n    name: \"isPercentage\",\n    defaultValue: \"\",\n  });\n\n  useEffect(() => {\n    if (allowanceId) {\n      dispatch(\n        allowanceDetails({\n          _id: allowanceId,\n        })\n      );\n    }\n  }, [allowanceId]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: allowanceId,\n      companyId: allowanceDetailsData?.companyId,\n      directorId: allowanceDetailsData?.directorId,\n      branchId: allowanceDetailsData?.branchId,\n      name: data?.allowanceName,\n      description: \"\",\n      isPercentage: false,\n      amount: 0,\n      status:\n        data.status === \"true\" ? true : data.status === \"false\" ? false : \"\",\n    };\n\n    dispatch(allowanceUpdate(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n  useEffect(() => {\n    if (allowanceDetailsData) {\n      setValue(\"allowanceName\", allowanceDetailsData?.name);\n      // setValue(\"description\", allowanceDetailsData?.description);\n      // setValue(\"isPercentage\", allowanceDetailsData?.isPercentage === true ? 'Active' : 'InActive');\n      // setValue(\"amount\", allowanceDetailsData?.amount);\n      setValue(\n        \"status\",\n        allowanceDetailsData?.status === true\n          ? \"true\"\n          : allowanceDetailsData?.status === false\n            ? \"false\"\n            : \"\"\n      );\n    }\n  }, [allowanceDetailsData]);\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form\n          autoComplete=\"off\"\n          className=\"mt-2 md:px-1\"\n          onSubmit={handleSubmit(onSubmit)}\n        >\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>Name</label>\n              <input\n                type=\"text\"\n                {...register(\"allowanceName\", {\n                  required: \"Allowance  is required\",\n                })}\n                className={`${inputClassName} ${errors.allowanceName\n                  ? \"border-[1px] \"\n                  : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Allowance  Name\"\n              />\n              {errors.allowanceName && (\n                <p className=\"text-red-500 text-sm\">\n                  {errors.allowanceName.message}\n                </p>\n              )}\n            </div>\n            <div>\n              <label className={`${inputLabelClassName}`}>\n                Status <span className=\"text-red-600\">*</span>\n              </label>\n              {/* <select\n                {...register(\"isPercentage\", {\n                  required: \"isPercentage is required\",\n                })}\n                className={`${inputClassName} ${errors.isPercentage ? \"border-[1px] \" : \"border-gray-300\"}`}\n              >\n                <option value=\"\">Select isPercentage</option>\n                <option value={true}>Active</option>\n                <option value={false}>Inactive</option>\n              </select> */}\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{\n                  required: \"status is required\",\n                }}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={` w-32 ${inputAntdSelectClassName} ${errors.PDPlan\n                      ? \"border-[1px] \"\n                      : \"border-gray-300\"\n                      }`}\n                    placeholder=\"Select Status\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children).toLowerCase().includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    <Select.Option value=\"true\"> Active </Select.Option>\n                    <Select.Option value=\"false\"> InActive </Select.Option>\n                  </Select>\n                )}\n              />\n              {errors.status && (\n                <p className=\"text-red-500 text-sm\">{errors.status.message}</p>\n              )}\n            </div>\n          </div>\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={allowanceLoading}\n              className={`${allowanceLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 rounded mt-3`}\n            >\n              {allowanceLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default UpdateAllowance;\n"],"names":["UpdateAllowance","loading","allowanceLoading","useSelector","state","allowance","register","handleSubmit","control","formState","errors","setValue","useForm","dispatch","useDispatch","navigate","useNavigate","allowanceIdEnc","useParams","allowanceId","decrypt","allowanceDetailsData","JSON","parse","localStorage","getItem","concat","domainName","useWatch","name","defaultValue","useEffect","allowanceDetails","_id","status","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","directorId","branchId","allowanceName","description","isPercentage","amount","allowanceUpdate","then","error","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","Controller","rules","render","_ref","field","Select","inputAntdSelectClassName","PDPlan","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","disabled","Loader"],"sourceRoot":""}