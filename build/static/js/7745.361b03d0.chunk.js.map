{"version":3,"file":"static/js/7745.361b03d0.chunk.js","mappings":"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","sources":["pages/financeManagement/cashbook/EmployeeExpenseReport.js","pages/financeManagement/cashbook/EmployeeCashbook.js","pages/financeManagement/cashbook/EmployeecashbookDetailsList.js"],"sourcesContent":["import React from 'react';\nimport { \n  Card, \n  Table, \n  Tag, \n  Divider, \n  Descriptions, \n  Typography, \n  Button, \n  Result, \n  Avatar, \n  Space, \n  Tabs,\n  Badge,\n  Statistic,\n  Row,\n  Col\n} from 'antd';\nimport { \n  EyeOutlined, \n  FrownOutlined, \n  ArrowLeftOutlined, \n  DownloadOutlined,\n  MoneyCollectOutlined,\n  TransactionOutlined\n} from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst { Title, Text } = Typography;\nconst { TabPane } = Tabs;\n\nconst EmployeeExpenseReport = ({ data }) => {\n  const navigate = useNavigate();\n  \n  if (!data || !data.cashbookData?.statusWiseSummary) {\n    return (\n      <div style={{ padding: '40px 20px', textAlign: 'center' }}>\n        <Result\n          icon={<FrownOutlined style={{ color: '#ff4d4f' }} />}\n          title=\"No Expense Data Available\"\n          subTitle=\"We couldn't find any expense records for this employee.\"\n          extra={\n            <Button \n              type=\"primary\" \n              icon={<ArrowLeftOutlined />}\n              onClick={() => navigate(-1)}\n            >\n              Go Back\n            </Button>\n          }\n        />\n      </div>\n    );\n  }\n\n  const { \n    fullName,\n    profileImage,\n    email,\n    mobile,\n    openingBalance,\n    cashbookData,\n    advance\n  } = data;\n\n  const { \n    statusWiseSummary = [], \n    overallBalance \n  } = cashbookData;\n\n  const handleViewAttachment = (attachmentUrl) => {\n    window.open(`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public${attachmentUrl}`, '_blank');\n  };\n\n  const renderAmount = (amount) => (\n    <Text strong type={amount < 0 ? 'danger' : amount > 0 ? 'success' : undefined}>\n      ₹{Math.abs(amount)}\n    </Text>\n  );\n\n  const transactionColumns = [\n    {\n      title: 'Date',\n      dataIndex: 'date',\n      key: 'date',\n      render: (date) => new Date(date).toLocaleDateString(),\n      sorter: (a, b) => new Date(a.date) - new Date(b.date),\n      width: '15%',\n    },\n    {\n      title: 'Amount',\n      dataIndex: 'amount',\n      key: 'amount',\n      render: (amount) => renderAmount(amount),\n      sorter: (a, b) => a.amount - b.amount,\n      width: '15%',\n    },\n    {\n      title: 'Narration',\n      dataIndex: 'naration',\n      key: 'naration',\n      ellipsis: true,\n      width: '40%',\n    },\n    {\n      title: 'Attachments',\n      dataIndex: 'attachment',\n      key: 'attachment',\n      render: (attachments) => (\n        <div>\n          {attachments && attachments.length > 0 ? (\n            <Space>\n              <Badge count={attachments.length} />\n              <Button\n                type=\"link\"\n                icon={<EyeOutlined />}\n                onClick={() => handleViewAttachment(attachments[0])}\n                size=\"small\"\n              >\n                View\n              </Button>\n            </Space>\n          ) : (\n            'No attachments'\n          )}\n        </div>\n      ),\n      width: '30%',\n    },\n  ];\n\n  const advanceTransactionColumns = [\n    {\n      title: 'Date',\n      dataIndex: 'date',\n      key: 'date',\n      render: (date) => new Date(date).toLocaleDateString(),\n      sorter: (a, b) => new Date(a.date) - new Date(b.date),\n    },\n    {\n      title: 'Type',\n      dataIndex: 'paymentType',\n      key: 'paymentType',\n      render: (type) => (\n        <Tag color={type === 'deposit' ? 'green' : 'red'}>\n          {type === 'deposit' ? 'Deposit' : 'Deduction'}\n        </Tag>\n      ),\n    },\n    {\n      title: 'Receipt',\n      dataIndex: 'receiptNumber',\n      key: 'receiptNumber',\n    },\n    {\n      title: 'Amount',\n      dataIndex: 'amount',\n      key: 'amount',\n      render: (amount, record) => renderAmount(\n        record.paymentType === 'deposit' ? amount : -amount\n      ),\n    },\n    {\n      title: 'Narration',\n      dataIndex: 'naration',\n      key: 'naration',\n      ellipsis: true,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (_, record) => (\n        record.receiptPDFPath && (\n          <Button \n            icon={<DownloadOutlined />} \n            size=\"small\"\n            onClick={() => handleViewAttachment(record.receiptPDFPath)}\n          >\n            Receipt\n          </Button>\n        )\n      ),\n    },\n  ];\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <Card \n        title={\n          <Space>\n            <Avatar src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public${profileImage}`} />\n            <span>{fullName}'s Financial Summary</span>\n          </Space>\n        } \n        style={{ marginBottom: 20 }}\n        extra={\n          <Button \n            icon={<ArrowLeftOutlined />} \n            onClick={() => navigate(-1)}\n          >\n            Back\n          </Button>\n        }\n      >\n        <Descriptions bordered column={2}>\n          <Descriptions.Item label=\"Employee Name\">\n            <Text strong>{fullName}</Text>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Contact\">\n            <Text>{mobile?.code} {mobile?.number}</Text>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Email\">\n            <Text>{email}</Text>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Opening Balance\">\n            {openingBalance ? renderAmount(openingBalance) : 0}\n          </Descriptions.Item>\n        </Descriptions>\n\n        <Divider />\n\n        <Row gutter={16}>\n          <Col span={8}>\n            <Card>\n              <Statistic\n                title=\"Current Balance\"\n                value={overallBalance}\n                precision={2}\n                valueStyle={{ color: overallBalance < 0 ? '#cf1322' : '#3f8600' }}\n                prefix={<MoneyCollectOutlined />}\n                suffix=\"₹\"\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <Statistic\n                title=\"Advance Available\"\n                value={advance?.availableBalance || 0}\n                precision={2}\n                valueStyle={{ color: '#3f8600' }}\n                prefix={<TransactionOutlined />}\n                suffix=\"₹\"\n              />\n            </Card>\n          </Col>\n          <Col span={8}>\n            <Card>\n              <Statistic\n                title=\"Total Advance\"\n                value={advance?.totalDepositAmount || 0}\n                precision={2}\n                valueStyle={{ color: '#3f8600' }}\n                prefix={<TransactionOutlined />}\n                suffix=\"₹\"\n              />\n            </Card>\n          </Col>\n        </Row>\n      </Card>\n\n      <Tabs defaultActiveKey=\"1\">\n        <TabPane tab=\"Expense Transactions\" key=\"1\">\n          {statusWiseSummary.map((statusSummary) => {\n            const statusColor = \n              statusSummary.status === 'Approved' ? 'green' : \n              statusSummary.status === 'Rejected' ? 'red' : \n              statusSummary.status === 'Paid' ? 'blue' : 'orange';\n\n            return (\n              <div key={statusSummary.status} style={{ marginBottom: 24 }}>\n                <Divider orientation=\"left\">\n                  <Tag color={statusColor} style={{ fontSize: '1.1em', padding: '5px 10px' }}>\n                    {statusSummary.status} (Total: {renderAmount(statusSummary.totalAmount)})\n                  </Tag>\n                  <span style={{ marginLeft: 8 }}>\n                    {statusSummary.count} transaction{statusSummary.count !== 1 ? 's' : ''}\n                  </span>\n                </Divider>\n                \n                <Table\n                  columns={transactionColumns}\n                  dataSource={statusSummary.transactions}\n                  rowKey=\"_id\"\n                  pagination={statusSummary.transactions.length > 10 ? { pageSize: 10 } : false}\n                  bordered\n                  size=\"middle\"\n                  summary={() => (\n                    <Table.Summary fixed>\n                      <Table.Summary.Row>\n                        <Table.Summary.Cell index={0} colSpan={2}>\n                          <Text strong>Total</Text>\n                        </Table.Summary.Cell>\n                        <Table.Summary.Cell index={1}>\n                          <Text strong>{renderAmount(statusSummary.totalAmount)}</Text>\n                        </Table.Summary.Cell>\n                        <Table.Summary.Cell index={2} colSpan={2}></Table.Summary.Cell>\n                      </Table.Summary.Row>\n                    </Table.Summary>\n                  )}\n                />\n              </div>\n            );\n          })}\n        </TabPane>\n\n        <TabPane tab=\"Advance Transactions\" key=\"2\">\n          <div style={{ marginBottom: 24 }}>\n            <Divider orientation=\"left\">\n              <Tag color=\"green\" style={{ fontSize: '1.1em', padding: '5px 10px' }}>\n                Deposits (Total: {renderAmount(advance?.totalDepositAmount || 0)})\n              </Tag>\n              <span style={{ marginLeft: 8 }}>\n                {advance?.depositList?.length || 0} transaction{advance?.depositList?.length !== 1 ? 's' : ''}\n              </span>\n            </Divider>\n            \n            <Table\n              columns={advanceTransactionColumns}\n              dataSource={advance?.depositList || []}\n              rowKey=\"_id\"\n              pagination={false}\n              bordered\n              size=\"middle\"\n            />\n          </div>\n\n          <div style={{ marginBottom: 24 }}>\n            <Divider orientation=\"left\">\n              <Tag color=\"red\" style={{ fontSize: '1.1em', padding: '5px 10px' }}>\n                Deductions (Total: {renderAmount(-(advance?.totalDeductionAmount || 0))})\n              </Tag>\n              <span style={{ marginLeft: 8 }}>\n                {advance?.deductionList?.length || 0} transaction{advance?.deductionList?.length !== 1 ? 's' : ''}\n              </span>\n            </Divider>\n            \n            <Table\n              columns={advanceTransactionColumns}\n              dataSource={advance?.deductionList || []}\n              rowKey=\"_id\"\n              pagination={false}\n              bordered\n              size=\"middle\"\n            />\n          </div>\n        </TabPane>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default EmployeeExpenseReport;","import { Controller, useForm, } from \"react-hook-form\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { convertIntoAmount } from \"../../../constents/global\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport dayjs from \"dayjs\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport ExcelJS from \"exceljs\";\n\nfunction EmployeeCashbook({ cashbookDetailsListdata, control, errors }) {\n  const { setValue } = useForm();\n  const [pageSize, setPageSize] = useState(10);\n  const [employeeCashbookList, setEmployeeCashbookList] = useState([])\n  const [searchText, setSearchText] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n\n\n\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n  const employeeDetails = useMemo(() => ({\n    name: cashbookDetailsListdata?.fullName,\n    email: cashbookDetailsListdata?.branchData?.email,\n    number: `${cashbookDetailsListdata?.branchData?.mobile?.code || ''} ${cashbookDetailsListdata?.branchData?.mobile?.number || ''}`.trim(),\n    userName: cashbookDetailsListdata?.branchData?.userName,\n    outstandingAmount: cashbookDetailsListdata?.summary?.closingBalance\n  }), [cashbookDetailsListdata]);\n  // Filtered data based on search text\n  const filteredCashbookList = useMemo(() => {\n    if (!debouncedFilterText) return employeeCashbookList;\n\n    return employeeCashbookList.filter(item =>\n      Object.values(item).some(value =>\n        value?.toString().toLowerCase().includes(debouncedFilterText.toLowerCase())\n      )\n    );\n  }, [employeeCashbookList, debouncedFilterText]);\n  // Enhanced Excel generation with filters and styling\n  const generateExcel = useCallback(async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"EmployeeCashbookDetails\");\n\n    // Define columns with proper styling\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 8 },\n      { header: \"Entry Date\", key: \"entryDate\", width: 20 },\n      { header: \"Value Date\", key: \"valueDate\", width: 15 },\n      { header: \"Description\", key: \"description\", width: 30 },\n      { header: \"Reference\", key: \"reference\", width: 20 },\n      { header: \"Debit\", key: \"debit\", width: 15 },\n      { header: \"Credit\", key: \"credit\", width: 15 },\n      { header: \"Balance\", key: \"balance\", width: 15 },\n      { header: \"Updated By\", key: \"updatedBy\", width: 20 },\n    ];\n\n    // Add title and employee details\n    worksheet.mergeCells('A1:I1');\n    worksheet.getCell('A1').value = 'Employee Cashbook Report';\n    worksheet.getCell('A1').font = { bold: true, size: 16 };\n    worksheet.getCell('A1').alignment = { horizontal: 'center' };\n\n    // Add employee details\n    worksheet.addRow([]); // Empty row\n    worksheet.addRow(['Employee Details:', '', '', '', '', '', '', '', '']);\n    worksheet.addRow(['Name:', employeeDetails.name]);\n    worksheet.addRow(['Email:', employeeDetails.email]);\n    worksheet.addRow(['Phone:', employeeDetails.number]);\n    worksheet.addRow(['Username:', employeeDetails.userName]);\n    worksheet.addRow(['Outstanding Amount:', employeeDetails.outstandingAmount]);\n    worksheet.addRow([]); // Empty row\n\n    // Add date range\n    const currentDate = dayjs().format('DD/MM/YYYY');\n    worksheet.addRow(['Report Date:', currentDate]);\n    worksheet.addRow(['Date Range:', `${dayjs().startOf('month').format('DD/MM/YYYY')} - ${dayjs().endOf('month').format('DD/MM/YYYY')}`]);\n    worksheet.addRow([]); // Empty row\n\n    // Header row\n    const headerRow = worksheet.addRow([\n      'S.No.', 'Entry Date', 'Value Date', 'Description', 'Reference',\n      'Debit', 'Credit', 'Balance', 'Updated By'\n    ]);\n\n    // Style header row\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FF2E86AB\" }, // Professional blue color\n      };\n      cell.font = { bold: true, color: { argb: \"FFFFFFFF\" } };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    // Add data rows\n    filteredCashbookList.forEach((element, index) => {\n      const row = worksheet.addRow({\n        sno: index + 1,\n        entryDate: element?.date ?? \"-\",\n        valueDate: element?.dateofValue ?? \"-\",\n        description: element?.Description ?? \"-\",\n        reference: element?.reference ?? \"-\",\n        debit: convertIntoAmount(element.amountDebit),\n        credit: convertIntoAmount(element.amountCredit),\n        balance: convertIntoAmount(element.acc),\n        updatedBy: element?.updatedBy ?? \"-\"\n      });\n\n      // Style data rows\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n\n        // Highlight total row\n        if (element.key === \"total\") {\n          cell.fill = {\n            type: \"pattern\",\n            pattern: \"solid\",\n            fgColor: { argb: \"FFF0F0F0\" },\n          };\n          cell.font = { bold: true };\n        }\n      });\n    });\n\n    // Add summary row\n    const summaryRow = worksheet.addRow([]);\n    worksheet.addRow(['Summary:', '', '', '', '', '', '', '', '']);\n\n    const totalDebit = cashbookDetailsListdata?.summary?.totalDebit || 0;\n    const totalCredit = cashbookDetailsListdata?.summary?.totalCredit || 0;\n    const closingBalance = cashbookDetailsListdata?.summary?.closingBalance || 0;\n\n    worksheet.addRow(['Total Debit:', '', '', '', '', convertIntoAmount(totalDebit)]);\n    worksheet.addRow(['Total Credit:', '', '', '', '', '', convertIntoAmount(totalCredit)]);\n    worksheet.addRow(['Closing Balance:', '', '', '', '', '', '', convertIntoAmount(closingBalance)]);\n\n    // Apply autofilter to data range (excluding header and summary)\n    const dataRange = `A${headerRow.number}:I${headerRow.number + filteredCashbookList.length}`;\n    worksheet.autoFilter = dataRange;\n\n    // Freeze header row\n    worksheet.views = [\n      { state: 'frozen', xSplit: 0, ySplit: headerRow.number }\n    ];\n\n    // Export file\n    const buffer = await workbook.xlsx.writeBuffer();\n    const blob = new Blob([buffer], {\n      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = `Employee_Cashbook_${dayjs().format('DD-MM-YYYY')}.xlsx`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }, [filteredCashbookList, employeeDetails, cashbookDetailsListdata]);\n\n  // PDF generation\n  const generatePDF = useCallback(async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n\n    // Title\n    doc.setFontSize(16);\n    doc.text(\"Employee Cashbook Report\", 40, 30);\n\n    // Employee details\n    doc.setFontSize(10);\n    let yPosition = 60;\n    doc.text(`Employee: ${employeeDetails.name}`, 40, yPosition);\n    doc.text(`Date: ${dayjs().format('DD/MM/YYYY')}`, 300, yPosition);\n    yPosition += 20;\n    doc.text(`Period: ${dayjs().startOf('month').format('DD/MM/YYYY')} - ${dayjs().endOf('month').format('DD/MM/YYYY')}`, 40, yPosition);\n\n    const headers = [\n      \"S.No.\",\n      \"Entry Date\",\n      \"Value Date\",\n      \"Description\",\n      \"Reference\",\n      \"Debit\",\n      \"Credit\",\n      \"Balance\",\n      \"Updated By\"\n    ];\n\n    const body = filteredCashbookList.map((element, index) => [\n      index + 1,\n      element?.date ?? \"-\",\n      element?.dateofValue ?? \"-\",\n      element?.Description ?? \"-\",\n      element?.reference ?? \"-\",\n      convertIntoAmount(element?.amountDebit),\n      convertIntoAmount(element?.amountCredit),\n      convertIntoAmount(element?.acc),\n      element?.updatedBy ?? \"-\"\n    ]);\n\n    autoTable(doc, {\n      startY: yPosition + 20,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 6,\n        fontSize: 8,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [46, 134, 171], // Matching blue color\n        textColor: [255, 255, 255],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n      didDrawCell: (data) => {\n        // Highlight total row\n        if (data.cell.raw === \"Total\") {\n          doc.setFillColor(240, 240, 240);\n          doc.rect(data.cell.x, data.cell.y, data.cell.width, data.cell.height, 'F');\n          doc.setTextColor(0, 0, 0);\n          doc.setFont(undefined, 'bold');\n        }\n      },\n    });\n\n    doc.save(`Employee_Cashbook_${dayjs().format('DD-MM-YYYY')}.pdf`);\n  }, [filteredCashbookList, employeeDetails]);\n\n\n\n\n  useEffect(() => {\n    setEmployeeCashbookList(FormattindataFuncton(cashbookDetailsListdata))\n  }, [cashbookDetailsListdata])\n\n  const FormattindataFuncton = (initialData) => {\n    if (!Array.isArray(initialData?.allTransactions) || initialData?.allTransactions?.length === 0) {\n      return [];\n    }\n\n\n    let mapOutput = [\n    ];\n\n    initialData?.allTransactions.forEach((element) => {\n\n      const output = {\n        key: \"statement\",\n\n        date: element?.createdAt ? dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') : '-',\n        dateofValue: element?.date ? dayjs(element?.date).format('DD-MM-YYYY') : '-',\n        amountDebit: element?.debit_credit == 'debit' ? element?.amount : 0,\n        amountCredit: element?.debit_credit == 'credit' ? element?.amount : 0,\n        acc: element?.currentBalance,\n        Description: element?.naration || \"-\",\n        reference: element?.referanceBy || \"-\"\n      };\n\n      mapOutput.push(output);\n    });\n\n    mapOutput.push({\n      key: \"total\",\n\n      date: null,\n      dateofValue: null,\n      amountDebit: initialData?.summary?.totalDebit,\n      amountCredit: initialData?.summary?.totalCredit,\n      acc: initialData?.summary?.closingBalance,\n      Description: \"Total\",\n      reference: ''\n    });\n\n    return mapOutput\n  }\n\n\n\n\n\n\n  return (\n\n    <div className=\"bg-grey-100 w-full p-1\">\n      <div className=\"\">\n\n        <div className=\"space-y-1.5 flex justify-end items-center\">\n\n\n\n        </div>\n      </div>\n\n      <div className=\"max-w-[300px] rounded overflow-hidden shadow-md p-2 mb-2 bg-white\">\n        <h2 className=\"text-md font-semibold mb-1\">Employee Details</h2>\n        <div className=\"mb-1\">\n          <span className=\"font-bold text-[14px] text-header\">Employee Name: </span>\n          <span className=\"text-gray-800 text-[13px]\">{cashbookDetailsListdata?.fullName}</span>\n        </div>\n        <div className=\"mb-1\">\n          <span className=\"font-bold text-[14px] text-header\">Email: </span>\n          <span className=\"text-gray-800 text-[13px]\">{cashbookDetailsListdata?.branchData?.email}</span>\n        </div>\n        <div className=\"mb-1\">\n          <span className=\"font-bold text-[14px] text-header\">Number: </span>\n          <span className=\"text-gray-800 text-[13px]\">{cashbookDetailsListdata?.branchData?.mobile?.code} {cashbookDetailsListdata?.branchData?.mobile?.number}</span>\n        </div>\n        <div className=\"mb-1\">\n          <span className=\"font-bold text-[14px] text-header\">UserName: </span>\n          <span className=\"text-gray-800 text-[13px]\">{cashbookDetailsListdata?.branchData?.userName}</span>\n        </div>\n        <div className=\"mb-1\">\n          <span className=\"font-bold text-[14px] text-header\">Outstanding Amount : </span>\n          <span className=\"text-gray-800 text-[13px]\">{cashbookDetailsListdata?.summary?.closingBalance}</span>\n        </div>\n      </div>\n\n      <div className=\"flex flex-row w-full flex-wrap gap-2  \">\n\n        <div className=\"sm:w-auto w-full\">\n          <Controller\n            name=\"startDate\"\n            control={control}\n\n            render={({ field }) => (\n              <CustomDatePicker\n                report={true}\n               \n                size={\"middle\"} field={field} errors={errors} />\n            )}\n          />\n        </div>\n        <div className=\"sm:w-auto w-full\">\n          <Controller\n            name=\"endDate\"\n            report={true}\n            control={control}\n\n            render={({ field }) => (\n              <CustomDatePicker size={\"middle\"}\n            \n                report={true} field={field} errors={errors} />\n            )}\n          />\n        </div>\n\n\n      </div>\n      <div>\n        <div className=\"flex justify-end items-center gap-2\">\n          <button\n            onClick={() => {\n              generatePDF();\n            }}\n            className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n          >\n            <span className=\"text-[12px]\">Export PDF</span>\n          </button>\n          <button\n            onClick={() => {\n              generateExcel();\n            }}\n            className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n          >\n            <span className=\"text-[12px]\">Export Excel</span>\n          </button>\n        </div>\n      </div>\n      <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n        <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n          <thead>\n            <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n              <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                S.No.\n              </th>\n              <th className=\"border-none p-2 whitespace-nowrap \">\n                Entry Date\n              </th>\n\n              <th className=\"border-none p-2 whitespace-nowrap \">\n                Value Date\n              </th>\n\n\n              <th className=\"border-none p-2 whitespace-nowrap \">Description\t</th>\n              <th className=\"border-none p-2 whitespace-nowrap \">References</th>\n\n              <th className=\"border-none p-2 whitespace-nowrap \">\n                Debit\n              </th>\n              <th className=\"border-none p-2 whitespace-nowrap \">\n                Credit\n              </th>\n              <th className=\"border-none p-2 whitespace-nowrap \">\n                Balance\n              </th>\n              <th className=\"border-none p-2 whitespace-nowrap \">\n                Updated By\n              </th>\n            </tr>\n          </thead>\n          {!cashbookDetailsListdata ? (\n            <tr className=\"bg-white bg-opacity-5 \">\n              <td\n                colSpan={15}\n                className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n              >\n                <Loader2 />\n              </td>\n            </tr>\n          ) : (\n            <tbody>\n              {employeeCashbookList &&\n                employeeCashbookList?.length > 0 ? (\n                employeeCashbookList?.map((element, index) => {\n                  return <tr\n                    className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                      } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                  >\n                    <td className=\"whitespace-nowrap  border-none p-2\">\n                      {index + 1 + (currentPage - 1) * pageSize}\n                    </td>\n\n\n                    <td className=\"whitespace-nowrap  border-none p-2\">\n                      {element?.date ?? '-'}\n                    </td>\n                    <td className=\"whitespace-nowrap  border-none p-2\">\n\n                      {element?.dateofValue ?? '-'}\n                    </td>\n\n\n                    <td className=\" max-w-[350px] min-w-[200px] border-none p-2\">\n                      {element?.Description || \"-\"}\n                    </td>\n\n                    <td className=\"whitespace-nowrap  border-none p-2\">\n                      {element?.reference ?? \"-\"}\n                    </td>\n                    <td className=\"whitespace-nowrap text-center  border-none p-2\">\n                      {convertIntoAmount(element?.amountDebit) ?? '-'}\n                    </td>\n                    <td className=\"whitespace-nowrap  text-center border-none p-2\">\n                      {convertIntoAmount(element?.amountCredit) ?? '-'}\n                    </td>\n                    <td className=\"whitespace-nowrap  text-center border-none p-2\">\n                      {element?.acc ? element?.acc.toFixed(2) : '-'}\n                    </td>\n                    <td className=\" max-w-[350px] min-w-[200px] border-none p-2\">\n                      {element?.updatedBy || \"-\"}\n                    </td>\n                  </tr>\n                })\n              ) : (\n                <tr className=\"bg-white bg-opacity-5\">\n                  <td\n                    colSpan={15}\n                    className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                  >\n                    Record Not Found\n                  </td>\n                </tr>\n              )}\n            </tbody>\n          )}\n        </table>\n\n\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default EmployeeCashbook;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { getEmployeecashbookDetails } from \"./cashbookFeature/_cashbook_reducers\";\nimport { decrypt } from \"../../../config/Encryption\";\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport EmployeeExpenseReport from \"./EmployeeExpenseReport\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport EmployeeCashbook from \"./EmployeeCashbook\";\nimport { useForm, useWatch } from \"react-hook-form\";\nimport dayjs from \"dayjs\";\nimport { customDayjs } from \"../../../constents/global\";\n\n\nconst EmployeecashbookDetailsList = () => {\n  const { companyIdEnc, branchIdEnc, employeeIdEnc } = useParams();\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const startDate = useWatch({\n    control,\n    name: \"startDate\",\n\n  });\n\n  const endDate = useWatch({\n    control,\n    name: \"endDate\",\n\n\n  });\n  useEffect(() => {\n\n    setValue('startDate', dayjs().startOf('month'));\n    setValue('endDate', dayjs().endOf('month'));\n  }, [])\n  const companyId = decrypt(companyIdEnc);\n  const branchId = decrypt(branchIdEnc);\n  const employeeId = decrypt(employeeIdEnc);\n  const { cashbookDetailsLoading, cashbookDetailsListdata } = useSelector((state) => state.cashbook);\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(getEmployeecashbookDetails({\n      \"companyId\": companyId,\n      \"directorId\": \"\",\n      \"branchId\": branchId,\n      \"employeId\": employeeId,\n      \"startDate\": startDate ? customDayjs(startDate) : null,\n      \"endDate\": endDate ? customDayjs(endDate) : null,\n    }))\n  }, [companyIdEnc, branchIdEnc, employeeIdEnc, startDate, endDate])\n\n  return (\n    <GlobalLayout>\n      {cashbookDetailsLoading ? <Loader2 /> : <EmployeeCashbook cashbookDetailsListdata={cashbookDetailsListdata} control={control} errors={errors} setValue={setValue} watch={watch} />}\n      {/* <EmployeeExpenseReport data={cashbookDetailsListdata} /> */}\n    </GlobalLayout>\n  );\n};\n\nexport default EmployeecashbookDetailsList;"],"names":["Title","Text","Typography","TabPane","Tabs","_ref","_cashbookDetailsListd1","_cashbookDetailsListd10","_cashbookDetailsListd11","_cashbookDetailsListd12","_cashbookDetailsListd13","_cashbookDetailsListd14","_cashbookDetailsListd15","cashbookDetailsListdata","control","errors","setValue","useForm","pageSize","setPageSize","useState","employeeCashbookList","setEmployeeCashbookList","searchText","setSearchText","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","useEffect","timer","setTimeout","clearTimeout","employeeDetails","useMemo","_cashbookDetailsListd","_cashbookDetailsListd2","_cashbookDetailsListd3","_cashbookDetailsListd4","_cashbookDetailsListd5","_cashbookDetailsListd6","_cashbookDetailsListd7","name","fullName","email","branchData","number","concat","mobile","code","trim","userName","outstandingAmount","summary","closingBalance","filteredCashbookList","filter","item","Object","values","some","value","toString","toLowerCase","includes","generateExcel","useCallback","async","_cashbookDetailsListd8","_cashbookDetailsListd9","_cashbookDetailsListd0","workbook","ExcelJS","worksheet","addWorksheet","columns","header","key","width","mergeCells","getCell","font","bold","size","alignment","horizontal","addRow","currentDate","dayjs","format","startOf","endOf","headerRow","eachCell","cell","fill","type","pattern","fgColor","argb","color","vertical","border","top","style","left","bottom","right","forEach","element","index","_element$date","_element$dateofValue","_element$Description","_element$reference","_element$updatedBy","sno","entryDate","date","valueDate","dateofValue","description","Description","reference","debit","convertIntoAmount","amountDebit","credit","amountCredit","balance","acc","updatedBy","totalDebit","totalCredit","dataRange","length","autoFilter","views","state","xSplit","ySplit","buffer","xlsx","writeBuffer","blob","Blob","link","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","generatePDF","doc","jsPDF","orientation","unit","setFontSize","text","yPosition","map","_element$date2","_element$dateofValue2","_element$Description2","_element$reference2","_element$updatedBy2","autoTable","startY","head","margin","styles","cellPadding","fontSize","valign","halign","headStyles","fillColor","textColor","fontStyle","alternateRowStyles","didDrawCell","data","raw","setFillColor","rect","x","y","height","setTextColor","setFont","undefined","save","FormattindataFuncton","initialData","_initialData$allTrans","_initialData$summary","_initialData$summary2","_initialData$summary3","Array","isArray","allTransactions","mapOutput","output","createdAt","debit_credit","amount","currentBalance","naration","referanceBy","push","_jsxs","className","children","_jsx","Controller","render","_ref2","field","CustomDatePicker","report","_ref3","onClick","_element$date3","_element$dateofValue3","_element$reference3","_convertIntoAmount","_convertIntoAmount2","toFixed","colSpan","Loader2","EmployeecashbookDetailsList","companyIdEnc","branchIdEnc","employeeIdEnc","useParams","formState","watch","startDate","useWatch","endDate","companyId","decrypt","branchId","employeeId","cashbookDetailsLoading","useSelector","cashbook","dispatch","useDispatch","getEmployeecashbookDetails","customDayjs","GlobalLayout","EmployeeCashbook"],"sourceRoot":""}