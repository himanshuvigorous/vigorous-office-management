{"version":3,"file":"static/js/5506.f6f1bf1e.chunk.js","mappings":"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","sources":["pages/reportsManager/clientReports/finance_advance_report/FinanceAdvanceReport.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  convertMinutesToHoursAndMinutes,\n  domainName,\n  organizationTypes,\n  pazeSizeReport,\n  sortByPropertyAlphabetically,\n} from \"../../../../constents/global\";\nimport { useEffect, useState } from \"react\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { Collapse, Modal, Select, Tooltip } from \"antd\";\nimport moment from \"moment\";\nimport dayjs from \"dayjs\";\nimport CustomPagination from \"../../../../component/CustomPagination/CustomPagination\";\nimport { financeAdvanceReportFunc } from \"../../../../redux/_reducers/_reports_reducers\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport CustomDatePicker from \"../../../../global_layouts/DatePicker/CustomDatePicker\";\nimport * as ExcelJS from \"exceljs\";\nimport Loader2 from \"../../../../global_layouts/Loader/Loader2\";\nimport { reportsServices } from \"../../../../redux/_services/_reports_services\";\nimport { MdKeyboardArrowDown } from \"react-icons/md\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from \"jspdf-autotable\";\nimport {\n  CLIENT_TASK_STATUS_ARR,\n  PRIORITY,\n} from \"../../../../constents/ActionConstent\";\nimport { deptSearch } from \"../../../department/departmentFeatures/_department_reducers\";\nimport ListLoader from \"../../../../global_layouts/ListLoader\";\nimport { clientSearch } from \"../../../client/clientManagement/clientFeatures/_client_reducers\";\nimport { taskTypeSearch } from \"../../../taskManagement/taskType/taskFeatures/_task_reducers\";\nimport { clientGrpSearch } from \"../../../client/clientGroup/clientGroupFeatures/_client_group_reducers\";\nimport { FaEye } from \"react-icons/fa\";\nimport { orgTypeSearch } from \"../../../organizationType/organizationTypeFeatures/_org_type_reducers\";\nimport Loader from \"../../../../global_layouts/Loader\";\nimport { indusSearch } from \"../../../global/other/Industry/IndustryFeature/_industry_reducers\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nfunction FinanceAdvanceReport() {\n  const {\n    control,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm();\n\n  const [pageSize, setPageSize] = useState(10);\n\n  const {id} = useParams()\n  const dispatch = useDispatch();\n  const {\n    financeAdvanceReportList,\n    financeAdvanceReportFunc_loading,\n    financeAdvanceCount,\n  } = useSelector((state) => state.reports);\n\n  const { departmentListData, loading: depLoading } = useSelector(\n    (state) => state.department\n  );\n\n\n  \n  const navigate = useNavigate()\n\n  const [departmentModalData, setDepartmentModalData] = useState({});\n\n  const { taskTypeList } = useSelector((state) => state.taskType);\n  const { clientGroupList } = useSelector((state) => state.clientGroup);\n  const { clientList } = useSelector((state) => state.client);\n  const { employeList } = useSelector((state) => state.employe);\n  const [searchText, setSearchText] = useState(\"\");\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const { industryListData, indusSearchloading } = useSelector(\n    (state) => state.industry\n  );\n  const { orgTypeList, orgSearchloading } = useSelector(\n    (state) => state.orgType\n  );\n  const [currentPage, setCurrentPage] = useState(1);\n  const [debouncedFilterText, setDebouncedFilterText] = useState(\"\");\n  const { branchList } = useSelector((state) => state.branch);\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n  const BranchId = useWatch({\n    control,\n    name: \"PDBranchId\",\n    defaultValue: \"\",\n  });\n  const Status = useWatch({\n    control,\n    name: \"status\",\n    defaultValue: \"\",\n  });\n\n  const PDOrganizationType = useWatch({\n    control,\n    name: \"PDOrganizationType\",\n    defaultValue: \"\",\n  });\n\n  const PDindustrytype = useWatch({\n    control,\n    name: \"PDindustrytype\",\n    defaultValue: \"\",\n  });\n\n  const department = useWatch({\n    control,\n    name: \"department\",\n    defaultValue: \"\",\n  });\n\n  const groupName = useWatch({\n    control,\n    name: \"groupName\",\n    defaultValue: \"\",\n  });\n\n  const handlePageSizeChange = (e) => {\n    setPageSize(Number(e));\n  };\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedFilterText(searchText);\n    }, 500);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [searchText]);\n\n  const onPaginationChange = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handleFocusOrgType = () => {\n    if (!orgTypeList?.length) {\n      dispatch(\n        orgTypeSearch({\n          isPagination: false,\n          text: \"\",\n          sort: true,\n          status: true,\n        })\n      );\n    }\n  };\n\n  const handleFocusClientGrp = () => {\n    dispatch(\n      clientGrpSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? watch(\"PDCompanyId\")\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? watch(\"PDBranchId\")\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n        groupId: \"\",\n      })\n    );\n  };\n\n  const handleFocusIndustry = () => {\n    // if (!industryListData?.length) {\n    dispatch(\n      indusSearch({\n        isPagination: false,\n        text: \"\",\n        sort: true,\n        status: true,\n      })\n    );\n    // }\n  };\n\n  const generateFinancialYears = () => {\n    const startYear = 2005;\n    const endYear = 2034;\n    const financialYears = [];\n    for (let year = startYear; year <= endYear; year++) {\n      financialYears.push(`${year}-${year + 1}`);\n    }\n    return financialYears;\n  };\n\n  const financialYears = generateFinancialYears();\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const quarter = [\"Jan-Mar\", \"Apr-Jun\", \"Jul-Sep\", \"Oct-Dec\"];\n\n  const requestPayLoadReturn = (pagination = true) => {\n    return {\n      currentPage: currentPage,\n      pageSize: pageSize,\n      reqPayload: {\n        text: debouncedFilterText,\n        sort: true,\n        isPagination: pagination,\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        directorId: \"\",\n        branchId:\n          userInfoglobal?.userType === \"company\" ||\n            userInfoglobal?.userType === \"admin\" ||\n            userInfoglobal?.userType === \"companyDirector\"\n            ? BranchId\n            : userInfoglobal?.userType === \"companyBranch\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.branchId,\n\n        status: Status == \"true\" ? true : Status == \"false\" ? false : \"\",\n         \"amountFrom\": \"\",\n    \"amountTo\": \"\",\n    \"text\": \"\",\n    \"sort\": true,\n       \"groupId\": id,\n     \n\n\n        isPagination: pagination,\n      },\n    };\n  };\n  useEffect(() => {\n    fetchClientServiceTaskReport(debouncedFilterText);\n  }, [currentPage, debouncedFilterText, pageSize]);\n  const handleEmployeeFocus = () => {\n    dispatch(\n      employeSearch({\n        companyId:\n          userInfoglobal?.userType === \"admin\"\n            ? CompanyId\n            : userInfoglobal?.userType === \"company\"\n              ? userInfoglobal?._id\n              : userInfoglobal?.companyId,\n        branchId: [\"admin\", \"company\", \"companyDirector\"].includes(\n          userInfoglobal?.userType\n        )\n          ? BranchId\n          : userInfoglobal?.userType === \"companyBranch\"\n            ? userInfoglobal?._id\n            : userInfoglobal?.branchId,\n        departmentId: \"\",\n        directorId: \"\",\n        text: \"\",\n        sort: true,\n        status: true,\n        isPagination: false,\n        isBranch: true,\n        isDirector: false,\n      })\n    );\n  };\n\n  const fetchClientServiceTaskReport = () => {\n    dispatch(financeAdvanceReportFunc(requestPayLoadReturn(true)));\n  };\n\n  const [departmentModalOpen, setDepartmentModalOpen] = useState(false);\n\n  const handleDepartmentModal = (element) => {\n    setDepartmentModalOpen(true);\n    setDepartmentModalData(element);\n  };\n\n\n\n  useEffect(() => {\n    if (\n      userInfoglobal?.userType === \"company\" ||\n      userInfoglobal?.userType === \"companyDirector\"\n    ) {\n      dispatch(\n        branchSearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n          companyId:\n            userInfoglobal?.userType === \"admin\"\n              ? CompanyId\n              : userInfoglobal?.userType === \"company\"\n                ? userInfoglobal?._id\n                : userInfoglobal?.companyId,\n        })\n      );\n    }\n    setValue(\"startDate\", dayjs().subtract(1, \"month\"));\n    setValue(\"endDate\", dayjs());\n  }, []);\n\n  const onChange = (e) => {\n    setSearchText(e);\n  };\n\n  const handleSubmit = async () => {\n    fetchClientServiceTaskReport();\n  };\n\n  const generateExcel = async () => {\n    const workbook = new ExcelJS.Workbook();\n    const worksheet = workbook.addWorksheet(\"OverDueTasks\");\n\n    worksheet.columns = [\n      { header: \"S.No.\", key: \"sno\", width: 10 },\n      { header: \"Employee Name\", key: \"name\", width: 30 },\n      { header: \"Client Name\", key: \"clientName\", width: 30 },\n      { header: \"Department\", key: \"department\", width: 25 },\n      { header: \"Task Name\", key: \"taskName\", width: 30 },\n      { header: \"Priority\", key: \"priority\", width: 30 },\n      { header: \"Financial Year\", key: \"financialYear\", width: 20 },\n      { header: \"Month Name\", key: \"monthName\", width: 20 },\n      { header: \"Month Quaters\", key: \"monthQuarter\", width: 20 },\n      { header: \"Status\", key: \"status\", width: 15 },\n\n      { header: \"Created At\", key: \"createdAt\", width: 25 },\n      { header: \"Created By\", key: \"createdBy\", width: 25 },\n    ];\n\n    const headerRow = worksheet.getRow(1);\n    headerRow.eachCell((cell) => {\n      cell.fill = {\n        type: \"pattern\",\n        pattern: \"solid\",\n        fgColor: { argb: \"FFB6D7A8\" },\n      };\n      cell.font = { bold: true };\n      cell.alignment = { vertical: \"middle\", horizontal: \"center\" };\n      cell.border = {\n        top: { style: \"thin\" },\n        left: { style: \"thin\" },\n        bottom: { style: \"thin\" },\n        right: { style: \"thin\" },\n      };\n    });\n\n    const response = await reportsServices?.financeAdvanceReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n\n    if (!financeAdvanceReportList && !response) return;\n    const apiData = response?.data?.docs?.map((data, index) => {\n      return {\n        sno: index + 1,\n        // name: data?.employeData[0].fullName || \"-\",\n        clientName: data?.clientData?.fullName || \"-\",\n        department: data?.departmentData?.name || \"-\",\n        taskName: data?.taskName || \"-\",\n        priority: data?.priority || \"-\",\n        financialYear: data?.financialYear || \"-\",\n        monthName: data?.monthName || \"-\",\n        monthQuarter: data?.monthQuaters || \"-\",\n        status: data?.status || \"-\",\n        createdAt: data?.createdAt\n          ? dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm A\")\n          : \"-\",\n        createdBy: data?.createdBy || \"-\",\n      };\n    });\n    apiData?.forEach((item) => {\n      const row = worksheet.addRow(item);\n      row.eachCell((cell) => {\n        cell.alignment = { vertical: \"middle\", horizontal: \"left\" };\n        cell.border = {\n          top: { style: \"thin\" },\n          left: { style: \"thin\" },\n          bottom: { style: \"thin\" },\n          right: { style: \"thin\" },\n        };\n      });\n    });\n\n    // Add auto-filter\n    worksheet.autoFilter = {\n      from: \"A1\",\n      to: \"I1\",\n    };\n\n    // Export\n    workbook.xlsx.writeBuffer().then((buffer) => {\n      const blob = new Blob([buffer], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"OverDueTasks.xlsx\";\n      link.click();\n    });\n  };\n  \n  const generatePDF = async () => {\n    const doc = new jsPDF({\n      orientation: \"landscape\",\n      unit: \"pt\",\n    });\n    doc.setFontSize(16);\n    const headers = [\n      \"S.No.\",\n      \"Employee Name\",\n      \" Client Name\",\n      \"Department\",\n      \"Task Name\",\n      \"Priority\",\n      \"financial Year\",\n      \"Month Name\",\n      \"Month Quaters\",\n      \"Status\",\n\n      \"Created At\",\n      \"Created By\",\n    ];\n    const response = await reportsServices?.financeAdvanceReportFunc(\n      requestPayLoadReturn(false)\n    );\n\n    if (!financeAdvanceReportList && !response) return;\n    const body = response?.data?.docs?.map((data, index) => {\n      return [\n        index + 1,\n        // data?.employeData[0]?.fullName||'N/A',\n        data?.clientData?.fullName || \"N/A\",\n        data?.departmentData?.name || \"N/A\",\n        data?.taskTypeData?.name || \"N/A\",\n        data?.priority || \"N/A\",\n        data?.financialYear || \"N/A\",\n        data?.monthName || \"N/A\",\n        data?.monthQuaters || \"N/A\",\n        data?.status || \"N/A\",\n\n        dayjs(data?.createdAt).format(\"DD-MM-YYYY hh:mm\") || \"N/A\",\n        data?.createdBy || \"N/A\",\n      ];\n    });\n    autoTable(doc, {\n      startY: 40,\n      head: [headers],\n      body: body,\n      margin: { horizontal: 10 },\n      styles: {\n        cellPadding: 8,\n        fontSize: 10,\n        valign: \"middle\",\n        halign: \"left\",\n      },\n      headStyles: {\n        fillColor: [211, 211, 211],\n        textColor: [0, 0, 0],\n        fontStyle: \"bold\",\n      },\n      alternateRowStyles: {\n        fillColor: [245, 245, 245],\n      },\n    });\n    doc.save(`OverDueTasks.pdf`);\n  };\n\n  const items = [\n    {\n      key: \"1\",\n      label: <span className=\"text-white\">Advance Filters</span>,\n      children: (\n        <div className=\"bg-[#ececec]\">\n          <div className=\"sm:flex  grid grid-cols-1  gap-2 sm:flex-wrap text-[14px]\">\n            {(userInfoglobal?.userType === \"admin\" ||\n              userInfoglobal?.userType === \"company\" ||\n              userInfoglobal?.userType === \"companyDirector\") && (\n                <div className=\"\">\n                  <Controller\n                    name=\"PDBranchId\"\n                    control={control}\n                    render={({ field }) => (\n                      <Select\n                        {...field}\n                        className={`inputAntdSelectClassNameFilterReport `}\n                        placeholder=\"Select Branch\"\n                        showSearch\n                        filterOption={(input, option) =>\n                          String(option?.children)\n                            .toLowerCase()\n                            .includes(input.toLowerCase())\n                        }\n                      >\n                        <Select.Option value=\"\">Select Branch</Select.Option>\n                        {branchList?.map((element) => (\n                          <Select.Option value={element?._id}>\n                            {\" \"}\n                            {element?.fullName}{\" \"}\n                          </Select.Option>\n                        ))}\n                      </Select>\n                    )}\n                  />\n                  {errors.PDBranchId && (\n                    <p className=\"text-red-500 text-sm\">\n                      {errors.PDBranchId.message}\n                    </p>\n                  )}\n                </div>\n              )}\n            {/* <Controller\n              control={control}\n              name=\"PDOrganizationType\"\n              rules={{ required: \"Organization is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={\"\"}\n                  className={`inputAntdSelectClassNameFilterReport `}\n                  showSearch\n                  onFocus={() => handleFocusOrgType()}\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                >\n                  <Select.Option value=\"\">\n                    Select Organization Type\n                  </Select.Option>\n                  {orgSearchloading ? (\n                    <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>\n                  ) : (\n                    orgTypeList?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.name}\n                      </Select.Option>\n                    ))\n                  )}\n                </Select>\n              )}\n            />\n\n            <Controller\n              control={control}\n              name=\"PDindustrytype\"\n              rules={{ required: \"Industry type is required\" }}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  defaultValue={\"\"}\n                  onFocus={() => {\n                    handleFocusIndustry();\n                  }}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                  className={`inputAntdSelectClassNameFilterReport `}\n                >\n                  <Select.Option value=\"\"> Select Industry Type</Select.Option>\n                  {indusSearchloading ? (\n                    <Select.Option disabled>\n                      <Loader />\n                    </Select.Option>\n                  ) : (\n                    industryListData?.map((type) => (\n                      <Select.Option key={type?._id} value={type?._id}>\n                        {type?.name}\n                      </Select.Option>\n                    ))\n                  )}\n                </Select>\n              )}\n            />\n\n            <div>\n              <Controller\n                name=\"status\"\n                control={control}\n                rules={{}}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`inputAntdSelectClassNameFilterReport `}\n                    placeholder=\"Select Status\"\n                    showSearch\n                    filterOption={(input, option) =>\n                      String(option?.children)\n                        .toLowerCase()\n                        .includes(input.toLowerCase())\n                    }\n                  >\n                    <Select.Option value=\"\">Select Status</Select.Option>\n                    {[\n                      { label: \"Active\", value: \"true\" },\n                      { label: \"InActive\", value: \"false\" },\n                    ]?.map((array) => {\n                      return (\n                        <Select.Option value={array?.value}>\n                          {array?.label}\n                        </Select.Option>\n                      );\n                    })}\n                  </Select>\n                )}\n              />\n            </div>\n\n            <Controller\n              name=\"department\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className={`inputAntdSelectClassNameFilterReport`}\n                  showSearch\n                  filterOption={(input, option) =>\n                    String(option?.children)\n                      .toLowerCase()\n                      .includes(input.toLowerCase())\n                  }\n                  onFocus={() => {\n                    dispatch(\n                      deptSearch({\n                        text: \"\",\n                        sort: true,\n                        status: true,\n                        isPagination: false,\n                        companyId:\n                          userInfoglobal?.userType === \"admin\"\n                            ? CompanyId\n                            : userInfoglobal?.userType === \"company\"\n                            ? userInfoglobal?._id\n                            : userInfoglobal?.companyId,\n                        branchId: [\n                          \"admin\",\n                          \"company\",\n                          \"companyDirector\",\n                        ].includes(userInfoglobal?.userType)\n                          ? BranchId\n                          : userInfoglobal?.userType === \"companyBranch\"\n                          ? userInfoglobal?._id\n                          : userInfoglobal?.branchId,\n                      })\n                    );\n                  }}\n                  onChange={(value) => {\n                    field.onChange(value);\n                  }}\n                  placeholder=\"Select Department\"\n                >\n                  <Select.Option value=\"\">Select Department</Select.Option>\n                  {depLoading ? (\n                    <Select.Option disabled>\n                      <ListLoader />\n                    </Select.Option>\n                  ) : (\n                    sortByPropertyAlphabetically(departmentListData)?.map(\n                      (element) => (\n                        <Select.Option key={element?._id} value={element?._id}>\n                          {element?.name}\n                        </Select.Option>\n                      )\n                    )\n                  )}\n                </Select>\n              )}\n            /> */}\n\n            <Controller\n              name=\"groupName\"\n              control={control}\n              render={({ field }) => (\n                <Select\n                  {...field}\n                  className=\"inputAntdSelectClassNameFilterReport\"\n                  options={[\n                    { label: \"Select Group Type\", value: \"\" },\n                    ...(Array.isArray(clientGroupList)\n                      ? clientGroupList.map((el) => ({\n                        label: `${el?.fullName} (${el?.groupName})`,\n                        value: el?._id,\n                      }))\n                      : []),\n                  ]}\n                  placeholder=\"Select Group Type\"\n                  onFocus={handleFocusClientGrp}\n                  classNamePrefix=\"react-select\"\n                  isSearchable\n                  onChange={(value) => {\n                    field.onChange(value);\n                  }}\n                  value={field?.value}\n                />\n              )}\n            />\n          </div>\n          <div className=\"flex justify-end items-center gap-2\">\n            <button\n              onClick={() => {\n                setValue(\"PDCompanyId\", \"\");\n                setValue(\"PDBranchId\", \"\");\n                setValue(\"status\", \"\");\n                setValue(\"PDOrganizationType\", \"\");\n                setValue(\"PDindustrytype\", \"\");\n                setValue(\"department\", \"\");\n                setValue(\"groupName\", \"\");\n\n                handleSubmit();\n              }}\n              className=\"bg-header py-2 my-0.5 rounded-md flex px-10 justify-center items-center text-white\"\n            >\n              <span className=\"text-[12px]\">Reset</span>\n            </button>\n            <button\n              onClick={() => {\n                handleSubmit();\n              }}\n              className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n            >\n              <span className=\"text-[12px]\">Submit</span>\n            </button>\n          </div>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <GlobalLayout onChange={onChange}>\n      <div className=\"bg-grey-100 w-full p-1\">\n        <div className=\"\">\n          <Collapse\n            className=\"custom-collapse\"\n            items={items}\n            defaultActiveKey={[1]}\n            expandIcon={({ isActive }) => (\n              <MdKeyboardArrowDown\n                size={20}\n                style={{\n                  color: \"white\",\n                  transform: isActive ? \"rotate(-90deg)\" : \"rotate(0deg)\",\n                  transition: \"transform 0.3s ease\",\n                }}\n              />\n            )}\n          ></Collapse>\n          <div className=\"space-y-1.5 flex justify-between items-center\">\n            <div className=\"flex items-center gap-2 py-1\">\n              <span\n                htmlFor=\"pageSize\"\n                className=\"text-sm font-light text-gray-500\"\n              >\n                Rows per page:\n              </span>\n              <Select\n                id=\"pageSize\"\n                value={pageSize}\n                onChange={handlePageSizeChange}\n                className=\"text-sm font-light text-gray-700 bg-white border border-gray-200 rounded-md px-3 py-1.5 shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-300 transition\"\n              >\n                {pazeSizeReport.map((size) => (\n                  <Select.Option key={size} value={size}>\n                    {size}\n                  </Select.Option>\n                ))}\n              </Select>\n            </div>\n\n            {/* <div className=\"flex justify-end items-center gap-2\">\n              <button\n                onClick={() => {\n                  generatePDF();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export PDF</span>\n              </button>\n              <button\n                onClick={() => {\n                  generateExcel();\n                }}\n                className=\"bg-header  py-2 my-0.5 rounded-md flex px-10 justify-center items-center  text-white\"\n              >\n                <span className=\"text-[12px]\">Export Excel</span>\n              </button>\n            </div> */}\n          </div>\n        </div>\n        <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n          <table className=\"w-full max-w-full rounded-xl overflow-x-auto\">\n            <thead>\n              <tr className=\"border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]\">\n                <th className=\"border-none p-2 whitespace-nowrap  w-[5%]\">\n                  S.No.\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Group Name\n                </th>\n\n\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Balance\n                </th>\n\n                <th className=\"border-none p-2 whitespace-nowrap \">\n                  Statement\n                </th>\n                {/* <th className=\"border-none p-2 whitespace-nowrap \">\n                  Status\n                </th> */}\n              </tr>\n            </thead>\n            {financeAdvanceReportFunc_loading ? (\n              <tr className=\"bg-white bg-opacity-5 \">\n                <td\n                  colSpan={15}\n                  className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                >\n                  <Loader2 />\n                </td>\n              </tr>\n            ) : (\n              <tbody>\n                {financeAdvanceReportList &&\n                  financeAdvanceReportList?.length > 0 ? (\n                  financeAdvanceReportList?.map((element, index) => (\n                    <tr\n                      className={`border-b-[1px] ${index % 2 === 0 ? \"bg-[#e9ecef]/80\" : \"bg-white\"\n                        } border-[#DDDDDD] text-[#374151] text-[14px]`}\n                    >\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {index + 1 + (currentPage - 1) * pageSize}\n                      </td>\n\n                      {/* <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element.profileImage ? (\n                          <img\n                            alt=\"\"\n                            src={`${process.env.REACT_APP_BACKEND_DOMAIN_NAME}/public/${element.profileImage}`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        ) : (\n                          <img\n                            alt=\"\"\n                            src={`/images/avatar.jpg`}\n                            className=\"rounded-full min-w-10 min-h-10 w-10 h-10 ring-1 ring-amber-300\"\n                          />\n                        )}\n                      </td> */}\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.groupName}\n                      </td>\n\n                      <td className=\"whitespace-nowrap  border-none p-2\">\n                        {element?.totalDepositAmount}\n                      </td>\n\n                      <td className=\"tableData \">\n                        {(\n                          <div className=\"flex justify-start items-center gap-1\">\n                            <span>{element?.departmentData?.length}</span>\n                            <Tooltip placement=\"topLeft\"  title='View Statement'>\n                              <span className=\"flex justify-center items-center cursor-pointer\">\n                                <FaEye\n                                  onClick={() => { navigate(`/admin/finance-advance-summary-report/${element?._id}`) }}\n                                  className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                  size={14}\n                                />\n                              </span>\n                            </Tooltip>\n                          </div>\n                        ) || \"-\"}\n                      </td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr className=\"bg-white bg-opacity-5\">\n                    <td\n                      colSpan={15}\n                      className=\"px-6 py-2 whitespace-nowrap  font-[600] text-sm text-gray-500\"\n                    >\n                      Record Not Found\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n            )}\n          </table>\n\n\n        </div>\n        <CustomPagination\n          totalCount={financeAdvanceCount}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onChange={onPaginationChange}\n        />\n      </div>\n    </GlobalLayout>\n  );\n}\n\nexport default FinanceAdvanceReport;\n"],"names":["control","formState","errors","setValue","watch","useForm","pageSize","setPageSize","useState","id","useParams","dispatch","useDispatch","financeAdvanceReportList","financeAdvanceReportFunc_loading","financeAdvanceCount","useSelector","state","reports","departmentListData","loading","depLoading","department","navigate","useNavigate","departmentModalData","setDepartmentModalData","taskTypeList","taskType","clientGroupList","clientGroup","clientList","client","employeList","employe","searchText","setSearchText","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","industryListData","indusSearchloading","industry","orgTypeList","orgSearchloading","orgType","currentPage","setCurrentPage","debouncedFilterText","setDebouncedFilterText","branchList","branch","CompanyId","useWatch","name","defaultValue","BranchId","Status","useEffect","timer","setTimeout","clearTimeout","handleFocusClientGrp","clientGrpSearch","companyId","userType","_id","branchId","isPagination","text","sort","status","groupId","requestPayLoadReturn","generateFinancialYears","financialYears","year","push","pagination","arguments","length","undefined","reqPayload","directorId","fetchClientServiceTaskReport","financeAdvanceReportFunc","departmentModalOpen","setDepartmentModalOpen","branchSearch","dayjs","subtract","handleSubmit","async","items","key","label","_jsx","className","children","_jsxs","Controller","render","_ref","field","Select","_objectSpread","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","element","fullName","PDBranchId","message","_ref2","options","Array","isArray","el","groupName","onFocus","classNamePrefix","isSearchable","onChange","onClick","GlobalLayout","e","Collapse","defaultActiveKey","expandIcon","_ref3","isActive","MdKeyboardArrowDown","size","style","color","transform","transition","htmlFor","Number","pazeSizeReport","colSpan","Loader2","index","_element$departmentDa","totalDepositAmount","departmentData","Tooltip","placement","title","FaEye","CustomPagination","totalCount","page"],"sourceRoot":""}