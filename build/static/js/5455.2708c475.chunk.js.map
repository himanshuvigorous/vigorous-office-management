{"version":3,"file":"static/js/5455.2708c475.chunk.js","mappings":"0SAwBA,MA6JA,EA7JoBA,KAClB,MAAQC,QAASC,IAAmBC,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,UAC3D,SACJC,EAAQ,aACRC,EAAY,QACZC,EAAO,SACPC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,MACEC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,OAEX,aAAEC,IAAiBC,EAAAA,EAAAA,KACnBC,EAAiBC,KAAKC,MAC1BC,aAAaC,QAAQ,aAADC,OAAcC,EAAAA,MAE9BC,GAAgBC,EAAAA,EAAAA,IAAQV,IACxB,eAAEW,IAAmBzB,EAAAA,EAAAA,IAAaC,GAAUA,EAAMC,UAClD,YAAEwB,IAAgB1B,EAAAA,EAAAA,IAAaC,GAAUA,EAAM0B,UAC/C,WAAEC,IAAe5B,EAAAA,EAAAA,IAAaC,GAAUA,EAAM4B,SAElCC,EAAAA,EAAAA,IAAS,CACzBzB,UACA0B,KAAM,cACNC,aAAc,MAShBC,EAAAA,EAAAA,WAAU,KACR,IAAIC,EAAU,CACZC,IAAKZ,GAEPb,GAAS0B,EAAAA,EAAAA,IAAkBF,KAC1B,KAEHD,EAAAA,EAAAA,WAAU,KACJR,IAGFnB,EAAS,OAAsB,OAAdmB,QAAc,IAAdA,OAAc,EAAdA,EAAgBM,MACjCzB,EAAS,SAAwB,OAAdmB,QAAc,IAAdA,OAAc,EAAdA,EAAgBY,QACnC/B,EAAS,SAAwB,OAAdmB,QAAc,IAAdA,OAAc,EAAdA,EAAgBa,UAEpC,CAACb,IA+BJ,OAbAQ,EAAAA,EAAAA,WAAU,KACyB,WAAf,OAAdjB,QAAc,IAAdA,OAAc,EAAdA,EAAgBuB,WAClB7B,GACE8B,EAAAA,EAAAA,IAAc,CACZC,KAAM,GACNC,MAAM,EACNL,QAAQ,EACRM,cAAc,MAInB,KAGDC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CAAAC,UACXF,EAAAA,EAAAA,KAAA,OAAKG,UAAU,QAAOD,UACpBE,EAAAA,EAAAA,MAAA,QAAMC,aAAa,MAAMF,UAAU,eAAeG,SAAU9C,EAhChD+C,IAChB,MAAMC,EAAe,CACnBjB,IAAKZ,EACL8B,UAAyB,OAAd5B,QAAc,IAAdA,OAAc,EAAdA,EAAgB4B,UAC3BC,WAA0B,OAAd7B,QAAc,IAAdA,OAAc,EAAdA,EAAgB6B,WAC5BC,SAAwB,OAAd9B,QAAc,IAAdA,OAAc,EAAdA,EAAgB8B,SAC1BxB,KAAU,OAAJoB,QAAI,IAAJA,OAAI,EAAJA,EAAMpB,KACZO,SAAa,OAAJa,QAAI,IAAJA,OAAI,EAAJA,EAAMb,QACfkB,WAAW,EACXnB,OAAY,OAAJc,QAAI,IAAJA,OAAI,EAAJA,EAAMd,QAEhB3B,GAAS+C,EAAAA,EAAAA,IAAkBL,IAAeM,KAAMP,IACzCA,EAAKQ,OAAO/C,GAAU,OAoB0DkC,SAAA,EACjFE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gDAA+CD,SAAA,EAC5DE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EACfE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAA1B,OAAKuC,EAAAA,IAAsBd,SAAA,CAAC,iBAC7BF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAE9CF,EAAAA,EAAAA,KAAA,SAAAiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,KAAK,QACD3D,EAAS,OAAQ,CACnB4D,SAAU,8BACV,IACFhB,UAAS,GAAA1B,OAAK2C,EAAAA,GAAc,KAAA3C,OAAIb,EAAOuB,KAAO,gBAAkB,mBAEhEkC,YAAY,wBAEbzD,EAAOuB,OACNa,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAEtC,EAAOuB,KAAKmC,cAIrDlB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,GAAED,SAAA,EACfE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAA1B,OAAKuC,EAAAA,IAAsBd,SAAA,CAAC,WACnCF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAExCF,EAAAA,EAAAA,KAAA,SAAAiB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,KAAK,SACJK,KAAK,QACFhE,EAAS,SAAU,CACrB4D,SAAU,wBACV,IACFhB,UAAS,GAAA1B,OAAK2C,EAAAA,GAAc,KAAA3C,OAAIb,EAAOuB,KAAO,gBAAkB,mBAEhEkC,YAAY,kBAEbzD,EAAO8B,SACNM,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAEtC,EAAO8B,OAAO4B,cAIvDlB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,SAAQD,SAAA,EACrBE,EAAAA,EAAAA,MAAA,SAAOD,UAAS,GAAA1B,OAAKuC,EAAAA,IAAsBd,SAAA,CAAC,WAAOF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,eAAcD,SAAC,UAClFF,EAAAA,EAAAA,KAACwB,EAAAA,GAAU,CACTrC,KAAK,SACL1B,QAASA,EACTgE,OAAQC,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAChBtB,EAAAA,EAAAA,MAACwB,EAAAA,GAAMX,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACDU,GAAK,IACTxB,UAAS,GAAA1B,OAAKoD,EAAAA,GAAwB,KAAApD,OAAIb,EAAO6B,OAAS,gBAAkB,mBAC5E4B,YAAY,gBAAenB,SAAA,EAE3BF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAOE,OAAM,CAACC,OAAO,EAAK7B,SAAC,YAC5BF,EAAAA,EAAAA,KAAC4B,EAAAA,EAAOE,OAAM,CAACC,OAAO,EAAM7B,SAAC,qBAIlCtC,EAAO6B,SAAUO,EAAAA,EAAAA,KAAA,KAAGG,UAAU,uBAAsBD,SAAEtC,EAAO6B,OAAO6B,iBAKzEtB,EAAAA,EAAAA,KAAA,OAAKG,UAAU,mBAAkBD,UAC/BF,EAAAA,EAAAA,KAAA,UACEkB,KAAK,SACLc,SAAU7E,EACVgD,UAAS,GAAA1B,OAAKtB,EAAiB,cAAgB,YAAW,qCAAoC+C,SAE7F/C,GAAiB6C,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,IAAM,oB","sources":["pages/global/other/interviewRoundName copy/EditPenalty.js"],"sourcesContent":["import { Controller, useForm, useWatch } from \"react-hook-form\";\nimport GlobalLayout from \"../../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { decrypt } from \"../../../../config/Encryption\";\nimport { useEffect } from \"react\";\nimport {\n  domainName,\n  inputAntdSelectClassName,\n  inputClassName,\n  inputLabelClassName,\n} from \"../../../../constents/global\";\nimport { employeSearch } from \"../../../employeManagement/employeFeatures/_employe_reducers\";\nimport { branchSearch } from \"../../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { companySearch } from \"../../../company/companyManagement/companyFeatures/_company_reducers\";\nimport {\n  getpenaltyDetails,\n  updatepenaltyType,\n} from \"./penaltyFeatures/_penalty_reducers\";\nimport { Select } from \"antd\";\nimport Loader from \"../../../../global_layouts/Loader\";\n\n// import { getpenaltyDetails, updatepenaltyType } from \"./penaltyFeatures/_penalty_type_reducers\";\n\nconst EditPenalty = () => {\n  const { loading: penaltyLoading } = useSelector((state) => state.penalty);\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { penaltyIdEnc } = useParams();\n  const userInfoglobal = JSON.parse(\n    localStorage.getItem(`user_info_${domainName}`)\n  );\n  const penaltyTypeId = decrypt(penaltyIdEnc);\n  const { penaltyDetails } = useSelector((state) => state.penalty);\n  const { companyList } = useSelector((state) => state.company);\n  const { branchList } = useSelector((state) => state.branch);\n\n  const CompanyId = useWatch({\n    control,\n    name: \"PDCompanyId\",\n    defaultValue: \"\",\n  });\n\n\n  // useEffect(() => {\n  //   dispatch(employeSearch());\n  // }, []);\n\n\n  useEffect(() => {\n    let reqData = {\n      _id: penaltyTypeId,\n    };\n    dispatch(getpenaltyDetails(reqData));\n  }, []);\n\n  useEffect(() => {\n    if (penaltyDetails) {\n      // setValue(\"PDCompanyId\", penaltyDetails?.companyId);\n      // setValue(\"PDBranchId\", penaltyDetails?.branchId);\n      setValue(\"name\", penaltyDetails?.name);\n      setValue(\"status\", penaltyDetails?.status);\n      setValue('amount', penaltyDetails?.amount)\n    }\n  }, [penaltyDetails]);\n\n  const onSubmit = (data) => {\n    const finalPayload = {\n      _id: penaltyTypeId,\n      companyId: penaltyDetails?.companyId,\n      directorId: penaltyDetails?.directorId,\n      branchId: penaltyDetails?.branchId,\n      name: data?.name,\n      amount: +data?.amount,\n      isDeleted: false,\n      status: data?.status,\n    };\n    dispatch(updatepenaltyType(finalPayload)).then((data) => {\n      if (!data.error) navigate(-1);\n    });\n  };\n\n  useEffect(() => {\n    if (userInfoglobal?.userType === \"admin\") {\n      dispatch(\n        companySearch({\n          text: \"\",\n          sort: true,\n          status: true,\n          isPagination: false,\n        })\n      );\n    }\n  }, []);\n\n  return (\n    <GlobalLayout>\n      <div className=\"gap-4\">\n        <form autoComplete=\"off\" className=\"mt-2 md:px-1\" onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-2 md:my-2\">\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Penalty Name <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"text\"\n                {...register(\"name\", {\n                  required: \"Penalty name is required\",\n                })}\n                className={`${inputClassName} ${errors.name ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Penalty name\"\n              />\n              {errors.name && (\n                <p className=\"text-red-500 text-sm\">{errors.name.message}</p>\n              )}\n            </div>\n\n            <div className=\"\">\n              <label className={`${inputLabelClassName}`}>\n                Amount <span className=\"text-red-600\">*</span>\n              </label>\n              <input\n                type=\"number\"\n                 step=\"0.01\"\n                {...register(\"amount\", {\n                  required: \"Amount is required\",\n                })}\n                className={`${inputClassName} ${errors.name ? \"border-[1px] \" : \"border-gray-300\"\n                  }`}\n                placeholder=\"Enter Amount\"\n              />\n              {errors.amount && (\n                <p className=\"text-red-500 text-sm\">{errors.amount.message}</p>\n              )}\n            </div>\n\n            <div className=\"w-full\">\n              <label className={`${inputLabelClassName}`}>Status <span className=\"text-red-600\">*</span></label>\n              <Controller\n                name=\"status\"\n                control={control}\n                render={({ field }) => (\n                  <Select\n                    {...field}\n                    className={`${inputAntdSelectClassName} ${errors.status ? \"border-[1px] \" : \"border-gray-300\"}`}\n                    placeholder=\"Select Status\"\n                  >\n                    <Select.Option value={true}>Active</Select.Option>\n                    <Select.Option value={false}>In Active</Select.Option>\n                  </Select>\n                )}\n              />\n              {errors.status && <p className=\"text-red-500 text-sm\">{errors.status.message}</p>}\n            </div>\n          </div>\n\n          {/* Submit Button */}\n          <div className=\"flex justify-end\">\n            <button\n              type=\"submit\"\n              disabled={penaltyLoading}\n              className={`${penaltyLoading ? 'bg-gray-400' : 'bg-header'} text-white p-2 px-4 mt-3 rounded`}\n            >\n              {penaltyLoading ? <Loader /> : 'Submit'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </GlobalLayout>\n  );\n};\n\nexport default EditPenalty;\n"],"names":["EditPenalty","loading","penaltyLoading","useSelector","state","penalty","register","handleSubmit","control","setValue","formState","errors","useForm","dispatch","useDispatch","navigate","useNavigate","penaltyIdEnc","useParams","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","penaltyTypeId","decrypt","penaltyDetails","companyList","company","branchList","branch","useWatch","name","defaultValue","useEffect","reqData","_id","getpenaltyDetails","status","amount","userType","companySearch","text","sort","isPagination","_jsx","GlobalLayout","children","className","_jsxs","autoComplete","onSubmit","data","finalPayload","companyId","directorId","branchId","isDeleted","updatepenaltyType","then","error","inputLabelClassName","_objectSpread","type","required","inputClassName","placeholder","message","step","Controller","render","_ref","field","Select","inputAntdSelectClassName","Option","value","disabled","Loader"],"sourceRoot":""}