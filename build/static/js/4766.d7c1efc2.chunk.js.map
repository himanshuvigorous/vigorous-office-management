{"version":3,"file":"static/js/4766.d7c1efc2.chunk.js","mappings":"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","sources":["pages/visitorManagement/client_visit/ClientVisitorList.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\n\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\n\nimport { companySearch } from \"../../company/companyManagement/companyFeatures/_company_reducers\"\nimport { domainName, inputAntdSelectClassNameFilter, sortByPropertyAlphabetically } from \"../../../constents/global\"\nimport { FaEye, FaPlus } from \"react-icons/fa\"\nimport GlobalLayout from \"../../../global_layouts/GlobalLayout/GlobalLayout\";\nimport { FaPenToSquare } from \"react-icons/fa6\";\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { encrypt } from \"../../../config/Encryption\";\nimport CustomPagination from \"../../../component/CustomPagination/CustomPagination\";\nimport getUserIds from \"../../../constents/getUserIds\";\nimport { Select, Tooltip } from \"antd\";\nimport usePermissions from \"../../../config/usePermissions\";\nimport Loader2 from \"../../../global_layouts/Loader/Loader2\";\nimport moment from \"moment\";\nimport { deptSearch } from \"../../department/departmentFeatures/_department_reducers\";\nimport { branchSearch } from \"../../branch/branchManagement/branchFeatures/_branch_reducers\";\nimport { employeSearch } from \"../../employeManagement/employeFeatures/_employe_reducers\";\nimport { deleteGeneralVisitor, deleteVisitor, getGeneralVisitorList, getVisitorList, updateGeneralVisitor, updateVisitor, visitorSearch } from \"../visitor/visitorFeatures/_visitor_reducers\";\nimport ClientCheckoutModal, { getCurrentLocation, getFullAddress } from \"./ClientCheckoutModal\";\nimport dayjs from \"dayjs\";\nimport MapWithDate from \"./MapWithDate\";\nimport EmployeeCashbookCreateModalForVisit from \"../../financeManagement/cashbook/EmployeeCashbookCreateModalForVisit\";\nimport { AiOutlineBorderInner } from \"react-icons/ai\";\nimport ListLoader from \"../../../global_layouts/ListLoader\";\nimport CustomDatePicker from \"../../../global_layouts/DatePicker/CustomDatePicker\";\n\nfunction ClientVisitorList() {\n\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n    const { setValue, control } = useForm();\n    const {\n        userCompanyId,\n        userBranchId,\n        userType\n    } = getUserIds();\n    const { visitorList, totalVisitorCount, visitorGeneralList, loading } = useSelector(state => state.visitor);\n    const { departmentListData, loading: depLoading } = useSelector((state) => state.department);\n    const { branchList, loading: branchListLoading } = useSelector((state) => state.branch);\n    const userInfoglobal = JSON.parse(\n        localStorage.getItem(`user_info_${domainName}`)\n    );\n    const { employeList, loading: employeListLoading } = useSelector((state) => state.employe);\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const [searchText, setSearchText] = useState(\"\");\n    const [visitorModal, setVisitorModal] = useState({\n        data: null,\n        isOpen: false\n    });\n    const companyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: userCompanyId,\n    });\n    const branchId = useWatch({\n        control,\n        name: \"PDBranchId\",\n        defaultValue: userBranchId,\n    });\n    const departmentId = useWatch({\n        control,\n        name: \"PdDepartmentId\",\n        defaultValue: '',\n    });\n    const employee = useWatch({\n        control,\n        name: \"employee\",\n        defaultValue: '',\n    });\n    const startDate = useWatch({\n        control,\n        name: \"startDate\",\n        defaultValue: \"\",\n    });\n    const endDate = useWatch({\n        control,\n        name: \"endDate\",\n        defaultValue: \"\",\n    });\n    const category = useWatch({\n        control,\n        name: \"category\",\n        defaultValue: '',\n    });\n    const [visible, setVisible] = useState({\n        isOpen: false,\n        data: null\n    })\n    const [empDetailModalData, setEmpDetailModalData] = useState({});\n    const [empCheckInDetailModalOpen, setEmpCheckinDetailModalOpen] = useState(false);\n    const [checkIn, setCheckIn] = useState('')\n    useEffect(() => {\n        if (userType === \"admin\") {\n            dispatch(companySearch({\n                text: \"\",\n                sort: true,\n                status: true,\n                isPagination: false,\n            }));\n        }\n    }, []);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const limit = 10;\n\n    const filters = [branchId, employee, departmentId, category, searchText,startDate, endDate].join(\"-\");\n    const [isFirstRender ,setisFirstRender] = useState(false)\n    \n      useEffect(() => {\n        if (!isFirstRender) {\n          setisFirstRender(state=>true);\n          return;\n        }\n        if (currentPage === 1) {\n          fetchVisitorCatList();\n        } else {\n          setCurrentPage(1);\n        }\n      }, [filters]);\n\n    useEffect(() => {\n        fetchVisitorCatList();\n    }, [currentPage])\n\n    const fetchVisitorCatList = () => {\n        const reqListData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                companyId: companyId,\n                branchId: branchId,\n                \"directorId\": \"\",\n                employeId: employee,\n                category: category,\n                departmentId: departmentId,\n                text: searchText,\n                sort: true,\n                status: \"\",\n                isPagination: true,\n                startDate: startDate ? dayjs(startDate)?.format(\"YYYY-MM-DD\") : null,\n                                endDate: endDate ? dayjs(endDate)?.format(\"YYYY-MM-DD\") : null,\n\n            }\n        }\n        dispatch(getGeneralVisitorList(reqListData));\n    }\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteGeneralVisitor(reqData)).then((data) => {\n                    // !data.error && fetchVisitorCatList();\n                    if (currentPage > 1 && visitorGeneralList?.length == 1) {\n                        setCurrentPage(Number(currentPage - 1));\n\n                    } else {\n                        !data.error && fetchVisitorCatList();\n                    }\n                })\n            }\n        });\n    };\n\n    const handleEmloyeeCehckin = async (vistorData) => {\n        const location = await getCurrentLocation();\n        const address = await getFullAddress(location?.lat, location?.lng);\n        const {\n            date,\n            checkInTime,\n            checkOutTime,\n            timeDurationStart,\n            timeDurationEnd,\n            ...payload\n        } = vistorData;\n        const finalPayload = {\n            ...payload,\n            checkInTime: dayjs(),\n            checkInLocation: {\n                latitude: location?.lat ?? 0,\n                longitude: location.lng ?? 0,\n                address: address ?? \"\",\n            },\n        };\n\n        dispatch(updateGeneralVisitor(finalPayload)).then((data) => {\n            if (!data.error) fetchVisitorCatList()\n        });\n    }\n\n    const handleEmloyeeCehckout = (element) => {\n        setVisitorModal({\n            data: element,\n            isOpen: true\n        })\n    }\n\n    const fetchEmployeListData = () => {\n        const reqPayload = {\n            text: \"\",\n            status: true,\n            sort: true,\n            isTL: \"\",\n            isHR: \"\",\n\n            isPagination: false,\n            designationId: '',\n            departmentId: '',\n            companyId: companyId,\n            branchId: branchId,\n        };\n\n        dispatch(employeSearch(reqPayload));\n    };\n\n    const onChange = (e) => {\n\n        setSearchText(e);\n    };\n    const handleEmployeeCheckInModal = (element, checkInOrCheckOut) => {\n        setCheckIn(checkInOrCheckOut)\n        setEmpCheckinDetailModalOpen(true);\n        setEmpDetailModalData(element);\n    };\n    return (\n        <GlobalLayout onChange={onChange}>\n\n            <div className=''>\n                <div class=\"xl:flex justify-between items-center py-1 xl:space-y-0 space-y-2 overflow-y-auto\">\n                    <div className=\"grid sm:grid-cols-2 grid-cols-1 md:grid-cols-6 sm:gap-3 gap-1\">\n                        <div className=\"\">\n                            <Controller\n                                control={control}\n                                name=\"category\"\n                                rules={{ required: \"category is required\" }}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        defaultValue={\"\"}\n                                        disabled={loading}\n                                        className={` ${inputAntdSelectClassNameFilter} `}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                    >\n                                        <Select.Option className=\"\" value=\"\">Select Category</Select.Option>\n                                        <Select.Option value=\"general\">General Visitor</Select.Option>\n                                        <Select.Option value=\"client\"> Client Visitor</Select.Option>\n\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                        {(userInfoglobal?.userType === \"admin\" || userInfoglobal?.userType === \"company\" || userInfoglobal?.userType === \"companyDirector\") && (\n                            <div className=\"\">\n                                <Controller\n                                    control={control}\n                                    name=\"PDBranchId\"\n                                    rules={{ required: \"Branch is required\" }}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            defaultValue={\"\"}\n                                            disabled={loading}\n                                            onFocus={() => {\n                                                dispatch(\n                                                    branchSearch({\n                                                        text: \"\",\n                                                        sort: true,\n                                                        status: true,\n                                                        isPagination: false,\n                                                        companyId:\n                                                            userInfoglobal?.userType === \"admin\"\n                                                                ? companyId\n                                                                : userInfoglobal?.userType === \"company\"\n                                                                    ? userInfoglobal?._id\n                                                                    : userInfoglobal?.companyId,\n                                                    }))\n                                            }}\n                                            className={`${inputAntdSelectClassNameFilter} `}\n                                            showSearch\n                                            filterOption={(input, option) =>\n                                                String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                            }\n                                        >\n                                            <Select.Option value=\"\">Select Branch</Select.Option>\n\n                                            {branchListLoading ? (\n                                                <Select.Option disabled>\n                                                    <ListLoader />\n                                                </Select.Option>\n                                            ) : (\n                                                sortByPropertyAlphabetically(branchList)?.map(\n                                                    (type) => (\n                                                        <Select.Option key={type?._id} value={type?._id}>\n                                                            {type?.fullName}\n                                                        </Select.Option>\n                                                    )\n                                                )\n                                            )}\n                                        </Select>\n                                    )}\n                                />\n                            </div>\n                        )}\n                        <div className=\"\">\n                            <Controller\n                                control={control}\n                                name=\"PdDepartmentId\"\n                                rules={{ required: \"Department is required\" }}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        defaultValue={\"\"}\n                                        disabled={loading}\n                                        onFocus={() => {\n                                            dispatch(\n                                                deptSearch({\n                                                    text: \"\",\n                                                    sort: true,\n                                                    status: true,\n                                                    companyId:\n                                                        userInfoglobal?.userType === \"admin\"\n                                                            ? companyId\n                                                            : userInfoglobal?.userType === \"company\"\n                                                                ? userInfoglobal?._id\n                                                                : userInfoglobal?.companyId,\n                                                    branchId: branchId,\n                                                    isPagination: false\n                                                })\n                                            );\n                                        }}\n                                        className={`${inputAntdSelectClassNameFilter} `}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                    >\n\n                                        <Select.Option value=\"\">Select Department</Select.Option>\n                                        {depLoading ? (\n                                            <Select.Option disabled>\n                                                <ListLoader />\n                                            </Select.Option>\n                                        ) : (\n                                            sortByPropertyAlphabetically(departmentListData)?.map(\n                                                (element) => (\n                                                    <Select.Option key={element?._id} value={element?._id}>\n                                                        {element?.name}\n                                                    </Select.Option>\n                                                )\n                                            )\n                                        )}\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                        <div className=\"\">\n                            <Controller\n                                name=\"employee\"\n                                control={control}\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        className={` ${inputAntdSelectClassNameFilter} `}\n                                        disabled={loading}\n                                        popupClassName={'!z-[1580]'}\n                                        placeholder=\"Select Employee\"\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                        optionLabelProp=\"children\"\n                                        onFocus={() => fetchEmployeListData()}\n                                    >\n\n                                        <Select.Option value=\"\">Select Employee</Select.Option>\n                                        {employeListLoading ? (\n                                            <Select.Option disabled>\n                                                <ListLoader />\n                                            </Select.Option>\n                                        ) : (\n                                            sortByPropertyAlphabetically(employeList)?.map(\n                                                (item) => (\n                                                    <Select.Option key={item._id} value={item._id}>\n                                                        {item.fullName}\n                                                    </Select.Option>\n                                                )\n                                            )\n                                        )}\n                                    </Select>\n                                )}\n                            />\n                        </div>\n                         <Controller\n                                    name=\"startDate\"\n                                    control={control}\n                                    render={({ field }) => (\n                                        <CustomDatePicker\n                                            report={true}\n                                            defaultValue={dayjs().subtract(1, 'month')}\n                                            size={\"middle\"} field={field} />\n                                    )}\n                                />\n                        \n                            <Controller\n                                name=\"endDate\"\n                                control={control}\n                                render={({ field }) => (\n                                    <CustomDatePicker report={true}\n                                        defaultValue={dayjs()}\n                                        size={\"middle\"} field={field} />\n                                )}\n                            />\n                    </div>\n                    <div className=\"flex justify-end items-center gap-2 \">\n                        <button\n                            onClick={() => {\n                                setValue(\"employee\", \"\");\n                                setValue(\"PDBranchId\", '');\n                                setValue(\"PdDepartmentId\", '');\n                                setValue(\"category\", \"\");\n                                setValue(\"PdCompanyId\", \"\");\n                                   setValue(\"startDate\",null)\n                                setValue(\"endDate\",null)\n                            }}\n                            className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                        {canCreate &&\n                            <Tooltip placement=\"topLeft\"  title='Add Visitor'>\n                                <button onClick={() => { navigate(\"/admin/client-visitor/create\") }} className='bg-header p-2 rounded-md flex justify-center items-center space-x-2 text-white'>\n                                    <FaPlus />\n                                    <span className='text-[12px] text-nowrap tracking-wide'>Add Visitor</span>\n                                </button>\n                            </Tooltip>}\n                    </div>\n                </div>\n            </div>\n            <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n                {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                    <thead className=''>\n                        <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                            <th className='border-none p-2 whitespace-nowrap w-[8%]'>\n                                S.no.\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Visitor Name\n                            </th>\n\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Category type\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Mobile Number\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Employees\n                            </th>\n\n                            <th className='border-none p-2 !w-12 whitespace-nowrap'>\n                                Reason\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Expected Checkin\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Expected CheckOut\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap w-[20%]'>\n                                Employee Checkin\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Employee Checkout\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Cashbook Status\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                KM\n                            </th>\n                            {(canDelete || canUpdate) && <th className='border-none p-2 whitespace-nowrap w-[8%]'>\n                                Action\n                            </th>}\n                        </tr>\n                    </thead>\n                    {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                            colSpan={10}\n                            className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                            <Loader2 />\n                        </td>\n                    </tr> :\n                        <tbody>\n                            {visitorGeneralList && visitorGeneralList?.length > 0 ?\n                                visitorGeneralList?.map((element, index) => (\n                                    <tr className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151] text-[14px]`}>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            {index + 1 + ((currentPage - 1) * limit)}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.name ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.category == \"client\" ? \"Client Visit\" : \"General Visit\"}</td>\n                                        <td className=\"whitespace-nowrap border-none p-2\">\n                                            {element?.mobile?.code + \" \" + element?.mobile?.number || '-'}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            <div className={`  `}>\n                                                {element?.employeData?.map((element, index) => {\n                                                    return (\n                                                        element?.fullName\n                                                    )\n                                                }, [])}\n                                            </div>\n\n                                        </td>\n                                        <td className='whitespace-nowrap border-none !w-12 p-2 '>{element?.reason ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.timeDurationStart ? moment(element?.timeDurationStart).format('DD-MM-YYYY hh:mm a') : \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.timeDurationEnd ? moment(element?.timeDurationEnd).format('DD-MM-YYYY hh:mm a') : '-'}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n\n                                            <div className=\"flex justify-center items-center gap-2\">\n                                                {element?.checkInTime ? moment(element?.checkInTime).format('DD-MM-YYYY hh:mm a') : <Tooltip placement=\"topLeft\"  title='Checkin'>\n                                                    <button onClick={() => { handleEmloyeeCehckin(element) }} className=\"px-2 py-1.5 text-xs rounded-md bg-header text-white border border-muted\" type=\"button\">\n                                                        check in\n                                                    </button>\n                                                </Tooltip>}\n                                                {element.checkInTime ?\n                                                    <FaEye\n                                                        onClick={() => handleEmployeeCheckInModal(element, 'checkin')}\n                                                        className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                                        size={14}\n                                                    /> : ''}\n                                            </div>\n                                        </td>\n\n                                        <td className=\"whitespace-nowrap border-none p-2\">\n                                            <div className=\"flex justify-center items-center gap-2\">\n                                                {!element?.checkInTime ? (\n                                                    '-'\n                                                ) : element?.checkOutTime ? (\n                                                    moment(element.checkOutTime).format('DD-MM-YYYY hh:mm a')\n                                                ) : (\n                                                    <Tooltip placement=\"topLeft\"  title=\"Checkout\">\n                                                        <button\n                                                            onClick={() => handleEmloyeeCehckout(element)}\n                                                            className=\"px-2 py-1.5 text-xs rounded-md bg-header text-white border border-muted\"\n                                                            type=\"button\"\n                                                        >\n                                                            Check Out\n                                                        </button>\n                                                    </Tooltip>\n                                                )}\n                                                {element.checkOutTime ?\n                                                    <FaEye\n                                                        onClick={() => handleEmployeeCheckInModal(element, 'checkout')}\n                                                        className=\" hover:text-[#337ab7] text-[#3c8dbc]\"\n                                                        size={14}\n                                                    /> : ''}\n                                            </div>\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            {!element?.cashbookData?._id ? 'Not Claimed' : element?.cashbookData?.status === \"Pending\" ? \"Cashbook Requested\" : element?.cashbookData?.status === \"Approved\" ? \"Cashbook Approved\" : element?.cashbookData?.status === \"Reject\" ? \"Claim Rejected\" : '-'}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.kilometer ?? \"-\"}</td>\n                                        {(canDelete || canUpdate) && <td className='whitespace-nowrap border-none p-2'>\n                                            <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                {canUpdate && (\n                                                    <Tooltip placement=\"topLeft\"  title={(element?.checkInTime || element?.checkOutTime) ? \"No Actions\" : \"Edit\"}>\n                                                        <button\n                                                            disabled={!!(element?.checkInTime || element?.checkOutTime)}\n                                                            onClick={() => { navigate(`/admin/client-visitor/edit/${encrypt(element?._id)}`) }}\n                                                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                                            type=\"button\"\n                                                        >\n                                                            <FaPenToSquare\n                                                                className={(element?.checkInTime || element?.checkOutTime)\n                                                                    ? 'hover:text-gray-500 text-gray-500'\n                                                                    : 'hover:text-[#337ab7] text-[#3c8dbc]'}\n                                                                size={16}\n                                                            />\n                                                        </button>\n                                                    </Tooltip>\n                                                )}\n\n                                                {canUpdate &&\n                                                    <Tooltip placement=\"topLeft\"  title={!element?.cashbookData?._id ? 'Claim Cashbook' : element?.cashbookData?.status === \"Pending\" ? \"Cashbook Requested\" : element?.cashbookData?.status === \"Approved\" ? \"Cashbook Approved\" : element?.cashbookData?.status === \"Reject\" ? \"Claim Rejected\" : '-'}>\n                                                        <button disabled={element?.cashbookData?._id} onClick={() => setVisible({ isOpen: true, data: element })} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                            <AiOutlineBorderInner className={element?.cashbookData?._id ? ' text-gray-500' : ' hover:text-[#337ab7] text-[#3c8dbc]'} size={16} />\n                                                        </button>\n                                                    </Tooltip>}\n                                                {canDelete && (\n                                                    <Tooltip placement=\"topLeft\"  title={(element?.checkInTime || element?.checkOutTime) ? \"No Actions\" : \"Delete\"}>\n                                                        <button\n                                                            disabled={!!(element?.checkInTime || element?.checkOutTime)}\n                                                            onClick={() => handleDelete(element?._id)}\n                                                            className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\"\n                                                            type=\"button\"\n                                                        >\n                                                            <RiDeleteBin5Line\n                                                                className={(element?.checkInTime || element?.checkOutTime)\n                                                                    ? 'hover:text-gray-500 text-gray-500'\n                                                                    : 'text-red-600 hover:text-red-500'}\n                                                                size={16}\n                                                            />\n                                                        </button>\n                                                    </Tooltip>\n                                                )}\n                                            </span>\n                                        </td>}\n                                    </tr>\n                                ))\n                                : (<tr className=\"bg-white bg-opacity-5 \" >\n                                    <td colSpan={4} className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\">Record Not Found</td>\n                                </tr>)}\n                        </tbody>}\n                </table>}\n            </div>\n\n            <EmployeeCashbookCreateModalForVisit visible={visible} onCancel={() => setVisible({ isOpen: false, data: null })} onSuccess={fetchVisitorCatList} />\n            <ClientCheckoutModal setVisitorModal={setVisitorModal} visitorModal={visitorModal} updateList={fetchVisitorCatList} />\n            <MapWithDate empDetailModalData={empDetailModalData} empCheckInDetailModalOpen={empCheckInDetailModalOpen} checkIn={checkIn} setEmpCheckinDetailModalOpen={setEmpCheckinDetailModalOpen} />\n            {visitorGeneralList?.length > 0 &&\n                <CustomPagination\n                    totalCount={totalVisitorCount}\n                    pageSize={limit}\n                    currentPage={currentPage}\n                    onChange={onPaginationChange}\n                />}\n        </GlobalLayout>\n    )\n}\nexport default ClientVisitorList"],"names":["canCreate","canRead","canUpdate","canDelete","usePermissions","setValue","control","useForm","userCompanyId","userBranchId","userType","getUserIds","visitorList","totalVisitorCount","visitorGeneralList","loading","useSelector","state","visitor","departmentListData","depLoading","department","branchList","branchListLoading","branch","userInfoglobal","JSON","parse","localStorage","getItem","concat","domainName","employeList","employeListLoading","employe","navigate","useNavigate","dispatch","useDispatch","searchText","setSearchText","useState","visitorModal","setVisitorModal","data","isOpen","companyId","useWatch","name","defaultValue","branchId","departmentId","employee","startDate","endDate","category","visible","setVisible","empDetailModalData","setEmpDetailModalData","empCheckInDetailModalOpen","setEmpCheckinDetailModalOpen","checkIn","setCheckIn","useEffect","companySearch","text","sort","status","isPagination","currentPage","setCurrentPage","filters","join","isFirstRender","setisFirstRender","fetchVisitorCatList","_dayjs","_dayjs2","reqListData","page","limit","reqPayload","employeId","dayjs","format","getGeneralVisitorList","handleEmployeeCheckInModal","element","checkInOrCheckOut","_jsxs","GlobalLayout","onChange","e","children","_jsx","className","class","Controller","rules","required","render","_ref","field","Select","_objectSpread","disabled","inputAntdSelectClassNameFilter","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","_ref2","_sortByPropertyAlphab","onFocus","branchSearch","_id","ListLoader","sortByPropertyAlphabetically","map","type","fullName","_ref3","_sortByPropertyAlphab2","deptSearch","_ref4","_sortByPropertyAlphab3","popupClassName","placeholder","optionLabelProp","fetchEmployeListData","isTL","isHR","designationId","employeSearch","item","_ref5","CustomDatePicker","report","subtract","size","_ref6","onClick","Tooltip","placement","title","FaPlus","colSpan","Loader2","length","index","_element$name","_element$mobile","_element$mobile2","_element$employeData","_element$reason","_element$cashbookData","_element$cashbookData2","_element$cashbookData3","_element$cashbookData4","_element$kilometer","_element$cashbookData5","_element$cashbookData6","_element$cashbookData7","_element$cashbookData8","_element$cashbookData9","_element$cashbookData0","mobile","code","number","employeData","reason","timeDurationStart","moment","timeDurationEnd","checkInTime","async","_location$lat","_location$lng","location","getCurrentLocation","address","getFullAddress","lat","lng","date","checkOutTime","vistorData","payload","_objectWithoutProperties","_excluded","finalPayload","checkInLocation","latitude","longitude","updateGeneralVisitor","then","error","handleEmloyeeCehckin","FaEye","handleEmloyeeCehckout","cashbookData","kilometer","encrypt","FaPenToSquare","AiOutlineBorderInner","id","reqData","Swal","icon","showCancelButton","cancelButtonText","result","isConfirmed","deleteGeneralVisitor","Number","handleDelete","RiDeleteBin5Line","EmployeeCashbookCreateModalForVisit","onCancel","onSuccess","ClientCheckoutModal","updateList","MapWithDate","CustomPagination","totalCount","pageSize"],"sourceRoot":""}