{"version":3,"file":"static/js/4256.c6b6d2a5.chunk.js","mappings":"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","sources":["pages/designation/DesignationList.js"],"sourcesContent":["import { useNavigate } from \"react-router-dom\"\nimport GlobalLayout from \"../../global_layouts/GlobalLayout/GlobalLayout\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect, useState } from \"react\"\nimport Swal from \"sweetalert2\"\nimport { encrypt } from \"../../config/Encryption\"\nimport { FaPenToSquare, FaPlus, FaAngleDown } from \"react-icons/fa6\"\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\nimport { deleteDesignation, getDesignationList, designationSearch } from \"./designationFeatures/_designation_reducers\";\nimport { FaAngleUp, FaSearch } from \"react-icons/fa\"\nimport { Controller, useForm, useWatch } from \"react-hook-form\";\nimport { AiOutlineMessage } from \"react-icons/ai\"\nimport { IoMdNotificationsOutline } from \"react-icons/io\"\nimport { HiOutlineFilter } from \"react-icons/hi\"\nimport { domainName, handleSortLogic, inputAntdSelectClassNameFilter, inputClassNameSearch, sortByPropertyAlphabetically } from \"../../constents/global\"\nimport CustomPagination from \"../../component/CustomPagination/CustomPagination\"\nimport { companySearch } from \"../company/companyManagement/companyFeatures/_company_reducers\"\nimport { Select, Tooltip } from \"antd\"\nimport getUserIds from \"../../constents/getUserIds\"\nimport { deptSearch } from \"../department/departmentFeatures/_department_reducers\"\nimport usePermissions from \"../../config/usePermissions\"\nimport Loader2 from \"../../global_layouts/Loader/Loader2\"\nimport dayjs from \"dayjs\"\nimport ListLoader from \"../../global_layouts/ListLoader\"\n\nfunction DesignationList() {\n    const { register, setValue, formState: { errors }, control } = useForm();\n    const { companyList } = useSelector((state) => state.company);\n    const { userCompanyId, userType } = getUserIds();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const { designationList, totalDesignationCount, loading } = useSelector(state => state.designation);\n    const { departmentListData, loading: depLoading } = useSelector((state) => state.department);\n    const [sortedList, setSortedList] = useState([]);\n    const [searchText, setSearchText] = useState(\"\");\n    // const [status, setStatus] = useState(\"\");\n    const CompanyId = useWatch({\n        control,\n        name: \"PDCompanyId\",\n        defaultValue: userCompanyId,\n    });\n    const departmentId = useWatch({\n        control,\n        name: \"PdDepartmentId\",\n        defaultValue: \"\",\n    });\n\n    const status = useWatch({\n        control,\n        name: 'status',\n        defaultValue: ''\n    });\n\n    useEffect(() => {\n        if (userType === \"admin\") {\n            dispatch(\n                companySearch({\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                    isPagination: false,\n                })\n            );\n        }\n    }, []);\n\n    useEffect(() => {\n        dispatch(\n            deptSearch({\n                departmentId: departmentId,\n                companyId: CompanyId,\n                text: \"\",\n                sort: true,\n                status: true,\n                isPagination: false,\n            })\n        );\n    }, []);\n\n    const [currentPage, setCurrentPage] = useState(1);\n\n    const onPaginationChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const limit = 10;\n\n\n    const filters = [CompanyId, departmentId, status, searchText].join(\"-\");\n    const [isFirstRender ,setisFirstRender] = useState(false)\n    \n    useEffect(() => {\n      if (!isFirstRender) {\n        setisFirstRender(state=>true);\n        return;\n      }\n      if (currentPage === 1) {\n        fetDesignationList();\n      } else {\n        setCurrentPage(1);\n      }\n    }, [filters])\n\n    useEffect(() => {\n        fetDesignationList();\n    }, [currentPage]);\n\n    const fetDesignationList = () => {\n        const reqListData = {\n            page: currentPage,\n            limit: limit,\n            reqPayload: {\n                text: searchText,\n                sort: true,\n                companyId: CompanyId,\n                departmentId: departmentId,\n                isPagination: true,\n                status: status === \"true\" ? true : status === \"false\" ? false : \"\",\n            }\n        }\n        dispatch(getDesignationList(reqListData));\n    }\n\n    const handleDelete = (id) => {\n        let reqData = {\n            _id: id\n        }\n        Swal.fire({\n            title: \"Warning\",\n            text: \"Are you sure you want to delete!\",\n            icon: \"warning\",\n            showCancelButton: true,\n            cancelButtonText: \"No\",\n        }).then((result) => {\n            if (result.isConfirmed) {\n                dispatch(deleteDesignation(reqData)).then((data) => {\n                    // !data.error && fetDesignationList();\n                    if (currentPage > 1 && designationList?.length == 1) {\n                        setCurrentPage(Number(currentPage - 1));\n\n                    } else {\n                        !data.error && fetDesignationList();\n                    }\n                })\n            }\n        });\n    };\n\n    const handleFocusCompany = () => {\n        if (!companyList?.length) {\n            dispatch(\n                companySearch({\n                    isPagination: false,\n                    text: \"\",\n                    sort: true,\n                    status: true,\n                })\n            );\n        }\n    };\n\n    \n\n    const handleOnChange = async (event) => {\n        const searchValue = event.target.value;\n        setValue(\"search\", searchValue);\n\n        if (searchValue.trim().length > 0) {\n            let reqData = {\n                searchValue: searchValue,\n                size: 3,\n                pageNo: 1,\n            };\n\n            dispatch(designationSearch(reqData));\n        }\n    };\n\n    useEffect(() => {\n        if (designationList) {\n            handleSort();\n        }\n    }, [designationList]);\n\n    const handleSort = (key, order) => {\n        const sortedList = handleSortLogic(key, order, designationList);\n        setSortedList(sortedList);\n    };\n\n    const onChange = (e) => {\n        // \n        setSearchText(e);\n    };\n\n    const { canCreate, canRead, canUpdate, canDelete } = usePermissions();\n    return (\n        <GlobalLayout onChange={onChange}>\n            \n            < div className='' >\n               \n                <div div className='sm:flex justify-between items-center md:space-y-0 space-y-2 py-1' >\n\n                    <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 md:gap-3 gap-1\">\n\n                        {userType === \"admin\" && (\n                            <div className=\"w-full\">\n                                <Controller\n                                    name=\"PDCompanyId\"\n                                    control={control}\n                                    rules={{ required: \"Company is required\" }}\n                                    render={({ field }) => (\n                                        <Select\n                                            {...field}\n                                            onFocus={handleFocusCompany}\n                                            className={`${inputClassNameSearch} w-full ${errors.PDCompanyId ? \"border-[1px] \" : \"border-gray-300\"}`}\n                                            placeholder=\"Select Company\"\n                                            showSearch\n                                            filterOption={(input, option) =>\n                                                String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                            }\n                                        >\n                                            <Select.Option value=\"\">Select Company</Select.Option>\n                                            {companyList?.map((type) => (\n                                                <Select.Option key={type?._id} value={type?._id}>\n                                                    {type?.fullName}\n                                                </Select.Option>\n                                            ))}\n                                        </Select>\n                                    )}\n                                />\n                                {errors.PDCompanyId && (\n                                    <p className=\"text-red-500 text-sm\">{errors.PDCompanyId.message}</p>\n                                )}\n                            </div>\n\n                        )}\n\n                        <div className=\"\">\n                            <Controller\n                                control={control}\n                                name=\"PdDepartmentId\"\n                                render={({ field }) => (\n                                    <Select\n                                        {...field}\n                                        defaultValue={\"\"}\n                                        className={`${inputAntdSelectClassNameFilter} `}\n                                        showSearch\n                                        filterOption={(input, option) =>\n                                            String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                        }\n                                    >\n                                        <Select.Option value=\"\">Select Department</Select.Option>\n                                        {depLoading ? (\n                                            <Select.Option disabled>\n                                                <ListLoader />\n                                            </Select.Option>\n                                        ) : (\n                                            sortByPropertyAlphabetically(departmentListData)?.map(\n                                                (element) => (\n                                                    <Select.Option key={element?._id} value={element?._id}>\n                                                        {element?.name}\n                                                    </Select.Option>\n                                                )\n                                            )\n                                        )}\n                                    </Select>\n                                )}\n                            />\n                            {errors.PdDepartmentId && (\n                                <p className=\"text-red-500 text-sm\">\n                                    {errors.PdDepartmentId.message}\n                                </p>\n                            )}\n                        </div>\n                        <Controller\n                            name=\"status\"\n                            control={control}\n                            rules={{}}\n                            render={({ field }) => (\n                                <Select\n                                    {...field}\n                                    className={` w-32 ${inputAntdSelectClassNameFilter} ${errors.status\n                                        ? \"border-[1px] \"\n                                        : \"border-gray-300\"\n                                        }`}\n                                    placeholder=\"Select Status\"\n                                    showSearch\n                                    filterOption={(input, option) =>\n                                        String(option?.children).toLowerCase().includes(input.toLowerCase())\n                                    }\n                                >\n                                    <Select.Option value=\"\">Select Status</Select.Option>\n                                    <Select.Option value=\"true\"> Active </Select.Option>\n                                    <Select.Option value=\"false\"> InActive </Select.Option>\n                                </Select>\n                            )}\n                        />\n                    </div>\n                    <div className=\"flex justify-end items-center gap-2 \">\n                        <button\n                            onClick={() => {\n                                setValue(\"status\", \"\");\n                                setValue(\"PDBranchId\", '');\n                                setValue(\"PdDepartmentId\", \"\");\n                                setValue(\"PdCompanyId\", \"\");\n                            }}\n                            className=\"bg-header   py-[6px]  rounded-md  flex px-5 justify-center items-center  text-white\">\n                            <span className=\"text-[12px]\">Reset</span>\n                        </button>\n                        {(canCreate) &&\n                            <Tooltip placement=\"topLeft\"  title='Add Designations'>\n                                <button onClick={() => { navigate(\"/admin/designation/create\") }} className='bg-header p-2 rounded-md flex justify-center items-center space-x-2 text-white'>\n                                    <FaPlus />\n                                    <span className='text-[12px] tracking-wide'>Add Designations</span>\n                                </button>\n                            </Tooltip>}\n                    </div>\n                </div>\n            </div >\n            <div className=\"bg-[#ffffff]  w-full overflow-x-auto mt-1 rounded-xl\">\n                {canRead && <table className=\"w-full max-w-full rounded-xl overflow-x-auto \">\n                    <thead className=''>\n                        <tr className='border-b-[1px] border-[#DDDDDD] capitalize text-[12px] bg-header text-white font-[500] h-[40px]'>\n                            <th className='border-none p-2 whitespace-nowrap w-[10%]'>\n                                S.no.\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap w-[15%]'>\n                                <div className=\"flex justify-start items-center space-x-1\">\n                                    <span>Designation Name</span>\n                                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                                        <FaAngleUp\n                                            onClick={() => handleSort(\"name\", \"asc\")}\n                                        />\n                                        <FaAngleDown\n                                            onClick={() => handleSort(\"name\", \"desc\")}\n                                        />\n                                    </div>\n                                </div>\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap w-[15%]'>\n                                <div className=\"flex justify-start items-center space-x-1\">\n                                    <span>Department Name</span>\n                                    <div className=\"flex flex-col -space-y-1.5 cursor-pointer\">\n                                        <FaAngleUp\n                                            onClick={() => handleSort(\"departmentData.name\", \"asc\")}\n                                        />\n                                        <FaAngleDown\n                                            onClick={() => handleSort(\"departmentData.name\", \"desc\")}\n                                        />\n                                    </div>\n                                </div>\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                created At\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                created By\n                            </th>\n                            <th className='border-none p-2 whitespace-nowrap'>\n                                Status\n                            </th>\n                            {(canDelete || canUpdate) && <th className='border-none p-2 whitespace-nowrap w-[15%]'>\n                                Action\n                            </th>}\n                        </tr>\n                    </thead>\n                    {loading ? <tr className=\"bg-white bg-opacity-5 \">\n                        <td\n                            colSpan={10}\n                            className=\"px-6 py-2 whitespace-nowrap font-[600] text-sm text-gray-500\"\n                        >\n                            <Loader2 />\n                        </td>\n                    </tr> :\n                        <tbody>\n                            {sortedList && sortedList?.length > 0 ?\n                                sortedList?.map((element, index) => (\n                                    <tr className={`border-b-[1px] border-[#DDDDDD] ${index % 2 === 0 ? 'bg-[#e9ecef]/80' : 'bg-white'} text-[#374151] text-[14px]`}>\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            {index + 1 + ((currentPage - 1) * limit)}\n                                        </td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.name ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.departmentData?.name ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{dayjs(element?.createdAt).format('DD-MM-YYYY hh:mm a') ?? \"-\"}</td>\n                                        <td className='whitespace-nowrap border-none p-2 '>{element?.createdBy ?? \"-\"}</td>\n\n                                        <td className='whitespace-nowrap border-none p-2 '>\n                                            <span className={`${element?.status ? 'bg-[#E0FFBE] border-green-500' : 'bg-red-200 border-red-500'\n                                                } border-[1px] px-2 py-1.5 rounded-lg text-black text-[12px]`}>\n                                                {element?.status ? 'Active' : 'Inactive' ?? \"-\"}\n                                            </span>\n                                        </td>\n                                        {(canUpdate || canDelete) && <td className='whitespace-nowrap border-none p-2'>\n                                            <span className=\"py-1.5 flex justify-start items-center space-x-2\">\n                                                {canUpdate && <Tooltip placement=\"topLeft\"  title='Edit'>\n                                                    <button onClick={() => { navigate(`/admin/designation/edit/${encrypt(element?._id)}`) }} className=\"px-2 py-1.5 text-xs rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                        <FaPenToSquare className=' hover:text-[#337ab7] text-[#3c8dbc]' size={16} />\n                                                    </button>\n                                                </Tooltip>}\n                                                {canDelete && <Tooltip placement=\"topLeft\"  title='Delete'>\n                                                    <button onClick={() => handleDelete(element?._id)} className=\"px-2 py-1.5 rounded-md bg-transparent border border-muted\" type=\"button\">\n                                                        <RiDeleteBin5Line className='text-red-600 hover:text-red-500' size={16} />\n                                                    </button>\n                                                </Tooltip>}\n                                            </span>\n                                        </td>}\n                                    </tr>\n                                ))\n                                : (<tr className=\"bg-white bg-opacity-5 \" >\n                                    <td colSpan={7} className=\"px-6 py-2 whitespace-nowrap text-center font-[600] text-sm text-gray-500\">Record Not Found</td>\n                                </tr>)}\n                        </tbody>\n                    }\n                </table>}\n            </div>\n            {\n                designationList?.length > 0 &&\n                <CustomPagination\n                    totalCount={totalDesignationCount}\n                    pageSize={limit}\n                    currentPage={currentPage}\n                    onChange={onPaginationChange}\n                />\n            }\n        </GlobalLayout >\n    )\n}\nexport default DesignationList"],"names":["register","setValue","formState","errors","control","useForm","companyList","useSelector","state","company","userCompanyId","userType","getUserIds","navigate","useNavigate","dispatch","useDispatch","designationList","totalDesignationCount","loading","designation","departmentListData","depLoading","department","sortedList","setSortedList","useState","searchText","setSearchText","CompanyId","useWatch","name","defaultValue","departmentId","status","useEffect","companySearch","text","sort","isPagination","deptSearch","companyId","currentPage","setCurrentPage","filters","join","isFirstRender","setisFirstRender","fetDesignationList","reqListData","page","limit","reqPayload","getDesignationList","handleFocusCompany","length","handleSort","key","order","handleSortLogic","canCreate","canRead","canUpdate","canDelete","usePermissions","_jsxs","GlobalLayout","onChange","e","children","_jsx","className","div","Controller","rules","required","render","_ref","field","Select","_objectSpread","onFocus","concat","inputClassNameSearch","PDCompanyId","placeholder","showSearch","filterOption","input","option","String","toLowerCase","includes","Option","value","map","type","_id","fullName","message","_ref2","_sortByPropertyAlphab","inputAntdSelectClassNameFilter","disabled","ListLoader","sortByPropertyAlphabetically","element","PdDepartmentId","_ref3","onClick","Tooltip","placement","title","FaPlus","FaAngleUp","FaAngleDown","colSpan","Loader2","index","_element$name","_element$departmentDa","_element$departmentDa2","_dayjs$format","_element$createdBy","_Inactive","departmentData","dayjs","createdAt","format","createdBy","encrypt","FaPenToSquare","size","id","reqData","Swal","icon","showCancelButton","cancelButtonText","then","result","isConfirmed","deleteDesignation","data","Number","error","handleDelete","RiDeleteBin5Line","CustomPagination","totalCount","pageSize"],"sourceRoot":""}